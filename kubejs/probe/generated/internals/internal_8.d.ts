/// <reference path="./internal_*.d.ts" />
declare namespace Internal {
    class CompassItem extends Internal.Item implements Internal.Vanishable {
        constructor(arg0: Internal.Item$Properties_)
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        allowContinuingBlockBreaking(player: Internal.Player_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        moonlight$addAdditionalBehavior(placementOverride: Internal.AdditionalItemPlacement_): void;
        isFireResistant(): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        moonlight$getClientAnimationExtension(): any;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        fabric_setCustomDamageHandler(handler: Internal.CustomDamageHandler_): void;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getBarColor(arg0: Internal.ItemStack_): number;
        getOrCreateDescriptionId(): string;
        getItem(): Internal.Item;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): InteractionResult;
        moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        moonlight$setClientAnimationExtension(obj: any): void;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        handler$dfl000$revelationary$getCloakedName(stack: Internal.ItemStack_, callbackInfoReturnable: Internal.CallbackInfoReturnable_<any>): void;
        isEdible(): boolean;
        getAttributeModifiers(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        cardinal_createComponents(stack: Internal.ItemStack_): Internal.ComponentContainer;
        isFoil(arg0: Internal.ItemStack_): boolean;
        "getAttributeModifiers(net.minecraft.world.entity.EquipmentSlot,net.minecraft.world.item.ItemStack)"(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        fabric_getEquipmentSlotProvider(): Internal.EquipmentSlotProvider;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        static getLodestonePosition(arg0: Internal.CompoundTag_): Internal.GlobalPos;
        owo$tab(): number;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vector3f;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        "getAttributeModifiers(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.EquipmentSlot)"(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        allowNbtUpdateAnimation(player: Internal.Player_, hand: Internal.InteractionHand_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        fabric_getCachedItemVariant(): Internal.ItemVariant;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        fabric_getCustomDamageHandler(): Internal.CustomDamageHandler;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        static getPlayerPOVHitResult(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.ClipContext$Fluid_): Internal.BlockHitResult;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        equals(arg0: any): boolean;
        setRarity(arg0: Internal.Rarity_): void;
        getRecipeRemainder(stack: Internal.ItemStack_): Internal.ItemStack;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        /**
         * @deprecated
        */
        onDestroyed(arg0: Internal.ItemEntity_): void;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        canBeHurtBy(arg0: DamageSource_): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        fabric_setEquipmentSlotProvider(equipmentSlotProvider: Internal.EquipmentSlotProvider_): void;
        getDescriptionId(): string;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        zeta$setHumanoidArmorModel(arg0: Internal.HumanoidArmorModelGetter_): void;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        static getSpawnPosition(arg0: Internal.Level_): Internal.GlobalPos;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: DamageSource_): void;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        getDescription(): net.minecraft.network.chat.Component;
        owo$stackGenerator(): Internal.BiConsumer<any, any>;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        useOn(arg0: Internal.UseOnContext_): InteractionResult;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        handler$ebb000$connectormod$redirectIsPiglinCurrency(arg0: Internal.ItemStack_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        setAttackDamage(attackDamage: number): void;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        toString(): string;
        /**
         * @deprecated
        */
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        modifyReturnValue$ffm000$quark$overrideOtherStackedOnMe(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_, arg3: Internal.Slot_, arg4: Internal.ClickAction_, arg5: Internal.Player_, arg6: Internal.SlotAccess_): boolean;
        getId(): string;
        handler$fbm000$moonlight$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        isSuitableFor(stack: Internal.ItemStack_, state: Internal.BlockState_): boolean;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        puzzleslib$setRenderProperties(arg0: any): void;
        notify(): void;
        static getLodestoneDimension(arg0: Internal.CompoundTag_): Internal.Optional<Internal.ResourceKey<Internal.Level>>;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        zeta$setBlockEntityWithoutLevelRenderer(arg0: Internal.BlockEntityWithoutLevelRenderer_): void;
        handler$cog000$croptopia$overrideConstructor(arg0: Internal.Item$Properties_, arg1: Internal.CallbackInfo_): void;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        getEatingSound(): Internal.SoundEvent;
        owo$setGroup(group: Internal.CreativeModeTab_): void;
        puzzleslib$getRenderProperties(): any;
        canBeDepleted(): boolean;
        getDamage(arg0: Internal.ItemStack_): number;
        wait(arg0: number, arg1: number): void;
        getMod(): string;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        static isLodestoneCompass(arg0: Internal.ItemStack_): boolean;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        owo$group(): Internal.CreativeModeTab;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        modifyReturnValue$ffm000$quark$overrideStackedOnOther(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_): boolean;
        get drinkingSound(): Internal.SoundEvent
        get fireResistant(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set maxDamage(arg0: number)
        get orCreateDescriptionId(): string
        get item(): Internal.Item
        get class(): typeof any
        get renderPropertiesInternal(): any
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        get edible(): boolean
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        set nameKey(arg0: string)
        get idLocation(): ResourceLocation
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
        set rarity(arg0: Internal.Rarity_)
        get complex(): boolean
        get descriptionId(): string
        get creativeTab(): string
        set burnTime(i: number)
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        set itemBuilder(b: Internal.ItemBuilder_)
        set attackDamage(attackDamage: number)
        /**
         * @deprecated
        */
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        /**
         * @deprecated
        */
        get maxStackSize(): number
        get eatingSound(): Internal.SoundEvent
        get mod(): string
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
        static readonly TAG_LODESTONE_TRACKED: ("LodestoneTracked") & (string);
        static readonly TAG_LODESTONE_POS: ("LodestonePos") & (string);
        static readonly TAG_LODESTONE_DIMENSION: ("LodestoneDimension") & (string);
    }
    type CompassItem_ = CompassItem;
    interface Blender$DistanceGetter {
        abstract getDistance(arg0: number, arg1: number, arg2: number): number;
        (arg0: number, arg1: number, arg2: number): number;
    }
    type Blender$DistanceGetter_ = ((arg0: number, arg1: number, arg2: number)=> number) | Blender$DistanceGetter;
    class LockingMode$LockType extends Internal.Enum<Internal.LockingMode$LockType> {
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        getClass(): typeof any;
        toString(): string;
        compareTo(arg0: Internal.LockingMode$LockType_): number;
        static values(): Internal.LockingMode$LockType[];
        notifyAll(): void;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.LockingMode$LockType>>;
        isCart(): boolean;
        getDeclaringClass(): typeof Internal.LockingMode$LockType;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        compareTo(arg0: any): number;
        name(): string;
        hashCode(): number;
        isTrain(): boolean;
        ordinal(): number;
        wait(): void;
        wait(arg0: number): void;
        "compareTo(java.lang.Object)"(arg0: any): number;
        equals(arg0: any): boolean;
        static valueOf(arg0: string): Internal.LockingMode$LockType;
        "compareTo(mods.railcraft.world.level.block.track.outfitted.LockingMode$LockType)"(arg0: Internal.LockingMode$LockType_): number;
        get class(): typeof any
        get cart(): boolean
        get declaringClass(): typeof Internal.LockingMode$LockType
        get train(): boolean
        static readonly CART: (Internal.LockingMode$LockType) & (Internal.LockingMode$LockType);
        static readonly TRAIN: (Internal.LockingMode$LockType) & (Internal.LockingMode$LockType);
    }
    type LockingMode$LockType_ = "cart" | "train" | LockingMode$LockType;
    interface FramedItemFrameBlockEntity$MapMarkerRemover {
        abstract framedblocks$removeMapMarker(arg0: BlockPos_): void;
        (arg0: BlockPos): void;
    }
    type FramedItemFrameBlockEntity$MapMarkerRemover_ = FramedItemFrameBlockEntity$MapMarkerRemover | ((arg0: BlockPos)=> void);
    class RecursiveTypeFamily implements Internal.TypeFamily {
        constructor(arg0: string, arg1: Internal.TypeTemplate_)
        fold(arg0: Internal.Algebra_, arg1: Internal.RecursiveTypeFamily_): Internal.IntFunction<Internal.RewriteResult<any, any>>;
        getClass(): typeof any;
        toString(): string;
        notifyAll(): void;
        findType<A, B>(arg0: number, arg1: com.mojang.datafixers.types.Type_<A>, arg2: com.mojang.datafixers.types.Type_<B>, arg3: Internal.Type$TypeMatcher_<A, B>, arg4: boolean): Internal.Either<Internal.TypedOptic<any, any, A, B>, Internal.Type$FieldNotFoundException>;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        apply(arg0: number): com.mojang.datafixers.types.Type<any>;
        name(): string;
        hashCode(): number;
        size(): number;
        wait(): void;
        everywhere(arg0: number, arg1: Internal.TypeRewriteRule_, arg2: Internal.PointFreeRule_): Internal.Optional<Internal.RewriteResult<any, any>>;
        buildMuType<A>(arg0: com.mojang.datafixers.types.Type_<A>, arg1: Internal.RecursiveTypeFamily_): Internal.RecursivePoint$RecursivePointType<A>;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        static familyOptic<A, B>(arg0: Internal.IntFunction_<Internal.TypedOptic<any, any, A, B>>): Internal.FamilyOptic<A, B>;
        template(): Internal.TypeTemplate;
        get class(): typeof any
    }
    type RecursiveTypeFamily_ = RecursiveTypeFamily;
    interface DirectMethodHandleDesc extends Internal.MethodHandleDesc {
        abstract isOwnerInterface(): boolean;
        of(arg0: Internal.DirectMethodHandleDesc$Kind_, arg1: Internal.ClassDesc_, arg2: string, arg3: string): this;
        abstract invocationType(): Internal.MethodTypeDesc;
        abstract methodName(): string;
        abstract resolveConstantDesc(arg0: Internal.MethodHandles$Lookup_): any;
        abstract kind(): Internal.DirectMethodHandleDesc$Kind;
        abstract owner(): Internal.ClassDesc;
        ofField(arg0: Internal.DirectMethodHandleDesc$Kind_, arg1: Internal.ClassDesc_, arg2: string, arg3: Internal.ClassDesc_): this;
        ofMethod(arg0: Internal.DirectMethodHandleDesc$Kind_, arg1: Internal.ClassDesc_, arg2: string, arg3: Internal.MethodTypeDesc_): this;
        asType(arg0: Internal.MethodTypeDesc_): Internal.MethodHandleDesc;
        abstract lookupDescriptor(): string;
        abstract refKind(): number;
        ofConstructor(arg0: Internal.ClassDesc_, ...arg1: Internal.ClassDesc_[]): this;
        abstract equals(arg0: any): boolean;
        get ownerInterface(): boolean
    }
    type DirectMethodHandleDesc_ = DirectMethodHandleDesc;
    interface IBiomeSoundProvider {
        abstract getBackgroundMusic(arg0: Internal.IRandomizer_): Internal.Optional<Internal.Music>;
        abstract findBiomeSoundMatches(): Internal.Collection<Internal.ISoundFactory>;
        abstract getExtraSound(arg0: Internal.SoundEventType_, arg1: Internal.IRandomizer_): Internal.Optional<Internal.ISoundFactory>;
    }
    type IBiomeSoundProvider_ = IBiomeSoundProvider;
    interface ColorProviderRegistryImpl$ColorMapperHolder <T, Provider> {
        abstract get(arg0: T): Provider;
        (arg0: T): Provider;
    }
    type ColorProviderRegistryImpl$ColorMapperHolder_<T, Provider> = ColorProviderRegistryImpl$ColorMapperHolder<T, Provider> | ((arg0: T)=> Provider);
    class BambooSpikesTippedItem extends Internal.WoodBasedBlockItem implements Internal.SimpleWaterloggedBlock {
        constructor(blockIn: Internal.Block_, builder: Internal.Item$Properties_)
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        static setBlockEntityData(arg0: Internal.ItemStack_, arg1: Internal.BlockEntityType_<any>, arg2: Internal.CompoundTag_): void;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        allowContinuingBlockBreaking(player: Internal.Player_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        abstract moonlight$addAdditionalBehavior(arg0: Internal.AdditionalItemPlacement_): void;
        isFireResistant(): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        appendHoverText(stack: Internal.ItemStack_, worldIn: Internal.Level_, tooltip: Internal.List_<net.minecraft.network.chat.Component>, flagIn: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        abstract moonlight$getClientAnimationExtension(): any;
        isBookEnchantable(stack: Internal.ItemStack_, book: Internal.ItemStack_): boolean;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        getDefaultInstance(): Internal.ItemStack;
        getTypeData(): Internal.CompoundTag;
        fabric_setCustomDamageHandler(handler: Internal.CustomDamageHandler_): void;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getBarColor(stack: Internal.ItemStack_): number;
        getOrCreateDescriptionId(): string;
        getItem(): Internal.Item;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): InteractionResult;
        abstract moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        abstract moonlight$setClientAnimationExtension(arg0: any): void;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        canPlace(arg0: Internal.BlockPlaceContext_, arg1: Internal.BlockState_): boolean;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        handler$dfl000$revelationary$getCloakedName(stack: Internal.ItemStack_, callbackInfoReturnable: Internal.CallbackInfoReturnable_<any>): void;
        isEdible(): boolean;
        getAttributeModifiers(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        static getBlockEntityData(arg0: Internal.ItemStack_): Internal.CompoundTag;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        cardinal_createComponents(stack: Internal.ItemStack_): Internal.ComponentContainer;
        removeFromBlockToItemMap(arg0: Internal.Map_<Internal.Block, Internal.Item>, arg1: Internal.Item_): void;
        getBlockType(): net.mehvahdjukaar.moonlight.api.set.wood.WoodType;
        isFoil(arg0: Internal.ItemStack_): boolean;
        "getAttributeModifiers(net.minecraft.world.entity.EquipmentSlot,net.minecraft.world.item.ItemStack)"(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        fabric_getEquipmentSlotProvider(): Internal.EquipmentSlotProvider;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        setDigSpeed(speed: number): void;
        getDescriptionId(stack: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        static updateCustomBlockEntityTag(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.ItemStack_): boolean;
        owo$tab(): number;
        /**
         * @deprecated
        */
        getPlaceSound(arg0: Internal.BlockState_): Internal.SoundEvent;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        placeLiquid(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.FluidState_): boolean;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        getBlock(): Internal.Block;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        registerBlocks(arg0: Internal.Map_<Internal.Block, Internal.Item>, arg1: Internal.Item_): void;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        getPickupSound(arg0: Internal.BlockState_): Internal.Optional<Internal.SoundEvent>;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vector3f;
        getName(stack: Internal.ItemStack_): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        "getAttributeModifiers(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.EquipmentSlot)"(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        allowNbtUpdateAnimation(player: Internal.Player_, hand: Internal.InteractionHand_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        fabric_getCachedItemVariant(): Internal.ItemVariant;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        fabric_getCustomDamageHandler(): Internal.CustomDamageHandler;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        static getPlayerPOVHitResult(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.ClipContext$Fluid_): Internal.BlockHitResult;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        mustSurvive(): boolean;
        equals(arg0: any): boolean;
        setRarity(arg0: Internal.Rarity_): void;
        getRecipeRemainder(stack: Internal.ItemStack_): Internal.ItemStack;
        getBurnTime(itemStack: Internal.ItemStack_, recipeType: Internal.RecipeType_<any>): number;
        getPickupSound(): Internal.Optional<Internal.SoundEvent>;
        onDestroyed(arg0: Internal.ItemEntity_): void;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        canBeHurtBy(arg0: DamageSource_): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        fabric_setEquipmentSlotProvider(equipmentSlotProvider: Internal.EquipmentSlotProvider_): void;
        getDescriptionId(): string;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        isValidRepairItem(toRepair: Internal.ItemStack_, repair: Internal.ItemStack_): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        getPlaceSound(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): Internal.SoundEvent;
        zeta$setHumanoidArmorModel(arg0: Internal.HumanoidArmorModelGetter_): void;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: DamageSource_): void;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        getDescription(): net.minecraft.network.chat.Component;
        owo$stackGenerator(): Internal.BiConsumer<any, any>;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        pickupBlock(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        useOn(arg0: Internal.UseOnContext_): InteractionResult;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        handler$ebb000$connectormod$redirectIsPiglinCurrency(arg0: Internal.ItemStack_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        setAttackDamage(attackDamage: number): void;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        toString(): string;
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        modifyReturnValue$ffm000$quark$overrideOtherStackedOnMe(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_, arg3: Internal.Slot_, arg4: Internal.ClickAction_, arg5: Internal.Player_, arg6: Internal.SlotAccess_): boolean;
        getId(): string;
        handler$fbm000$moonlight$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        isEnchantable(stack: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        isSuitableFor(stack: Internal.ItemStack_, state: Internal.BlockState_): boolean;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(stack: Internal.ItemStack_): boolean;
        puzzleslib$setRenderProperties(arg0: any): void;
        notify(): void;
        quark$getPlacementState(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getPlacementState(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        isBarVisible(stack: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        updateCustomBlockEntityTag(arg0: BlockPos_, arg1: Internal.Level_, arg2: Internal.Player_, arg3: Internal.ItemStack_, arg4: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        place(arg0: Internal.BlockPlaceContext_): InteractionResult;
        static isPotionValid(potion: Internal.Potion_): boolean;
        zeta$setBlockEntityWithoutLevelRenderer(arg0: Internal.BlockEntityWithoutLevelRenderer_): void;
        handler$cog000$croptopia$overrideConstructor(arg0: Internal.Item$Properties_, arg1: Internal.CallbackInfo_): void;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        static makeSpikeItem(potion: Internal.Potion_): Internal.ItemStack;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        updatePlacementContext(arg0: Internal.BlockPlaceContext_): Internal.BlockPlaceContext;
        getEatingSound(): Internal.SoundEvent;
        owo$setGroup(group: Internal.CreativeModeTab_): void;
        puzzleslib$getRenderProperties(): any;
        canBeDepleted(): boolean;
        placeBlock(arg0: Internal.BlockPlaceContext_, arg1: Internal.BlockState_): boolean;
        canPlaceLiquid(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Fluid_): boolean;
        getDamage(arg0: Internal.ItemStack_): number;
        wait(arg0: number, arg1: number): void;
        getMod(): string;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        owo$group(): Internal.CreativeModeTab;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        puzzleslib$setBlock(arg0: Internal.Block_): void;
        modifyReturnValue$ffm000$quark$overrideStackedOnOther(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_): boolean;
        get drinkingSound(): Internal.SoundEvent
        get fireResistant(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get defaultInstance(): Internal.ItemStack
        get typeData(): Internal.CompoundTag
        set maxStackSize(arg0: number)
        set maxDamage(arg0: number)
        get orCreateDescriptionId(): string
        get item(): Internal.Item
        get class(): typeof any
        get renderPropertiesInternal(): any
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        get edible(): boolean
        get blockType(): net.mehvahdjukaar.moonlight.api.set.wood.WoodType
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        get block(): Internal.Block
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        set nameKey(arg0: string)
        get idLocation(): ResourceLocation
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
        set rarity(arg0: Internal.Rarity_)
        get pickupSound(): Internal.Optional<Internal.SoundEvent>
        get complex(): boolean
        get descriptionId(): string
        get creativeTab(): string
        set burnTime(i: number)
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        set itemBuilder(b: Internal.ItemBuilder_)
        set attackDamage(attackDamage: number)
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        /**
         * @deprecated
        */
        get maxStackSize(): number
        get eatingSound(): Internal.SoundEvent
        get mod(): string
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
    }
    type BambooSpikesTippedItem_ = BambooSpikesTippedItem;
    class UnmodifiableCommentedConfig$CommentNode {
        constructor(arg0: string, arg1: Internal.Map_<string, Internal.UnmodifiableCommentedConfig$CommentNode>)
        getClass(): typeof any;
        hashCode(): number;
        getComment(): string;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        getChildren(): Internal.Map<string, Internal.UnmodifiableCommentedConfig$CommentNode>;
        get class(): typeof any
        get comment(): string
        get children(): Internal.Map<string, Internal.UnmodifiableCommentedConfig$CommentNode>
    }
    type UnmodifiableCommentedConfig$CommentNode_ = UnmodifiableCommentedConfig$CommentNode;
    class Transformation implements Internal.IForgeTransformation {
        constructor(arg0: Vector3f_, arg1: Quaternionf_, arg2: Vector3f_, arg3: Quaternionf_)
        constructor(arg0: Matrix4f_)
        getClass(): typeof any;
        getScale(): Vector3f;
        getMatrix(): Matrix4f;
        blockCenterToCorner(): this;
        rotateTransform(arg0: Internal.Direction_): Internal.Direction;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        isIdentity(): boolean;
        getNormalMatrix(): Matrix3f;
        inverse(): this;
        toString(): string;
        compose(arg0: Internal.Transformation_): this;
        notifyAll(): void;
        getTranslation(): Vector3f;
        static identity(): Internal.Transformation;
        transformNormal(arg0: Vector3f_): void;
        slerp(arg0: Internal.Transformation_, arg1: number): this;
        getRightRotation(): Quaternionf;
        blockCornerToCenter(): this;
        transformPosition(arg0: Vec4f_): void;
        hashCode(): number;
        wait(): void;
        getLeftRotation(): Quaternionf;
        applyOrigin(arg0: Vector3f_): this;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        get class(): typeof any
        get scale(): Vector3f
        get matrix(): Matrix4f
        get identity(): boolean
        get normalMatrix(): Matrix3f
        get translation(): Vector3f
        get rightRotation(): Quaternionf
        get leftRotation(): Quaternionf
        static readonly EXTENDED_CODEC: Internal.Codec<Internal.Transformation>;
        static readonly CODEC: Internal.Codec<Internal.Transformation>;
    }
    type Transformation_ = Transformation;
    class BoneAnimationQueue extends Internal.Record {
        constructor(bone: Internal.CoreGeoBone_, rotationXQueue: Internal.AnimationPointQueue_, rotationYQueue: Internal.AnimationPointQueue_, rotationZQueue: Internal.AnimationPointQueue_, positionXQueue: Internal.AnimationPointQueue_, positionYQueue: Internal.AnimationPointQueue_, positionZQueue: Internal.AnimationPointQueue_, scaleXQueue: Internal.AnimationPointQueue_, scaleYQueue: Internal.AnimationPointQueue_, scaleZQueue: Internal.AnimationPointQueue_)
        constructor(arg0: Internal.CoreGeoBone_)
        addPosYPoint(arg0: software.bernie.geckolib.core.keyframe.Keyframe_<any>, arg1: number, arg2: number, arg3: number, arg4: number): void;
        getClass(): typeof any;
        addPosZPoint(arg0: software.bernie.geckolib.core.keyframe.Keyframe_<any>, arg1: number, arg2: number, arg3: number, arg4: number): void;
        addPosXPoint(arg0: software.bernie.geckolib.core.keyframe.Keyframe_<any>, arg1: number, arg2: number, arg3: number, arg4: number): void;
        addRotationYPoint(arg0: software.bernie.geckolib.core.keyframe.Keyframe_<any>, arg1: number, arg2: number, arg3: number, arg4: number): void;
        addRotationXPoint(arg0: software.bernie.geckolib.core.keyframe.Keyframe_<any>, arg1: number, arg2: number, arg3: number, arg4: number): void;
        addRotationZPoint(arg0: software.bernie.geckolib.core.keyframe.Keyframe_<any>, arg1: number, arg2: number, arg3: number, arg4: number): void;
        addScaleXPoint(arg0: software.bernie.geckolib.core.keyframe.Keyframe_<any>, arg1: number, arg2: number, arg3: number, arg4: number): void;
        addRotations(arg0: Internal.AnimationPoint_, arg1: Internal.AnimationPoint_, arg2: Internal.AnimationPoint_): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        addScaleYPoint(arg0: software.bernie.geckolib.core.keyframe.Keyframe_<any>, arg1: number, arg2: number, arg3: number, arg4: number): void;
        addNextScale(arg0: software.bernie.geckolib.core.keyframe.Keyframe_<any>, arg1: number, arg2: number, arg3: Internal.BoneSnapshot_, arg4: Internal.AnimationPoint_, arg5: Internal.AnimationPoint_, arg6: Internal.AnimationPoint_): void;
        scaleYQueue(): Internal.AnimationPointQueue;
        scaleXQueue(): Internal.AnimationPointQueue;
        scaleZQueue(): Internal.AnimationPointQueue;
        toString(): string;
        addNextPosition(arg0: software.bernie.geckolib.core.keyframe.Keyframe_<any>, arg1: number, arg2: number, arg3: Internal.BoneSnapshot_, arg4: Internal.AnimationPoint_, arg5: Internal.AnimationPoint_, arg6: Internal.AnimationPoint_): void;
        notifyAll(): void;
        rotationXQueue(): Internal.AnimationPointQueue;
        positionZQueue(): Internal.AnimationPointQueue;
        addScales(arg0: Internal.AnimationPoint_, arg1: Internal.AnimationPoint_, arg2: Internal.AnimationPoint_): void;
        positionXQueue(): Internal.AnimationPointQueue;
        rotationYQueue(): Internal.AnimationPointQueue;
        rotationZQueue(): Internal.AnimationPointQueue;
        positionYQueue(): Internal.AnimationPointQueue;
        addScaleZPoint(arg0: software.bernie.geckolib.core.keyframe.Keyframe_<any>, arg1: number, arg2: number, arg3: number, arg4: number): void;
        hashCode(): number;
        addNextRotation(arg0: software.bernie.geckolib.core.keyframe.Keyframe_<any>, arg1: number, arg2: number, arg3: Internal.BoneSnapshot_, arg4: Internal.BoneSnapshot_, arg5: Internal.AnimationPoint_, arg6: Internal.AnimationPoint_, arg7: Internal.AnimationPoint_): void;
        wait(): void;
        bone(): Internal.CoreGeoBone;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        addPositions(arg0: Internal.AnimationPoint_, arg1: Internal.AnimationPoint_, arg2: Internal.AnimationPoint_): void;
        get class(): typeof any
    }
    type BoneAnimationQueue_ = BoneAnimationQueue;
    abstract class WorldCarver <C extends Internal.CarverConfiguration> {
        constructor(arg0: Internal.Codec_<C>)
        getClass(): typeof any;
        toString(): string;
        notifyAll(): void;
        configuredCodec(): Internal.Codec<Internal.ConfiguredWorldCarver<C>>;
        getRange(): number;
        carveBlock(arg0: Internal.CarvingContext_, arg1: C, arg2: Internal.ChunkAccess_, arg3: Internal.Function_<BlockPos, Internal.Holder<Internal.Biome>>, arg4: Internal.CarvingMask_, arg5: Internal.BlockPos$MutableBlockPos_, arg6: Internal.BlockPos$MutableBlockPos_, arg7: Internal.Aquifer_, arg8: Internal.MutableBoolean_): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        static canReach(arg0: Internal.ChunkPos_, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): boolean;
        hashCode(): number;
        configured(arg0: C): Internal.ConfiguredWorldCarver<C>;
        wait(): void;
        abstract isStartChunk(arg0: C, arg1: Internal.RandomSource_): boolean;
        wait(arg0: number): void;
        carveEllipsoid(arg0: Internal.CarvingContext_, arg1: C, arg2: Internal.ChunkAccess_, arg3: Internal.Function_<BlockPos, Internal.Holder<Internal.Biome>>, arg4: Internal.Aquifer_, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: Internal.CarvingMask_, arg11: Internal.WorldCarver$CarveSkipChecker_): boolean;
        canReplaceBlock(arg0: C, arg1: Internal.BlockState_): boolean;
        abstract carve(arg0: Internal.CarvingContext_, arg1: C, arg2: Internal.ChunkAccess_, arg3: Internal.Function_<BlockPos, Internal.Holder<Internal.Biome>>, arg4: Internal.RandomSource_, arg5: Internal.Aquifer_, arg6: Internal.ChunkPos_, arg7: Internal.CarvingMask_): boolean;
        equals(arg0: any): boolean;
        get class(): typeof any
        get range(): number
        static readonly CANYON: (Internal.CanyonWorldCarver) & (Internal.WorldCarver<Internal.CanyonCarverConfiguration>);
        static readonly AIR: (Internal.BlockState) & (Internal.BlockState);
        liquids: Internal.Set<Internal.Fluid>;
        static readonly LAVA: (Internal.FluidState) & (Internal.FluidState);
        static readonly NETHER_CAVE: (Internal.NetherWorldCarver) & (Internal.WorldCarver<Internal.CaveCarverConfiguration>);
        static readonly CAVE_AIR: (Internal.BlockState) & (Internal.BlockState);
        static readonly WATER: (Internal.FluidState) & (Internal.FluidState);
        static readonly CAVE: (Internal.CaveWorldCarver) & (Internal.WorldCarver<Internal.CaveCarverConfiguration>);
    }
    type WorldCarver_<C extends Internal.CarverConfiguration> = WorldCarver<C> | Special.Carver;
    interface AccessibleTable {
        abstract setAccessibleRowHeader(arg0: Internal.AccessibleTable_): void;
        abstract getAccessibleSummary(): Internal.Accessible;
        abstract getAccessibleColumnCount(): number;
        abstract getAccessibleColumnExtentAt(arg0: number, arg1: number): number;
        abstract getAccessibleAt(arg0: number, arg1: number): Internal.Accessible;
        abstract getAccessibleRowCount(): number;
        abstract setAccessibleCaption(arg0: Internal.Accessible_): void;
        abstract getSelectedAccessibleColumns(): number[];
        abstract getAccessibleRowExtentAt(arg0: number, arg1: number): number;
        abstract getAccessibleRowHeader(): this;
        abstract getAccessibleRowDescription(arg0: number): Internal.Accessible;
        abstract isAccessibleSelected(arg0: number, arg1: number): boolean;
        abstract getAccessibleColumnHeader(): this;
        abstract getAccessibleCaption(): Internal.Accessible;
        abstract isAccessibleColumnSelected(arg0: number): boolean;
        abstract isAccessibleRowSelected(arg0: number): boolean;
        abstract setAccessibleColumnDescription(arg0: number, arg1: Internal.Accessible_): void;
        abstract setAccessibleColumnHeader(arg0: Internal.AccessibleTable_): void;
        abstract setAccessibleRowDescription(arg0: number, arg1: Internal.Accessible_): void;
        abstract getSelectedAccessibleRows(): number[];
        abstract setAccessibleSummary(arg0: Internal.Accessible_): void;
        abstract getAccessibleColumnDescription(arg0: number): Internal.Accessible;
        set accessibleRowHeader(arg0: Internal.AccessibleTable_)
        get accessibleSummary(): Internal.Accessible
        get accessibleColumnCount(): number
        get accessibleRowCount(): number
        set accessibleCaption(arg0: Internal.Accessible_)
        get selectedAccessibleColumns(): number[]
        get accessibleRowHeader(): Internal.AccessibleTable
        get accessibleColumnHeader(): Internal.AccessibleTable
        get accessibleCaption(): Internal.Accessible
        set accessibleColumnHeader(arg0: Internal.AccessibleTable_)
        get selectedAccessibleRows(): number[]
        set accessibleSummary(arg0: Internal.Accessible_)
    }
    type AccessibleTable_ = AccessibleTable;
    abstract class Sensor <E extends Internal.LivingEntity> {
        constructor()
        constructor(arg0: number)
        getClass(): typeof any;
        toString(): string;
        static isEntityTargetable(arg0: Internal.LivingEntity_, arg1: Internal.LivingEntity_): boolean;
        notifyAll(): void;
        static isEntityAttackableIgnoringLineOfSight(arg0: Internal.LivingEntity_, arg1: Internal.LivingEntity_): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        hashCode(): number;
        abstract doTick(arg0: Internal.ServerLevel_, arg1: E): void;
        wait(): void;
        static isEntityAttackable(arg0: Internal.LivingEntity_, arg1: Internal.LivingEntity_): boolean;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        abstract requires(): Internal.Set<Internal.MemoryModuleType<any>>;
        tick(arg0: Internal.ServerLevel_, arg1: E): void;
        get class(): typeof any
        static readonly TARGETING_RANGE: (16) & (number);
    }
    type Sensor_<E extends Internal.LivingEntity> = Sensor<E>;
    class TilledShaleClayBlock extends Internal.ImmutableFarmlandBlock {
        constructor(settings: Internal.BlockBehaviour$Properties_, bareState: Internal.BlockState_)
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getSettings(): Internal.BlockBehaviour$Properties;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        getTypeData(): Internal.CompoundTag;
        setFriction(arg0: number): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getSpeedFactor(): number;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        playerDestroy(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Player_): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Internal.Player_): Internal.ItemStack;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        getRenderPropertiesInternal(): any;
        needsDynamicNodeTypeCheck(): boolean;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        setRequiresTool(v: boolean): void;
        asBlock(): Internal.Block;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        puzzleslib$setItem(arg0: Internal.Item_): void;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        /**
         * @deprecated
        */
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        tick(state: Internal.BlockState_, world: Internal.ServerLevel_, pos: BlockPos_, random: Internal.RandomSource_): void;
        lychee$isTickable(): boolean;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        /**
         * @deprecated
        */
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        spawnDestroyParticles(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_): void;
        wait(): void;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Internal.Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(state: Internal.BlockState_): boolean;
        static isShapeFullBlock(shape: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        setIsRandomlyTicking(arg0: boolean): void;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        registerDefaultState(arg0: Internal.BlockState_): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        /**
         * @deprecated
        */
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        static hasCrop(world: Internal.BlockGetter_, pos: BlockPos_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        isAir(arg0: Internal.BlockState_): boolean;
        randomTick(state: Internal.BlockState_, world: Internal.ServerLevel_, pos: BlockPos_, random: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        needsDynamicBurningCheck(): boolean;
        getDescriptionId(): string;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(world: Internal.Level_, state: Internal.BlockState_, pos: BlockPos_, entity: Internal.Entity_, fallDistance: number): void;
        handler$bob000$radium$postConstruct(p_i241196_1_: Internal.BlockBehaviour$Properties_, ci: Internal.CallbackInfo_): void;
        tryDropExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: Internal.ItemStack_, arg3: Internal.IntProvider_): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        handler$eok000$particular$spawnParticles(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, random: Internal.RandomSource_, ci: Internal.CallbackInfo_): void;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        setDrops(arg0: ResourceLocation_): void;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        getBlockProperties(): Internal.BlockBehaviour$Properties;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getShapeForEachState(arg0: Internal.Function_<Internal.BlockState, Internal.VoxelShape>): Internal.ImmutableMap<Internal.BlockState, Internal.VoxelShape>;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        getFriction(): number;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        createBlockStateDefinition(arg0: Internal.StateDefinition$Builder_<Internal.Block, Internal.BlockState>): void;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        notify(): void;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        handler$dji000$spectrum$afterBreak(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static turnToDirt(arg0: Internal.Entity_, arg1: Internal.BlockState_, arg2: Internal.Level_, arg3: BlockPos_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        setDestroySpeed(v: number): void;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        handler$zbh000$additionalentityattributes$additionalEntityAttributes$saveBreakingPlayer(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        arch$holder(): Internal.Holder<Internal.Block>;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        setBare(entity: Internal.Entity_, state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): void;
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        lychee$setTickable(arg0: boolean): void;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        get settings(): Internal.BlockBehaviour$Properties
        /**
         * @deprecated
        */
        get explosionResistance(): number
        get typeData(): Internal.CompoundTag
        set friction(arg0: number)
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get descriptionId(): string
        get jumpFactor(): number
        set drops(arg0: ResourceLocation_)
        set speedFactor(arg0: number)
        get blockProperties(): Internal.BlockBehaviour$Properties
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get mod(): string
        set hasCollision(arg0: boolean)
    }
    type TilledShaleClayBlock_ = TilledShaleClayBlock;
    class ArrowNockEvent extends Internal.PlayerEvent {
        constructor()
        constructor(arg0: Internal.Player_, arg1: Internal.ItemStack_, arg2: Internal.InteractionHand_, arg3: Internal.Level_, arg4: boolean)
        setCanceled(arg0: boolean): void;
        getClass(): typeof any;
        setPhase(arg0: Internal.EventPriority_): void;
        hasAmmo(): boolean;
        isCanceled(): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        getAction(): Internal.InteractionResultHolder<Internal.ItemStack>;
        getLevel(): Internal.Level;
        getBow(): Internal.ItemStack;
        isCancelable(): boolean;
        getListenerList(): Internal.ListenerList;
        getHand(): Internal.InteractionHand;
        getResult(): Internal.Event$Result;
        setAction(arg0: Internal.InteractionResultHolder_<Internal.ItemStack>): void;
        toString(): string;
        getEntity(): Internal.LivingEntity;
        notifyAll(): void;
        hasResult(): boolean;
        setResult(arg0: Internal.Event$Result_): void;
        hashCode(): number;
        wait(): void;
        wait(arg0: number): void;
        getPhase(): Internal.EventPriority;
        equals(arg0: any): boolean;
        set canceled(arg0: boolean)
        get class(): typeof any
        set phase(arg0: Internal.EventPriority_)
        get canceled(): boolean
        get action(): Internal.InteractionResultHolder<Internal.ItemStack>
        get level(): Internal.Level
        get bow(): Internal.ItemStack
        get cancelable(): boolean
        get listenerList(): Internal.ListenerList
        get hand(): Internal.InteractionHand
        get result(): Internal.Event$Result
        set action(arg0: Internal.InteractionResultHolder_<Internal.ItemStack>)
        get entity(): Internal.LivingEntity
        set result(arg0: Internal.Event$Result_)
        get phase(): Internal.EventPriority
    }
    type ArrowNockEvent_ = ArrowNockEvent;
    class RailcraftDamageEnchantment extends Internal.Enchantment {
        constructor(arg0: Internal.Enchantment$Rarity_, arg1: number, arg2: number, arg3: number, arg4: Internal.Predicate_<Internal.Entity>, arg5: number, ...arg6: Internal.EquipmentSlot_[])
        getClass(): typeof any;
        getDamageProtection(arg0: number, arg1: DamageSource_): number;
        getFullname(arg0: number): net.minecraft.network.chat.Component;
        getRarity(): Internal.Enchantment$Rarity;
        isCompatibleWith(arg0: Internal.Enchantment_): boolean;
        isTradeable(): boolean;
        isTreasureOnly(): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        handler$dkb000$spectrum$isAcceptableItem(stack: Internal.ItemStack_, cir: Internal.CallbackInfoReturnable_<any>): void;
        getMaxCost(arg0: number): number;
        isDiscoverable(): boolean;
        getMinCost(arg0: number): number;
        static byId(arg0: number): Internal.Enchantment;
        doPostHurt(arg0: Internal.LivingEntity_, arg1: Internal.Entity_, arg2: number): void;
        getDescriptionId(): string;
        toString(): string;
        getMaxLevel(): number;
        doPostAttack(arg0: Internal.LivingEntity_, arg1: Internal.Entity_, arg2: number): void;
        notifyAll(): void;
        getSlotItems(arg0: Internal.LivingEntity_): Internal.Map<Internal.EquipmentSlot, Internal.ItemStack>;
        getMinLevel(): number;
        /**
         * @deprecated
        */
        getDamageBonus(arg0: number, arg1: Internal.MobType_): number;
        hashCode(): number;
        isCurse(): boolean;
        allowedInCreativeTab(arg0: Internal.Item_, arg1: Internal.Set_<Internal.EnchantmentCategory>): boolean;
        wait(): void;
        getDamageBonus(arg0: number, arg1: Internal.MobType_, arg2: Internal.ItemStack_): number;
        checkCompatibility(arg0: Internal.Enchantment_): boolean;
        getOrCreateDescriptionId(): string;
        wait(arg0: number): void;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_): boolean;
        equals(arg0: any): boolean;
        canEnchant(arg0: Internal.ItemStack_): boolean;
        isAllowedOnBooks(): boolean;
        get class(): typeof any
        get rarity(): Internal.Enchantment$Rarity
        get tradeable(): boolean
        get treasureOnly(): boolean
        get discoverable(): boolean
        get descriptionId(): string
        get maxLevel(): number
        get minLevel(): number
        get curse(): boolean
        get orCreateDescriptionId(): string
        get allowedOnBooks(): boolean
    }
    type RailcraftDamageEnchantment_ = RailcraftDamageEnchantment;
    class ServerboundPongPacket implements Internal.Packet<Internal.ServerGamePacketListener> {
        constructor(arg0: Internal.FriendlyByteBuf_)
        constructor(arg0: number)
        handle(arg0: Internal.PacketListener_): void;
        getClass(): typeof any;
        write(arg0: Internal.FriendlyByteBuf_): void;
        handle(arg0: Internal.ServerGamePacketListener_): void;
        toString(): string;
        notifyAll(): void;
        notify(): void;
        isSkippable(): boolean;
        wait(arg0: number, arg1: number): void;
        "handle(net.minecraft.network.protocol.game.ServerGamePacketListener)"(arg0: Internal.ServerGamePacketListener_): void;
        hashCode(): number;
        wait(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        "handle(net.minecraft.network.PacketListener)"(arg0: Internal.PacketListener_): void;
        getId(): number;
        get class(): typeof any
        get skippable(): boolean
        get id(): number
    }
    type ServerboundPongPacket_ = ServerboundPongPacket;
    class Options implements Internal.IMixinOptions {
        constructor(arg0: Internal.Minecraft_, arg1: Internal.File_)
        panoramaSpeed(): Internal.OptionInstance<number>;
        touchscreen(): Internal.OptionInstance<boolean>;
        biomeBlendRadius(): Internal.OptionInstance<number>;
        cloudStatus(): Internal.OptionInstance<Internal.CloudStatus>;
        guiScale(): Internal.OptionInstance<number>;
        chatOpacity(): Internal.OptionInstance<number>;
        hideLightningFlash(): Internal.OptionInstance<boolean>;
        chatColors(): Internal.OptionInstance<boolean>;
        notificationDisplayTime(): Internal.OptionInstance<number>;
        glintSpeed(): Internal.OptionInstance<number>;
        getModelPartsFancyMenu(): Internal.Set<any>;
        ambientOcclusion(): Internal.OptionInstance<boolean>;
        chatWidth(): Internal.OptionInstance<number>;
        simulationDistance(): Internal.OptionInstance<number>;
        chatDelay(): Internal.OptionInstance<number>;
        chatLinks(): Internal.OptionInstance<boolean>;
        soundDevice(): Internal.OptionInstance<string>;
        getSoundSourceVolume(arg0: Internal.SoundSource_): number;
        getCloudsType(): Internal.CloudStatus;
        autoSuggestions(): Internal.OptionInstance<boolean>;
        gamma(): Internal.OptionInstance<number>;
        toggleSprint(): Internal.OptionInstance<boolean>;
        screenEffectScale(): Internal.OptionInstance<number>;
        textBackgroundOpacity(): Internal.OptionInstance<number>;
        getClass(): typeof any;
        setCameraType(arg0: Internal.CameraType_): void;
        showAutosaveIndicator(): Internal.OptionInstance<boolean>;
        autoJump(): Internal.OptionInstance<boolean>;
        reducedDebugInfo(): Internal.OptionInstance<boolean>;
        useNativeTransport(): boolean;
        bobView(): Internal.OptionInstance<boolean>;
        getEffectiveRenderDistance(): number;
        operatorItemsTab(): Internal.OptionInstance<boolean>;
        chatHeightFocused(): Internal.OptionInstance<number>;
        load(): void;
        glintStrength(): Internal.OptionInstance<number>;
        setKey(arg0: Internal.KeyMapping_, arg1: Internal.InputConstants$Key_): void;
        toString(): string;
        fov(): Internal.OptionInstance<number>;
        static "genericValueLabel(net.minecraft.network.chat.Component,net.minecraft.network.chat.Component)"(arg0: net.minecraft.network.chat.Component_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        getSoundSourceOptionInstance(arg0: Internal.SoundSource_): Internal.OptionInstance<number>;
        notifyAll(): void;
        mipmapLevels(): Internal.OptionInstance<number>;
        chatHeightUnfocused(): Internal.OptionInstance<number>;
        updateResourcePacks(arg0: Internal.PackRepository_): void;
        save(): void;
        rawMouseInput(): Internal.OptionInstance<boolean>;
        wait(arg0: number): void;
        fovEffectScale(): Internal.OptionInstance<number>;
        invertYMouse(): Internal.OptionInstance<boolean>;
        chatLinksPrompt(): Internal.OptionInstance<boolean>;
        dumpOptionsForReport(): string;
        getBackgroundColor(arg0: number): number;
        backgroundForChatOnly(): Internal.OptionInstance<boolean>;
        entityShadows(): Internal.OptionInstance<boolean>;
        damageTiltStrength(): Internal.OptionInstance<number>;
        mouseWheelSensitivity(): Internal.OptionInstance<number>;
        notify(): void;
        handler$bng000$save(arg0: Internal.CallbackInfo_): void;
        telemetryOptInExtra(): Internal.OptionInstance<boolean>;
        attackIndicator(): Internal.OptionInstance<Internal.AttackIndicatorStatus>;
        framerateLimit(): Internal.OptionInstance<number>;
        chatScale(): Internal.OptionInstance<number>;
        setServerRenderDistance(arg0: number): void;
        darknessEffectScale(): Internal.OptionInstance<number>;
        highContrast(): Internal.OptionInstance<boolean>;
        broadcastOptions(): void;
        mainHand(): Internal.OptionInstance<Internal.HumanoidArm>;
        "getBackgroundColor(int)"(arg0: number): number;
        particles(): Internal.OptionInstance<Internal.ParticleStatus>;
        invokeProcessOptionsFancyMenu(arg0: Internal.Options$FieldAccess_): void;
        static genericValueLabel(arg0: net.minecraft.network.chat.Component_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        onlyShowSecureChat(): Internal.OptionInstance<boolean>;
        realmsNotifications(): Internal.OptionInstance<boolean>;
        getFile(): Internal.File;
        prioritizeChunkUpdates(): Internal.OptionInstance<Internal.PrioritizeChunkUpdates>;
        static "genericValueLabel(net.minecraft.network.chat.Component,int)"(arg0: net.minecraft.network.chat.Component_, arg1: number): net.minecraft.network.chat.Component;
        getBackgroundColor(arg0: number): number;
        loadSelectedResourcePacks(arg0: Internal.PackRepository_): void;
        wait(): void;
        entityDistanceScaling(): Internal.OptionInstance<number>;
        enableVsync(): Internal.OptionInstance<boolean>;
        static isFalse(arg0: string): boolean;
        fullscreen(): Internal.OptionInstance<boolean>;
        showSubtitles(): Internal.OptionInstance<boolean>;
        discreteMouseScroll(): Internal.OptionInstance<boolean>;
        isModelPartEnabled(arg0: Internal.PlayerModelPart_): boolean;
        load(arg0: boolean): void;
        narrator(): Internal.OptionInstance<Internal.NarratorStatus>;
        static genericValueLabel(arg0: net.minecraft.network.chat.Component_, arg1: number): net.minecraft.network.chat.Component;
        wait(arg0: number, arg1: number): void;
        chatLineSpacing(): Internal.OptionInstance<number>;
        forceUnicodeFont(): Internal.OptionInstance<boolean>;
        renderDistance(): Internal.OptionInstance<number>;
        allowServerListing(): Internal.OptionInstance<boolean>;
        directionalAudio(): Internal.OptionInstance<boolean>;
        toggleCrouch(): Internal.OptionInstance<boolean>;
        getBackgroundOpacity(arg0: number): number;
        hideMatchedNames(): Internal.OptionInstance<boolean>;
        toggleModelPart(arg0: Internal.PlayerModelPart_, arg1: boolean): void;
        getCameraType(): Internal.CameraType;
        "getBackgroundColor(float)"(arg0: number): number;
        hashCode(): number;
        chatVisibility(): Internal.OptionInstance<Internal.ChatVisiblity>;
        sensitivity(): Internal.OptionInstance<number>;
        graphicsMode(): Internal.OptionInstance<Internal.GraphicsStatus>;
        static isTrue(arg0: string): boolean;
        equals(arg0: any): boolean;
        darkMojangStudiosBackground(): Internal.OptionInstance<boolean>;
        get modelPartsFancyMenu(): Internal.Set<any>
        get cloudsType(): Internal.CloudStatus
        get class(): typeof any
        set cameraType(arg0: Internal.CameraType_)
        get effectiveRenderDistance(): number
        set serverRenderDistance(arg0: number)
        get file(): Internal.File
        get cameraType(): Internal.CameraType
        readonly forceUnicodeFont: Internal.OptionInstance<boolean>;
        readonly keySwapOffhand: Internal.KeyMapping;
        readonly keyDown: Internal.KeyMapping;
        static readonly RENDER_DISTANCE_NORMAL: (8) & (number);
        static readonly LOGGER: (Internal.Log4jLogger) & (org.slf4j.Logger);
        static readonly RENDER_DISTANCE_FAR: (12) & (number);
        hideBundleTutorial: boolean;
        readonly keyUp: Internal.KeyMapping;
        static readonly RENDER_DISTANCE_EXTREME: (32) & (number);
        skipMultiplayerWarning: boolean;
        readonly keyShift: Internal.KeyMapping;
        hideGui: boolean;
        readonly keyScreenshot: Internal.KeyMapping;
        pauseOnLostFocus: boolean;
        languageCode: string;
        readonly keyPlayerList: Internal.KeyMapping;
        static readonly AUTO_GUI_SCALE: (0) & (number);
        readonly keyRight: Internal.KeyMapping;
        smoothCamera: boolean;
        readonly keyCommand: Internal.KeyMapping;
        readonly keyAttack: Internal.KeyMapping;
        renderFpsChart: boolean;
        gamma: Internal.OptionInstance<number>;
        readonly keyChat: Internal.KeyMapping;
        readonly keyPickItem: Internal.KeyMapping;
        joinedFirstServer: boolean;
        static readonly RENDER_DISTANCE_TINY: (2) & (number);
        minecraft: Internal.Minecraft;
        incompatibleResourcePacks: Internal.List<string>;
        readonly keyFullscreen: Internal.KeyMapping;
        skipRealms32bitWarning: boolean;
        fullscreenVideoModeString: string;
        useNativeTransport: boolean;
        glDebugVerbosity: number;
        readonly keyTogglePerspective: Internal.KeyMapping;
        static readonly RENDER_DISTANCE_REALLY_FAR: (16) & (number);
        readonly keySmoothCamera: Internal.KeyMapping;
        static readonly UNLIMITED_FRAMERATE_CUTOFF: (260) & (number);
        overrideWidth: number;
        readonly keySaveHotbarActivator: Internal.KeyMapping;
        static readonly RENDER_DISTANCE_SHORT: (4) & (number);
        overrideHeight: number;
        renderDebug: boolean;
        lastMpIp: string;
        readonly keyAdvancements: Internal.KeyMapping;
        readonly keyLeft: Internal.KeyMapping;
        readonly keyJump: Internal.KeyMapping;
        static readonly GSON: (Internal.Gson) & (Internal.Gson);
        readonly keyUse: Internal.KeyMapping;
        readonly keyDrop: Internal.KeyMapping;
        onboardAccessibility: boolean;
        resourcePacks: Internal.List<string>;
        readonly fullscreen: Internal.OptionInstance<boolean>;
        readonly keySocialInteractions: Internal.KeyMapping;
        readonly keySpectatorOutlines: Internal.KeyMapping;
        readonly keySprint: Internal.KeyMapping;
        readonly keyInventory: Internal.KeyMapping;
        readonly keyLoadHotbarActivator: Internal.KeyMapping;
        advancedItemTooltips: boolean;
        renderDebugCharts: boolean;
        syncWrites: boolean;
        readonly keyHotbarSlots: Internal.KeyMapping[];
        hideServerAddress: boolean;
        tutorialStep: Internal.TutorialSteps;
        keyMappings: Internal.KeyMapping[];
        static readonly DEFAULT_SOUND_DEVICE: ("") & (string);
    }
    type Options_ = Options;
    interface Weighted <T> {
        abstract getSound(arg0: Internal.RandomSource_): T;
        abstract getWeight(): number;
        abstract preloadIfRequired(arg0: Internal.SoundEngine_): void;
        get weight(): number
    }
    type Weighted_<T> = Weighted<T>;
    class PolymerProperty implements Internal.IMaterialProperty<Internal.PolymerProperty> {
        constructor()
        getClass(): typeof any;
        hashCode(): number;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        verifyProperty(properties: Internal.MaterialProperties_): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
    }
    type PolymerProperty_ = PolymerProperty;
    interface InterfaceLogicHost extends Internal.IUpgradeableObject, Internal.IConfigurableObject, Internal.IPriorityHost, Internal.IConfigInvHost {
        abstract saveChanges(): void;
        abstract getInterfaceLogic(): Internal.InterfaceLogic;
        abstract getMainMenuIcon(): Internal.ItemStack;
        getConfig(): Internal.GenericStackInv;
        getConfigManager(): Internal.IConfigManager;
        getStorage(): Internal.GenericStackInv;
        returnToMainMenu(arg0: Internal.Player_, arg1: Internal.ISubMenu_): void;
        getInstalledUpgrades(arg0: Internal.ItemLike_): number;
        isUpgradedWith(arg0: Internal.ItemLike_): boolean;
        openMenu(arg0: Internal.Player_, arg1: Internal.MenuLocator_): void;
        setPriority(arg0: number): void;
        abstract getBlockEntity(): Internal.BlockEntity;
        getPriority(): number;
        getUpgrades(): Internal.IUpgradeInventory;
        get interfaceLogic(): Internal.InterfaceLogic
        get mainMenuIcon(): Internal.ItemStack
        get config(): Internal.GenericStackInv
        get configManager(): Internal.IConfigManager
        get storage(): Internal.GenericStackInv
        set priority(arg0: number)
        get blockEntity(): Internal.BlockEntity
        get priority(): number
        get upgrades(): Internal.IUpgradeInventory
    }
    type InterfaceLogicHost_ = InterfaceLogicHost;
    class CustomCommandEventJS extends Internal.EntityEventJS {
        constructor(l: Internal.Level_, e: Internal.Entity_, p: BlockPos_, i: string)
        getClass(): typeof any;
        /**
         * Stops the event with default exit value. Execution will be stopped **immediately**.
         * 
         * `exit` denotes a `default` outcome.
        */
        exit(): any;
        /**
         * Cancels the event with the given exit value. Execution will be stopped **immediately**.
         * 
         * `cancel` denotes a `false` outcome.
        */
        cancel(value: any): any;
        toString(): string;
        notifyAll(): void;
        /**
         * Stops the event with the given exit value. Execution will be stopped **immediately**.
         * 
         * `exit` denotes a `default` outcome.
        */
        exit(value: any): any;
        getId(): string;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        getLevel(): Internal.Level;
        /**
         * Stops the event with the given exit value. Execution will be stopped **immediately**.
         * 
         * `success` denotes a `true` outcome.
        */
        success(value: any): any;
        hashCode(): number;
        getEntity(): Internal.Entity;
        wait(): void;
        /**
         * Cancels the event with default exit value. Execution will be stopped **immediately**.
         * 
         * `cancel` denotes a `false` outcome.
        */
        cancel(): any;
        wait(arg0: number): void;
        getPlayer(): Internal.Player;
        /**
         * Stops the event with default exit value. Execution will be stopped **immediately**.
         * 
         * `success` denotes a `true` outcome.
        */
        success(): any;
        equals(arg0: any): boolean;
        getServer(): Internal.MinecraftServer;
        getBlock(): Internal.BlockContainerJS;
        get class(): typeof any
        get id(): string
        get level(): Internal.Level
        get entity(): Internal.Entity
        get player(): Internal.Player
        get server(): Internal.MinecraftServer
        get block(): Internal.BlockContainerJS
    }
    type CustomCommandEventJS_ = CustomCommandEventJS;
    class Heightmap implements Internal.HeightmapAccessor {
        constructor(arg0: Internal.ChunkAccess_, arg1: Internal.Heightmap$Types_)
        getClass(): typeof any;
        getHighestTaken(arg0: number, arg1: number): number;
        toString(): string;
        notifyAll(): void;
        getFirstAvailable(arg0: number, arg1: number): number;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        update(arg0: number, arg1: number, arg2: number, arg3: Internal.BlockState_): boolean;
        setRawData(arg0: Internal.ChunkAccess_, arg1: Internal.Heightmap$Types_, arg2: number[]): void;
        hashCode(): number;
        static primeHeightmaps(arg0: Internal.ChunkAccess_, arg1: Internal.Set_<Internal.Heightmap$Types>): void;
        wait(): void;
        wait(arg0: number): void;
        getRawData(): number[];
        equals(arg0: any): boolean;
        getBlockPredicate(): Internal.Predicate<any>;
        callSet(arg0: number, arg1: number, arg2: number): void;
        get class(): typeof any
        get rawData(): number[]
        get blockPredicate(): Internal.Predicate<any>
        static readonly NOT_AIR: Internal.Predicate<Internal.BlockState>;
        static readonly MATERIAL_MOTION_BLOCKING: Internal.Predicate<Internal.BlockState>;
    }
    type Heightmap_ = Heightmap;
    interface RepeatedDelayStrategy {
        abstract delayCyclesAfterSuccess(): number;
        exponentialBackoff(arg0: number): this;
        abstract delayCyclesAfterFailure(): number;
        readonly CONSTANT: Internal.RepeatedDelayStrategy;
    }
    type RepeatedDelayStrategy_ = RepeatedDelayStrategy;
    abstract class AbstractWidget implements Internal.ComponentStub, Internal.LayoutElement, io.wispforest.owo.mixin.ui.access.ClickableWidgetAccessor, Internal.NarratableEntry, Internal.ClickableWidgetAccessor, Internal.GuiEventListener, Internal.IAbstractWidgetExtension, Internal.UniqueWidget, Internal.CustomizableWidget, Internal.IMixinAbstractWidget, Internal.Renderable {
        constructor(arg0: number, arg1: number, arg2: number, arg3: number, arg4: net.minecraft.network.chat.Component_)
        interpolate(arg0: Internal.Animatable_<any>, arg1: number): Internal.Animatable<any>;
        setCustomBackgroundNormalFancyMenu(arg0: Internal.RenderableResource_): void;
        getY(): number;
        owo$getWrapper(): Internal.VanillaWidgetComponent;
        getTooltip(): Internal.Tooltip;
        addHoverOrFocusStateListenerFancyMenu(arg0: Internal.Consumer_<any>): void;
        updateX(x: number): void;
        remove(): void;
        xOffset(): number;
        setAlpha(arg0: number): void;
        getLastHoverOrFocusStateFancyMenu(): boolean;
        isNineSliceCustomBackgroundTexture_FancyMenu(): boolean;
        keyPressed(arg0: number, arg1: number, arg2: number): boolean;
        setCustomBackgroundHoverFancyMenu(arg0: Internal.RenderableResource_): void;
        id(): string;
        onMouseUp(mouseX: number, mouseY: number, button: number): boolean;
        "interpolate(io.wispforest.owo.ui.core.PositionedRectangle,float)"(next: Internal.PositionedRectangle_, delta: number): Internal.PositionedRectangle;
        setMessage(arg0: net.minecraft.network.chat.Component_): void;
        parent(): Internal.ParentComponent;
        setMessageFieldFancyMenu(arg0: net.minecraft.network.chat.Component_): void;
        shouldDrawTooltip(mouseX: number, mouseY: number): boolean;
        setHoverSoundFancyMenu(arg0: Internal.IAudio_): void;
        getClass(): typeof any;
        tooltip(): Internal.List<any>;
        getX(): number;
        clicked(arg0: number, arg1: number): boolean;
        isActive(): boolean;
        "tooltip(java.util.Collection)"(tooltip: Internal.Collection_<net.minecraft.network.chat.Component>): io.wispforest.owo.ui.core.Component;
        tickHoverStateListenersFancyMenu(arg0: boolean): void;
        setCustomLabelFancyMenu(arg0: net.minecraft.network.chat.Component_): void;
        getCustomWidthFancyMenu(): number;
        owo$preferredCursorStyle(): Internal.CursorStyle;
        fullSize(): Internal.Size;
        getHeight(): number;
        mouseDrag(): Internal.EventSource<any>;
        onFocusLost(): void;
        mount(parent: Internal.ParentComponent_, x: number, y: number): void;
        drawFocusHighlight(context: Internal.OwoUIDrawContext_, mouseX: number, mouseY: number, partialTicks: number, delta: number): void;
        owo$setY(arg0: number): void;
        static wrapDefaultNarrationMessage(arg0: net.minecraft.network.chat.Component_): Internal.MutableComponent;
        getFocusStateListenersFancyMenu(): Internal.List<any>;
        static renderScrollingString(arg0: Internal.GuiGraphics_, arg1: net.minecraft.client.gui.Font_, arg2: net.minecraft.network.chat.Component_, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): void;
        getHoverStateListenersFancyMenu(): Internal.List<any>;
        wait(arg0: number): void;
        margins(margins: io.wispforest.owo.ui.core.Insets_): io.wispforest.owo.ui.core.Component;
        dismount(reason: Internal.Component$DismountReason_): void;
        getCustomClickSoundFancyMenu(): Internal.IAudio;
        configure(closure: Internal.Consumer_<any>): io.wispforest.owo.ui.core.Component;
        horizontalSizing(horizontalSizing: Internal.Sizing_): io.wispforest.owo.ui.core.Component;
        setLastHoverOrFocusStateFancyMenu(arg0: boolean): void;
        "tooltip(net.minecraft.network.chat.Component)"(tooltip: net.minecraft.network.chat.Component_): io.wispforest.owo.ui.core.Component;
        update(delta: number, mouseX: number, mouseY: number): void;
        setWidgetIdentifierFancyMenu(arg0: string): this;
        widgetWrapper(): Internal.VanillaWidgetComponent;
        setLastHoveredTime(arg0: number): void;
        hasParent(): boolean;
        getResetCustomizationsListenersFancyMenu(): Internal.List<any>;
        mouseMoved(arg0: number, arg1: number): void;
        setCustomWidthFancyMenu(arg0: number): void;
        getWidgetIdentifierFancyMenu(): string;
        getCustomXFancyMenu(): number;
        draw(context: Internal.OwoUIDrawContext_, mouseX: number, mouseY: number, partialTicks: number, delta: number): void;
        mouseScroll(): Internal.EventSource<any>;
        setHoverLabelFancyMenu(arg0: net.minecraft.network.chat.Component_): void;
        setPosition(arg0: number, arg1: number): void;
        height(): number;
        setHeightFancyMenu(arg0: number): void;
        sizing(horizontalSizing: Internal.Sizing_, verticalSizing: Internal.Sizing_): io.wispforest.owo.ui.core.Component;
        owo$setX(arg0: number): void;
        positioning(positioning: Internal.Positioning_): io.wispforest.owo.ui.core.Component;
        wait(): void;
        inflate(space: Internal.Size_): void;
        tickFocusStateListenersFancyMenu(arg0: boolean): void;
        root(): Internal.ParentComponent;
        onKeyPress(keyCode: number, scanCode: number, modifiers: number): boolean;
        cursorStyle(): Internal.CursorStyle;
        setLastFocusStateFancyMenu(arg0: boolean): void;
        getHoverSoundFancyMenu(): Internal.IAudio;
        getCustomBackgroundResetBehaviorFancyMenu(): Internal.CustomizableWidget$CustomBackgroundResetBehavior;
        updateTooltip(): void;
        getLastHoverStateFancyMenu(): boolean;
        y(): number;
        setCustomBackgroundInactiveFancyMenu(arg0: Internal.RenderableResource_): void;
        setNineSliceCustomBackground_FancyMenu(arg0: boolean): void;
        onMouseDrag(mouseX: number, mouseY: number, deltaX: number, deltaY: number, button: number): boolean;
        getNineSliceCustomBackgroundBorderX_FancyMenu(): number;
        mouseDragged(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): boolean;
        onMouseDown(mouseX: number, mouseY: number, button: number): boolean;
        setNineSliceBorderY_FancyMenu(arg0: number): void;
        yOffset(): number;
        positioning(): Internal.AnimatableProperty<any>;
        setTabOrderGroup(arg0: number): void;
        horizontalSizing(): Internal.AnimatableProperty<any>;
        renderTexture(arg0: Internal.GuiGraphics_, arg1: ResourceLocation_, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number): void;
        focusLost(): Internal.EventSource<any>;
        cursorStyle(style: Internal.CursorStyle_): io.wispforest.owo.ui.core.Component;
        createNarrationMessage(): Internal.MutableComponent;
        equals(arg0: any): boolean;
        charTyped(arg0: string, arg1: number): boolean;
        onRelease(arg0: number, arg1: number): void;
        renderScrollingString(arg0: Internal.GuiGraphics_, arg1: net.minecraft.client.gui.Font_, arg2: number, arg3: number): void;
        intersects(other: Internal.PositionedRectangle_): boolean;
        x(): number;
        setFocused(arg0: boolean): void;
        mouseClicked(arg0: number, arg1: number, arg2: number): boolean;
        keyReleased(arg0: number, arg1: number, arg2: number): boolean;
        verticalSizing(): Internal.AnimatableProperty<any>;
        /**
         * @deprecated
        */
        onClick(arg0: number, arg1: number): void;
        "interpolate(io.wispforest.owo.ui.core.Animatable,float)"(arg0: Internal.Animatable_<any>, arg1: number): Internal.Animatable<any>;
        drawTooltip(context: Internal.OwoUIDrawContext_, mouseX: number, mouseY: number, partialTicks: number, delta: number): void;
        getAlphaFancyMenu(): number;
        setCustomYFancyMenu(arg0: number): void;
        nextFocusPath(arg0: Internal.FocusNavigationEvent_): Internal.ComponentPath;
        abstract updateWidgetNarration(arg0: Internal.NarrationElementOutput_): void;
        createTooltipPositioner(): Internal.ClientTooltipPositioner;
        setLastHoverStateFancyMenu(arg0: boolean): void;
        getWidth(): number;
        onCharTyped(chr: string, modifiers: number): boolean;
        focusHandler(): Internal.FocusHandler;
        setHiddenFancyMenu(arg0: boolean): void;
        isHoveredOrFocused(): boolean;
        width(): number;
        render(arg0: Internal.GuiGraphics_, arg1: number, arg2: number, arg3: number): void;
        isValidClickButton(arg0: number): boolean;
        owo$getTooltip(): Internal.Tooltip;
        static of(x: number, y: number, width: number, height: number): Internal.PositionedRectangle;
        isFocused(): boolean;
        parseProperties(spec: Internal.UIModel_, element: Internal.Element_, children: Internal.Map_<any, any>): void;
        setCustomHeightFancyMenu(arg0: number): void;
        getCustomLabelFancyMenu(): net.minecraft.network.chat.Component;
        getTabOrderGroup(): number;
        keyPress(): Internal.EventSource<any>;
        getMessage(): net.minecraft.network.chat.Component;
        onDrag(arg0: number, arg1: number, arg2: number, arg3: number): void;
        isInBoundingBox(x: number, y: number): boolean;
        getCustomHeightFancyMenu(): number;
        zIndex(): number;
        setWidth(arg0: number): void;
        resetWidgetSizeAndPositionFancyMenu(): void;
        getFGColor(): number;
        toString(): string;
        narrationPriority(): Internal.NarratableEntry$NarrationPriority;
        notifyAll(): void;
        sizing(sizing: Internal.Sizing_): io.wispforest.owo.ui.core.Component;
        setCustomClickSoundFancyMenu(arg0: Internal.IAudio_): void;
        isHiddenFancyMenu(): boolean;
        playDownSound(arg0: Internal.SoundManager_): void;
        setCustomXFancyMenu(arg0: number): void;
        getCurrentFocusPath(): Internal.ComponentPath;
        setFGColor(arg0: number): void;
        setHeight(arg0: number): void;
        setCustomBackgroundResetBehaviorFancyMenu(arg0: Internal.CustomizableWidget$CustomBackgroundResetBehavior_): void;
        margins(): Internal.AnimatableProperty<any>;
        notify(): void;
        getHoverLabelFancyMenu(): net.minecraft.network.chat.Component;
        setTooltip(arg0: Internal.Tooltip_): void;
        setX(arg0: number): void;
        clearFGColor(): void;
        "tooltip(java.util.List)"(tooltip: Internal.List_<any>): io.wispforest.owo.ui.core.Component;
        tooltip(tooltip: Internal.List_<any>): io.wispforest.owo.ui.core.Component;
        resetWidgetCustomizationsFancyMenu(): void;
        tickHoverOrFocusStateListenersFancyMenu(arg0: boolean): void;
        getRectangle(): Internal.ScreenRectangle;
        onFocusGained(source: Internal.Component$FocusSource_): void;
        isHovered(): boolean;
        addHoverStateListenerFancyMenu(arg0: Internal.Consumer_<any>): void;
        charTyped(): Internal.EventSource<any>;
        getLastFocusStateFancyMenu(): boolean;
        addResetCustomizationsListenerFancyMenu(arg0: Internal.Runnable_): void;
        visitWidgets(arg0: Internal.Consumer_<Internal.AbstractWidget>): void;
        intersection(other: Internal.PositionedRectangle_): Internal.PositionedRectangle;
        onMouseScroll(mouseX: number, mouseY: number, amount: number): boolean;
        widthOffset(): number;
        interpolate(next: Internal.PositionedRectangle_, delta: number): Internal.PositionedRectangle;
        isMouseOver(arg0: number, arg1: number): boolean;
        mouseUp(): Internal.EventSource<any>;
        tooltip(tooltip: net.minecraft.network.chat.Component_): io.wispforest.owo.ui.core.Component;
        focusGained(): Internal.EventSource<any>;
        getHoverOrFocusStateListenersFancyMenu(): Internal.List<any>;
        id(id: string): io.wispforest.owo.ui.core.Component;
        owo$setHeight(arg0: number): void;
        abstract renderWidget(arg0: Internal.GuiGraphics_, arg1: number, arg2: number, arg3: number): void;
        updateY(y: number): void;
        mouseScrolled(arg0: number, arg1: number, arg2: number): boolean;
        wait(arg0: number, arg1: number): void;
        setTooltipDelay(arg0: number): void;
        getCustomYFancyMenu(): number;
        mouseEnter(): Internal.EventSource<any>;
        moveTo(x: number, y: number): void;
        mouseDown(): Internal.EventSource<any>;
        owo$setWidth(arg0: number): void;
        setY(arg0: number): void;
        zIndex(zIndex: number): io.wispforest.owo.ui.core.Component;
        getNineSliceCustomBackgroundBorderY_FancyMenu(): number;
        getCustomBackgroundNormalFancyMenu(): Internal.RenderableResource;
        setNineSliceBorderX_FancyMenu(arg0: number): void;
        tooltip(tooltip: Internal.Collection_<net.minecraft.network.chat.Component>): io.wispforest.owo.ui.core.Component;
        getCustomBackgroundHoverFancyMenu(): Internal.RenderableResource;
        getCustomBackgroundInactiveFancyMenu(): Internal.RenderableResource;
        addFocusStateListenerFancyMenu(arg0: Internal.Consumer_<any>): void;
        mouseReleased(arg0: number, arg1: number, arg2: number): boolean;
        verticalSizing(verticalSizing: Internal.Sizing_): io.wispforest.owo.ui.core.Component;
        mouseLeave(): Internal.EventSource<any>;
        static of(x: number, y: number, size: Internal.Size_): Internal.PositionedRectangle;
        onClick(arg0: number, arg1: number, arg2: number): void;
        getOriginalMessageFancyMenu(): net.minecraft.network.chat.Component;
        canFocus(source: Internal.Component$FocusSource_): boolean;
        defaultButtonNarrationText(arg0: Internal.NarrationElementOutput_): void;
        hashCode(): number;
        updateNarration(arg0: Internal.NarrationElementOutput_): void;
        heightOffset(): number;
        renderCustomBackgroundFancyMenu(arg0: Internal.AbstractWidget_, arg1: Internal.GuiGraphics_, arg2: number, arg3: number, arg4: number, arg5: number): boolean;
        set customBackgroundNormalFancyMenu(arg0: Internal.RenderableResource_)
        get y(): number
        get tooltip(): Internal.Tooltip
        set alpha(arg0: number)
        get lastHoverOrFocusStateFancyMenu(): boolean
        get nineSliceCustomBackgroundTexture_FancyMenu(): boolean
        set customBackgroundHoverFancyMenu(arg0: Internal.RenderableResource_)
        set message(arg0: net.minecraft.network.chat.Component_)
        set messageFieldFancyMenu(arg0: net.minecraft.network.chat.Component_)
        set hoverSoundFancyMenu(arg0: Internal.IAudio_)
        get class(): typeof any
        get x(): number
        get active(): boolean
        set customLabelFancyMenu(arg0: net.minecraft.network.chat.Component_)
        get customWidthFancyMenu(): number
        get height(): number
        get focusStateListenersFancyMenu(): Internal.List<any>
        get hoverStateListenersFancyMenu(): Internal.List<any>
        get customClickSoundFancyMenu(): Internal.IAudio
        set lastHoverOrFocusStateFancyMenu(arg0: boolean)
        set widgetIdentifierFancyMenu(arg0: string)
        set lastHoveredTime(arg0: number)
        get resetCustomizationsListenersFancyMenu(): Internal.List<any>
        set customWidthFancyMenu(arg0: number)
        get widgetIdentifierFancyMenu(): string
        get customXFancyMenu(): number
        set hoverLabelFancyMenu(arg0: net.minecraft.network.chat.Component_)
        set heightFancyMenu(arg0: number)
        set lastFocusStateFancyMenu(arg0: boolean)
        get hoverSoundFancyMenu(): Internal.IAudio
        get customBackgroundResetBehaviorFancyMenu(): Internal.CustomizableWidget$CustomBackgroundResetBehavior
        get lastHoverStateFancyMenu(): boolean
        set customBackgroundInactiveFancyMenu(arg0: Internal.RenderableResource_)
        set nineSliceCustomBackground_FancyMenu(arg0: boolean)
        get nineSliceCustomBackgroundBorderX_FancyMenu(): number
        set nineSliceBorderY_FancyMenu(arg0: number)
        set tabOrderGroup(arg0: number)
        set focused(arg0: boolean)
        get alphaFancyMenu(): number
        set customYFancyMenu(arg0: number)
        set lastHoverStateFancyMenu(arg0: boolean)
        get width(): number
        set hiddenFancyMenu(arg0: boolean)
        get hoveredOrFocused(): boolean
        get focused(): boolean
        set customHeightFancyMenu(arg0: number)
        get customLabelFancyMenu(): net.minecraft.network.chat.Component
        get tabOrderGroup(): number
        get message(): net.minecraft.network.chat.Component
        get customHeightFancyMenu(): number
        set width(arg0: number)
        get FGColor(): number
        set customClickSoundFancyMenu(arg0: Internal.IAudio_)
        get hiddenFancyMenu(): boolean
        set customXFancyMenu(arg0: number)
        get currentFocusPath(): Internal.ComponentPath
        set FGColor(arg0: number)
        set height(arg0: number)
        set customBackgroundResetBehaviorFancyMenu(arg0: Internal.CustomizableWidget$CustomBackgroundResetBehavior_)
        get hoverLabelFancyMenu(): net.minecraft.network.chat.Component
        set tooltip(arg0: Internal.Tooltip_)
        set x(arg0: number)
        get rectangle(): Internal.ScreenRectangle
        get hovered(): boolean
        get lastFocusStateFancyMenu(): boolean
        get hoverOrFocusStateListenersFancyMenu(): Internal.List<any>
        set tooltipDelay(arg0: number)
        get customYFancyMenu(): number
        set y(arg0: number)
        get nineSliceCustomBackgroundBorderY_FancyMenu(): number
        get customBackgroundNormalFancyMenu(): Internal.RenderableResource
        set nineSliceBorderX_FancyMenu(arg0: number)
        get customBackgroundHoverFancyMenu(): Internal.RenderableResource
        get customBackgroundInactiveFancyMenu(): Internal.RenderableResource
        get originalMessageFancyMenu(): net.minecraft.network.chat.Component
        width: number;
        alpha: number;
        static readonly WIDGETS_LOCATION: (ResourceLocation) & (ResourceLocation);
        static readonly ACCESSIBILITY_TEXTURE: (ResourceLocation) & (ResourceLocation);
        tooltipMsDelay: number;
        tooltip: Internal.Tooltip;
        visible: boolean;
        height: number;
        x: number;
        isHovered: boolean;
        y: number;
        static readonly UNSET_FG_COLOR: (-1) & (number);
        active: boolean;
        packedFGColor: number;
        owo$wrapper: Internal.VanillaWidgetComponent;
    }
    type AbstractWidget_ = AbstractWidget;
    interface AccessorTextureAtlas {
        abstract getWidth(): number;
        abstract getHeight(): number;
        abstract getMipLevel(): number;
        abstract getTexturesByName(): Internal.Map<ResourceLocation, Internal.TextureAtlasSprite>;
        get width(): number
        get height(): number
        get mipLevel(): number
        get texturesByName(): Internal.Map<ResourceLocation, Internal.TextureAtlasSprite>
    }
    type AccessorTextureAtlas_ = AccessorTextureAtlas;
    class EntityEvent extends net.minecraftforge.eventbus.api.Event {
        constructor()
        constructor(arg0: Internal.Entity_)
        getResult(): Internal.Event$Result;
        setCanceled(arg0: boolean): void;
        getClass(): typeof any;
        toString(): string;
        setPhase(arg0: Internal.EventPriority_): void;
        notifyAll(): void;
        isCanceled(): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        hasResult(): boolean;
        setResult(arg0: Internal.Event$Result_): void;
        hashCode(): number;
        isCancelable(): boolean;
        getEntity(): Internal.Entity;
        wait(): void;
        getListenerList(): Internal.ListenerList;
        wait(arg0: number): void;
        getPhase(): Internal.EventPriority;
        equals(arg0: any): boolean;
        get result(): Internal.Event$Result
        set canceled(arg0: boolean)
        get class(): typeof any
        set phase(arg0: Internal.EventPriority_)
        get canceled(): boolean
        set result(arg0: Internal.Event$Result_)
        get cancelable(): boolean
        get entity(): Internal.Entity
        get listenerList(): Internal.ListenerList
        get phase(): Internal.EventPriority
    }
    type EntityEvent_ = EntityEvent;
    class Realms32BitWarningStatus {
        constructor(arg0: Internal.Minecraft_)
        showRealms32BitWarningIfNeeded(arg0: Internal.Screen_): void;
        getClass(): typeof any;
        hashCode(): number;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
    }
    type Realms32BitWarningStatus_ = Realms32BitWarningStatus;
    class ZetaBlockItem extends Internal.BlockItem implements Internal.IForgeItem, Internal.IZetaItemExtensions {
        constructor(arg0: Internal.Block_, arg1: Internal.Item$Properties_)
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        getDrinkingSound(): Internal.SoundEvent;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        static setBlockEntityData(arg0: Internal.ItemStack_, arg1: Internal.BlockEntityType_<any>, arg2: Internal.CompoundTag_): void;
        allowContinuingBlockBreaking(player: Internal.Player_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        abstract moonlight$addAdditionalBehavior(arg0: Internal.AdditionalItemPlacement_): void;
        shouldCauseReequipAnimationZeta(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        isFireResistant(): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        abstract moonlight$getClientAnimationExtension(): any;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        asItem(): Internal.Item;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        fabric_setCustomDamageHandler(handler: Internal.CustomDamageHandler_): void;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getBarColor(arg0: Internal.ItemStack_): number;
        getOrCreateDescriptionId(): string;
        getItem(): Internal.Item;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): InteractionResult;
        abstract moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        abstract moonlight$setClientAnimationExtension(arg0: any): void;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        getEnchantmentLevelZeta(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        canPlace(arg0: Internal.BlockPlaceContext_, arg1: Internal.BlockState_): boolean;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        getAttributeModifiers(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        handler$dfl000$revelationary$getCloakedName(stack: Internal.ItemStack_, callbackInfoReturnable: Internal.CallbackInfoReturnable_<any>): void;
        isEdible(): boolean;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        static getBlockEntityData(arg0: Internal.ItemStack_): Internal.CompoundTag;
        damageItem(arg0: Internal.ItemStack_, arg1: number, arg2: Internal.LivingEntity_, arg3: Internal.Consumer_<any>): number;
        wait(arg0: number): void;
        cardinal_createComponents(stack: Internal.ItemStack_): Internal.ComponentContainer;
        removeFromBlockToItemMap(arg0: Internal.Map_<Internal.Block, Internal.Item>, arg1: Internal.Item_): void;
        doesSneakBypassUseZeta(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        isFoil(arg0: Internal.ItemStack_): boolean;
        "getAttributeModifiers(net.minecraft.world.entity.EquipmentSlot,net.minecraft.world.item.ItemStack)"(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        fabric_getEquipmentSlotProvider(): Internal.EquipmentSlotProvider;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        getMaxDamageZeta(arg0: Internal.ItemStack_): number;
        setAttackSpeed(attackSpeed: number): void;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        getUseDuration(arg0: Internal.ItemStack_): number;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        static updateCustomBlockEntityTag(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.ItemStack_): boolean;
        owo$tab(): number;
        /**
         * @deprecated
        */
        getPlaceSound(arg0: Internal.BlockState_): Internal.SoundEvent;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        getAllEnchantmentsZeta(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        getBlock(): Internal.Block;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        registerBlocks(arg0: Internal.Map_<Internal.Block, Internal.Item>, arg1: Internal.Item_): void;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        isEnderMaskZeta(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        setNameKey(arg0: string): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vector3f;
        getBurnTimeZeta(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        "getAttributeModifiers(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.EquipmentSlot)"(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        allowNbtUpdateAnimation(player: Internal.Player_, hand: Internal.InteractionHand_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        fabric_getCachedItemVariant(): Internal.ItemVariant;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        fabric_getCustomDamageHandler(): Internal.CustomDamageHandler;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        static getPlayerPOVHitResult(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.ClipContext$Fluid_): Internal.BlockHitResult;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        mustSurvive(): boolean;
        equals(arg0: any): boolean;
        setRarity(arg0: Internal.Rarity_): void;
        getRecipeRemainder(stack: Internal.ItemStack_): Internal.ItemStack;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        onDestroyed(arg0: Internal.ItemEntity_): void;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        isRepairableZeta(arg0: Internal.ItemStack_): boolean;
        canBeHurtBy(arg0: DamageSource_): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        fabric_setEquipmentSlotProvider(equipmentSlotProvider: Internal.EquipmentSlotProvider_): void;
        getDescriptionId(): string;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        isBookEnchantableZeta(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        onItemUseFirstZeta(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): InteractionResult;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        getPlaceSound(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): Internal.SoundEvent;
        zeta$setHumanoidArmorModel(arg0: Internal.HumanoidArmorModelGetter_): void;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        canApplyAtEnchantingTableZeta(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: DamageSource_): void;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        getItemBuilder(): Internal.ItemBuilder;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        getDescription(): net.minecraft.network.chat.Component;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        owo$stackGenerator(): Internal.BiConsumer<any, any>;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        useOn(arg0: Internal.UseOnContext_): InteractionResult;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        handler$ebb000$connectormod$redirectIsPiglinCurrency(arg0: Internal.ItemStack_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        setAttackDamage(attackDamage: number): void;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        damageItemZeta<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        toString(): string;
        /**
         * @deprecated
        */
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        modifyReturnValue$ffm000$quark$overrideOtherStackedOnMe(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_, arg3: Internal.Slot_, arg4: Internal.ClickAction_, arg5: Internal.Player_, arg6: Internal.SlotAccess_): boolean;
        getId(): string;
        handler$fbm000$moonlight$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        canShearZeta(arg0: Internal.ItemStack_): boolean;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        isSuitableFor(stack: Internal.ItemStack_, state: Internal.BlockState_): boolean;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        puzzleslib$setRenderProperties(arg0: any): void;
        notify(): void;
        quark$getPlacementState(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getPlacementState(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getArmorTextureZeta(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canElytraFlyZeta(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        onEntityItemUpdateZeta(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        updateCustomBlockEntityTag(arg0: BlockPos_, arg1: Internal.Level_, arg2: Internal.Player_, arg3: Internal.ItemStack_, arg4: Internal.BlockState_): boolean;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<any, any>;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        place(arg0: Internal.BlockPlaceContext_): InteractionResult;
        zeta$setBlockEntityWithoutLevelRenderer(arg0: Internal.BlockEntityWithoutLevelRenderer_): void;
        handler$cog000$croptopia$overrideConstructor(arg0: Internal.Item$Properties_, arg1: Internal.CallbackInfo_): void;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        updatePlacementContext(arg0: Internal.BlockPlaceContext_): Internal.BlockPlaceContext;
        getEatingSound(): Internal.SoundEvent;
        owo$setGroup(group: Internal.CreativeModeTab_): void;
        puzzleslib$getRenderProperties(): any;
        canBeDepleted(): boolean;
        placeBlock(arg0: Internal.BlockPlaceContext_, arg1: Internal.BlockState_): boolean;
        getDamage(arg0: Internal.ItemStack_): number;
        wait(arg0: number, arg1: number): void;
        canEquipZeta(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        getMod(): string;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        owo$group(): Internal.CreativeModeTab;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        getEnchantmentValueZeta(arg0: Internal.ItemStack_): number;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        getDefaultTooltipHideFlagsZeta(arg0: Internal.ItemStack_): number;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        puzzleslib$setBlock(arg0: Internal.Block_): void;
        modifyReturnValue$ffm000$quark$overrideStackedOnOther(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_): boolean;
        get drinkingSound(): Internal.SoundEvent
        get fireResistant(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set maxDamage(arg0: number)
        get orCreateDescriptionId(): string
        get item(): Internal.Item
        get class(): typeof any
        get renderPropertiesInternal(): any
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        get edible(): boolean
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        get block(): Internal.Block
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        set nameKey(arg0: string)
        get idLocation(): ResourceLocation
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
        set rarity(arg0: Internal.Rarity_)
        get complex(): boolean
        get descriptionId(): string
        get creativeTab(): string
        set burnTime(i: number)
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        set itemBuilder(b: Internal.ItemBuilder_)
        set attackDamage(attackDamage: number)
        /**
         * @deprecated
        */
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        /**
         * @deprecated
        */
        get maxStackSize(): number
        get eatingSound(): Internal.SoundEvent
        get mod(): string
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
    }
    type ZetaBlockItem_ = ZetaBlockItem;
    class EntityTravelToDimensionEvent extends Internal.EntityEvent {
        constructor()
        constructor(arg0: Internal.Entity_, arg1: Internal.ResourceKey_<Internal.Level>)
        getResult(): Internal.Event$Result;
        setCanceled(arg0: boolean): void;
        getClass(): typeof any;
        toString(): string;
        setPhase(arg0: Internal.EventPriority_): void;
        notifyAll(): void;
        isCanceled(): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        hasResult(): boolean;
        setResult(arg0: Internal.Event$Result_): void;
        hashCode(): number;
        getDimension(): Internal.ResourceKey<Internal.Level>;
        isCancelable(): boolean;
        getEntity(): Internal.Entity;
        wait(): void;
        getListenerList(): Internal.ListenerList;
        wait(arg0: number): void;
        getPhase(): Internal.EventPriority;
        equals(arg0: any): boolean;
        get result(): Internal.Event$Result
        set canceled(arg0: boolean)
        get class(): typeof any
        set phase(arg0: Internal.EventPriority_)
        get canceled(): boolean
        set result(arg0: Internal.Event$Result_)
        get dimension(): Internal.ResourceKey<Internal.Level>
        get cancelable(): boolean
        get entity(): Internal.Entity
        get listenerList(): Internal.ListenerList
        get phase(): Internal.EventPriority
    }
    type EntityTravelToDimensionEvent_ = EntityTravelToDimensionEvent;
    class Sizing implements Internal.Animatable<Internal.Sizing> {
        inflate(space: number, contentSizeFunction: Internal.Function_<Internal.Sizing, number>): number;
        interpolate(arg0: Internal.Animatable_<any>, arg1: number): Internal.Animatable<any>;
        getClass(): typeof any;
        isContent(): boolean;
        static content(padding: number): Internal.Sizing;
        static fill(percent: number): Internal.Sizing;
        toString(): string;
        interpolate(next: Internal.Sizing_, delta: number): this;
        static content(): Internal.Sizing;
        notifyAll(): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        static fixed(value: number): Internal.Sizing;
        hashCode(): number;
        static parse(sizingElement: Internal.Element_): Internal.Sizing;
        wait(): void;
        "interpolate(io.wispforest.owo.ui.core.Animatable,float)"(arg0: Internal.Animatable_<any>, arg1: number): Internal.Animatable<any>;
        wait(arg0: number): void;
        equals(o: any): boolean;
        "interpolate(io.wispforest.owo.ui.core.Sizing,float)"(next: Internal.Sizing_, delta: number): this;
        get class(): typeof any
        get content(): boolean
        readonly method: Internal.Sizing$Method;
        readonly value: number;
    }
    type Sizing_ = Sizing;
    class ModelQuadFacing extends Internal.Enum<Internal.ModelQuadFacing> {
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        getClass(): typeof any;
        toString(): string;
        notifyAll(): void;
        static values(): Internal.ModelQuadFacing[];
        notify(): void;
        wait(arg0: number, arg1: number): void;
        compareTo(arg0: any): number;
        getOpposite(): this;
        name(): string;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.ModelQuadFacing>>;
        hashCode(): number;
        "compareTo(me.jellysquid.mods.sodium.client.model.quad.properties.ModelQuadFacing)"(arg0: Internal.ModelQuadFacing_): number;
        getDeclaringClass(): typeof Internal.ModelQuadFacing;
        compareTo(arg0: Internal.ModelQuadFacing_): number;
        ordinal(): number;
        wait(): void;
        static fromDirection(arg0: Internal.Direction_): Internal.ModelQuadFacing;
        wait(arg0: number): void;
        "compareTo(java.lang.Object)"(arg0: any): number;
        static valueOf(arg0: string): Internal.ModelQuadFacing;
        equals(arg0: any): boolean;
        get class(): typeof any
        get opposite(): Internal.ModelQuadFacing
        get declaringClass(): typeof Internal.ModelQuadFacing
        static readonly NEG_X: (Internal.ModelQuadFacing) & (Internal.ModelQuadFacing);
        static readonly UNASSIGNED: (Internal.ModelQuadFacing) & (Internal.ModelQuadFacing);
        static readonly NONE: (0) & (number);
        static readonly NEG_Y: (Internal.ModelQuadFacing) & (Internal.ModelQuadFacing);
        static readonly COUNT: (7) & (number);
        static readonly POS_Z: (Internal.ModelQuadFacing) & (Internal.ModelQuadFacing);
        static readonly NEG_Z: (Internal.ModelQuadFacing) & (Internal.ModelQuadFacing);
        static readonly POS_X: (Internal.ModelQuadFacing) & (Internal.ModelQuadFacing);
        static readonly VALUES: Internal.ModelQuadFacing[];
        static readonly ALL: (127) & (number);
        static readonly POS_Y: (Internal.ModelQuadFacing) & (Internal.ModelQuadFacing);
    }
    type ModelQuadFacing_ = "unassigned" | "pos_z" | "neg_z" | "pos_y" | "neg_y" | "pos_x" | "neg_x" | ModelQuadFacing;
    class PrivacyMode extends Internal.Enum<Internal.PrivacyMode> implements Internal.StringRepresentable {
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        getClass(): typeof any;
        static fromEnumWithMapping<E extends Internal.Enum<E> & Internal.StringRepresentable>(arg0: Internal.Supplier_<E[]>, arg1: Internal.Function_<string, string>): Internal.StringRepresentable$EnumCodec<E>;
        "compareTo(dev.ftb.mods.ftbteams.api.property.PrivacyMode)"(arg0: Internal.PrivacyMode_): number;
        static values(): Internal.PrivacyMode[];
        toString(): string;
        getSerializedName(): string;
        notifyAll(): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        compareTo(arg0: any): number;
        name(): string;
        hashCode(): number;
        static fromEnum<E extends Internal.Enum<E> & Internal.StringRepresentable>(arg0: Internal.Supplier_<E[]>): Internal.StringRepresentable$EnumCodec<E>;
        static keys(arg0: Internal.StringRepresentable_[]): Internal.Keyable;
        compareTo(arg0: Internal.PrivacyMode_): number;
        ordinal(): number;
        wait(): void;
        wait(arg0: number): void;
        "compareTo(java.lang.Object)"(arg0: any): number;
        equals(arg0: any): boolean;
        static valueOf(name: string): Internal.PrivacyMode;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.PrivacyMode>>;
        getDeclaringClass(): typeof Internal.PrivacyMode;
        get class(): typeof any
        get serializedName(): string
        get declaringClass(): typeof Internal.PrivacyMode
        readonly name: string;
        static readonly ALLIES: (Internal.PrivacyMode) & (Internal.PrivacyMode);
        static readonly PUBLIC: (Internal.PrivacyMode) & (Internal.PrivacyMode);
        static readonly NAME_MAP: Internal.NameMap<Internal.PrivacyMode>;
        static readonly PRIVATE: (Internal.PrivacyMode) & (Internal.PrivacyMode);
        static readonly VALUES: Internal.PrivacyMode[];
    }
    type PrivacyMode_ = "public" | "allies" | PrivacyMode | "private";
    class InteractionResultHolder <T> {
        constructor(arg0: InteractionResult_, arg1: T)
        getClass(): typeof any;
        toString(): string;
        static fail<T>(arg0: T): Internal.InteractionResultHolder<T>;
        notifyAll(): void;
        notify(): void;
        static pass<T>(arg0: T): Internal.InteractionResultHolder<T>;
        wait(arg0: number, arg1: number): void;
        getResult(): InteractionResult;
        hashCode(): number;
        static consume<T>(arg0: T): Internal.InteractionResultHolder<T>;
        wait(): void;
        wait(arg0: number): void;
        getObject(): T;
        static success<T>(arg0: T): Internal.InteractionResultHolder<T>;
        equals(arg0: any): boolean;
        static sidedSuccess<T>(arg0: T, arg1: boolean): Internal.InteractionResultHolder<T>;
        get class(): typeof any
        get result(): InteractionResult
        get object(): T
    }
    type InteractionResultHolder_<T> = InteractionResultHolder<T>;
    interface ICuriosItemHandler {
        abstract "findCurios(net.minecraft.world.item.Item)"(arg0: Internal.Item_): Internal.List<Internal.SlotResult>;
        abstract getLootingLevel(arg0: DamageSource_, arg1: Internal.LivingEntity_, arg2: number): number;
        abstract setEquippedCurio(arg0: string, arg1: number, arg2: Internal.ItemStack_): void;
        abstract clearCachedSlotModifiers(): void;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        processSlots(): void;
        abstract addPermanentSlotModifiers(arg0: Internal.Multimap_<string, Internal.AttributeModifier>): void;
        abstract getModifiers(): Internal.Multimap<string, Internal.AttributeModifier>;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        getLootingBonus(): number;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        getLockedSlots(): Internal.Set<string>;
        abstract getStacksHandler(arg0: string): Internal.Optional<Internal.ICurioStacksHandler>;
        abstract loadInventory(arg0: Internal.ListTag_): void;
        abstract getUpdatingInventories(): Internal.Set<Internal.ICurioStacksHandler>;
        abstract findCurios(...arg0: string[]): Internal.List<Internal.SlotResult>;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        setEnchantmentBonuses(fortuneAndLooting: Internal.Tuple_<number, number>): void;
        abstract findCurios(arg0: Internal.Predicate_<Internal.ItemStack>): Internal.List<Internal.SlotResult>;
        abstract getSlots(): number;
        abstract handleInvalidStacks(): void;
        abstract readTag(arg0: Internal.Tag_): void;
        abstract reset(): void;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        unlockSlotType(identifier: string, amount: number, visible: boolean, cosmetic: boolean): void;
        abstract findCurio(arg0: string, arg1: number): Internal.Optional<Internal.SlotResult>;
        abstract "findCurios(java.lang.String[])"(...arg0: string[]): Internal.List<Internal.SlotResult>;
        abstract findCurios(arg0: Internal.Item_): Internal.List<Internal.SlotResult>;
        abstract getCurios(): Internal.Map<string, Internal.ICurioStacksHandler>;
        abstract getFortuneLevel(arg0: Internal.LootContext_): number;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        abstract growSlotType(arg0: string, arg1: number): void;
        abstract removeSlotModifiers(arg0: Internal.Multimap_<string, Internal.AttributeModifier>): void;
        getVisibleSlots(): number;
        abstract getWearer(): Internal.LivingEntity;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        abstract shrinkSlotType(arg0: string, arg1: number): void;
        abstract findFirstCurio(arg0: Internal.Predicate_<Internal.ItemStack>): Internal.Optional<Internal.SlotResult>;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        lockSlotType(identifier: string): void;
        abstract "findFirstCurio(net.minecraft.world.item.Item)"(arg0: Internal.Item_): Internal.Optional<Internal.SlotResult>;
        abstract "findFirstCurio(java.util.function.Predicate)"(arg0: Internal.Predicate_<Internal.ItemStack>): Internal.Optional<Internal.SlotResult>;
        abstract findFirstCurio(arg0: Internal.Item_): Internal.Optional<Internal.SlotResult>;
        abstract addTransientSlotModifiers(arg0: Internal.Multimap_<string, Internal.AttributeModifier>): void;
        abstract "findCurios(java.util.function.Predicate)"(arg0: Internal.Predicate_<Internal.ItemStack>): Internal.List<Internal.SlotResult>;
        abstract saveInventory(arg0: boolean): Internal.ListTag;
        abstract getEquippedCurios(): Internal.IItemHandlerModifiable;
        abstract writeTag(): Internal.Tag;
        abstract clearSlotModifiers(): void;
        abstract loseInvalidStack(arg0: Internal.ItemStack_): void;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        getFortuneBonus(): number;
        abstract setCurios(arg0: Internal.Map_<string, Internal.ICurioStacksHandler>): void;
        get modifiers(): Internal.Multimap<string, Internal.AttributeModifier>
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        get lootingBonus(): number
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        get lockedSlots(): Internal.Set<string>
        get updatingInventories(): Internal.Set<Internal.ICurioStacksHandler>
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        set enchantmentBonuses(fortuneAndLooting: Internal.Tuple_<number, number>)
        get slots(): number
        get curios(): Internal.Map<string, Internal.ICurioStacksHandler>
        get visibleSlots(): number
        get wearer(): Internal.LivingEntity
        get equippedCurios(): Internal.IItemHandlerModifiable
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        get fortuneBonus(): number
        set curios(arg0: Internal.Map_<string, Internal.ICurioStacksHandler>)
    }
    type ICuriosItemHandler_ = ICuriosItemHandler;
    class VulnerableEffect extends Internal.MobEffect implements Internal.IForgeMobEffect {
        constructor()
        getDisplayName(): net.minecraft.network.chat.Component;
        getClass(): typeof any;
        addAttributeModifier(arg0: Internal.Attribute_, arg1: string, arg2: number, arg3: Internal.AttributeModifier$Operation_): Internal.MobEffect;
        isInstantenous(): boolean;
        addAttributeModifiers(arg0: Internal.LivingEntity_, arg1: Internal.AttributeMap_, arg2: number): void;
        applyInstantenousEffect(arg0: Internal.Entity_, arg1: Internal.Entity_, arg2: Internal.LivingEntity_, arg3: number, arg4: number): void;
        notify(): void;
        isBeneficial(): boolean;
        wait(arg0: number, arg1: number): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientMobEffectExtensions>): void;
        getEffectRendererInternal(): any;
        getColor(): number;
        removeAttributeModifiers(arg0: Internal.LivingEntity_, arg1: Internal.AttributeMap_, arg2: number): void;
        applyEffectTick(arg0: Internal.LivingEntity_, arg1: number): void;
        getAttributeModifierValue(arg0: number, arg1: Internal.AttributeModifier_): number;
        getSortOrder(arg0: Internal.MobEffectInstance_): number;
        getDescriptionId(): string;
        static getIdFromNullable(arg0: Internal.MobEffect_): number;
        getCategory(): Internal.MobEffectCategory;
        toString(): string;
        getCurativeItems(): Internal.List<Internal.ItemStack>;
        notifyAll(): void;
        setFactorDataFactory(arg0: Internal.Supplier_<Internal.MobEffectInstance$FactorData>): Internal.MobEffect;
        createFactorData(): Internal.Optional<Internal.MobEffectInstance$FactorData>;
        static byId(arg0: number): Internal.MobEffect;
        hashCode(): number;
        getAttributeModifiers(): Internal.Map<Internal.Attribute, Internal.AttributeModifier>;
        wait(): void;
        getOrCreateDescriptionId(): string;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        isDurationEffectTick(arg0: number, arg1: number): boolean;
        static getId(arg0: Internal.MobEffect_): number;
        get displayName(): net.minecraft.network.chat.Component
        get class(): typeof any
        get instantenous(): boolean
        get beneficial(): boolean
        get effectRendererInternal(): any
        get color(): number
        get descriptionId(): string
        get category(): Internal.MobEffectCategory
        get curativeItems(): Internal.List<Internal.ItemStack>
        set factorDataFactory(arg0: Internal.Supplier_<Internal.MobEffectInstance$FactorData>)
        get attributeModifiers(): Internal.Map<Internal.Attribute, Internal.AttributeModifier>
        get orCreateDescriptionId(): string
    }
    type VulnerableEffect_ = VulnerableEffect;
    interface ITimeTrackingServer {
        abstract mfix$getLastTickStartTime(): number;
        (): number;
    }
    type ITimeTrackingServer_ = ITimeTrackingServer | (()=> number);
    class StoringChunkProgressListener implements Internal.ChunkProgressListener {
        constructor(arg0: number)
        getProgress(): number;
        getClass(): typeof any;
        getFullDiameter(): number;
        toString(): string;
        getDiameter(): number;
        notifyAll(): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        start(): void;
        hashCode(): number;
        getStatus(arg0: number, arg1: number): Internal.ChunkStatus;
        wait(): void;
        stop(): void;
        wait(arg0: number): void;
        onStatusChange(arg0: Internal.ChunkPos_, arg1: Internal.ChunkStatus_): void;
        updateSpawnPos(arg0: Internal.ChunkPos_): void;
        equals(arg0: any): boolean;
        get progress(): number
        get class(): typeof any
        get fullDiameter(): number
        get diameter(): number
    }
    type StoringChunkProgressListener_ = StoringChunkProgressListener;
    class BuilderType <T> extends Internal.Record {
        constructor(type: string, builderClass: Internal.BuilderBase<T>, factory: Internal.BuilderFactory_)
        factory(): Internal.BuilderFactory;
        getClass(): typeof any;
        type(): string;
        hashCode(): number;
        builderClass(): Internal.BuilderBase<T>;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        equals(o: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
    }
    type BuilderType_<T> = BuilderType<T>;
    class ConstructPartSmartHead extends Internal.ItemConstructPart {
        constructor(arg0: Internal.ConstructMaterial_)
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        allowContinuingBlockBreaking(player: Internal.Player_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        moonlight$addAdditionalBehavior(placementOverride: Internal.AdditionalItemPlacement_): void;
        isFireResistant(): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        getArmor(): number;
        moonlight$getClientAnimationExtension(): any;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        fabric_setCustomDamageHandler(handler: Internal.CustomDamageHandler_): void;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getBarColor(arg0: Internal.ItemStack_): number;
        getOrCreateDescriptionId(): string;
        getItem(): Internal.Item;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): InteractionResult;
        moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        moonlight$setClientAnimationExtension(obj: any): void;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        getToughness(): number;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        handler$dfl000$revelationary$getCloakedName(stack: Internal.ItemStack_, callbackInfoReturnable: Internal.CallbackInfoReturnable_<any>): void;
        isEdible(): boolean;
        getAttributeModifiers(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        getSlot(): Internal.ConstructSlot;
        getKnockbackBonus(): number;
        canBeInLoot(arg0: Internal.LootContext_): boolean;
        getTier(arg0: Internal.Level_, arg1: Internal.ItemStack_): number;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        getActionSpeed(arg0: Internal.ConstructCapability_): number;
        cardinal_createComponents(stack: Internal.ItemStack_): Internal.ComponentContainer;
        isFoil(arg0: Internal.ItemStack_): boolean;
        "getAttributeModifiers(net.minecraft.world.entity.EquipmentSlot,net.minecraft.world.item.ItemStack)"(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        fabric_getEquipmentSlotProvider(): Internal.EquipmentSlotProvider;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        resolveTier(arg0: Internal.Level_, arg1: Internal.ItemStack_): number;
        owo$tab(): number;
        setCachedTier(arg0: number): void;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        isMutex(arg0: number): boolean;
        getCachedTier(): number;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        getBonusSpeed(): number;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        getAttackSpeedModifier(): number;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vector3f;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        "getAttributeModifiers(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.EquipmentSlot)"(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        allowNbtUpdateAnimation(player: Internal.Player_, hand: Internal.InteractionHand_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        fabric_getCachedItemVariant(): Internal.ItemVariant;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        fabric_getCustomDamageHandler(): Internal.CustomDamageHandler;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        static getPlayerPOVHitResult(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.ClipContext$Fluid_): Internal.BlockHitResult;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        equals(arg0: any): boolean;
        setRarity(arg0: Internal.Rarity_): void;
        getRecipeRemainder(stack: Internal.ItemStack_): Internal.ItemStack;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        /**
         * @deprecated
        */
        onDestroyed(arg0: Internal.ItemEntity_): void;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        getEnabledCapabilities(): Internal.ConstructCapability[];
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        canBeHurtBy(arg0: DamageSource_): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        fabric_setEquipmentSlotProvider(equipmentSlotProvider: Internal.EquipmentSlotProvider_): void;
        getManaCapacity(): number;
        getDescriptionId(): string;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        zeta$setHumanoidArmorModel(arg0: Internal.HumanoidArmorModelGetter_): void;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        setBurnTime(i: number): void;
        getIntelligenceBonus(): number;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: DamageSource_): void;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        getDescription(): net.minecraft.network.chat.Component;
        owo$stackGenerator(): Internal.BiConsumer<any, any>;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        useOn(arg0: Internal.UseOnContext_): InteractionResult;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        handler$ebb000$connectormod$redirectIsPiglinCurrency(arg0: Internal.ItemStack_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        setAttackDamage(attackDamage: number): void;
        getModelTypeMutex(): number;
        getBackpackCapacityBoost(): number;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        toString(): string;
        /**
         * @deprecated
        */
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        modifyReturnValue$ffm000$quark$overrideOtherStackedOnMe(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_, arg3: Internal.Slot_, arg4: Internal.ClickAction_, arg5: Internal.Player_, arg6: Internal.SlotAccess_): boolean;
        getId(): string;
        handler$fbm000$moonlight$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        isSuitableFor(stack: Internal.ItemStack_, state: Internal.BlockState_): boolean;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        puzzleslib$setRenderProperties(arg0: any): void;
        getAttackDamage(): number;
        notify(): void;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        zeta$setBlockEntityWithoutLevelRenderer(arg0: Internal.BlockEntityWithoutLevelRenderer_): void;
        handler$cog000$croptopia$overrideConstructor(arg0: Internal.Item$Properties_, arg1: Internal.CallbackInfo_): void;
        getFluidCapacity(): number;
        setSneakBypass(): com.mna.api.items.TieredItem;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        getEatingSound(): Internal.SoundEvent;
        owo$setGroup(group: Internal.CreativeModeTab_): void;
        puzzleslib$getRenderProperties(): any;
        canBeDepleted(): boolean;
        getDamage(arg0: Internal.ItemStack_): number;
        getMaterial(): Internal.ConstructMaterial;
        wait(arg0: number, arg1: number): void;
        getPerceptionDistanceBonus(): number;
        getInventorySizeBonus(): number;
        getRangedAttackDamage(): number;
        getMod(): string;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        owo$group(): Internal.CreativeModeTab;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        modifyReturnValue$ffm000$quark$overrideStackedOnOther(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_): boolean;
        get drinkingSound(): Internal.SoundEvent
        get fireResistant(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get armor(): number
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set maxDamage(arg0: number)
        get orCreateDescriptionId(): string
        get item(): Internal.Item
        get class(): typeof any
        get renderPropertiesInternal(): any
        get toughness(): number
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        get edible(): boolean
        get slot(): Internal.ConstructSlot
        get knockbackBonus(): number
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        set cachedTier(arg0: number)
        get cachedTier(): number
        get bonusSpeed(): number
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        get attackSpeedModifier(): number
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        set nameKey(arg0: string)
        get idLocation(): ResourceLocation
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
        set rarity(arg0: Internal.Rarity_)
        get complex(): boolean
        get enabledCapabilities(): Internal.ConstructCapability[]
        get manaCapacity(): number
        get descriptionId(): string
        get creativeTab(): string
        set burnTime(i: number)
        get intelligenceBonus(): number
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        set itemBuilder(b: Internal.ItemBuilder_)
        set attackDamage(attackDamage: number)
        get modelTypeMutex(): number
        get backpackCapacityBoost(): number
        /**
         * @deprecated
        */
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        get attackDamage(): number
        /**
         * @deprecated
        */
        get maxStackSize(): number
        get fluidCapacity(): number
        get eatingSound(): Internal.SoundEvent
        get material(): Internal.ConstructMaterial
        get perceptionDistanceBonus(): number
        get inventorySizeBonus(): number
        get rangedAttackDamage(): number
        get mod(): string
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
    }
    type ConstructPartSmartHead_ = ConstructPartSmartHead;
    class BlockContainerJS implements Internal.SpecialEquality {
        constructor(blockEntity: Internal.BlockEntity_)
        constructor(w: Internal.Level_, p: BlockPos_)
        getTags(): Internal.Collection<ResourceLocation>;
        getWest(): this;
        getY(): number;
        static checkSpecialEquality(o: any, o1: any, shallow: boolean): boolean;
        getNorth(): this;
        getBlockLight(): number;
        notify(): void;
        spawnLightning(): void;
        spawnFireworks(fireworks: Internal.FireworksJS_): void;
        getPos(): BlockPos;
        getDown(): this;
        getLight(): number;
        getDrops(): Internal.List<Internal.ItemStack>;
        getSouth(): this;
        getSkyLight(): number;
        mergeEntityData(tag: Internal.CompoundTag_): void;
        getCanSeeSky(): boolean;
        getDimension(): ResourceLocation;
        getBlockState(): Internal.BlockState;
        specialEquals(o: any, shallow: boolean): boolean;
        hasTag(tag: ResourceLocation_): boolean;
        getTypeData(): Internal.CompoundTag;
        getInventory(): Internal.InventoryKJS;
        wait(): void;
        offset(x: number, y: number, z: number): this;
        offset(f: Internal.Direction_): this;
        getClass(): typeof any;
        offset(f: Internal.Direction_, d: number): this;
        spawnLightning(effectOnly: boolean, player: Internal.ServerPlayer_): void;
        getEntityId(): string;
        getEast(): this;
        getX(): number;
        createEntity(type: Internal.EntityType_<any>): Internal.Entity;
        getDrops(entity: Internal.Entity_, heldItem: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        set(id: Special.Block, properties: Internal.Map_<any, any>): void;
        popItem(item: Internal.ItemStack_): void;
        set(id: Special.Block, properties: Internal.Map_<any, any>, flags: number): void;
        wait(arg0: number, arg1: number): void;
        setBlockState(state: Internal.BlockState_, flags: number): void;
        getLevel(): Internal.Level;
        popItemFromFace(item: Internal.ItemStack_, dir: Internal.Direction_): void;
        getEntity(): Internal.BlockEntity;
        getPlayersInRadius(radius: number): Internal.EntityArrayList;
        getUp(): this;
        clearCache(): void;
        getZ(): number;
        getEntityData(): Internal.CompoundTag;
        spawnLightning(effectOnly: boolean): void;
        toString(): string;
        getItem(): Internal.ItemStack;
        notifyAll(): void;
        getInventory(facing: Internal.Direction_): Internal.InventoryKJS;
        getId(): Special.Block&`${string}:${string}`;
        canSeeSkyFromBelowWater(): boolean;
        hashCode(): number;
        createExplosion(): Internal.ExplosionJS;
        getProperties(): Internal.Map<string, string>;
        setEntityData(tag: Internal.CompoundTag_): void;
        set(id: Special.Block): void;
        getPlayersInRadius(): Internal.EntityArrayList;
        wait(arg0: number): void;
        equals(obj: any): boolean;
        getBiomeId(): ResourceLocation;
        get tags(): Internal.Collection<ResourceLocation>
        get west(): Internal.BlockContainerJS
        get y(): number
        get north(): Internal.BlockContainerJS
        get blockLight(): number
        get pos(): BlockPos
        get down(): Internal.BlockContainerJS
        get light(): number
        get drops(): Internal.List<Internal.ItemStack>
        get south(): Internal.BlockContainerJS
        get skyLight(): number
        get canSeeSky(): boolean
        get dimension(): ResourceLocation
        get blockState(): Internal.BlockState
        get typeData(): Internal.CompoundTag
        get inventory(): Internal.InventoryKJS
        get class(): typeof any
        get entityId(): string
        get east(): Internal.BlockContainerJS
        get x(): number
        get level(): Internal.Level
        get entity(): Internal.BlockEntity
        get up(): Internal.BlockContainerJS
        get z(): number
        get entityData(): Internal.CompoundTag
        get item(): Internal.ItemStack
        get id(): Special.Block&`${string}:${string}`
        get properties(): Internal.Map<string, string>
        set entityData(tag: Internal.CompoundTag_)
        get playersInRadius(): Internal.EntityArrayList
        get biomeId(): ResourceLocation
        readonly minecraftLevel: Internal.Level;
    }
    type BlockContainerJS_ = BlockContainerJS;
    interface CustomIngredientSerializer <T extends Internal.CustomIngredient> {
        abstract "write(net.minecraft.network.FriendlyByteBuf,net.fabricmc.fabric.api.recipe.v1.ingredient.CustomIngredient)"(arg0: Internal.FriendlyByteBuf_, arg1: T): void;
        abstract "read(net.minecraft.network.FriendlyByteBuf)"(arg0: Internal.FriendlyByteBuf_): T;
        get(identifier: ResourceLocation_): Internal.CustomIngredientSerializer<any>;
        abstract read(arg0: Internal.JsonObject_): T;
        abstract "read(com.google.gson.JsonObject)"(arg0: Internal.JsonObject_): T;
        abstract write(arg0: Internal.JsonObject_, arg1: T): void;
        abstract write(arg0: Internal.FriendlyByteBuf_, arg1: T): void;
        abstract read(arg0: Internal.FriendlyByteBuf_): T;
        abstract getIdentifier(): ResourceLocation;
        abstract "write(com.google.gson.JsonObject,net.fabricmc.fabric.api.recipe.v1.ingredient.CustomIngredient)"(arg0: Internal.JsonObject_, arg1: T): void;
        register(serializer: Internal.CustomIngredientSerializer_<any>): void;
        get identifier(): ResourceLocation
    }
    type CustomIngredientSerializer_<T extends Internal.CustomIngredient> = CustomIngredientSerializer<T>;
    abstract class MachineTrait implements Internal.IEnhancedManaged {
        constructor(machine: Internal.MetaMachine_)
        getClass(): typeof any;
        toString(): string;
        notifyAll(): void;
        onSyncChanged(ref: Internal.IRef_, isDirty: boolean): void;
        setCapabilityValidator(capabilityValidator: Internal.Predicate_<Internal.Direction>): void;
        markDirty(name: string): void;
        abstract getFieldHolder(): Internal.ManagedFieldHolder;
        onMachineUnLoad(): void;
        getSyncStorage(): Internal.IManagedStorage;
        scheduleRenderUpdate(): void;
        hasCapability(side: Internal.Direction_): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        addSyncUpdateListener<T>(name: string, listener: Internal.IFieldUpdateListener_<T>): Internal.ISubscription;
        getMachine(): Internal.MetaMachine;
        hashCode(): number;
        onMachineLoad(): void;
        wait(): void;
        wait(arg0: number): void;
        onChanged(): void;
        equals(arg0: any): boolean;
        scheduleRender(fieldName: string, newValue: any, oldValue: any): void;
        onPersistedChanged(ref: Internal.IRef_, isDirty: boolean): void;
        get class(): typeof any
        set capabilityValidator(capabilityValidator: Internal.Predicate_<Internal.Direction>)
        get fieldHolder(): Internal.ManagedFieldHolder
        get syncStorage(): Internal.IManagedStorage
        get machine(): Internal.MetaMachine
    }
    type MachineTrait_ = MachineTrait;
    class EnderDragon extends Internal.Mob implements Internal.IAbyssalHeartBearer, Internal.Enemy {
        constructor(arg0: Internal.EntityType_<Internal.EnderDragon>, arg1: Internal.Level_)
        getUpVector(arg0: number): Vec3d;
        gameEvent(arg0: Internal.GameEvent_, arg1: Internal.Entity_): void;
        static checkMobSpawnRules(arg0: Internal.EntityType_<Internal.Mob>, arg1: Internal.LevelAccessor_, arg2: Internal.MobSpawnType_, arg3: BlockPos_, arg4: Internal.RandomSource_): boolean;
        setDefaultMovementSpeedMultiplier(speed: number): void;
        isSuppressingBounce(): boolean;
        handler$ejj000$retrodamageindicators$retroDamageIndicators_onSyncedDataUpdated(arg0: Internal.EntityDataAccessor_<any>, arg1: Internal.CallbackInfo_): void;
        setTarget(arg0: Internal.LivingEntity_): void;
        isOnFire(): boolean;
        getDeathSound(): Internal.SoundEvent;
        getPositionCodec(): Internal.VecDeltaCodec;
        getPickedResult(arg0: Internal.HitResult_): Internal.ItemStack;
        setMaxUpStep(arg0: number): void;
        /**
         * @deprecated
        */
        updateFluidHeightAndDoFluidPushing(arg0: Internal.TagKey_<Internal.Fluid>, arg1: number): boolean;
        shouldPassengersInheritMalus(): boolean;
        convertTo<T extends Internal.Mob>(arg0: Internal.EntityType_<T>, arg1: boolean): T;
        getFallFlyingTicks(): number;
        runCommandSilent(command: string): number;
        setPosition(x: number, y: number, z: number): void;
        chunkPosition(): Internal.ChunkPos;
        dropLeash(arg0: boolean, arg1: boolean): void;
        gameEvent(arg0: Internal.GameEvent_): void;
        accessoriesCapability(): Internal.AccessoriesCapability;
        setXxa(arg0: number): void;
        updateWalkAnimation(arg0: number): void;
        setDelayedLeashHolderId(arg0: number): void;
        isShiftKeyDown(): boolean;
        isInFluidType(arg0: Internal.FluidState_): boolean;
        setUUID(arg0: Internal.UUID_): void;
        checkBelowWorld(): void;
        onEffectUpdated(arg0: Internal.MobEffectInstance_, arg1: boolean, arg2: Internal.Entity_): void;
        updateSwingTime(): void;
        setMotionZ(z: number): void;
        constant$zbj000$additionalentityattributes$additionalEntityAttributes$modifyUpwardSwimming(original: number, fluid: Internal.TagKey_<any>): number;
        "deserializeNBT(net.minecraft.nbt.Tag)"(arg0: Internal.Tag_): void;
        handler$zza000$step_height_entity_attribute$getStepHeight(cir: Internal.CallbackInfoReturnable_<any>): void;
        canFreeze(): boolean;
        ignoreExplosion(): boolean;
        getBlockY(): number;
        isSpectator(): boolean;
        isAlwaysExperienceDropper(): boolean;
        setMainHandItem(item: Internal.ItemStack_): void;
        removeEffectNoUpdate(arg0: Internal.MobEffect_): Internal.MobEffectInstance;
        spawnAtLocation(arg0: Internal.ItemLike_, arg1: number): Internal.ItemEntity;
        getPersistentData(): Internal.CompoundTag;
        getHealth(): number;
        getMaxHealth(): number;
        setPathfindingMalus(arg0: Internal.BlockPathTypes_, arg1: number): void;
        isRegisteredToWorld(): boolean;
        getRandomZ(arg0: number): number;
        setAggressive(arg0: boolean): void;
        constant$zbn000$additionalentityattributes$additionalEntityAttributes$knockDownwards(original: number): number;
        setRemoved(arg0: Internal.Entity$RemovalReason_): void;
        getAttachedOrCreate<A>(type: Internal.AttachmentType_<A>, initializer: Internal.Supplier_<A>): A;
        isInWaterRainOrBubble(): boolean;
        getDistanceSq(arg0: number, arg1: number, arg2: number): number;
        getRemovalReason(): Internal.Entity$RemovalReason;
        onFlap(): void;
        actuallyHurt(arg0: DamageSource_, arg1: number): void;
        resetFallDistance(): void;
        canSprint(): boolean;
        blockPosition(): BlockPos;
        setLevel(arg0: Internal.Level_): void;
        setBoundingBox(arg0: Internal.AABB_): void;
        isAmbientCreature(): boolean;
        setZza(arg0: number): void;
        getBlock(): Internal.BlockContainerJS;
        setEquipment(slot: Internal.EquipmentSlot_, item: Internal.ItemStack_): void;
        randomTeleport(arg0: number, arg1: number, arg2: number, arg3: boolean): boolean;
        invalidateCaps(): void;
        getName(): net.minecraft.network.chat.Component;
        playAmbientSound(): void;
        onGround(): boolean;
        getControlledVehicle(): Internal.Entity;
        isOnSameTeam(arg0: Internal.Entity_): boolean;
        getArmorValue(): number;
        isInFluidType(arg0: Internal.BiPredicate_<Internal.FluidType, number>): boolean;
        tick(): void;
        getKillCredit(): Internal.LivingEntity;
        redirect$dlf000$spectrum$isWet(livingEntity: Internal.LivingEntity_): boolean;
        isPushedByFluid(arg0: Internal.FluidType_): boolean;
        getComponentContainer(): Internal.ComponentContainer;
        sinkInFluid(arg0: Internal.FluidType_): void;
        tryCheckInsideBlocks(): void;
        hasPermissions(arg0: number): boolean;
        accessoriesHolder(): Internal.AccessoriesHolder;
        teleportTo(dimension: ResourceLocation_, x: number, y: number, z: number, yaw: number, pitch: number): void;
        onInsideBlock(arg0: Internal.BlockState_): void;
        static createMobAttributes(): Internal.AttributeSupplier$Builder;
        getDefaultLootTable(): ResourceLocation;
        isAutoSpinAttack(): boolean;
        getRemainingFireTicks(): number;
        limitPistonMovement(arg0: Vec3d_): Vec3d;
        onlyOpCanSetNbt(): boolean;
        addMotion(arg0: number, arg1: number, arg2: number): void;
        fireImmune(): boolean;
        getMaxFallDistance(): number;
        dsurround_getEffectInfo(): Internal.EntityEffectInfo;
        isHolding(arg0: Internal.Item_): boolean;
        getZ(arg0: number): number;
        hasCustomOutlineRendering(arg0: Internal.Player_): boolean;
        static areAllEffectsAmbient(arg0: Internal.Collection_<Internal.MobEffectInstance>): boolean;
        doHurtTarget(arg0: Internal.Entity_): boolean;
        getTicksFrozen(): number;
        tickRidden(arg0: Internal.Player_, arg1: Vec3d_): void;
        getRandomX(arg0: number): number;
        spawnAtLocation(arg0: Internal.ItemStack_, arg1: number): Internal.ItemEntity;
        pick(arg0: number, arg1: number, arg2: boolean): Internal.HitResult;
        getVoicePitch(): number;
        setStatusMessage(message: net.minecraft.network.chat.Component_): void;
        setSleepingPos(arg0: BlockPos_): void;
        isDescending(): boolean;
        getAttributeBaseValue(arg0: Internal.Attribute_): number;
        sendEffectToPassengers(arg0: Internal.MobEffectInstance_): void;
        getHeadRotSpeed(): number;
        getYHeadRot(): number;
        handler$dlf000$spectrum$applyBonusDamage(source: DamageSource_, amount: number, cir: Internal.CallbackInfoReturnable_<any>): void;
        verifyEquippedItem(arg0: Internal.ItemStack_): void;
        getProjectile(arg0: Internal.ItemStack_): Internal.ItemStack;
        damageEquipment(slot: Internal.EquipmentSlot_, amount: number, onBroken: Internal.Consumer_<Internal.ItemStack>): void;
        syncPacketPositionCodec(arg0: number, arg1: number, arg2: number): void;
        setAbsorptionAmount(arg0: number): void;
        isSunBurnTick(): boolean;
        makeBrain(arg0: Internal.Dynamic_<any>): Internal.Brain<any>;
        handler$dlf000$spectrum$mitigateFallDamageWithPuffCirclet(heightDifference: number, onGround: boolean, landedState: Internal.BlockState_, landedPosition: BlockPos_, ci: Internal.CallbackInfo_): void;
        isAffectedByFluids(): boolean;
        canAddPassenger(arg0: Internal.Entity_): boolean;
        shouldRenderAtSqrDistance(arg0: number): boolean;
        getAttachedOrSet<A>(type: Internal.AttachmentType_<A>, defaultValue: A): A;
        damageSources(): Internal.DamageSources;
        removeAttached<A>(type: Internal.AttachmentType_<A>): A;
        removeAllGoals(arg0: Internal.Predicate_<Internal.Goal>): void;
        swing(): void;
        getAmbientSound(): Internal.SoundEvent;
        recreateFromPacket(arg0: Internal.ClientboundAddEntityPacket_): void;
        canStartSwimming(): boolean;
        setDeltaMovement(arg0: Vec3d_): void;
        getLeashOffset(arg0: number): Vec3d;
        isBaby(): boolean;
        damageEquipment(slot: Internal.EquipmentSlot_): void;
        isGlowing(): boolean;
        "isInFluidType(net.minecraft.world.level.material.FluidState)"(arg0: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        canBreatheUnderwater(): boolean;
        die(arg0: DamageSource_): void;
        removeAllEffects(): boolean;
        getLeashOffset(): Vec3d;
        hasLineOfSight(arg0: Internal.Entity_): boolean;
        onClimbable(): boolean;
        isAttackable(): boolean;
        getRiddenSpeed(arg0: Internal.Player_): number;
        processPortalCooldown(): void;
        getSlot(arg0: number): Internal.SlotAccess;
        "deserializeNBT(net.minecraft.nbt.CompoundTag)"(arg0: Internal.CompoundTag_): void;
        stopSeenByPlayer(arg0: Internal.ServerPlayer_): void;
        isUnderWater(): boolean;
        stopRiding(): void;
        getSwimHighSpeedSplashSound(): Internal.SoundEvent;
        getLeashHolder(): Internal.Entity;
        createWitherRose(arg0: Internal.LivingEntity_): void;
        getX(arg0: number): number;
        getSensing(): Internal.Sensing;
        getLegsArmorItem(): Internal.ItemStack;
        captureDrops(arg0: Internal.Collection_<Internal.ItemEntity>): Internal.Collection<Internal.ItemEntity>;
        getSelfAndPassengers(): Internal.Stream<any>;
        rayTrace(distance: number): Internal.RayTraceResultJS;
        getDeltaMovement(): Vec3d;
        canTakeItem(arg0: Internal.ItemStack_): boolean;
        removeSoulSpeed(): void;
        shouldDropExperience(): boolean;
        getEquipmentDropChance(arg0: Internal.EquipmentSlot_): number;
        hasPassenger(arg0: Internal.Entity_): boolean;
        syncComponent(key: Internal.ComponentKey_<any>, packetWriter: Internal.ComponentPacketWriter_, predicate: Internal.PlayerSyncPredicate_): void;
        setSecondsOnFire(arg0: number): void;
        moveTo(arg0: number, arg1: number, arg2: number): void;
        "getDisplayName()"(): net.minecraft.network.chat.Component;
        getLootTable(): ResourceLocation;
        getTicksUsingItem(): number;
        findClosestNode(arg0: number, arg1: number, arg2: number): number;
        tickHeadTurn(arg0: number, arg1: number): number;
        getArrowCount(): number;
        calculateViewVector(arg0: number, arg1: number): Vec3d;
        getMoveControl(): Internal.MoveControl;
        setMotion(arg0: number, arg1: number, arg2: number): void;
        playSound(arg0: Internal.SoundEvent_): void;
        makeBoundingBox(): Internal.AABB;
        handler$deo000$eidolon$eidolonrepraised$getMobType(arg0: Internal.CallbackInfoReturnable_<any>): void;
        getDefaultMovementSpeed(): number;
        restoreFrom(arg0: Internal.Entity_): void;
        redirect$bkg000$fabric_entity_events_v1$beforeEntityKilled(livingEntity: Internal.LivingEntity_, source: DamageSource_, amount: number): boolean;
        isPeacefulCreature(): boolean;
        setOnGround(arg0: boolean): void;
        addEffect(arg0: Internal.MobEffectInstance_, arg1: Internal.Entity_): boolean;
        ate(): void;
        setPos(arg0: number, arg1: number, arg2: number): void;
        notify(): void;
        getFirstTick(): boolean;
        setPersistenceRequired(): void;
        getLastHurtByMobTimestamp(): number;
        getVehicle(): Internal.Entity;
        isEffectiveAi(): boolean;
        startRiding(arg0: Internal.Entity_, arg1: boolean): boolean;
        setSpawnCancelled(arg0: boolean): void;
        getStringUuid(): string;
        setSwimming(arg0: boolean): void;
        canHydrateInFluidType(arg0: Internal.FluidType_): boolean;
        getMainArm(): Internal.HumanoidArm;
        checkSpawnRules(arg0: Internal.LevelAccessor_, arg1: Internal.MobSpawnType_): boolean;
        getRotationVector(): Internal.Vec2;
        getHurtDir(): number;
        dropAbyssalHeart(arg0: Internal.Player_): void;
        isSprinting(): boolean;
        isMaxGroupSizeReached(arg0: number): boolean;
        getMotionY(): number;
        getOffhandItem(): Internal.ItemStack;
        canCollideWith(arg0: Internal.Entity_): boolean;
        getBlockExplosionResistance(arg0: Internal.Explosion_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.FluidState_, arg5: number): number;
        getFluidFallDistanceModifier(arg0: Internal.FluidType_): number;
        clearSleepingPos(): void;
        canRide(arg0: Internal.Entity_): boolean;
        canSpawnSprintParticle(): boolean;
        "moveTo(net.minecraft.core.BlockPos,float,float)"(arg0: BlockPos_, arg1: number, arg2: number): void;
        getLastHurtMob(): Internal.LivingEntity;
        moveRelative(arg0: number, arg1: Vec3d_): void;
        getOnPos(arg0: number): BlockPos;
        isAddedToWorld(): boolean;
        saveAsPassenger(arg0: Internal.CompoundTag_): boolean;
        gtceu$setFireImmune(isImmune: boolean): void;
        getDrinkingSound(arg0: Internal.ItemStack_): Internal.SoundEvent;
        getSoundSource(): Internal.SoundSource;
        getLastDamageSource(): DamageSource;
        removeAfterChangingDimensions(): void;
        setNoActionTime(arg0: number): void;
        setMovementSpeedAddition(speed: number): void;
        equipmentHasChanged(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getPose(): Internal.Pose;
        getSharedFlag(arg0: number): boolean;
        getAttribute(arg0: Internal.Attribute_): Internal.AttributeInstance;
        setPositionAndRotation(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        canBeAffected(arg0: Internal.MobEffectInstance_): boolean;
        tryAddFrost(): void;
        checkFallDamage(arg0: number, arg1: boolean, arg2: Internal.BlockState_, arg3: BlockPos_): void;
        getPhaseManager(): Internal.EnderDragonPhaseManager;
        quark$lastHurtByPlayer(): Internal.Player;
        getRestrictCenter(): BlockPos;
        isLeftHanded(): boolean;
        removeVehicle(): void;
        defineSynchedData(): void;
        checkInsideBlocks(): void;
        setZ(z: number): void;
        getY(): number;
        hashCode(): number;
        deserializeNBT(arg0: Internal.CompoundTag_): void;
        eat(arg0: Internal.Level_, arg1: Internal.ItemStack_): Internal.ItemStack;
        createHoverEvent(): Internal.HoverEvent;
        isWithinMeleeAttackRange(arg0: Internal.LivingEntity_): boolean;
        serverAiStep(): void;
        broadcastBreakEvent(arg0: Internal.EquipmentSlot_): void;
        getExitPortal(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: boolean, arg3: Internal.WorldBorder_): Internal.Optional<Internal.BlockUtil$FoundRectangle>;
        handler$bkm000$fabric_entity_events_v1$injectElytraTick(info: Internal.CallbackInfo_): void;
        setItemSlotAndDropWhenKilled(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): void;
        sendDebugPackets(): void;
        showVehicleHealth(): boolean;
        getDistance(pos: BlockPos_): number;
        isBlocking(): boolean;
        damageHeldItem(hand: Internal.InteractionHand_, amount: number): void;
        removeAttribute(attribute: Internal.Attribute_, identifier: string): void;
        playMuffledStepSound(arg0: Internal.BlockState_, arg1: BlockPos_): void;
        /**
         * @deprecated
        */
        isPushedByFluid(): boolean;
        dropFromLootTable(arg0: DamageSource_, arg1: boolean): void;
        getArmorCoverPercentage(): number;
        handleRelativeFrictionAndCalculateMovement(arg0: Vec3d_, arg1: number): Vec3d;
        turn(arg0: number, arg1: number): void;
        getAirSupply(): number;
        waterSwimSound(): void;
        moveTo(arg0: BlockPos_, arg1: number, arg2: number): void;
        isPlayer(): boolean;
        isAnimal(): boolean;
        readAdditionalSaveData(arg0: Internal.CompoundTag_): void;
        canBeCollidedWith(): boolean;
        getMotionDirection(): Internal.Direction;
        asComponentProvider(): Internal.ComponentProvider;
        lavaHurt(): void;
        handleDamageEvent(arg0: DamageSource_): void;
        updateUsingItem(arg0: Internal.ItemStack_): void;
        getFabricBalmData(): Internal.CompoundTag;
        canChangeDimensions(): boolean;
        jumpInFluid(arg0: Internal.FluidType_): void;
        getCommandSenderWorld(): Internal.Level;
        quark$lastHurtByPlayerTime(): number;
        getTotalMovementSpeed(): number;
        changeDimension(arg0: Internal.ServerLevel_): Internal.Entity;
        moveInFluid(arg0: Internal.FluidState_, arg1: Vec3d_, arg2: number): boolean;
        updatingUsingItem(): void;
        blockedByShield(arg0: Internal.LivingEntity_): void;
        attack(hp: number): void;
        canSwimInFluidType(arg0: Internal.FluidType_): boolean;
        getFireImmuneTicks(): number;
        getAttributes(): Internal.AttributeMap;
        isSpawnCancelled(): boolean;
        "hasPassenger(java.util.function.Predicate)"(arg0: Internal.Predicate_<Internal.Entity>): boolean;
        getDimensions(arg0: Internal.Pose_): Internal.EntityDimensions;
        isSwimming(): boolean;
        setSprinting(arg0: boolean): void;
        mayInteract(arg0: Internal.Level_, arg1: BlockPos_): boolean;
        setRot(arg0: number, arg1: number): void;
        setPortalCooldown(): void;
        getAttackAnim(arg0: number): number;
        setX(x: number): void;
        getPortalWaitTime(): number;
        getBlockStateOn(): Internal.BlockState;
        wantsToPickUp(arg0: Internal.ItemStack_): boolean;
        getItemBySlot(arg0: Internal.EquipmentSlot_): Internal.ItemStack;
        getFluidJumpThreshold(): number;
        enchantSpawnedArmor(arg0: Internal.RandomSource_, arg1: number, arg2: Internal.EquipmentSlot_): void;
        "setPositionAndRotation(double,double,double,float,float)"(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        isInvisibleTo(arg0: Internal.Player_): boolean;
        stopSleeping(): void;
        spectrum$setActuallyTouchingWater(actuallyTouchingWater: boolean): void;
        setAirSupply(arg0: number): void;
        getOnPos(): BlockPos;
        isUndead(): boolean;
        repositionEntityAfterLoad(): boolean;
        static createLivingAttributes(): Internal.AttributeSupplier$Builder;
        getBlockPosBelowThatAffectsMyMovement(): BlockPos;
        moveTowardsClosestSpace(arg0: number, arg1: number, arg2: number): void;
        getStepHeight(): number;
        static getCollisionHorizontalEscapeVector(arg0: number, arg1: number, arg2: number): Vec3d;
        setRegisteredToWorld(navigation: Internal.PathNavigation_): void;
        isSleeping(): boolean;
        stopUsingItem(): void;
        acceptsFailure(): boolean;
        playCombinationStepSounds(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: BlockPos_): void;
        setOnGroundWithKnownMovement(arg0: boolean, arg1: Vec3d_): void;
        getFluidFallingAdjustedMovement(arg0: number, arg1: boolean, arg2: Vec3d_): Vec3d;
        setOldPosAndRot(): void;
        isFree(arg0: number, arg1: number, arg2: number): boolean;
        getDismountPoses(): Internal.ImmutableList<Internal.Pose>;
        getLastHurtMobTimestamp(): number;
        playBlockFallSound(): void;
        lithiumOnEquipmentChanged(): void;
        "moveTo(double,double,double)"(arg0: number, arg1: number, arg2: number): void;
        setRemainingFireTicks(arg0: number): void;
        updateControlFlags(): void;
        createBodyControl(): Internal.BodyRotationControl;
        /**
         * @deprecated
        */
        getOnPosLegacy(): BlockPos;
        setPos(arg0: Vec3d_): void;
        findDimensionEntryPoint(arg0: Internal.ServerLevel_): Internal.PortalInfo;
        enchantSpawnedWeapon(arg0: Internal.RandomSource_, arg1: number): void;
        populateDefaultEquipmentEnchantments(arg0: Internal.RandomSource_, arg1: Internal.DifficultyInstance_): void;
        damageHeldItem(hand: Internal.InteractionHand_, amount: number, onBroken: Internal.Consumer_<Internal.ItemStack>): void;
        setCanPickUpLoot(arg0: boolean): void;
        getStandingEyeHeight(arg0: Internal.Pose_, arg1: Internal.EntityDimensions_): number;
        getMainHandItem(): Internal.ItemStack;
        areCapsCompatible(arg0: Internal.CapabilityDispatcher_): boolean;
        setSilent(arg0: boolean): void;
        doPush(arg0: Internal.Entity_): void;
        captureDrops(): Internal.Collection<Internal.ItemEntity>;
        hasExactlyOnePlayerPassenger(): boolean;
        canBeSeenAsEnemy(): boolean;
        handler$dlf000$spectrum$drop(source: DamageSource_, ci: Internal.CallbackInfo_): void;
        setLeftHanded(arg0: boolean): void;
        getSwimSplashSound(): Internal.SoundEvent;
        getActiveEffects(): Internal.Collection<Internal.MobEffectInstance>;
        isOnPortalCooldown(): boolean;
        hurtArmor(arg0: DamageSource_, arg1: number): void;
        canAttack(arg0: Internal.LivingEntity_, arg1: Internal.TargetingConditions_): boolean;
        increaseAirSupply(arg0: number): number;
        getAttributeValue(arg0: Internal.Holder_<Internal.Attribute>): number;
        setPitch(arg0: number): void;
        isMultipartEntity(): boolean;
        setPosRaw(arg0: number, arg1: number, arg2: number): void;
        getParts(): Internal.PartEntity<any>[];
        handleEntityEvent(arg0: number): void;
        isUsingItem(): boolean;
        spawnSoulSpeedParticle(): void;
        removeFrost(): void;
        isAlwaysTicking(): boolean;
        interactAt(arg0: Internal.Player_, arg1: Vec3d_, arg2: Internal.InteractionHand_): InteractionResult;
        lerpTo(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): void;
        onPassengerTurned(arg0: Internal.Entity_): void;
        spawnAtLocation(arg0: Internal.ItemLike_): Internal.ItemEntity;
        setAttached(type: Internal.AttachmentType_<any>, value: any): any;
        /**
         * @deprecated
        */
        couldAcceptPassenger(): boolean;
        getForgePersistentData(): Internal.CompoundTag;
        lithiumOnBlockCacheDeleted(): void;
        "spawnAtLocation(net.minecraft.world.level.ItemLike,int)"(arg0: Internal.ItemLike_, arg1: number): Internal.ItemEntity;
        setInvulnerable(arg0: boolean): void;
        push(arg0: Internal.Entity_): void;
        isInFluidType(): boolean;
        jumpFromGround(): void;
        canReplaceCurrentItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getDamageAfterArmorAbsorb(arg0: DamageSource_, arg1: number): number;
        handler$chi000$cofh_core$shield(arg0: DamageSource_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        maxUpStep(): number;
        setGlowing(arg0: boolean): void;
        load(arg0: Internal.CompoundTag_): void;
        "broadcastBreakEvent(net.minecraft.world.entity.EquipmentSlot)"(arg0: Internal.EquipmentSlot_): void;
        setLeashedTo(arg0: Internal.Entity_, arg1: boolean): void;
        onChangedBlock(arg0: BlockPos_): void;
        isAlive(): boolean;
        startSleeping(arg0: BlockPos_): void;
        dsurround_getPotionSwirlColor(): number;
        pickUpItem(arg0: Internal.ItemEntity_): void;
        hurt(arg0: Internal.EnderDragonPart_, arg1: DamageSource_, arg2: number): boolean;
        getBbHeight(): number;
        getMeleeAttackRangeSqr(arg0: Internal.LivingEntity_): number;
        getViewVector(arg0: number): Vec3d;
        getTags(): Internal.Set<string>;
        calculateFallDamage(arg0: number, arg1: number): number;
        getLastAttacker(): Internal.LivingEntity;
        hasControllingPassenger(): boolean;
        closerThan(arg0: Internal.Entity_, arg1: number, arg2: number): boolean;
        absMoveTo(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        updateEffectVisibility(): void;
        getSubEntities(): Internal.EnderDragonPart[];
        onPathfindingStart(): void;
        getPercentFrozen(): number;
        setPortalCooldown(arg0: number): void;
        hasGlowingTag(): boolean;
        shouldBlockExplode(arg0: Internal.Explosion_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: number): boolean;
        setPosition(block: Internal.BlockContainerJS_): void;
        handler$den000$eidolon$eidolonrepraised$isAlliedTo(arg0: Internal.Entity_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        getSoundVolume(): number;
        isLeashed(): boolean;
        localvar$dlf000$spectrum$modifyDamage(amount: number, source: DamageSource_): number;
        addEffect(arg0: Internal.MobEffectInstance_): boolean;
        getViewXRot(arg0: number): number;
        canRiderInteract(): boolean;
        fabric_getAttachments(): Internal.Map<any, any>;
        setPose(arg0: Internal.Pose_): void;
        getReachDistance(): number;
        getEntityType(): Internal.EntityType<any>;
        isWaterCreature(): boolean;
        toString(): string;
        updateInvisibilityStatus(): void;
        setLastHurtByPlayer(arg0: Internal.Player_): void;
        "getServer()"(): Internal.MinecraftServer;
        mobInteract(arg0: Internal.Player_, arg1: Internal.InteractionHand_): InteractionResult;
        wasExperienceConsumed(): boolean;
        isPushable(): boolean;
        setYBodyRot(arg0: number): void;
        foodEaten(is: Internal.ItemStack_): void;
        onClientRemoval(): void;
        handler$dlf000$spectrum$eat(stack: Internal.ItemStack_, world: Internal.Level_, targetEntity: Internal.LivingEntity_, ci: Internal.CallbackInfo_): void;
        self(): Internal.LivingEntity;
        shouldDropLoot(): boolean;
        reviveCaps(): void;
        getDistance(x: number, y: number, z: number): number;
        setMotionY(y: number): void;
        static createAttributes(): Internal.AttributeSupplier$Builder;
        getAttached(type: Internal.AttachmentType_<any>): any;
        setRotation(yaw: number, pitch: number): void;
        setFightOrigin(arg0: BlockPos_): void;
        handler$cam000$radium$tryShortcutFluidPushing(ci: Internal.CallbackInfo_, box: Internal.AABB_, x1: number, x2: number, y1: number, y2: number, z1: number, z2: number, zero: number): void;
        calculateEntityAnimation(arg0: boolean): void;
        forceAddEffect(arg0: Internal.MobEffectInstance_, arg1: Internal.Entity_): void;
        setChestArmorItem(item: Internal.ItemStack_): void;
        getComponent<C extends dev.onyxstudios.cca.api.v3.component.Component>(key: Internal.ComponentKey_<C>): C;
        checkAutoSpinAttack(arg0: Internal.AABB_, arg1: Internal.AABB_): void;
        onAboveBubbleCol(arg0: boolean): void;
        "playSound(net.minecraft.sounds.SoundEvent,float,float)"(id: Internal.SoundEvent_, volume: number, pitch: number): void;
        toComponentPacket(key: Internal.ComponentKey_<any>, writer: Internal.ComponentPacketWriter_, recipient: Internal.ServerPlayer_): Internal.ClientboundCustomPayloadPacket;
        isPassenger(): boolean;
        hasPose(arg0: Internal.Pose_): boolean;
        playStepSound(arg0: BlockPos_, arg1: Internal.BlockState_): void;
        /**
         * @deprecated
        */
        isEyeInFluid(arg0: Internal.TagKey_<Internal.Fluid>): boolean;
        isInvulnerableTo(arg0: DamageSource_): boolean;
        makeStuckInBlock(arg0: Internal.BlockState_, arg1: Vec3d_): void;
        getAttachedOrGet<A>(type: Internal.AttachmentType_<A>, defaultValue: Internal.Supplier_<A>): A;
        isSensitiveToWater(): boolean;
        skipAttackInteraction(arg0: Internal.Entity_): boolean;
        maybeBackOffFromEdge(arg0: Vec3d_, arg1: Internal.MoverType_): Vec3d;
        newFloatList(...arg0: number[]): Internal.ListTag;
        lerpMotion(arg0: number, arg1: number, arg2: number): void;
        "getAttributeValue(net.minecraft.core.Holder)"(arg0: Internal.Holder_<Internal.Attribute>): number;
        shouldRender(arg0: number, arg1: number, arg2: number): boolean;
        getJumpControl(): Internal.JumpControl;
        isFlapping(): boolean;
        getEyeHeight(arg0: Internal.Pose_, arg1: Internal.EntityDimensions_): number;
        getFeetArmorItem(): Internal.ItemStack;
        static getViewScale(): number;
        getVisualRotationYInDegrees(): number;
        setSpeed(arg0: number): void;
        requiresCustomPersistence(): boolean;
        isDiscrete(): boolean;
        unRide(): void;
        getLevel(): Internal.Level;
        "spawnAtLocation(net.minecraft.world.item.ItemStack)"(arg0: Internal.ItemStack_): Internal.ItemEntity;
        getCombatTracker(): Internal.CombatTracker;
        updateDynamicGameEventListener(arg0: Internal.BiConsumer_<Internal.DynamicGameEventListener<any>, Internal.ServerLevel>): void;
        "onSyncedDataUpdated(net.minecraft.network.syncher.EntityDataAccessor)"(arg0: Internal.EntityDataAccessor_<any>): void;
        isNoAi(): boolean;
        areCapsCompatible(arg0: Internal.CapabilityProvider_<Internal.Entity>): boolean;
        extinguishFire(): void;
        getChestArmorItem(): Internal.ItemStack;
        damageEquipment(slot: Internal.EquipmentSlot_, amount: number): void;
        getBlockJumpFactor(): number;
        tell(message: net.minecraft.network.chat.Component_): void;
        closerThan(arg0: Internal.Entity_, arg1: number): boolean;
        onSoulSpeedBlock(): boolean;
        /**
         * @deprecated
        */
        goDownInWater(): void;
        getDistanceSq(pos: BlockPos_): number;
        indicateDamage(arg0: number, arg1: number): void;
        canBeSeenByAnyone(): boolean;
        getDragonFight(): Internal.EndDragonFight;
        playEntityOnFireExtinguishedSound(): void;
        isFullyFrozen(): boolean;
        dropCustomDeathLoot(arg0: DamageSource_, arg1: number, arg2: boolean): void;
        getHeadLookVector(arg0: number): Vec3d;
        handler$eop000$wizards_reborn$isFallFlying(arg0: Internal.CallbackInfoReturnable_<any>): void;
        isInWall(): boolean;
        getMeleeAttackReferencePosition(): Vec3d;
        getAllSlots(): Internal.Iterable<Internal.ItemStack>;
        remove(arg0: Internal.Entity$RemovalReason_): void;
        getScale(): number;
        handler$dlf000$spectrum$canHaveStatusEffect(statusEffectInstance: Internal.MobEffectInstance_, cir: Internal.CallbackInfoReturnable_<any>): void;
        isSuppressingSlidingDownLadder(): boolean;
        getBlockZ(): number;
        dampensVibrations(): boolean;
        hasAttached(type: Internal.AttachmentType_<any>): boolean;
        isSilent(): boolean;
        "playSound(net.minecraft.sounds.SoundEvent)"(id: Internal.SoundEvent_): void;
        getPitch(): number;
        newDoubleList(...arg0: number[]): Internal.ListTag;
        getPathfindingMalus(arg0: Internal.BlockPathTypes_): number;
        getRandom(): Internal.RandomSource;
        canReplaceEqualItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        rotate(arg0: Internal.Rotation_): number;
        shouldRiderFaceForward(arg0: Internal.Player_): boolean;
        getPassengersAndSelf(): Internal.Stream<any>;
        breakItem(arg0: Internal.ItemStack_): void;
        rayTrace(distance: number, fluids: boolean): Internal.RayTraceResultJS;
        "getAttributeBaseValue(net.minecraft.core.Holder)"(arg0: Internal.Holder_<Internal.Attribute>): number;
        clearRestriction(): void;
        "self()"(): Internal.LivingEntity;
        rayTrace(): Internal.RayTraceResultJS;
        alwaysAccepts(): boolean;
        "isHolding(java.util.function.Predicate)"(arg0: Internal.Predicate_<Internal.ItemStack>): boolean;
        getNoActionTime(): number;
        isVisuallyCrawling(): boolean;
        isAggressive(): boolean;
        setYya(arg0: number): void;
        setDropChance(arg0: Internal.EquipmentSlot_, arg1: number): void;
        "broadcastBreakEvent(net.minecraft.world.InteractionHand)"(arg0: Internal.InteractionHand_): void;
        setFluidTypeHeight(arg0: Internal.FluidType_, arg1: number): void;
        dropExperience(): void;
        teleportRelative(arg0: number, arg1: number, arg2: number): void;
        setBaby(arg0: boolean): void;
        localvar$dkk000$spectrum$applyAdditionalFirstStrikeEnchantmentDamage(amount: number, source: DamageSource_): number;
        getLastHurtByMob(): Internal.LivingEntity;
        isInWaterOrBubble(): boolean;
        decreaseAirSupply(arg0: number): number;
        updateFluidHeightAndDoFluidPushing(): void;
        spawnParticles(arg0: Internal.ItemStack_, arg1: number): void;
        handler$cil001$dsurround$playStepSound(pos: BlockPos_, state: Internal.BlockState_, ci: Internal.CallbackInfo_): void;
        getPortalCooldown(): number;
        getItem(): Internal.ItemStack;
        causeFallDamage(arg0: number, arg1: number, arg2: DamageSource_): boolean;
        releaseUsingItem(): void;
        getPosition(arg0: number): Vec3d;
        removeFreeWill(): void;
        removeWhenFarAway(arg0: number): boolean;
        wait(arg0: number): void;
        isIgnoringBlockTriggers(): boolean;
        setRecordPlayingNearby(arg0: BlockPos_, arg1: boolean): void;
        isInRain(): boolean;
        getHandHoldingItemAngle(arg0: Internal.Item_): Vec3d;
        hasItemInSlot(arg0: Internal.EquipmentSlot_): boolean;
        canUpdate(arg0: boolean): void;
        getEyeInFluidType(): Internal.FluidType;
        distanceToSqr(arg0: Vec3d_): number;
        syncComponent(key: Internal.ComponentKey_<any>): void;
        modifyAttached<A>(type: Internal.AttachmentType_<A>, modifier: Internal.UnaryOperator_<A>): A;
        isSteppingCarefully(): boolean;
        getSoundFromFluidType(arg0: Internal.FluidType_, arg1: Internal.SoundAction_): Internal.SoundEvent;
        "spawnAtLocation(net.minecraft.world.item.ItemStack,float)"(arg0: Internal.ItemStack_, arg1: number): Internal.ItemEntity;
        addAdditionalSaveData(arg0: Internal.CompoundTag_): void;
        getBlockX(): number;
        /**
         * @deprecated
        */
        getLightLevelDependentMagicValue(): number;
        isFallFlying(): boolean;
        getEncodeId(): string;
        getY(arg0: number): number;
        getMaxHeadXRot(): number;
        getNbt(): Internal.CompoundTag;
        setInvisible(arg0: boolean): void;
        canEnterPose(arg0: Internal.Pose_): boolean;
        getEffect(arg0: Internal.MobEffect_): Internal.MobEffectInstance;
        setTotalMovementSpeedMultiplier(speed: number): void;
        setHealth(arg0: number): void;
        handler$deo000$eidolon$eidolonrepraised$canAttack(arg0: Internal.LivingEntity_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        attack(arg0: DamageSource_, arg1: number): boolean;
        getBlockSpeedFactor(): number;
        modifyExpressionValue$cpi002$mna$elytraOverride(arg0: boolean): boolean;
        onInsideBubbleColumn(arg0: boolean): void;
        getEyePosition(): Vec3d;
        getEyeHeight(): number;
        onOffspringSpawnedFromEgg(arg0: Internal.Player_, arg1: Internal.Mob_): void;
        setDiscardFriction(arg0: boolean): void;
        hasPassenger(arg0: Internal.Predicate_<Internal.Entity>): boolean;
        getYaw(): number;
        swing(arg0: Internal.InteractionHand_, arg1: boolean): void;
        getUsedItemHand(): Internal.InteractionHand;
        setDefaultMovementSpeed(speed: number): void;
        onEffectAdded(arg0: Internal.MobEffectInstance_, arg1: Internal.Entity_): void;
        canAttackType(arg0: Internal.EntityType_<any>): boolean;
        getCapability<T>(arg0: Internal.Capability_<T>, arg1: Internal.Direction_): Internal.LazyOptional<T>;
        canEntityBeSeen(entity: Internal.LivingEntity_): boolean;
        getBrain(): Internal.Brain<any>;
        dsurround_isJumping(): boolean;
        setCustomNameVisible(arg0: boolean): void;
        isAlliedTo(arg0: Internal.Team_): boolean;
        handler$cpk000$mna$playSound(arg0: Internal.SoundEvent_, arg1: number, arg2: number, arg3: Internal.CallbackInfo_): void;
        getAttachedOrCreate<A>(type: Internal.AttachmentType_<A>): A;
        canFireProjectileWeapon(arg0: Internal.ProjectileWeaponItem_): boolean;
        getControllingPassenger(): Internal.LivingEntity;
        getScriptType(): Internal.ScriptType;
        shouldDiscardFriction(): boolean;
        startRiding(arg0: Internal.Entity_): boolean;
        saveWithoutId(arg0: Internal.CompoundTag_): Internal.CompoundTag;
        getForward(): Vec3d;
        serializeNBT(): Internal.Tag;
        getDamageAfterMagicAbsorb(arg0: DamageSource_, arg1: number): number;
        setFeetArmorItem(item: Internal.ItemStack_): void;
        getId(): number;
        canBeHitByProjectile(): boolean;
        findPath(arg0: number, arg1: number, arg2: Internal.Node_): net.minecraft.world.level.pathfinder.Path;
        getRecipientsForComponentSync(): Internal.Iterable<any>;
        handler$dkf000$spectrum$dropStack(stack: Internal.ItemStack_, cir: Internal.CallbackInfoReturnable_<any>): void;
        getEyeY(): number;
        skipDropExperience(): void;
        fabric_readAttachmentsFromNbt(nbt: Internal.CompoundTag_): void;
        getBoundingBox(): Internal.AABB;
        isInWaterOrRain(): boolean;
        setItemSlot(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): void;
        modify$dlf001$spectrum$applyExuberance(originalXP: number): number;
        handler$dlf000$spectrum$setSprinting(sprinting: boolean, ci: Internal.CallbackInfo_): void;
        tryAddSoulSpeed(): void;
        equals(arg0: any): boolean;
        handler$cpk000$mna$canEnterPose(arg0: Internal.Pose_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        getViewYRot(arg0: number): number;
        getSwimSound(): Internal.SoundEvent;
        getLastArmorItem(arg0: Internal.EquipmentSlot_): Internal.ItemStack;
        dismountsUnderwater(): boolean;
        isAffectedByPotions(): boolean;
        playerTouch(arg0: Internal.Player_): void;
        addTag(arg0: string): boolean;
        getEyeHeight(arg0: Internal.Pose_): number;
        getAddEntityPacket(): Internal.Packet<Internal.ClientGamePacketListener>;
        doWaterSplashEffect(): void;
        static getEquipmentForSlot(arg0: Internal.EquipmentSlot_, arg1: number): Internal.Item;
        isWithinRestriction(arg0: BlockPos_): boolean;
        getTeam(): Internal.Team;
        setTicksFrozen(arg0: number): void;
        getUseItem(): Internal.ItemStack;
        handler$dlf000$spectrum$addStatusEffect(effect: Internal.MobEffectInstance_, source: Internal.Entity_, cir: Internal.CallbackInfoReturnable_<any>): void;
        getMyRidingOffset(): number;
        dismountTo(arg0: number, arg1: number, arg2: number): void;
        getFlyingSpeed(): number;
        hasCustomName(): boolean;
        getSwimAmount(arg0: number): number;
        isLiving(): boolean;
        getX(): number;
        dropAllDeathLoot(arg0: DamageSource_): void;
        isVehicle(): boolean;
        static transfer(original: Internal.AttachmentTarget_, target: Internal.AttachmentTarget_, isDeath: boolean): void;
        tickLeash(): void;
        spawnAtLocation(arg0: Internal.ItemStack_): Internal.ItemEntity;
        customServerAiStep(): void;
        mergeNbt(tag: Internal.CompoundTag_): Internal.Entity;
        handler$cpf000$mna$onClimbable(arg0: Internal.CallbackInfoReturnable_<any>): void;
        thunderHit(arg0: Internal.ServerLevel_, arg1: Internal.LightningBolt_): void;
        setIsInPowderSnow(arg0: boolean): void;
        doEnchantDamageEffects(arg0: Internal.LivingEntity_, arg1: Internal.Entity_): void;
        setCustomName(arg0: net.minecraft.network.chat.Component_): void;
        handleNetherPortal(): void;
        getTeamId(): string;
        canBeRiddenUnderFluidType(arg0: Internal.FluidType_, arg1: Internal.Entity_): boolean;
        wthit_getTypeName(): net.minecraft.network.chat.Component;
        setStingerCount(arg0: number): void;
        getMaxHeadYRot(): number;
        getBoundingBoxForPose(arg0: Internal.Pose_): Internal.AABB;
        isCustomNameVisible(): boolean;
        isSupportedBy(arg0: BlockPos_): boolean;
        getPistonPushReaction(): Internal.PushReaction;
        shouldRiderSit(): boolean;
        handler$dlf000$spectrum$checkForTotemPendant(source: DamageSource_, cir: Internal.CallbackInfoReturnable_<any>): void;
        lookAt(arg0: Internal.EntityAnchorArgument$Anchor_, arg1: Vec3d_): void;
        hurtCurrentlyUsedShield(arg0: number): void;
        triggerItemUseEffects(arg0: Internal.ItemStack_, arg1: number): void;
        getLootTableSeed(): number;
        isInFluidType(arg0: Internal.FluidType_): boolean;
        getFluidMotionScale(arg0: Internal.FluidType_): number;
        getMotionX(): number;
        "onSyncedDataUpdated(java.util.List)"(arg0: Internal.List_<Internal.SynchedEntityData$DataValue<any>>): void;
        canBeLeashed(arg0: Internal.Player_): boolean;
        hasIndirectPassenger(arg0: Internal.Entity_): boolean;
        getEntityData(): Internal.SynchedEntityData;
        handleInsidePortal(arg0: BlockPos_): void;
        getPotionEffects(): Internal.EntityPotionEffectsJS;
        /**
         * @deprecated
        */
        jumpInLiquid(arg0: Internal.TagKey_<Internal.Fluid>): void;
        absMoveTo(arg0: number, arg1: number, arg2: number): void;
        onBelowWorld(): void;
        isOnRails(): boolean;
        getAttachedOrThrow<A>(type: Internal.AttachmentType_<A>): A;
        getStingerCount(): number;
        getFallSounds(): Internal.LivingEntity$Fallsounds;
        reapplyPosition(): void;
        getAttributeTotalValue(attribute: Internal.Attribute_): number;
        getDimensionChangingDelay(): number;
        setLivingEntityFlag(arg0: number, arg1: boolean): void;
        getWaterSlowDown(): number;
        createNavigation(arg0: Internal.Level_): Internal.PathNavigation;
        setYaw(arg0: number): void;
        getPickRadius(): number;
        isRemoved(): boolean;
        teleportToWithTicket(arg0: number, arg1: number, arg2: number): void;
        spawnAnim(): void;
        getJumpBoostPower(): number;
        fillCrashReportCategory(arg0: Internal.CrashReportCategory_): void;
        handler$cpe000$mna$jumpInLiquid(arg0: Internal.TagKey_<any>, arg1: Internal.CallbackInfo_): void;
        self(): Internal.Entity;
        refreshDimensions(): void;
        "spawnAtLocation(net.minecraft.world.level.ItemLike)"(arg0: Internal.ItemLike_): Internal.ItemEntity;
        "isHolding(net.minecraft.world.item.Item)"(arg0: Internal.Item_): boolean;
        "getAttributeValue(net.minecraft.world.entity.ai.attributes.Attribute)"(arg0: Internal.Attribute_): number;
        setShiftKeyDown(arg0: boolean): void;
        getEyePosition(arg0: number): Vec3d;
        getPassengers(): Internal.EntityArrayList;
        getRiddenInput(arg0: Internal.Player_, arg1: Vec3d_): Vec3d;
        calculateUpVector(arg0: number, arg1: number): Vec3d;
        handler$dlf000$spectrum$TriggerArmorWithHitEffect(source: DamageSource_, amount: number, cir: Internal.CallbackInfoReturnable_<any>): void;
        spawnSprintParticle(): void;
        getMaxHeightFluidType(): Internal.FluidType;
        getZ(): number;
        checkSupportingBlock(arg0: boolean, arg1: Vec3d_): void;
        dropEquipment(): void;
        shouldRemoveSoulSpeed(arg0: Internal.BlockState_): boolean;
        teleportTo(arg0: number, arg1: number, arg2: number): void;
        getAttributeBaseValue(arg0: Internal.Holder_<Internal.Attribute>): number;
        getServer(): Internal.MinecraftServer;
        getExperienceReward(): number;
        getFirstPassenger(): Internal.Entity;
        heal(arg0: number): void;
        getSpawnType(): Internal.MobSpawnType;
        setLastHurtMob(arg0: Internal.Entity_): void;
        getRelativePortalPosition(arg0: Internal.Direction$Axis_, arg1: Internal.BlockUtil$FoundRectangle_): Vec3d;
        setLastHurtByMob(arg0: Internal.LivingEntity_): void;
        interact(arg0: Internal.Player_, arg1: Internal.InteractionHand_): InteractionResult;
        removePassenger(arg0: Internal.Entity_): void;
        getDismountLocationForPassenger(arg0: Internal.LivingEntity_): Vec3d;
        invokeSetLevel(arg0: Internal.Level_): void;
        checkSlowFallDistance(): void;
        tickDeath(): void;
        updateInWaterStateAndDoWaterCurrentPushing(): void;
        canStandOnFluid(arg0: Internal.FluidState_): boolean;
        addPassenger(arg0: Internal.Entity_): void;
        setFabricBalmData(arg0: Internal.CompoundTag_): void;
        touchingUnloadedChunk(): boolean;
        modifyAttribute(attribute: Internal.Attribute_, identifier: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        getLookAngle(): Vec3d;
        handler$cpe000$mna$canStandOnFluid(arg0: Internal.FluidState_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        getAmbientSoundInterval(): number;
        setArrowCount(arg0: number): void;
        getPermissionLevel(): number;
        getMotionZ(): number;
        nextStep(): number;
        isPersistenceRequired(): boolean;
        isInvisible(): boolean;
        is(arg0: Internal.Entity_): boolean;
        getBedOrientation(): Internal.Direction;
        /**
         * @deprecated
        */
        getBlockStateOnLegacy(): Internal.BlockState;
        ejectPassengers(): void;
        removeEffect(arg0: Internal.MobEffect_): boolean;
        getProfile(): Internal.GameProfile;
        isDeadOrDying(): boolean;
        setHeadArmorItem(item: Internal.ItemStack_): void;
        static setViewScale(arg0: number): void;
        take(arg0: Internal.Entity_, arg1: number): void;
        setLevelCallback(arg0: Internal.EntityInLevelCallback_): void;
        getLookControl(): Internal.LookControl;
        pushEntities(): void;
        playSound(arg0: Internal.SoundEvent_, arg1: number, arg2: number): void;
        "areCapsCompatible(net.minecraftforge.common.capabilities.CapabilityDispatcher)"(arg0: Internal.CapabilityDispatcher_): boolean;
        canAttack(arg0: Internal.LivingEntity_): boolean;
        getLastHandItem(arg0: Internal.EquipmentSlot_): Internal.ItemStack;
        getOffHandItem(): Internal.ItemStack;
        startSeenByPlayer(arg0: Internal.ServerPlayer_): void;
        isOnScoreboardTeam(teamId: string): boolean;
        startUsingItem(arg0: Internal.InteractionHand_): void;
        position(): Vec3d;
        static getEquipmentSlotForItem(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getEquipment(slot: Internal.EquipmentSlot_): Internal.ItemStack;
        displayFireAnimation(): boolean;
        handler$deo000$eidolon$eidolonrepraised$isFallFlying(arg0: Internal.CallbackInfoReturnable_<any>): void;
        getRopeHoldPosition(arg0: number): Vec3d;
        copyPosition(arg0: Internal.Entity_): void;
        modifyExpressionValue$cpi000$mna$eytraValidOverride(arg0: boolean): boolean;
        onAddedToWorld(): void;
        "hasPassenger(net.minecraft.world.entity.Entity)"(arg0: Internal.Entity_): boolean;
        isCrouching(): boolean;
        "getAttributeBaseValue(net.minecraft.world.entity.ai.attributes.Attribute)"(attribute: Internal.Attribute_): number;
        onLeaveCombat(): void;
        handler$cpe000$mna$isAffectedByFluids(arg0: Internal.CallbackInfoReturnable_<any>): void;
        setY(y: number): void;
        getAttributeValue(arg0: Internal.Attribute_): number;
        getFeetBlockState(): Internal.BlockState;
        "breakItem(net.minecraft.world.item.ItemStack)"(arg0: Internal.ItemStack_): void;
        isWithinRestriction(): boolean;
        changeDimension(arg0: Internal.ServerLevel_, arg1: Internal.ITeleporter_): Internal.Entity;
        isHorizontalCollisionMinor(arg0: Vec3d_): boolean;
        positionRider(arg0: Internal.Entity_): void;
        baseTick(): void;
        broadcastToPlayer(arg0: Internal.ServerPlayer_): boolean;
        modify$zbj001$additionalentityattributes$additionalEntityAttributes$modifyExperience(originalXP: number): number;
        setSharedFlag(arg0: number, arg1: boolean): void;
        getSleepingPos(): Internal.Optional<BlockPos>;
        getEyeHeightAccess(arg0: Internal.Pose_, arg1: Internal.EntityDimensions_): number;
        damageHeldItem(): void;
        getCustomName(): net.minecraft.network.chat.Component;
        getClass(): typeof any;
        "self()"(): Internal.Entity;
        isVisuallySwimming(): boolean;
        getMaxAirSupply(): number;
        canTrample(arg0: Internal.BlockState_, arg1: BlockPos_, arg2: number): boolean;
        wrapOperation$zoc000$supplementaries$onTravel(instance: Internal.LivingEntity_, state: Internal.FluidState_, original: Internal.Operation_<any>): boolean;
        blockUsingShield(arg0: Internal.LivingEntity_): void;
        processFlappingMovement(): void;
        setItemInHand(arg0: Internal.InteractionHand_, arg1: Internal.ItemStack_): void;
        setMaxHealth(hp: number): void;
        getFacing(): Internal.Direction;
        onCrystalDestroyed(arg0: Internal.EndCrystal_, arg1: BlockPos_, arg2: DamageSource_): void;
        modify$zbj000$additionalentityattributes$additionalEntityAttributes$waterSpeed(original: number): number;
        isPassengerOfSameVehicle(arg0: Internal.Entity_): boolean;
        getBoundingBoxForCulling(): Internal.AABB;
        getTarget(): Internal.LivingEntity;
        static collideBoundingBox(entity: Internal.Entity_, movement: Vec3d_, entityBoundingBox: Internal.AABB_, world: Internal.Level_, collisions: Internal.List_<any>): Vec3d;
        restrictTo(arg0: BlockPos_, arg1: number): void;
        trackingPosition(): Vec3d;
        getNameTagOffsetY(): number;
        isInvulnerable(): boolean;
        isInLava(): boolean;
        isInWater(): boolean;
        awardKillScore(arg0: Internal.Entity_, arg1: number, arg2: DamageSource_): void;
        /**
         * @deprecated
        */
        finalizeSpawn(arg0: Internal.ServerLevelAccessor_, arg1: Internal.DifficultyInstance_, arg2: Internal.MobSpawnType_, arg3: Internal.SpawnGroupData_, arg4: Internal.CompoundTag_): Internal.SpawnGroupData;
        unsetRemoved(): void;
        getPickupReach(): Vec3i;
        swing(arg0: Internal.InteractionHand_): void;
        hasEffect(arg0: Internal.MobEffect_): boolean;
        getHeldItem(hand: Internal.InteractionHand_): Internal.ItemStack;
        /**
         * @deprecated
        */
        fixupDimensions(): void;
        getRootVehicle(): Internal.Entity;
        onPathfindingDone(): void;
        save(arg0: Internal.CompoundTag_): boolean;
        getLocalBoundsForPose(arg0: Internal.Pose_): Internal.AABB;
        isNoGravity(): boolean;
        curePotionEffects(arg0: Internal.ItemStack_): boolean;
        onItemPickup(arg0: Internal.ItemEntity_): void;
        handler$dhc000$reborncore$onApplyArmorToDamage(source: DamageSource_, amount: number, cir: Internal.CallbackInfoReturnable_<any>): void;
        populateDefaultEquipmentSlots(arg0: Internal.RandomSource_, arg1: Internal.DifficultyInstance_): void;
        completeUsingItem(): void;
        isImmobile(): boolean;
        updateSwimming(): void;
        isHolding(arg0: Internal.Predicate_<Internal.ItemStack>): boolean;
        getSpeed(): number;
        abstract getCachedFeetBlockState(): Internal.BlockState;
        shouldInformAdmins(): boolean;
        canFluidExtinguish(arg0: Internal.FluidType_): boolean;
        rideTick(): void;
        wait(): void;
        dsurround_setPotionSwirlColor(color: number): void;
        getUuid(): Internal.UUID;
        setOffHandItem(item: Internal.ItemStack_): void;
        spawn(): void;
        setNoAi(arg0: boolean): void;
        handler$dke000$spectrum$isSubmergedIn(fluidTag: Internal.TagKey_<any>, cir: Internal.CallbackInfoReturnable_<any>): void;
        teleportTo(arg0: Internal.ServerLevel_, arg1: number, arg2: number, arg3: number, arg4: Internal.Set_<Internal.RelativeMovement>, arg5: number, arg6: number): boolean;
        fabric_writeAttachmentsToNbt(nbt: Internal.CompoundTag_): void;
        shouldShowName(): boolean;
        markHurt(): void;
        getArmorSlots(): Internal.Iterable<Internal.ItemStack>;
        canPickUpLoot(): boolean;
        kill(): void;
        onEnterCombat(): void;
        updateNavigationRegistration(): void;
        playSwimSound(arg0: number): void;
        animateHurt(arg0: number): void;
        syncComponent(key: Internal.ComponentKey_<any>, packetWriter: Internal.ComponentPacketWriter_): void;
        modifyReturnValue$zbi000$additionalentityattributes$getMaxAir(original: number): number;
        static resetForwardDirectionOfRelativePortalPosition(arg0: Vec3d_): Vec3d;
        brainProvider(): Internal.Brain$Provider<any>;
        getJumpPower(): number;
        setDragonFight(arg0: Internal.EndDragonFight_): void;
        registerGoals(): void;
        hasRestriction(): boolean;
        getHeadArmorItem(): Internal.ItemStack;
        deserializeNBT(arg0: Internal.Tag_): void;
        positionRider(arg0: Internal.Entity_, arg1: Internal.Entity$MoveFunction_): void;
        redirect$fab000$moonlight$fixSpawnAnimX(instance: Internal.Mob_, v: number): number;
        removeEffectParticles(): void;
        revive(): void;
        getBbWidth(): number;
        isEyeInFluidType(arg0: Internal.FluidType_): boolean;
        addDeltaMovement(arg0: Vec3d_): void;
        localvar$egc000$zeldamod$inject3(arg0: number): number;
        getHurtSound(arg0: DamageSource_): Internal.SoundEvent;
        canDrownInFluidType(arg0: Internal.FluidType_): boolean;
        "getName()"(): net.minecraft.network.chat.Component;
        mirror(arg0: Internal.Mirror_): number;
        canUpdate(): boolean;
        knockback(arg0: number, arg1: number, arg2: number): void;
        getTypeName(): net.minecraft.network.chat.Component;
        getTicksRequiredToFreeze(): number;
        getLatencyPos(arg0: number, arg1: number): number[];
        shouldDespawnInPeaceful(): boolean;
        getVisibilityPercent(arg0: Internal.Entity_): number;
        getMaxSpawnClusterSize(): number;
        doAutoAttackOnTouch(arg0: Internal.LivingEntity_): void;
        reallyHurt(arg0: DamageSource_, arg1: number): boolean;
        getUsername(): string;
        getPrimaryStepSoundBlockPos(arg0: BlockPos_): BlockPos;
        move(arg0: Internal.MoverType_, arg1: Vec3d_): void;
        lithiumOnBlockCacheSet(newState: Internal.BlockState_): void;
        onRemovedFromWorld(): void;
        getCapability<T>(arg0: Internal.Capability_<T>): Internal.LazyOptional<T>;
        isPickable(): boolean;
        handler$dke000$spectrum$isSubmergedInWater(cir: Internal.CallbackInfoReturnable_<any>): void;
        isInFluidType(predicate: Internal.BiPredicate_<any, any>, forAllTypes: boolean): boolean;
        setYHeadRot(arg0: number): void;
        setJumping(arg0: boolean): void;
        getPickResult(): Internal.ItemStack;
        "getMainHandItem()"(): Internal.ItemStack;
        getAbsorptionAmount(): number;
        findClosestNode(): number;
        getRandomY(): number;
        onEffectRemoved(arg0: Internal.MobEffectInstance_): void;
        getDisplayName(): net.minecraft.network.chat.Component;
        getMobType(): Internal.MobType;
        travel(arg0: Vec3d_): void;
        maxhealthfix$setRestorePoint(arg0: number): void;
        getItemInHand(arg0: Internal.InteractionHand_): Internal.ItemStack;
        spectrum$isActuallyTouchingWater(): boolean;
        getFightOrigin(): BlockPos;
        shouldBeSaved(): boolean;
        getFluidTypeHeight(arg0: Internal.FluidType_): number;
        fabric_hasPersistentAttachments(): boolean;
        handler$dlf000$spectrum$applyDisarmingEnchantment(source: DamageSource_, amount: number, cir: Internal.CallbackInfoReturnable_<any>): void;
        "areCapsCompatible(net.minecraftforge.common.capabilities.CapabilityProvider)"(arg0: Internal.CapabilityProvider_<Internal.Entity>): boolean;
        hurtHelmet(arg0: DamageSource_, arg1: number): void;
        removeTag(arg0: string): boolean;
        isHoldingInAnyHand(i: Internal.Ingredient_): boolean;
        /**
         * @deprecated
        */
        getFluidHeight(arg0: Internal.TagKey_<Internal.Fluid>): number;
        canSpawnSoulSpeedParticle(): boolean;
        notifyAll(): void;
        aiStep(): void;
        getPassengersRidingOffset(): number;
        setAttributeBaseValue(attribute: Internal.Attribute_, value: number): void;
        "isInFluidType(java.util.function.BiPredicate)"(arg0: Internal.BiPredicate_<Internal.FluidType, number>): boolean;
        distanceToEntitySqr(arg0: Internal.Entity_): number;
        isFrame(): boolean;
        broadcastBreakEvent(arg0: Internal.InteractionHand_): void;
        setLegsArmorItem(item: Internal.ItemStack_): void;
        discard(): void;
        sendSystemMessage(arg0: net.minecraft.network.chat.Component_): void;
        acceptsSuccess(): boolean;
        setNoGravity(arg0: boolean): void;
        getUseItemRemainingTicks(): number;
        getIndirectPassengers(): Internal.Iterable<any>;
        attackable(): boolean;
        createCommandSourceStack(): Internal.CommandSourceStack;
        getNavigation(): Internal.PathNavigation;
        isControlledByLocalInstance(): boolean;
        isMonster(): boolean;
        getLastClimbablePos(): Internal.Optional<BlockPos>;
        getEatingSound(arg0: Internal.ItemStack_): Internal.SoundEvent;
        setId(arg0: number): void;
        getPerceivedTargetDistanceSquareForMeleeAttack(arg0: Internal.LivingEntity_): number;
        getHorizontalFacing(): Internal.Direction;
        onSyncedDataUpdated(arg0: Internal.List_<Internal.SynchedEntityData$DataValue<any>>): void;
        getType(): string;
        isDamageSourceBlocked(arg0: DamageSource_): boolean;
        getLightProbePosition(arg0: number): Vec3d;
        getActiveEffectsMap(): Internal.Map<Internal.MobEffect, Internal.MobEffectInstance>;
        onEquipItem(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_): void;
        checkDespawn(): void;
        lookAt(arg0: Internal.Entity_, arg1: number, arg2: number): void;
        setHeldItem(hand: Internal.InteractionHand_, item: Internal.ItemStack_): void;
        equipItemIfPossible(arg0: Internal.ItemStack_): Internal.ItemStack;
        playHurtSound(arg0: DamageSource_): void;
        onSyncedDataUpdated(arg0: Internal.EntityDataAccessor_<any>): void;
        isActuallyReallyBlocking(): boolean;
        lerpHeadTo(arg0: number, arg1: number): void;
        getHeadPartYOffset(arg0: number, arg1: number[], arg2: number[]): number;
        canDisableShield(): boolean;
        doesEmitEquipEvent(arg0: Internal.EquipmentSlot_): boolean;
        setMotionX(x: number): void;
        getHandSlots(): Internal.Iterable<Internal.ItemStack>;
        getMovementEmission(): Internal.Entity$MovementEmission;
        distanceToEntity(arg0: Internal.Entity_): number;
        wait(arg0: number, arg1: number): void;
        getTeamColor(): number;
        lithiumSetClimbingMobCachingSectionUpdateBehavior(listenForCachedBlockChanges: boolean): void;
        setNbt(nbt: Internal.CompoundTag_): void;
        "isInFluidType(net.minecraftforge.fluids.FluidType)"(arg0: Internal.FluidType_): boolean;
        checkSpawnObstruction(arg0: Internal.LevelReader_): boolean;
        extinguish(): void;
        getRestrictRadius(): number;
        moveTo(arg0: Vec3d_): void;
        isColliding(arg0: BlockPos_, arg1: Internal.BlockState_): boolean;
        updateInWaterStateAndDoFluidPushing(): boolean;
        "swing(net.minecraft.world.InteractionHand)"(arg0: Internal.InteractionHand_): void;
        dsurround_setEffectInfo(info: Internal.EntityEffectInfo_): void;
        getRegisteredNavigation(): Internal.PathNavigation;
        tickEffects(): void;
        isInvertedHealAndHarm(): boolean;
        canHoldItem(arg0: Internal.ItemStack_): boolean;
        killedEntity(arg0: Internal.ServerLevel_, arg1: Internal.LivingEntity_): boolean;
        getAttachedOrElse<A>(type: Internal.AttachmentType_<A>, defaultValue: A): A;
        handler$dlf000$spectrum$applyInexorableEffects(ci: Internal.CallbackInfo_): void;
        getClassification(arg0: boolean): Internal.MobCategory;
        isFreezing(): boolean;
        runCommand(command: string): number;
        setGuaranteedDrop(arg0: Internal.EquipmentSlot_): void;
        setSharedFlagOnFire(arg0: boolean): void;
        set defaultMovementSpeedMultiplier(speed: number)
        get suppressingBounce(): boolean
        set target(arg0: Internal.LivingEntity_)
        get onFire(): boolean
        get deathSound(): Internal.SoundEvent
        get positionCodec(): Internal.VecDeltaCodec
        set maxUpStep(arg0: number)
        get fallFlyingTicks(): number
        set xxa(arg0: number)
        set delayedLeashHolderId(arg0: number)
        get shiftKeyDown(): boolean
        set UUID(arg0: Internal.UUID_)
        set motionZ(z: number)
        get blockY(): number
        get spectator(): boolean
        get alwaysExperienceDropper(): boolean
        set mainHandItem(item: Internal.ItemStack_)
        get persistentData(): Internal.CompoundTag
        get health(): number
        get maxHealth(): number
        get registeredToWorld(): boolean
        set aggressive(arg0: boolean)
        set removed(arg0: Internal.Entity$RemovalReason_)
        get inWaterRainOrBubble(): boolean
        get removalReason(): Internal.Entity$RemovalReason
        set level(arg0: Internal.Level_)
        set boundingBox(arg0: Internal.AABB_)
        get ambientCreature(): boolean
        set zza(arg0: number)
        get block(): Internal.BlockContainerJS
        get name(): net.minecraft.network.chat.Component
        get controlledVehicle(): Internal.Entity
        get armorValue(): number
        get killCredit(): Internal.LivingEntity
        get componentContainer(): Internal.ComponentContainer
        get defaultLootTable(): ResourceLocation
        get autoSpinAttack(): boolean
        get remainingFireTicks(): number
        get maxFallDistance(): number
        get ticksFrozen(): number
        get voicePitch(): number
        set statusMessage(message: net.minecraft.network.chat.Component_)
        set sleepingPos(arg0: BlockPos_)
        get descending(): boolean
        get headRotSpeed(): number
        get YHeadRot(): number
        set absorptionAmount(arg0: number)
        get sunBurnTick(): boolean
        get affectedByFluids(): boolean
        get ambientSound(): Internal.SoundEvent
        set deltaMovement(arg0: Vec3d_)
        get baby(): boolean
        get glowing(): boolean
        get leashOffset(): Vec3d
        get attackable(): boolean
        get underWater(): boolean
        get swimHighSpeedSplashSound(): Internal.SoundEvent
        get leashHolder(): Internal.Entity
        get sensing(): Internal.Sensing
        get legsArmorItem(): Internal.ItemStack
        get selfAndPassengers(): Internal.Stream<any>
        get deltaMovement(): Vec3d
        set secondsOnFire(arg0: number)
        get "displayName()"(): net.minecraft.network.chat.Component
        get lootTable(): ResourceLocation
        get ticksUsingItem(): number
        get arrowCount(): number
        get moveControl(): Internal.MoveControl
        get defaultMovementSpeed(): number
        get peacefulCreature(): boolean
        set onGround(arg0: boolean)
        get firstTick(): boolean
        get lastHurtByMobTimestamp(): number
        get vehicle(): Internal.Entity
        get effectiveAi(): boolean
        set spawnCancelled(arg0: boolean)
        get stringUuid(): string
        set swimming(arg0: boolean)
        get mainArm(): Internal.HumanoidArm
        get rotationVector(): Internal.Vec2
        get hurtDir(): number
        get sprinting(): boolean
        get motionY(): number
        get offhandItem(): Internal.ItemStack
        get lastHurtMob(): Internal.LivingEntity
        get addedToWorld(): boolean
        get soundSource(): Internal.SoundSource
        get lastDamageSource(): DamageSource
        set noActionTime(arg0: number)
        set movementSpeedAddition(speed: number)
        get pose(): Internal.Pose
        get phaseManager(): Internal.EnderDragonPhaseManager
        get restrictCenter(): BlockPos
        get leftHanded(): boolean
        set z(z: number)
        get y(): number
        get blocking(): boolean
        /**
         * @deprecated
        */
        get pushedByFluid(): boolean
        get armorCoverPercentage(): number
        get airSupply(): number
        get player(): boolean
        get animal(): boolean
        get motionDirection(): Internal.Direction
        get fabricBalmData(): Internal.CompoundTag
        get commandSenderWorld(): Internal.Level
        get totalMovementSpeed(): number
        get fireImmuneTicks(): number
        get attributes(): Internal.AttributeMap
        get spawnCancelled(): boolean
        get swimming(): boolean
        set sprinting(arg0: boolean)
        set x(x: number)
        get portalWaitTime(): number
        get blockStateOn(): Internal.BlockState
        get fluidJumpThreshold(): number
        set airSupply(arg0: number)
        get onPos(): BlockPos
        get undead(): boolean
        get blockPosBelowThatAffectsMyMovement(): BlockPos
        get stepHeight(): number
        set registeredToWorld(navigation: Internal.PathNavigation_)
        get sleeping(): boolean
        get dismountPoses(): Internal.ImmutableList<Internal.Pose>
        get lastHurtMobTimestamp(): number
        set remainingFireTicks(arg0: number)
        /**
         * @deprecated
        */
        get onPosLegacy(): BlockPos
        set pos(arg0: Vec3d_)
        set canPickUpLoot(arg0: boolean)
        get mainHandItem(): Internal.ItemStack
        set silent(arg0: boolean)
        set leftHanded(arg0: boolean)
        get swimSplashSound(): Internal.SoundEvent
        get activeEffects(): Internal.Collection<Internal.MobEffectInstance>
        get onPortalCooldown(): boolean
        set pitch(arg0: number)
        get multipartEntity(): boolean
        get parts(): Internal.PartEntity<any>[]
        get usingItem(): boolean
        get alwaysTicking(): boolean
        get forgePersistentData(): Internal.CompoundTag
        set invulnerable(arg0: boolean)
        get inFluidType(): boolean
        set glowing(arg0: boolean)
        get alive(): boolean
        get bbHeight(): number
        get tags(): Internal.Set<string>
        get lastAttacker(): Internal.LivingEntity
        get subEntities(): Internal.EnderDragonPart[]
        get percentFrozen(): number
        set portalCooldown(arg0: number)
        set position(block: Internal.BlockContainerJS_)
        get soundVolume(): number
        get leashed(): boolean
        set pose(arg0: Internal.Pose_)
        get reachDistance(): number
        get entityType(): Internal.EntityType<any>
        get waterCreature(): boolean
        set lastHurtByPlayer(arg0: Internal.Player_)
        get "server()"(): Internal.MinecraftServer
        get pushable(): boolean
        set YBodyRot(arg0: number)
        set motionY(y: number)
        set fightOrigin(arg0: BlockPos_)
        set chestArmorItem(item: Internal.ItemStack_)
        get passenger(): boolean
        get sensitiveToWater(): boolean
        get jumpControl(): Internal.JumpControl
        get flapping(): boolean
        get feetArmorItem(): Internal.ItemStack
        get viewScale(): number
        get visualRotationYInDegrees(): number
        set speed(arg0: number)
        get discrete(): boolean
        get level(): Internal.Level
        get combatTracker(): Internal.CombatTracker
        get noAi(): boolean
        get chestArmorItem(): Internal.ItemStack
        get blockJumpFactor(): number
        get dragonFight(): Internal.EndDragonFight
        get fullyFrozen(): boolean
        get inWall(): boolean
        get meleeAttackReferencePosition(): Vec3d
        get allSlots(): Internal.Iterable<Internal.ItemStack>
        get scale(): number
        get suppressingSlidingDownLadder(): boolean
        get blockZ(): number
        get silent(): boolean
        get pitch(): number
        get random(): Internal.RandomSource
        get passengersAndSelf(): Internal.Stream<any>
        get noActionTime(): number
        get visuallyCrawling(): boolean
        get aggressive(): boolean
        set yya(arg0: number)
        set baby(arg0: boolean)
        get lastHurtByMob(): Internal.LivingEntity
        get inWaterOrBubble(): boolean
        get portalCooldown(): number
        get item(): Internal.ItemStack
        get ignoringBlockTriggers(): boolean
        get inRain(): boolean
        get eyeInFluidType(): Internal.FluidType
        get steppingCarefully(): boolean
        get blockX(): number
        /**
         * @deprecated
        */
        get lightLevelDependentMagicValue(): number
        get fallFlying(): boolean
        get encodeId(): string
        get maxHeadXRot(): number
        get nbt(): Internal.CompoundTag
        set invisible(arg0: boolean)
        set totalMovementSpeedMultiplier(speed: number)
        set health(arg0: number)
        get blockSpeedFactor(): number
        get eyePosition(): Vec3d
        get eyeHeight(): number
        set discardFriction(arg0: boolean)
        get yaw(): number
        get usedItemHand(): Internal.InteractionHand
        set defaultMovementSpeed(speed: number)
        get brain(): Internal.Brain<any>
        set customNameVisible(arg0: boolean)
        get controllingPassenger(): Internal.LivingEntity
        get scriptType(): Internal.ScriptType
        get forward(): Vec3d
        set feetArmorItem(item: Internal.ItemStack_)
        get id(): number
        get recipientsForComponentSync(): Internal.Iterable<any>
        get eyeY(): number
        get boundingBox(): Internal.AABB
        get inWaterOrRain(): boolean
        get swimSound(): Internal.SoundEvent
        get affectedByPotions(): boolean
        get addEntityPacket(): Internal.Packet<Internal.ClientGamePacketListener>
        get team(): Internal.Team
        set ticksFrozen(arg0: number)
        get useItem(): Internal.ItemStack
        get myRidingOffset(): number
        get flyingSpeed(): number
        get living(): boolean
        get x(): number
        get vehicle(): boolean
        set isInPowderSnow(arg0: boolean)
        set customName(arg0: net.minecraft.network.chat.Component_)
        get teamId(): string
        set stingerCount(arg0: number)
        get maxHeadYRot(): number
        get customNameVisible(): boolean
        get pistonPushReaction(): Internal.PushReaction
        get lootTableSeed(): number
        get motionX(): number
        get entityData(): Internal.SynchedEntityData
        get potionEffects(): Internal.EntityPotionEffectsJS
        get onRails(): boolean
        get stingerCount(): number
        get fallSounds(): Internal.LivingEntity$Fallsounds
        get dimensionChangingDelay(): number
        get waterSlowDown(): number
        set yaw(arg0: number)
        get pickRadius(): number
        get removed(): boolean
        get jumpBoostPower(): number
        set shiftKeyDown(arg0: boolean)
        get passengers(): Internal.EntityArrayList
        get maxHeightFluidType(): Internal.FluidType
        get z(): number
        get server(): Internal.MinecraftServer
        get experienceReward(): number
        get firstPassenger(): Internal.Entity
        get spawnType(): Internal.MobSpawnType
        set lastHurtMob(arg0: Internal.Entity_)
        set lastHurtByMob(arg0: Internal.LivingEntity_)
        set fabricBalmData(arg0: Internal.CompoundTag_)
        get lookAngle(): Vec3d
        get ambientSoundInterval(): number
        set arrowCount(arg0: number)
        get permissionLevel(): number
        get motionZ(): number
        get persistenceRequired(): boolean
        get invisible(): boolean
        get bedOrientation(): Internal.Direction
        /**
         * @deprecated
        */
        get blockStateOnLegacy(): Internal.BlockState
        get profile(): Internal.GameProfile
        get deadOrDying(): boolean
        set headArmorItem(item: Internal.ItemStack_)
        set viewScale(arg0: number)
        set levelCallback(arg0: Internal.EntityInLevelCallback_)
        get lookControl(): Internal.LookControl
        get offHandItem(): Internal.ItemStack
        get crouching(): boolean
        set y(y: number)
        get feetBlockState(): Internal.BlockState
        get withinRestriction(): boolean
        get sleepingPos(): Internal.Optional<BlockPos>
        get customName(): net.minecraft.network.chat.Component
        get class(): typeof any
        get visuallySwimming(): boolean
        get maxAirSupply(): number
        set maxHealth(hp: number)
        get facing(): Internal.Direction
        get boundingBoxForCulling(): Internal.AABB
        get target(): Internal.LivingEntity
        get nameTagOffsetY(): number
        get invulnerable(): boolean
        get inLava(): boolean
        get inWater(): boolean
        get pickupReach(): Vec3i
        get rootVehicle(): Internal.Entity
        get noGravity(): boolean
        get immobile(): boolean
        get speed(): number
        get cachedFeetBlockState(): Internal.BlockState
        get uuid(): Internal.UUID
        set offHandItem(item: Internal.ItemStack_)
        set noAi(arg0: boolean)
        get armorSlots(): Internal.Iterable<Internal.ItemStack>
        get jumpPower(): number
        set dragonFight(arg0: Internal.EndDragonFight_)
        get headArmorItem(): Internal.ItemStack
        get bbWidth(): number
        get "name()"(): net.minecraft.network.chat.Component
        get typeName(): net.minecraft.network.chat.Component
        get ticksRequiredToFreeze(): number
        get maxSpawnClusterSize(): number
        get username(): string
        get pickable(): boolean
        set YHeadRot(arg0: number)
        set jumping(arg0: boolean)
        get pickResult(): Internal.ItemStack
        get "mainHandItem()"(): Internal.ItemStack
        get absorptionAmount(): number
        get randomY(): number
        get displayName(): net.minecraft.network.chat.Component
        get mobType(): Internal.MobType
        get fightOrigin(): BlockPos
        get passengersRidingOffset(): number
        get frame(): boolean
        set legsArmorItem(item: Internal.ItemStack_)
        set noGravity(arg0: boolean)
        get useItemRemainingTicks(): number
        get indirectPassengers(): Internal.Iterable<any>
        get navigation(): Internal.PathNavigation
        get controlledByLocalInstance(): boolean
        get monster(): boolean
        get lastClimbablePos(): Internal.Optional<BlockPos>
        set id(arg0: number)
        get horizontalFacing(): Internal.Direction
        get type(): string
        get activeEffectsMap(): Internal.Map<Internal.MobEffect, Internal.MobEffectInstance>
        get actuallyReallyBlocking(): boolean
        set motionX(x: number)
        get handSlots(): Internal.Iterable<Internal.ItemStack>
        get movementEmission(): Internal.Entity$MovementEmission
        get teamColor(): number
        set nbt(nbt: Internal.CompoundTag_)
        get restrictRadius(): number
        get registeredNavigation(): Internal.PathNavigation
        get invertedHealAndHarm(): boolean
        get freezing(): boolean
        set guaranteedDrop(arg0: Internal.EquipmentSlot_)
        set sharedFlagOnFire(arg0: boolean)
        oFlapTime: number;
        nearestCrystal: Internal.EndCrystal;
        flapTime: number;
        static readonly DATA_PHASE: Internal.EntityDataAccessor<number>;
        yRotA: number;
        readonly head: Internal.EnderDragonPart;
        dragonDeathTime: number;
        readonly positions: number[][];
        posPointer: number;
        inWall: boolean;
    }
    type EnderDragon_ = EnderDragon;
    abstract class KeyFrameData {
        constructor(arg0: number)
        getClass(): typeof any;
        getStartTick(): number;
        hashCode(): number;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
        get startTick(): number
    }
    type KeyFrameData_ = KeyFrameData;
    class AzureDikeRingItem extends Internal.AzureDikeTrinketItem {
        constructor(settings: Internal.Item$Properties_)
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        allowContinuingBlockBreaking(player: Internal.Player_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        moonlight$addAdditionalBehavior(placementOverride: Internal.AdditionalItemPlacement_): void;
        isFireResistant(): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        static "equipItem(net.minecraft.world.entity.LivingEntity,net.minecraft.world.item.ItemStack)"(user: Internal.LivingEntity_, stack: Internal.ItemStack_): boolean;
        appendHoverText(stack: Internal.ItemStack_, world: Internal.Level_, tooltip: Internal.List_<net.minecraft.network.chat.Component>, context: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        moonlight$getClientAnimationExtension(): any;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        fabric_setCustomDamageHandler(handler: Internal.CustomDamageHandler_): void;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        onBreak(stack: Internal.ItemStack_, slot: dev.emi.trinkets.api.SlotReference_, entity: Internal.LivingEntity_): void;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getBarColor(arg0: Internal.ItemStack_): number;
        getOrCreateDescriptionId(): string;
        getItem(): Internal.Item;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): InteractionResult;
        getDropRule(stack: Internal.ItemStack_, slot: dev.emi.trinkets.api.SlotReference_, entity: Internal.LivingEntity_): Internal.TrinketEnums$DropRule;
        moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        moonlight$setClientAnimationExtension(obj: any): void;
        getUnlockIdentifier(): ResourceLocation;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        getModifiers(stack: Internal.ItemStack_, slot: dev.emi.trinkets.api.SlotReference_, entity: Internal.LivingEntity_, uuid: Internal.UUID_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        handler$dfl000$revelationary$getCloakedName(stack: Internal.ItemStack_, callbackInfoReturnable: Internal.CallbackInfoReturnable_<any>): void;
        isEdible(): boolean;
        getAttributeModifiers(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(world: Internal.Level_, user: Internal.Player_, hand: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        canEquipMoreThanOne(): boolean;
        tick(stack: Internal.ItemStack_, slot: dev.emi.trinkets.api.SlotReference_, entity: Internal.LivingEntity_): void;
        maxAzureDike(stack: Internal.ItemStack_): number;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        cardinal_createComponents(stack: Internal.ItemStack_): Internal.ComponentContainer;
        getEquipSound(stack: Internal.ItemStack_, slot: dev.emi.trinkets.api.SlotReference_, entity: Internal.LivingEntity_): Internal.SoundEvent;
        isFoil(arg0: Internal.ItemStack_): boolean;
        "getAttributeModifiers(net.minecraft.world.entity.EquipmentSlot,net.minecraft.world.item.ItemStack)"(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        fabric_getEquipmentSlotProvider(): Internal.EquipmentSlotProvider;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        azureDikeRechargeBonusTicks(stack: Internal.ItemStack_): number;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        canUnequip(stack: Internal.ItemStack_, slot: dev.emi.trinkets.api.SlotReference_, entity: Internal.LivingEntity_): boolean;
        static hasEquipped(entity: any, item: Internal.Item_): boolean;
        owo$tab(): number;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        static getFirstEquipped(entity: Internal.LivingEntity_, item: Internal.Item_): Internal.Optional<Internal.ItemStack>;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vector3f;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        "getAttributeModifiers(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.EquipmentSlot)"(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        allowNbtUpdateAnimation(player: Internal.Player_, hand: Internal.InteractionHand_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        fabric_getCachedItemVariant(): Internal.ItemVariant;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        fabric_getCustomDamageHandler(): Internal.CustomDamageHandler;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        static getPlayerPOVHitResult(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.ClipContext$Fluid_): Internal.BlockHitResult;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        canEquipFromUse(stack: Internal.ItemStack_, entity: Internal.LivingEntity_): boolean;
        equals(arg0: any): boolean;
        setRarity(arg0: Internal.Rarity_): void;
        "canEquip(net.minecraft.world.item.ItemStack,dev.emi.trinkets.api.SlotReference,net.minecraft.world.entity.LivingEntity)"(stack: Internal.ItemStack_, slot: dev.emi.trinkets.api.SlotReference_, entity: Internal.LivingEntity_): boolean;
        getRecipeRemainder(stack: Internal.ItemStack_): Internal.ItemStack;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        /**
         * @deprecated
        */
        onDestroyed(arg0: Internal.ItemEntity_): void;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        static "hasEquipped(java.lang.Object,net.minecraft.world.item.Item)"(entity: any, item: Internal.Item_): boolean;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        canBeHurtBy(arg0: DamageSource_): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        fabric_setEquipmentSlotProvider(equipmentSlotProvider: Internal.EquipmentSlotProvider_): void;
        getDescriptionId(): string;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        zeta$setHumanoidArmorModel(arg0: Internal.HumanoidArmorModelGetter_): void;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        static equipItem(user: Internal.Player_, stack: Internal.ItemStack_): boolean;
        static equipItem(user: Internal.LivingEntity_, stack: Internal.ItemStack_): boolean;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: DamageSource_): void;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        getDescription(): net.minecraft.network.chat.Component;
        owo$stackGenerator(): Internal.BiConsumer<any, any>;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        onEquip(stack: Internal.ItemStack_, slot: dev.emi.trinkets.api.SlotReference_, entity: Internal.LivingEntity_): void;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        useOn(arg0: Internal.UseOnContext_): InteractionResult;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        static hasEquipped(entity: Internal.LivingEntity_, item: Internal.Item_): boolean;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        handler$ebb000$connectormod$redirectIsPiglinCurrency(arg0: Internal.ItemStack_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        static "hasEquipped(net.minecraft.world.entity.LivingEntity,net.minecraft.world.item.Item)"(entity: Internal.LivingEntity_, item: Internal.Item_): boolean;
        setAttackDamage(attackDamage: number): void;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        toString(): string;
        /**
         * @deprecated
        */
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        modifyReturnValue$ffm000$quark$overrideOtherStackedOnMe(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_, arg3: Internal.Slot_, arg4: Internal.ClickAction_, arg5: Internal.Player_, arg6: Internal.SlotAccess_): boolean;
        getId(): string;
        handler$fbm000$moonlight$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        isSuitableFor(stack: Internal.ItemStack_, state: Internal.BlockState_): boolean;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        puzzleslib$setRenderProperties(arg0: any): void;
        static "equipItem(net.minecraft.world.entity.player.Player,net.minecraft.world.item.ItemStack)"(user: Internal.Player_, stack: Internal.ItemStack_): boolean;
        notify(): void;
        canEquip(stack: Internal.ItemStack_, slot: dev.emi.trinkets.api.SlotReference_, entity: Internal.LivingEntity_): boolean;
        recalculate(livingEntity: Internal.LivingEntity_): void;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        rechargeBonusAfterDamageTicks(stack: Internal.ItemStack_): number;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        zeta$setBlockEntityWithoutLevelRenderer(arg0: Internal.BlockEntityWithoutLevelRenderer_): void;
        handler$cog000$croptopia$overrideConstructor(arg0: Internal.Item$Properties_, arg1: Internal.CallbackInfo_): void;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        getEatingSound(): Internal.SoundEvent;
        owo$setGroup(group: Internal.CreativeModeTab_): void;
        puzzleslib$getRenderProperties(): any;
        canBeDepleted(): boolean;
        getDamage(arg0: Internal.ItemStack_): number;
        wait(arg0: number, arg1: number): void;
        onUnequip(stack: Internal.ItemStack_, slot: dev.emi.trinkets.api.SlotReference_, entity: Internal.LivingEntity_): void;
        getMod(): string;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        owo$group(): Internal.CreativeModeTab;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        "canEquip(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.EquipmentSlot,net.minecraft.world.entity.Entity)"(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        modifyReturnValue$ffm000$quark$overrideStackedOnOther(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_): boolean;
        get drinkingSound(): Internal.SoundEvent
        get fireResistant(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set maxDamage(arg0: number)
        get orCreateDescriptionId(): string
        get item(): Internal.Item
        get class(): typeof any
        get renderPropertiesInternal(): any
        get unlockIdentifier(): ResourceLocation
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        get edible(): boolean
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        set nameKey(arg0: string)
        get idLocation(): ResourceLocation
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
        set rarity(arg0: Internal.Rarity_)
        get complex(): boolean
        get descriptionId(): string
        get creativeTab(): string
        set burnTime(i: number)
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        set itemBuilder(b: Internal.ItemBuilder_)
        set attackDamage(attackDamage: number)
        /**
         * @deprecated
        */
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        /**
         * @deprecated
        */
        get maxStackSize(): number
        get eatingSound(): Internal.SoundEvent
        get mod(): string
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
    }
    type AzureDikeRingItem_ = AzureDikeRingItem;
    interface Delayed extends Internal.Comparable<Internal.Delayed> {
        abstract getDelay(arg0: Internal.TimeUnit_): number;
        abstract compareTo(arg0: Internal.Delayed_): number;
    }
    type Delayed_ = Delayed;
    interface MultiblockWriter {
        rotate(direction: Internal.Direction_): this;
        translate(offsetX: number, offsetY: number, offsetZ: number): this;
        rotate(): this;
        fill(ax: number, ay: number, az: number, bx: number, by: number, bz: number, predicate: Internal.BiPredicate_<Internal.BlockGetter, BlockPos>, state: Internal.BlockState_): this;
        ring(through: Internal.Direction$Axis_, x: number, y: number, z: number, state: Internal.BlockState_, holeState: Internal.BlockState_): this;
        abstract add(arg0: number, arg1: number, arg2: number, arg3: Internal.BiPredicate_<Internal.BlockGetter, BlockPos>, arg4: Internal.BlockState_): this;
        ringWithAir(through: Internal.Direction$Axis_, x: number, y: number, z: number, state: Internal.BlockState_): this;
        ringWithAir(through: Internal.Direction$Axis_, x: number, y: number, z: number, predicate: Internal.BiPredicate_<Internal.BlockGetter, BlockPos>, state: Internal.BlockState_): this;
        fill(ax: number, ay: number, az: number, bx: number, by: number, bz: number, state: Internal.BlockState_): this;
        ring(through: Internal.Direction$Axis_, pX: number, pY: number, pZ: number, predicate: Internal.BiPredicate_<Internal.BlockGetter, BlockPos>, state: Internal.BlockState_, holePredicate: Internal.BiPredicate_<Internal.BlockGetter, BlockPos>, holeHologramState: Internal.BlockState_): this;
        add(x: number, y: number, z: number, state: Internal.BlockState_): this;
        (arg0: number, arg1: number, arg2: number, arg3: Internal.BiPredicate<Internal.BlockGetter, BlockPos>, arg4: Internal.BlockState): this;
    }
    type MultiblockWriter_ = MultiblockWriter | ((arg0: number, arg1: number, arg2: number, arg3: Internal.BiPredicate<Internal.BlockGetter, BlockPos>, arg4: Internal.BlockState)=> this);
    class petSheep extends Internal.Item {
        constructor(arg0: Internal.Item$Properties_)
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        allowContinuingBlockBreaking(player: Internal.Player_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        moonlight$addAdditionalBehavior(placementOverride: Internal.AdditionalItemPlacement_): void;
        isFireResistant(): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        moonlight$getClientAnimationExtension(): any;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        fabric_setCustomDamageHandler(handler: Internal.CustomDamageHandler_): void;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getBarColor(arg0: Internal.ItemStack_): number;
        getOrCreateDescriptionId(): string;
        getItem(): Internal.Item;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): InteractionResult;
        moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        moonlight$setClientAnimationExtension(obj: any): void;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        handler$dfl000$revelationary$getCloakedName(stack: Internal.ItemStack_, callbackInfoReturnable: Internal.CallbackInfoReturnable_<any>): void;
        isEdible(): boolean;
        getAttributeModifiers(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        cardinal_createComponents(stack: Internal.ItemStack_): Internal.ComponentContainer;
        isFoil(arg0: Internal.ItemStack_): boolean;
        "getAttributeModifiers(net.minecraft.world.entity.EquipmentSlot,net.minecraft.world.item.ItemStack)"(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        fabric_getEquipmentSlotProvider(): Internal.EquipmentSlotProvider;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        petNamer(arg0: Internal.Player_): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        owo$tab(): number;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        removeItem(arg0: Internal.Player_, arg1: Internal.ItemStack_): void;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vector3f;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        "getAttributeModifiers(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.EquipmentSlot)"(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        allowNbtUpdateAnimation(player: Internal.Player_, hand: Internal.InteractionHand_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        fabric_getCachedItemVariant(): Internal.ItemVariant;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        fabric_getCustomDamageHandler(): Internal.CustomDamageHandler;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        static getPlayerPOVHitResult(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.ClipContext$Fluid_): Internal.BlockHitResult;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        equals(arg0: any): boolean;
        setRarity(arg0: Internal.Rarity_): void;
        getRecipeRemainder(stack: Internal.ItemStack_): Internal.ItemStack;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        /**
         * @deprecated
        */
        onDestroyed(arg0: Internal.ItemEntity_): void;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        canBeHurtBy(arg0: DamageSource_): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        fabric_setEquipmentSlotProvider(equipmentSlotProvider: Internal.EquipmentSlotProvider_): void;
        getDescriptionId(): string;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        zeta$setHumanoidArmorModel(arg0: Internal.HumanoidArmorModelGetter_): void;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: DamageSource_): void;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        getDescription(): net.minecraft.network.chat.Component;
        owo$stackGenerator(): Internal.BiConsumer<any, any>;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        useOn(arg0: Internal.UseOnContext_): InteractionResult;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        handler$ebb000$connectormod$redirectIsPiglinCurrency(arg0: Internal.ItemStack_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        setAttackDamage(attackDamage: number): void;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        toString(): string;
        /**
         * @deprecated
        */
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        modifyReturnValue$ffm000$quark$overrideOtherStackedOnMe(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_, arg3: Internal.Slot_, arg4: Internal.ClickAction_, arg5: Internal.Player_, arg6: Internal.SlotAccess_): boolean;
        getId(): string;
        handler$fbm000$moonlight$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        isSuitableFor(stack: Internal.ItemStack_, state: Internal.BlockState_): boolean;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        puzzleslib$setRenderProperties(arg0: any): void;
        notify(): void;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        zeta$setBlockEntityWithoutLevelRenderer(arg0: Internal.BlockEntityWithoutLevelRenderer_): void;
        handler$cog000$croptopia$overrideConstructor(arg0: Internal.Item$Properties_, arg1: Internal.CallbackInfo_): void;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        getEatingSound(): Internal.SoundEvent;
        owo$setGroup(group: Internal.CreativeModeTab_): void;
        puzzleslib$getRenderProperties(): any;
        canBeDepleted(): boolean;
        getDamage(arg0: Internal.ItemStack_): number;
        wait(arg0: number, arg1: number): void;
        getMod(): string;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        owo$group(): Internal.CreativeModeTab;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        modifyReturnValue$ffm000$quark$overrideStackedOnOther(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_): boolean;
        get drinkingSound(): Internal.SoundEvent
        get fireResistant(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set maxDamage(arg0: number)
        get orCreateDescriptionId(): string
        get item(): Internal.Item
        get class(): typeof any
        get renderPropertiesInternal(): any
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        get edible(): boolean
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        set nameKey(arg0: string)
        get idLocation(): ResourceLocation
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
        set rarity(arg0: Internal.Rarity_)
        get complex(): boolean
        get descriptionId(): string
        get creativeTab(): string
        set burnTime(i: number)
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        set itemBuilder(b: Internal.ItemBuilder_)
        set attackDamage(attackDamage: number)
        /**
         * @deprecated
        */
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        /**
         * @deprecated
        */
        get maxStackSize(): number
        get eatingSound(): Internal.SoundEvent
        get mod(): string
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
    }
    type petSheep_ = petSheep;
    class RomaniMask extends Internal.ArmorItem {
        constructor(arg0: Internal.ArmorMaterial_, arg1: Internal.ArmorItem$Type_, arg2: Internal.Item$Properties_)
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        allowContinuingBlockBreaking(player: Internal.Player_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        moonlight$addAdditionalBehavior(placementOverride: Internal.AdditionalItemPlacement_): void;
        isFireResistant(): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        moonlight$getClientAnimationExtension(): any;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        fabric_setCustomDamageHandler(handler: Internal.CustomDamageHandler_): void;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getBarColor(arg0: Internal.ItemStack_): number;
        getOrCreateDescriptionId(): string;
        getItem(): Internal.Item;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        static get(arg0: Internal.ItemStack_): Internal.Equipable;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): InteractionResult;
        kjs$getAttributeMap(): Internal.Multimap<any, any>;
        moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        moonlight$setClientAnimationExtension(obj: any): void;
        getDefense(): number;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        handler$dfl000$revelationary$getCloakedName(stack: Internal.ItemStack_, callbackInfoReturnable: Internal.CallbackInfoReturnable_<any>): void;
        isEdible(): boolean;
        getAttributeModifiers(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        cardinal_createComponents(stack: Internal.ItemStack_): Internal.ComponentContainer;
        isFoil(arg0: Internal.ItemStack_): boolean;
        "getAttributeModifiers(net.minecraft.world.entity.EquipmentSlot,net.minecraft.world.item.ItemStack)"(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        static dispenseArmor(arg0: Internal.BlockSource_, arg1: Internal.ItemStack_): boolean;
        getMaterial(): Internal.ArmorMaterial;
        fabric_getEquipmentSlotProvider(): Internal.EquipmentSlotProvider;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        owo$tab(): number;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vector3f;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        getToughness(): number;
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        "getAttributeModifiers(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.EquipmentSlot)"(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        allowNbtUpdateAnimation(player: Internal.Player_, hand: Internal.InteractionHand_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        fabric_getCachedItemVariant(): Internal.ItemVariant;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        fabric_getCustomDamageHandler(): Internal.CustomDamageHandler;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        swapWithEquipmentSlot(arg0: Internal.Item_, arg1: Internal.Level_, arg2: Internal.Player_, arg3: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        static getPlayerPOVHitResult(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.ClipContext$Fluid_): Internal.BlockHitResult;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        equals(arg0: any): boolean;
        setRarity(arg0: Internal.Rarity_): void;
        getType(): Internal.ArmorItem$Type;
        getRecipeRemainder(stack: Internal.ItemStack_): Internal.ItemStack;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        /**
         * @deprecated
        */
        onDestroyed(arg0: Internal.ItemEntity_): void;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        canBeHurtBy(arg0: DamageSource_): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        fabric_setEquipmentSlotProvider(equipmentSlotProvider: Internal.EquipmentSlotProvider_): void;
        getDescriptionId(): string;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        zeta$setHumanoidArmorModel(arg0: Internal.HumanoidArmorModelGetter_): void;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: DamageSource_): void;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        getDescription(): net.minecraft.network.chat.Component;
        owo$stackGenerator(): Internal.BiConsumer<any, any>;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        kjs$getMutableAttributeMap(): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        useOn(arg0: Internal.UseOnContext_): InteractionResult;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        handler$ebb000$connectormod$redirectIsPiglinCurrency(arg0: Internal.ItemStack_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        setAttackDamage(attackDamage: number): void;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        getEquipmentSlot(): Internal.EquipmentSlot;
        toString(): string;
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        modifyReturnValue$ffm000$quark$overrideOtherStackedOnMe(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_, arg3: Internal.Slot_, arg4: Internal.ClickAction_, arg5: Internal.Player_, arg6: Internal.SlotAccess_): boolean;
        getId(): string;
        handler$fbm000$moonlight$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        isSuitableFor(stack: Internal.ItemStack_, state: Internal.BlockState_): boolean;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        puzzleslib$setRenderProperties(arg0: any): void;
        notify(): void;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        getEquipSound(): Internal.SoundEvent;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        zeta$setBlockEntityWithoutLevelRenderer(arg0: Internal.BlockEntityWithoutLevelRenderer_): void;
        handler$cog000$croptopia$overrideConstructor(arg0: Internal.Item$Properties_, arg1: Internal.CallbackInfo_): void;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        getEatingSound(): Internal.SoundEvent;
        owo$setGroup(group: Internal.CreativeModeTab_): void;
        puzzleslib$getRenderProperties(): any;
        canBeDepleted(): boolean;
        getDamage(arg0: Internal.ItemStack_): number;
        wait(arg0: number, arg1: number): void;
        getMod(): string;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        owo$group(): Internal.CreativeModeTab;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        kjs$setAttributeMap(arg0: Internal.Multimap_<any, any>): void;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        modifyReturnValue$ffm000$quark$overrideStackedOnOther(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_): boolean;
        get drinkingSound(): Internal.SoundEvent
        get fireResistant(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set maxDamage(arg0: number)
        get orCreateDescriptionId(): string
        get item(): Internal.Item
        get class(): typeof any
        get renderPropertiesInternal(): any
        get defense(): number
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        get edible(): boolean
        get material(): Internal.ArmorMaterial
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        set nameKey(arg0: string)
        get toughness(): number
        get idLocation(): ResourceLocation
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
        set rarity(arg0: Internal.Rarity_)
        get type(): Internal.ArmorItem$Type
        get complex(): boolean
        get descriptionId(): string
        get creativeTab(): string
        set burnTime(i: number)
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        set itemBuilder(b: Internal.ItemBuilder_)
        set attackDamage(attackDamage: number)
        get equipmentSlot(): Internal.EquipmentSlot
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        get equipSound(): Internal.SoundEvent
        /**
         * @deprecated
        */
        get maxStackSize(): number
        get eatingSound(): Internal.SoundEvent
        get mod(): string
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
    }
    type RomaniMask_ = RomaniMask;
    /**
     * @deprecated
     * This class is marked to be removed in future!
    */
    interface DomainCombiner {
        abstract combine(arg0: Internal.ProtectionDomain_[], arg1: Internal.ProtectionDomain_[]): Internal.ProtectionDomain[];
        (arg0: Internal.ProtectionDomain[], arg1: Internal.ProtectionDomain[]): Internal.ProtectionDomain_[];
    }
    type DomainCombiner_ = DomainCombiner | ((arg0: Internal.ProtectionDomain[], arg1: Internal.ProtectionDomain[])=> Internal.ProtectionDomain_[]);
    class FilterMask {
        constructor(arg0: number)
        getClass(): typeof any;
        static read(arg0: Internal.FriendlyByteBuf_): Internal.FilterMask;
        toString(): string;
        notifyAll(): void;
        isEmpty(): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        apply(arg0: string): string;
        hashCode(): number;
        applyWithFormatting(arg0: string): net.minecraft.network.chat.Component;
        wait(): void;
        wait(arg0: number): void;
        setFiltered(arg0: number): void;
        equals(arg0: any): boolean;
        isFullyFiltered(): boolean;
        static write(arg0: Internal.FriendlyByteBuf_, arg1: Internal.FilterMask_): void;
        get class(): typeof any
        get empty(): boolean
        set filtered(arg0: number)
        get fullyFiltered(): boolean
        static readonly CODEC: Internal.Codec<Internal.FilterMask>;
        static readonly PARTIALLY_FILTERED_CODEC: Internal.Codec<Internal.FilterMask>;
        static readonly FILTERED_STYLE: (Internal.Style) & (Internal.Style);
        static readonly PASS_THROUGH: (Internal.FilterMask) & (Internal.FilterMask);
        static readonly PASS_THROUGH_CODEC: Internal.Codec<Internal.FilterMask>;
        static readonly FULLY_FILTERED: (Internal.FilterMask) & (Internal.FilterMask);
        static readonly FULLY_FILTERED_CODEC: Internal.Codec<Internal.FilterMask>;
    }
    type FilterMask_ = FilterMask;
    class ChargerBlockEntity extends Internal.AENetworkPowerBlockEntity implements Internal.IGridTickable {
        constructor(arg0: Internal.BlockEntityType_<any>, arg1: BlockPos_, arg2: Internal.BlockState_)
        injectAEPower(arg0: number, arg1: Internal.Actionable_): number;
        requestModelDataUpdate(): void;
        disassembleWithWrench(arg0: Internal.Player_, arg1: Internal.Level_, arg2: Internal.BlockHitResult_, arg3: Internal.ItemStack_): InteractionResult;
        "areCapsCompatible(net.minecraftforge.common.capabilities.CapabilityDispatcher)"(arg0: Internal.CapabilityDispatcher_): boolean;
        isWorking(): boolean;
        exportSettings(arg0: Internal.SettingsFrom_, arg1: Internal.CompoundTag_, arg2: Internal.Player_): void;
        setBlockState(arg0: Internal.BlockState_): void;
        hasAttached(type: Internal.AttachmentType_<any>): boolean;
        load(arg0: Internal.CompoundTag_): void;
        setChanged(): void;
        setName(arg0: string): void;
        getMainNode(): Internal.IManagedGridNode;
        saveWithoutMetadata(): Internal.CompoundTag;
        getAttachedOrSet<A>(type: Internal.AttachmentType_<A>, defaultValue: A): A;
        removeAttached<A>(type: Internal.AttachmentType_<A>): A;
        getGridNode(arg0: Internal.Direction_): Internal.IGridNode;
        getPowerFlow(): Internal.AccessRestriction;
        abstract isClientSide(): boolean;
        setRemoved(): void;
        getCapability<T>(arg0: Internal.Capability_<T>): Internal.LazyOptional<T>;
        hasCustomName(): boolean;
        getSubInventory(arg0: ResourceLocation_): Internal.InternalInventory;
        getType(): Internal.BlockEntityType<any>;
        setInternalPublicPowerStorage(arg0: boolean): void;
        getActionableNode(): Internal.IGridNode;
        static transfer(original: Internal.AttachmentTarget_, target: Internal.AttachmentTarget_, isDeath: boolean): void;
        setOwner(arg0: Internal.Player_): void;
        addAdditionalDrops(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.List_<Internal.ItemStack>): void;
        getRenderBoundingBox(): Internal.AABB;
        getCustomName(): net.minecraft.network.chat.Component;
        getAEMaxPower(): number;
        getDisplayName(): net.minecraft.network.chat.Component;
        getClass(): typeof any;
        ifGridPresent(arg0: Internal.Consumer_<Internal.IGrid>): boolean;
        static getPosFromTag(arg0: Internal.CompoundTag_): BlockPos;
        injectExternalPower(arg0: Internal.PowerUnits_, arg1: number, arg2: Internal.Actionable_): number;
        markForUpdate(): void;
        getTop(): Internal.Direction;
        hasAnyComparatorNearby(): boolean;
        onChunkUnloaded(): void;
        loadTag(arg0: Internal.CompoundTag_): void;
        saveToItem(arg0: Internal.ItemStack_): void;
        "deserializeNBT(net.minecraft.nbt.CompoundTag)"(arg0: Internal.CompoundTag_): void;
        static addEntityType(arg0: Internal.CompoundTag_, arg1: Internal.BlockEntityType_<any>): void;
        "deserializeNBT(net.minecraft.nbt.Tag)"(arg0: Internal.Tag_): void;
        onComparatorAdded(direction: Internal.Direction_, offset: number): void;
        getUpdatePacket(): Internal.Packet<Internal.ClientGamePacketListener>;
        getGlobalPos(): Internal.GlobalPos;
        fabric_hasPersistentAttachments(): boolean;
        clearRemoved(): void;
        importSettings(arg0: Internal.SettingsFrom_, arg1: Internal.CompoundTag_, arg2: Internal.Player_): void;
        "areCapsCompatible(net.minecraftforge.common.capabilities.CapabilityProvider)"(arg0: Internal.CapabilityProvider_<Internal.BlockEntity>): boolean;
        owo$setCachedState(arg0: Internal.BlockState_): void;
        fabric_getAttachments(): Internal.Map<any, any>;
        getReadyInvoked(): number;
        setInternalCurrentPower(arg0: number): void;
        getCableConnectionType(arg0: Internal.Direction_): Internal.AECableType;
        getPersistentData(): Internal.CompoundTag;
        toString(): string;
        triggerEvent(arg0: number, arg1: number): boolean;
        hasLevel(): boolean;
        notifyAll(): void;
        getExternalPowerDemand(arg0: Internal.PowerUnits_, arg1: number): number;
        getAttachedOrCreate<A>(type: Internal.AttachmentType_<A>, initializer: Internal.Supplier_<A>): A;
        getGridConnectableSides(arg0: Internal.BlockOrientation_): Internal.Set<Internal.Direction>;
        onReady(): void;
        wait(arg0: number): void;
        tickingRequest(arg0: Internal.IGridNode_, arg1: number): Internal.TickRateModulation;
        getAttachedOrThrow<A>(type: Internal.AttachmentType_<A>): A;
        onChangeInventory(arg0: Internal.InternalInventory_, arg1: number): void;
        static registerBlockEntityItem(arg0: Internal.BlockEntityType_<any>, arg1: Internal.Item_): void;
        clearContent(): void;
        reviveCaps(): void;
        static tryClear(arg0: any): void;
        getAttached(type: Internal.AttachmentType_<any>): any;
        getUpdateTag(): Internal.CompoundTag;
        getRenderAttachmentData(): any;
        handleUpdateTag(arg0: Internal.CompoundTag_): void;
        getAECurrentPower(): number;
        modifyAttached<A>(type: Internal.AttachmentType_<A>, modifier: Internal.UnaryOperator_<A>): A;
        setLevel(arg0: Internal.Level_): void;
        notify(): void;
        onMainNodeStateChanged(arg0: Internal.IGridNodeListener$State_): void;
        getBlockPos(): BlockPos;
        isRemoved(): boolean;
        getInternalMaxPower(): number;
        onLoad(): void;
        getInternalCurrentPower(): number;
        fillCrashReportCategory(arg0: Internal.CrashReportCategory_): void;
        getGridNode(): Internal.IGridNode;
        getTickingRequest(arg0: Internal.IGridNode_): Internal.TickingRequest;
        invalidateCaps(): void;
        notLoaded(): boolean;
        getName(): net.minecraft.network.chat.Component;
        getBlockState(): Internal.BlockState;
        getAttachedOrGet<A>(type: Internal.AttachmentType_<A>, defaultValue: Internal.Supplier_<A>): A;
        getBlockEntity(): Internal.BlockEntity;
        getPriority(): number;
        static loadStatic(arg0: BlockPos_, arg1: Internal.BlockState_, arg2: Internal.CompoundTag_): Internal.BlockEntity;
        wait(): void;
        areCapsCompatible(arg0: Internal.CapabilityDispatcher_): boolean;
        setInternalMaxPower(arg0: number): void;
        abstract saveChanges(): void;
        fabric_writeAttachmentsToNbt(nbt: Internal.CompoundTag_): void;
        getCapability<T>(arg0: Internal.Capability_<T>, arg1: Internal.Direction_): Internal.LazyOptional<T>;
        saveAdditional(arg0: Internal.CompoundTag_): void;
        saveWithId(): Internal.CompoundTag;
        getAttachedOrCreate<A>(type: Internal.AttachmentType_<A>): A;
        wait(arg0: number, arg1: number): void;
        getLevel(): Internal.Level;
        static setChanged(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        onlyOpCanSetNbt(): boolean;
        getOrientation(): Internal.BlockOrientation;
        serializeNBT(): Internal.Tag;
        getInternalInventory(): Internal.InternalInventory;
        saveWithFullMetadata(): Internal.CompoundTag;
        onDataPacket(arg0: Internal.Connection_, arg1: Internal.ClientboundBlockEntityDataPacket_): void;
        hasCustomOutlineRendering(arg0: Internal.Player_): boolean;
        activate(arg0: Internal.Player_): void;
        areCapsCompatible(arg0: Internal.CapabilityProvider_<Internal.BlockEntity>): boolean;
        deserializeNBT(arg0: Internal.Tag_): void;
        isAEPublicPowerStorage(): boolean;
        extractAEPower(arg0: number, arg1: Internal.Actionable_, arg2: Internal.PowerMultiplier_): number;
        setInternalPowerFlow(arg0: Internal.AccessRestriction_): void;
        getQueuedForReady(): number;
        setAttached(type: Internal.AttachmentType_<any>, value: any): any;
        fabric_readAttachmentsFromNbt(nbt: Internal.CompoundTag_): void;
        deserializeNBT(arg0: Internal.CompoundTag_): void;
        hashCode(): number;
        getFront(): Internal.Direction;
        getAttachedOrElse<A>(type: Internal.AttachmentType_<A>, defaultValue: A): A;
        getCrankable(arg0: Internal.Direction_): Internal.ICrankable;
        getModelData(): Internal.ModelData;
        getRenderData(): any;
        equals(arg0: any): boolean;
        get working(): boolean
        set blockState(arg0: Internal.BlockState_)
        set name(arg0: string)
        get mainNode(): Internal.IManagedGridNode
        get powerFlow(): Internal.AccessRestriction
        get clientSide(): boolean
        get type(): Internal.BlockEntityType<any>
        set internalPublicPowerStorage(arg0: boolean)
        get actionableNode(): Internal.IGridNode
        set owner(arg0: Internal.Player_)
        get renderBoundingBox(): Internal.AABB
        get customName(): net.minecraft.network.chat.Component
        get AEMaxPower(): number
        get displayName(): net.minecraft.network.chat.Component
        get class(): typeof any
        get top(): Internal.Direction
        get updatePacket(): Internal.Packet<Internal.ClientGamePacketListener>
        get globalPos(): Internal.GlobalPos
        get readyInvoked(): number
        set internalCurrentPower(arg0: number)
        get persistentData(): Internal.CompoundTag
        get updateTag(): Internal.CompoundTag
        get renderAttachmentData(): any
        get AECurrentPower(): number
        set level(arg0: Internal.Level_)
        get blockPos(): BlockPos
        get removed(): boolean
        get internalMaxPower(): number
        get internalCurrentPower(): number
        get gridNode(): Internal.IGridNode
        get name(): net.minecraft.network.chat.Component
        get blockState(): Internal.BlockState
        get blockEntity(): Internal.BlockEntity
        get priority(): number
        set internalMaxPower(arg0: number)
        get level(): Internal.Level
        get orientation(): Internal.BlockOrientation
        get internalInventory(): Internal.InternalInventory
        get AEPublicPowerStorage(): boolean
        set internalPowerFlow(arg0: Internal.AccessRestriction_)
        get queuedForReady(): number
        get front(): Internal.Direction
        get modelData(): Internal.ModelData
        get renderData(): any
        static readonly POWER_MAXIMUM_AMOUNT: (1600) & (number);
    }
    type ChargerBlockEntity_ = ChargerBlockEntity;
    class GameRules implements Internal.GameRulesAccessor, Internal.GameRulesKJS {
        constructor()
        constructor(arg0: Internal.DynamicLike_<any>)
        getClass(): typeof any;
        static callRegister$fabric_game_rule_api_v1_$md$374716$0(arg0: string, arg1: Internal.GameRules$Category_, arg2: Internal.GameRules$Type_<any>): Internal.GameRules$Key<any>;
        static getRuleTypes$fabric_game_rule_api_v1_$md$374716$1(): Internal.Map<any, any>;
        createTag(): Internal.CompoundTag;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        static register<T extends Internal.GameRules$Value<T>>(arg0: string, arg1: Internal.GameRules$Category_, arg2: Internal.GameRules$Type_<T>): Internal.GameRules$Key<T>;
        get(rule: string): Internal.GameRules$Value<any>;
        assignFrom(arg0: Internal.GameRules_, arg1: Internal.MinecraftServer_): void;
        set(rule: string, value: string): void;
        static callRegister<T extends Internal.GameRules$Value<T>>(name: string, category: Internal.GameRules$Category_, type: Internal.GameRules$Type_<T>): Internal.GameRules$Key<T>;
        toString(): string;
        kjs$getBoolean(rule: string): boolean;
        kjs$getInt(rule: string): number;
        notifyAll(): void;
        getRule<T extends Internal.GameRules$Value<T>>(arg0: Internal.GameRules$Key_<T>): T;
        hashCode(): number;
        getBoolean(arg0: Internal.GameRules$Key_<Internal.GameRules$BooleanValue>): boolean;
        static visitGameRuleTypes(arg0: Internal.GameRules$GameRuleTypeVisitor_): void;
        static getRuleTypes(): Internal.Map<Internal.GameRules$Key<any>, Internal.GameRules$Type<any>>;
        wait(): void;
        wait(arg0: number): void;
        kjs$getString(rule: string): string;
        copy(): this;
        getInt(arg0: Internal.GameRules$Key_<Internal.GameRules$IntegerValue>): number;
        equals(arg0: any): boolean;
        get class(): typeof any
        get ruleTypes$fabric_game_rule_api_v1_$md$374716$1(): Internal.Map<any, any>
        get ruleTypes(): Internal.Map<Internal.GameRules$Key<any>, Internal.GameRules$Type<any>>
        static readonly RULE_DO_WARDEN_SPAWNING: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly RULE_MAX_COMMAND_CHAIN_LENGTH: Internal.GameRules$Key<Internal.GameRules$IntegerValue>;
        static readonly RULE_MOBGRIEFING: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly RULE_DISABLE_ELYTRA_MOVEMENT_CHECK: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly RULE_FREEZE_DAMAGE: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly RULE_DOINSOMNIA: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly RULE_COMMAND_MODIFICATION_BLOCK_LIMIT: Internal.GameRules$Key<Internal.GameRules$IntegerValue>;
        static readonly RULE_DAYLIGHT: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly RULE_DO_TRADER_SPAWNING: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly RULE_REDUCEDDEBUGINFO: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly RULE_DO_IMMEDIATE_RESPAWN: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly LOGGER: (Internal.Log4jLogger) & (org.slf4j.Logger);
        static readonly RULE_DOMOBSPAWNING: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly RULE_DOBLOCKDROPS: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly RULE_COMMANDBLOCKOUTPUT: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly RULE_TNT_EXPLOSION_DROP_DECAY: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly RULE_WEATHER_CYCLE: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly RULE_NATURAL_REGENERATION: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly RULE_FIRE_DAMAGE: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly RULE_FORGIVE_DEAD_PLAYERS: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly RULE_SHOWDEATHMESSAGES: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly RULE_PLAYERS_SLEEPING_PERCENTAGE: Internal.GameRules$Key<Internal.GameRules$IntegerValue>;
        static readonly RULE_WATER_SOURCE_CONVERSION: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly RULE_FALL_DAMAGE: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly RULE_MOB_EXPLOSION_DROP_DECAY: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly RULE_DISABLE_RAIDS: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly RULE_BLOCK_EXPLOSION_DROP_DECAY: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly RULE_LOGADMINCOMMANDS: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly RULE_SPAWN_RADIUS: Internal.GameRules$Key<Internal.GameRules$IntegerValue>;
        static readonly RULE_SENDCOMMANDFEEDBACK: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly RULE_SNOW_ACCUMULATION_HEIGHT: Internal.GameRules$Key<Internal.GameRules$IntegerValue>;
        static readonly RULE_ANNOUNCE_ADVANCEMENTS: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly RULE_DOENTITYDROPS: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly RULE_LAVA_SOURCE_CONVERSION: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly RULE_DO_PATROL_SPAWNING: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly RULE_DO_VINES_SPREAD: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly DEFAULT_RANDOM_TICK_SPEED: (3) & (number);
        static readonly RULE_DOFIRETICK: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly RULE_LIMITED_CRAFTING: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly RULE_SPECTATORSGENERATECHUNKS: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly RULE_MAX_ENTITY_CRAMMING: Internal.GameRules$Key<Internal.GameRules$IntegerValue>;
        static readonly RULE_DROWNING_DAMAGE: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly RULE_UNIVERSAL_ANGER: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly RULE_GLOBAL_SOUND_EVENTS: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly RULE_KEEPINVENTORY: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly RULE_DOMOBLOOT: Internal.GameRules$Key<Internal.GameRules$BooleanValue>;
        static readonly RULE_RANDOMTICKING: Internal.GameRules$Key<Internal.GameRules$IntegerValue>;
    }
    type GameRules_ = GameRules;
    interface CraftingContainerKJS {
        getMenu(): Internal.AbstractContainerMenu;
        get menu(): Internal.AbstractContainerMenu
    }
    type CraftingContainerKJS_ = CraftingContainerKJS;
    interface IAppearance {
        getBlockAppearance(state: Internal.BlockState_, level: Internal.BlockAndTintGetter_, pos: BlockPos_, side: Internal.Direction_, sourceState: Internal.BlockState_, sourcePos: BlockPos_): Internal.BlockState;
    }
    type IAppearance_ = IAppearance;
    class Instant implements Internal.Comparable<Internal.Instant>, Internal.Temporal, Internal.TemporalAdjuster, Internal.Serializable {
        plus(arg0: number, arg1: Internal.TemporalUnit_): this;
        notify(): void;
        compareTo(arg0: any): number;
        static ofEpochSecond(arg0: number, arg1: number): Internal.Instant;
        plusSeconds(arg0: number): this;
        "with"(arg0: Internal.TemporalAdjuster_): Internal.Temporal;
        "compareTo(java.time.Instant)"(arg0: Internal.Instant_): number;
        "with"(arg0: Internal.TemporalField_, arg1: number): Internal.Temporal;
        isSupported(arg0: Internal.TemporalField_): boolean;
        truncatedTo(arg0: Internal.TemporalUnit_): this;
        "isSupported(java.time.temporal.TemporalField)"(arg0: Internal.TemporalField_): boolean;
        static now(arg0: Internal.Clock_): Internal.Instant;
        atOffset(arg0: Internal.ZoneOffset_): Internal.OffsetDateTime;
        range(arg0: Internal.TemporalField_): Internal.ValueRange;
        plusMillis(arg0: number): this;
        toEpochMilli(): number;
        isAfter(arg0: Internal.Instant_): boolean;
        get(arg0: Internal.TemporalField_): number;
        wait(): void;
        compareTo(arg0: Internal.Instant_): number;
        "compareTo(java.lang.Object)"(arg0: any): number;
        "isSupported(java.time.temporal.TemporalUnit)"(arg0: Internal.TemporalUnit_): boolean;
        minusMillis(arg0: number): this;
        getClass(): typeof any;
        minusSeconds(arg0: number): this;
        static parse(arg0: Internal.CharSequence_): Internal.Instant;
        isBefore(arg0: Internal.Instant_): boolean;
        wait(arg0: number, arg1: number): void;
        static ofEpochSecond(arg0: number): Internal.Instant;
        minus(arg0: Internal.TemporalAmount_): this;
        getLong(arg0: Internal.TemporalField_): number;
        static now(): Internal.Instant;
        minus(arg0: number, arg1: Internal.TemporalUnit_): Internal.Temporal;
        static from(arg0: Internal.TemporalAccessor_): Internal.Instant;
        minusNanos(arg0: number): this;
        toString(): string;
        adjustInto(arg0: Internal.Temporal_): Internal.Temporal;
        notifyAll(): void;
        query<R>(arg0: Internal.TemporalQuery_<R>): R;
        until(arg0: Internal.Temporal_, arg1: Internal.TemporalUnit_): number;
        isSupported(arg0: Internal.TemporalUnit_): boolean;
        getNano(): number;
        plus(arg0: Internal.TemporalAmount_): Internal.Temporal;
        getEpochSecond(): number;
        hashCode(): number;
        atZone(arg0: Internal.ZoneId_): Internal.ZonedDateTime;
        wait(arg0: number): void;
        plusNanos(arg0: number): this;
        equals(arg0: any): boolean;
        static ofEpochMilli(arg0: number): Internal.Instant;
        get class(): typeof any
        get nano(): number
        get epochSecond(): number
        static readonly EPOCH: (Internal.Instant) & (Internal.Instant);
        static readonly MAX: (Internal.Instant) & (Internal.Instant);
        static readonly MIN: (Internal.Instant) & (Internal.Instant);
    }
    type Instant_ = Instant;
    class GridFlags extends Internal.Enum<Internal.GridFlags> {
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        getClass(): typeof any;
        toString(): string;
        notifyAll(): void;
        notify(): void;
        compareTo(arg0: Internal.GridFlags_): number;
        wait(arg0: number, arg1: number): void;
        compareTo(arg0: any): number;
        name(): string;
        "compareTo(appeng.api.networking.GridFlags)"(arg0: Internal.GridFlags_): number;
        hashCode(): number;
        getDeclaringClass(): typeof Internal.GridFlags;
        static valueOf(arg0: string): Internal.GridFlags;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.GridFlags>>;
        ordinal(): number;
        wait(): void;
        wait(arg0: number): void;
        "compareTo(java.lang.Object)"(arg0: any): number;
        static values(): Internal.GridFlags[];
        equals(arg0: any): boolean;
        get class(): typeof any
        get declaringClass(): typeof Internal.GridFlags
        static readonly REQUIRE_CHANNEL: (Internal.GridFlags) & (Internal.GridFlags);
        static readonly COMPRESSED_CHANNEL: (Internal.GridFlags) & (Internal.GridFlags);
        static readonly DENSE_CAPACITY: (Internal.GridFlags) & (Internal.GridFlags);
        static readonly PREFERRED: (Internal.GridFlags) & (Internal.GridFlags);
        static readonly MULTIBLOCK: (Internal.GridFlags) & (Internal.GridFlags);
        static readonly CANNOT_CARRY: (Internal.GridFlags) & (Internal.GridFlags);
        static readonly CANNOT_CARRY_COMPRESSED: (Internal.GridFlags) & (Internal.GridFlags);
    }
    type GridFlags_ = "compressed_channel" | GridFlags | "preferred" | "multiblock" | "cannot_carry_compressed" | "cannot_carry" | "dense_capacity" | "require_channel";
    interface ImmutableStringReader {
        abstract getTotalLength(): number;
        abstract peek(): string;
        abstract getCursor(): number;
        abstract getRead(): string;
        abstract canRead(): boolean;
        abstract getRemainingLength(): number;
        abstract getRemaining(): string;
        abstract canRead(arg0: number): boolean;
        abstract peek(arg0: number): string;
        abstract getString(): string;
        get totalLength(): number
        get cursor(): number
        get read(): string
        get remainingLength(): number
        get remaining(): string
        get string(): string
    }
    type ImmutableStringReader_ = ImmutableStringReader;
    class ItemSpell extends Internal.ItemSpellRecipe implements Internal.IShowHud {
        constructor()
        constructor(arg0: Internal.Item$Properties_)
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        static castSpellOnChannelTick(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number, arg3: Internal.BiPredicate_<Internal.Player, Internal.ItemStack>): void;
        requiresModifierKey(): boolean;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        allowContinuingBlockBreaking(player: Internal.Player_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        moonlight$addAdditionalBehavior(placementOverride: Internal.AdditionalItemPlacement_): void;
        isFireResistant(): boolean;
        containsSpell(arg0: Internal.ItemStack_): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        moonlight$getClientAnimationExtension(): any;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        fabric_setCustomDamageHandler(handler: Internal.CustomDamageHandler_): void;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getSpellCompound(arg0: Internal.ItemStack_, arg1: Internal.Player_): Internal.CompoundTag;
        setMaxStackSize(arg0: number): void;
        canAcceptSpell(arg0: Internal.ItemStack_): boolean;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getBarColor(arg0: Internal.ItemStack_): number;
        getOrCreateDescriptionId(): string;
        getItem(): Internal.Item;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): InteractionResult;
        moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        moonlight$setClientAnimationExtension(obj: any): void;
        static setCustomIcon(arg0: Internal.ItemStack_, arg1: number): void;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        handler$dfl000$revelationary$getCloakedName(stack: Internal.ItemStack_, callbackInfoReturnable: Internal.CallbackInfoReturnable_<any>): void;
        isEdible(): boolean;
        getAttributeModifiers(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        static castSpellOnRightClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_, arg3: Internal.InteractionHand_, arg4: Internal.Function_<Internal.ItemStack, boolean>): InteractionResult;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        canAcceptSpell(arg0: Internal.ItemStack_, arg1: Internal.ISpellDefinition_): boolean;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        cardinal_createComponents(stack: Internal.ItemStack_): Internal.ComponentContainer;
        isFoil(arg0: Internal.ItemStack_): boolean;
        "getAttributeModifiers(net.minecraft.world.entity.EquipmentSlot,net.minecraft.world.item.ItemStack)"(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        fabric_getEquipmentSlotProvider(): Internal.EquipmentSlotProvider;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        owo$tab(): number;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        getProvider(arg0: Internal.ItemStack_): Internal.MenuProvider;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vector3f;
        addItemWithGuiTooltip(arg0: Internal.ItemStack_): boolean;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        setTranscribedSpell(arg0: Internal.ItemStack_): void;
        "getAttributeModifiers(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.EquipmentSlot)"(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        allowNbtUpdateAnimation(player: Internal.Player_, hand: Internal.InteractionHand_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        fabric_getCachedItemVariant(): Internal.ItemVariant;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        fabric_getCustomDamageHandler(): Internal.CustomDamageHandler;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        static getPlayerPOVHitResult(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.ClipContext$Fluid_): Internal.BlockHitResult;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        equals(arg0: any): boolean;
        setRarity(arg0: Internal.Rarity_): void;
        getRecipeRemainder(stack: Internal.ItemStack_): Internal.ItemStack;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        /**
         * @deprecated
        */
        onDestroyed(arg0: Internal.ItemEntity_): void;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        canBeHurtBy(arg0: DamageSource_): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        fabric_setEquipmentSlotProvider(equipmentSlotProvider: Internal.EquipmentSlotProvider_): void;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        getDescriptionId(): string;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setSpell(arg0: Internal.ItemStack_, arg1: Internal.ISpellDefinition_): Internal.ItemStack;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        zeta$setHumanoidArmorModel(arg0: Internal.HumanoidArmorModelGetter_): void;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: DamageSource_): void;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        getDescription(): net.minecraft.network.chat.Component;
        owo$stackGenerator(): Internal.BiConsumer<any, any>;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        useOn(arg0: Internal.UseOnContext_): InteractionResult;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        handler$ebb000$connectormod$redirectIsPiglinCurrency(arg0: Internal.ItemStack_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        setAttackDamage(attackDamage: number): void;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        toString(): string;
        /**
         * @deprecated
        */
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        modifyReturnValue$ffm000$quark$overrideOtherStackedOnMe(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_, arg3: Internal.Slot_, arg4: Internal.ClickAction_, arg5: Internal.Player_, arg6: Internal.SlotAccess_): boolean;
        getId(): string;
        handler$fbm000$moonlight$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        openGuiIfModifierPressed(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Level_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        isSuitableFor(stack: Internal.ItemStack_, state: Internal.BlockState_): boolean;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        puzzleslib$setRenderProperties(arg0: any): void;
        notify(): void;
        static createWTFBoomStack(): Internal.ItemStack;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        zeta$setBlockEntityWithoutLevelRenderer(arg0: Internal.BlockEntityWithoutLevelRenderer_): void;
        handler$cog000$croptopia$overrideConstructor(arg0: Internal.Item$Properties_, arg1: Internal.CallbackInfo_): void;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        getSpell(arg0: Internal.ItemStack_): Internal.ISpellDefinition;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        static castSpellOnUse(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_, arg3: Internal.InteractionHand_, arg4: Internal.Function_<Internal.ItemStack, boolean>): Internal.InteractionResultHolder<Internal.ItemStack>;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        getEatingSound(): Internal.SoundEvent;
        owo$setGroup(group: Internal.CreativeModeTab_): void;
        puzzleslib$getRenderProperties(): any;
        canBeDepleted(): boolean;
        getDamage(arg0: Internal.ItemStack_): number;
        wait(arg0: number, arg1: number): void;
        isTranscribedSpell(arg0: Internal.ItemStack_): boolean;
        getSpell(arg0: Internal.ItemStack_, arg1: Internal.Player_): Internal.ISpellDefinition;
        getMod(): string;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        owo$group(): Internal.CreativeModeTab;
        static getCustomIcon(arg0: Internal.ItemStack_): number;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        modifyReturnValue$ffm000$quark$overrideStackedOnOther(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_): boolean;
        get drinkingSound(): Internal.SoundEvent
        get fireResistant(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set maxDamage(arg0: number)
        get orCreateDescriptionId(): string
        get item(): Internal.Item
        get class(): typeof any
        get renderPropertiesInternal(): any
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        get edible(): boolean
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        set nameKey(arg0: string)
        get idLocation(): ResourceLocation
        set transcribedSpell(arg0: Internal.ItemStack_)
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
        set rarity(arg0: Internal.Rarity_)
        get complex(): boolean
        get descriptionId(): string
        get creativeTab(): string
        set burnTime(i: number)
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        set itemBuilder(b: Internal.ItemBuilder_)
        set attackDamage(attackDamage: number)
        /**
         * @deprecated
        */
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        /**
         * @deprecated
        */
        get maxStackSize(): number
        get eatingSound(): Internal.SoundEvent
        get mod(): string
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
    }
    type ItemSpell_ = ItemSpell;
    abstract class AbstractTexture implements Internal.AutoCloseable {
        constructor()
        getClass(): typeof any;
        bind(): void;
        toString(): string;
        notifyAll(): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        setBlurMipmap(arg0: boolean, arg1: boolean): void;
        hashCode(): number;
        restoreLastBlurMipmap(): void;
        abstract load(arg0: Internal.ResourceManager_): void;
        wait(): void;
        close(): void;
        wait(arg0: number): void;
        setFilter(arg0: boolean, arg1: boolean): void;
        releaseId(): void;
        reset(arg0: Internal.TextureManager_, arg1: Internal.ResourceManager_, arg2: ResourceLocation_, arg3: Internal.Executor_): void;
        equals(arg0: any): boolean;
        getId(): number;
        get class(): typeof any
        get id(): number
        blur: boolean;
        static readonly NOT_ASSIGNED: (-1) & (number);
        id: number;
        mipmap: boolean;
    }
    type AbstractTexture_ = AbstractTexture;
    class ShootingStarItem extends Internal.BlockItem implements Internal.ShootingStar {
        constructor(block: Internal.ShootingStarBlock_, settings: Internal.Item$Properties_)
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        static setBlockEntityData(arg0: Internal.ItemStack_, arg1: Internal.BlockEntityType_<any>, arg2: Internal.CompoundTag_): void;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        allowContinuingBlockBreaking(player: Internal.Player_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        abstract moonlight$addAdditionalBehavior(arg0: Internal.AdditionalItemPlacement_): void;
        isFireResistant(): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        static isHardened(itemStack: Internal.ItemStack_): boolean;
        appendHoverText(stack: Internal.ItemStack_, world: Internal.Level_, tooltip: Internal.List_<net.minecraft.network.chat.Component>, context: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        abstract moonlight$getClientAnimationExtension(): any;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        fabric_setCustomDamageHandler(handler: Internal.CustomDamageHandler_): void;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getBarColor(arg0: Internal.ItemStack_): number;
        getOrCreateDescriptionId(): string;
        getItem(): Internal.Item;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        getShootingStarType(): Internal.ShootingStar$Type;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): InteractionResult;
        abstract moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        abstract moonlight$setClientAnimationExtension(arg0: any): void;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        canPlace(arg0: Internal.BlockPlaceContext_, arg1: Internal.BlockState_): boolean;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        handler$dfl000$revelationary$getCloakedName(stack: Internal.ItemStack_, callbackInfoReturnable: Internal.CallbackInfoReturnable_<any>): void;
        isEdible(): boolean;
        getAttributeModifiers(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        static getBlockEntityData(arg0: Internal.ItemStack_): Internal.CompoundTag;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        cardinal_createComponents(stack: Internal.ItemStack_): Internal.ComponentContainer;
        removeFromBlockToItemMap(arg0: Internal.Map_<Internal.Block, Internal.Item>, arg1: Internal.Item_): void;
        isFoil(arg0: Internal.ItemStack_): boolean;
        "getAttributeModifiers(net.minecraft.world.entity.EquipmentSlot,net.minecraft.world.item.ItemStack)"(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        getEntityForStack(world: Internal.Level_, pos: Vec3d_, stack: Internal.ItemStack_): Internal.ShootingStarEntity;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        fabric_getEquipmentSlotProvider(): Internal.EquipmentSlotProvider;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        static getRemainingHits(itemStack: Internal.ItemStack_): number;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        static setHardened(itemStack: Internal.ItemStack_): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        static updateCustomBlockEntityTag(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.ItemStack_): boolean;
        owo$tab(): number;
        /**
         * @deprecated
        */
        getPlaceSound(arg0: Internal.BlockState_): Internal.SoundEvent;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        getBlock(): Internal.Block;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        registerBlocks(arg0: Internal.Map_<Internal.Block, Internal.Item>, arg1: Internal.Item_): void;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        static getWithRemainingHits(shootingStarItem: Internal.ShootingStarItem_, remainingHits: number, hardened: boolean): Internal.ItemStack;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vector3f;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        "getAttributeModifiers(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.EquipmentSlot)"(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        static "getWithRemainingHits(de.dafuqs.spectrum.blocks.shooting_star.ShootingStarItem,int,boolean)"(shootingStarItem: Internal.ShootingStarItem_, remainingHits: number, hardened: boolean): Internal.ItemStack;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        allowNbtUpdateAnimation(player: Internal.Player_, hand: Internal.InteractionHand_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        fabric_getCachedItemVariant(): Internal.ItemVariant;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        fabric_getCustomDamageHandler(): Internal.CustomDamageHandler;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        static getPlayerPOVHitResult(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.ClipContext$Fluid_): Internal.BlockHitResult;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        mustSurvive(): boolean;
        equals(arg0: any): boolean;
        setRarity(arg0: Internal.Rarity_): void;
        getRecipeRemainder(stack: Internal.ItemStack_): Internal.ItemStack;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        static "getWithRemainingHits(net.minecraft.world.item.ItemStack,int,boolean)"(stack: Internal.ItemStack_, remainingHits: number, hardened: boolean): Internal.ItemStack;
        onDestroyed(arg0: Internal.ItemEntity_): void;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        canBeHurtBy(arg0: DamageSource_): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        fabric_setEquipmentSlotProvider(equipmentSlotProvider: Internal.EquipmentSlotProvider_): void;
        getDescriptionId(): string;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        getPlaceSound(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): Internal.SoundEvent;
        zeta$setHumanoidArmorModel(arg0: Internal.HumanoidArmorModelGetter_): void;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: DamageSource_): void;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        getDescription(): net.minecraft.network.chat.Component;
        owo$stackGenerator(): Internal.BiConsumer<any, any>;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        useOn(context: Internal.UseOnContext_): InteractionResult;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        handler$ebb000$connectormod$redirectIsPiglinCurrency(arg0: Internal.ItemStack_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        setAttackDamage(attackDamage: number): void;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        toString(): string;
        /**
         * @deprecated
        */
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        modifyReturnValue$ffm000$quark$overrideOtherStackedOnMe(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_, arg3: Internal.Slot_, arg4: Internal.ClickAction_, arg5: Internal.Player_, arg6: Internal.SlotAccess_): boolean;
        getId(): string;
        handler$fbm000$moonlight$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        static getWithRemainingHits(stack: Internal.ItemStack_, remainingHits: number, hardened: boolean): Internal.ItemStack;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        isSuitableFor(stack: Internal.ItemStack_, state: Internal.BlockState_): boolean;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        puzzleslib$setRenderProperties(arg0: any): void;
        notify(): void;
        quark$getPlacementState(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getPlacementState(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        updateCustomBlockEntityTag(arg0: BlockPos_, arg1: Internal.Level_, arg2: Internal.Player_, arg3: Internal.ItemStack_, arg4: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        place(arg0: Internal.BlockPlaceContext_): InteractionResult;
        zeta$setBlockEntityWithoutLevelRenderer(arg0: Internal.BlockEntityWithoutLevelRenderer_): void;
        handler$cog000$croptopia$overrideConstructor(arg0: Internal.Item$Properties_, arg1: Internal.CallbackInfo_): void;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        updatePlacementContext(arg0: Internal.BlockPlaceContext_): Internal.BlockPlaceContext;
        getEatingSound(): Internal.SoundEvent;
        owo$setGroup(group: Internal.CreativeModeTab_): void;
        puzzleslib$getRenderProperties(): any;
        canBeDepleted(): boolean;
        placeBlock(arg0: Internal.BlockPlaceContext_, arg1: Internal.BlockState_): boolean;
        getDamage(arg0: Internal.ItemStack_): number;
        wait(arg0: number, arg1: number): void;
        getMod(): string;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        owo$group(): Internal.CreativeModeTab;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        puzzleslib$setBlock(arg0: Internal.Block_): void;
        modifyReturnValue$ffm000$quark$overrideStackedOnOther(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_): boolean;
        get drinkingSound(): Internal.SoundEvent
        get fireResistant(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set maxDamage(arg0: number)
        get orCreateDescriptionId(): string
        get item(): Internal.Item
        get class(): typeof any
        get renderPropertiesInternal(): any
        get shootingStarType(): Internal.ShootingStar$Type
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        get edible(): boolean
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        set hardened(itemStack: Internal.ItemStack_)
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        get block(): Internal.Block
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        set nameKey(arg0: string)
        get idLocation(): ResourceLocation
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
        set rarity(arg0: Internal.Rarity_)
        get complex(): boolean
        get descriptionId(): string
        get creativeTab(): string
        set burnTime(i: number)
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        set itemBuilder(b: Internal.ItemBuilder_)
        set attackDamage(attackDamage: number)
        /**
         * @deprecated
        */
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        /**
         * @deprecated
        */
        get maxStackSize(): number
        get eatingSound(): Internal.SoundEvent
        get mod(): string
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
    }
    type ShootingStarItem_ = ShootingStarItem;
    abstract class GrowingPlantHeadBlock extends Internal.GrowingPlantBlock implements Internal.BonemealableBlock {
        constructor(arg0: Internal.BlockBehaviour$Properties_, arg1: Internal.Direction_, arg2: Internal.VoxelShape_, arg3: boolean, arg4: number)
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        performBonemeal(arg0: Internal.ServerLevel_, arg1: Internal.RandomSource_, arg2: BlockPos_, arg3: Internal.BlockState_): void;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getSettings(): Internal.BlockBehaviour$Properties;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        getTypeData(): Internal.CompoundTag;
        setFriction(arg0: number): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getSpeedFactor(): number;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        canAttachTo(arg0: Internal.BlockState_): boolean;
        playerDestroy(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Player_): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Internal.Player_): Internal.ItemStack;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        getRenderPropertiesInternal(): any;
        needsDynamicNodeTypeCheck(): boolean;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        setRequiresTool(v: boolean): void;
        asBlock(): Internal.Block;
        isMaxAge(arg0: Internal.BlockState_): boolean;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        puzzleslib$setItem(arg0: Internal.Item_): void;
        getGrowIntoState(arg0: Internal.BlockState_, arg1: Internal.RandomSource_): Internal.BlockState;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        /**
         * @deprecated
        */
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        "getStateForPlacement(net.minecraft.world.level.LevelAccessor)"(arg0: Internal.LevelAccessor_): Internal.BlockState;
        lychee$isTickable(): boolean;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        isBonemealSuccess(arg0: Internal.Level_, arg1: Internal.RandomSource_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        /**
         * @deprecated
        */
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        defaultBlockState(): Internal.BlockState;
        updateBodyAfterConvertedFromHead(arg0: Internal.BlockState_, arg1: Internal.BlockState_): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        spawnDestroyParticles(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_): void;
        wait(): void;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Internal.Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        abstract getBodyBlock(): Internal.Block;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(shape: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        setIsRandomlyTicking(arg0: boolean): void;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        registerDefaultState(arg0: Internal.BlockState_): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        /**
         * @deprecated
        */
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        /**
         * @deprecated
        */
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        isAir(arg0: Internal.BlockState_): boolean;
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        getMaxAgeState(arg0: Internal.BlockState_): Internal.BlockState;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        needsDynamicBurningCheck(): boolean;
        getDescriptionId(): string;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        handler$bob000$radium$postConstruct(p_i241196_1_: Internal.BlockBehaviour$Properties_, ci: Internal.CallbackInfo_): void;
        tryDropExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: Internal.ItemStack_, arg3: Internal.IntProvider_): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        handler$eok000$particular$spawnParticles(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, random: Internal.RandomSource_, ci: Internal.CallbackInfo_): void;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        setDrops(arg0: ResourceLocation_): void;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        getStateForPlacement(arg0: Internal.LevelAccessor_): Internal.BlockState;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        abstract canGrowInto(arg0: Internal.BlockState_): boolean;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        isValidBonemealTarget(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: boolean): boolean;
        getBlockProperties(): Internal.BlockBehaviour$Properties;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getShapeForEachState(arg0: Internal.Function_<Internal.BlockState, Internal.VoxelShape>): Internal.ImmutableMap<Internal.BlockState, Internal.VoxelShape>;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        getFriction(): number;
        getHeadBlock(): this;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        createBlockStateDefinition(arg0: Internal.StateDefinition$Builder_<Internal.Block, Internal.BlockState>): void;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        notify(): void;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        abstract getBlocksToGrowWhenBonemealed(arg0: Internal.RandomSource_): number;
        handler$dji000$spectrum$afterBreak(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        setDestroySpeed(v: number): void;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        handler$zbh000$additionalentityattributes$additionalEntityAttributes$saveBreakingPlayer(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        arch$holder(): Internal.Holder<Internal.Block>;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        "getStateForPlacement(net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        /**
         * @deprecated
        */
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): void;
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        lychee$setTickable(arg0: boolean): void;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        get settings(): Internal.BlockBehaviour$Properties
        /**
         * @deprecated
        */
        get explosionResistance(): number
        get typeData(): Internal.CompoundTag
        set friction(arg0: number)
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        get bodyBlock(): Internal.Block
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get descriptionId(): string
        get jumpFactor(): number
        set drops(arg0: ResourceLocation_)
        set speedFactor(arg0: number)
        get blockProperties(): Internal.BlockBehaviour$Properties
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        get headBlock(): Internal.GrowingPlantHeadBlock
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get mod(): string
        set hasCollision(arg0: boolean)
        static readonly AGE: (Internal.IntegerProperty) & (Internal.IntegerProperty);
        static readonly MAX_AGE: (25) & (number);
    }
    type GrowingPlantHeadBlock_ = GrowingPlantHeadBlock;
    class DimensionHighlighterHandler {
        constructor(arg0: Internal.MapDimension_, arg1: Internal.ResourceKey_<Internal.Level>, arg2: Internal.HighlighterRegistry_)
        getClass(): typeof any;
        clearCachedHashes(): void;
        toString(): string;
        notifyAll(): void;
        static getZFromKey(arg0: number): number;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        getBlockHighlightSubtleTooltip(arg0: number, arg1: number, arg2: boolean): net.minecraft.network.chat.Component;
        applyChunkHighlightColors(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.PoolTextureDirectBufferUnit_, arg5: Internal.PoolTextureDirectBufferUnit_, arg6: boolean, arg7: boolean, arg8: boolean): Internal.PoolTextureDirectBufferUnit;
        static getKey(arg0: number, arg1: number): number;
        shouldApplyRegionHighlights(arg0: number, arg1: number, arg2: boolean): boolean;
        static getXFromKey(arg0: number): number;
        clearCachedHash(arg0: number, arg1: number): void;
        hashCode(): number;
        getRegionHash(arg0: number, arg1: number): number;
        wait(): void;
        wait(arg0: number): void;
        getBlockHighlightBluntTooltip(arg0: number, arg1: number, arg2: boolean): net.minecraft.network.chat.Component;
        equals(arg0: any): boolean;
        shouldApplyTileChunkHighlights(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): boolean;
        get class(): typeof any
    }
    type DimensionHighlighterHandler_ = DimensionHighlighterHandler;
    class ModifiableBiomeInfo$BiomeInfo$Builder {
        getClimateSettings(): Internal.ClimateSettingsBuilder;
        getClass(): typeof any;
        toString(): string;
        getMobSpawnSettings(): Internal.MobSpawnSettingsBuilder;
        notifyAll(): void;
        static copyOf(arg0: Internal.ModifiableBiomeInfo$BiomeInfo_): Internal.ModifiableBiomeInfo$BiomeInfo$Builder;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        hashCode(): number;
        wait(): void;
        wait(arg0: number): void;
        getGenerationSettings(): Internal.BiomeGenerationSettingsBuilder;
        equals(arg0: any): boolean;
        getSpecialEffects(): Internal.BiomeSpecialEffectsBuilder;
        build(): Internal.ModifiableBiomeInfo$BiomeInfo;
        get climateSettings(): Internal.ClimateSettingsBuilder
        get class(): typeof any
        get mobSpawnSettings(): Internal.MobSpawnSettingsBuilder
        get generationSettings(): Internal.BiomeGenerationSettingsBuilder
        get specialEffects(): Internal.BiomeSpecialEffectsBuilder
    }
    type ModifiableBiomeInfo$BiomeInfo$Builder_ = ModifiableBiomeInfo$BiomeInfo$Builder;
    class FloatBlock extends Internal.FallingBlock {
        constructor(settings: Internal.BlockBehaviour$Properties_, gravityMod: number)
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getSettings(): Internal.BlockBehaviour$Properties;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        getTypeData(): Internal.CompoundTag;
        setFriction(arg0: number): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getSpeedFactor(): number;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        playerDestroy(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Player_): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Internal.Player_): Internal.ItemStack;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        getRenderPropertiesInternal(): any;
        needsDynamicNodeTypeCheck(): boolean;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        setRequiresTool(v: boolean): void;
        static isFree(arg0: Internal.BlockState_): boolean;
        asBlock(): Internal.Block;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        puzzleslib$setItem(arg0: Internal.Item_): void;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        /**
         * @deprecated
        */
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        tick(state: Internal.BlockState_, world: Internal.ServerLevel_, pos: BlockPos_, random: Internal.RandomSource_): void;
        lychee$isTickable(): boolean;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        onLand(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.FallingBlockEntity_): void;
        /**
         * @deprecated
        */
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        /**
         * @deprecated
        */
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        spawnDestroyParticles(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_): void;
        wait(): void;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Internal.Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        updateShape(state: Internal.BlockState_, direction: Internal.Direction_, facingState: Internal.BlockState_, world: Internal.LevelAccessor_, blockPos: BlockPos_, facingPos: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(shape: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        setIsRandomlyTicking(arg0: boolean): void;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        registerDefaultState(arg0: Internal.BlockState_): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        /**
         * @deprecated
        */
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        /**
         * @deprecated
        */
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        isAir(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        onBrokenAfterFall(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.FallingBlockEntity_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        needsDynamicBurningCheck(): boolean;
        getDescriptionId(): string;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        handler$bob000$radium$postConstruct(p_i241196_1_: Internal.BlockBehaviour$Properties_, ci: Internal.CallbackInfo_): void;
        tryDropExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: Internal.ItemStack_, arg3: Internal.IntProvider_): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        handler$eok000$particular$spawnParticles(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, random: Internal.RandomSource_, ci: Internal.CallbackInfo_): void;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        setDrops(arg0: ResourceLocation_): void;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        getGravityMod(): number;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        getBlockProperties(): Internal.BlockBehaviour$Properties;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getShapeForEachState(arg0: Internal.Function_<Internal.BlockState, Internal.VoxelShape>): Internal.ImmutableMap<Internal.BlockState, Internal.VoxelShape>;
        getId(): string;
        getLootTable(): ResourceLocation;
        getFallDamageSource(arg0: Internal.Entity_): DamageSource;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        onPlace(state: Internal.BlockState_, world: Internal.Level_, blockPos: BlockPos_, oldState: Internal.BlockState_, notify: boolean): void;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        getFriction(): number;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        createBlockStateDefinition(arg0: Internal.StateDefinition$Builder_<Internal.Block, Internal.BlockState>): void;
        falling(arg0: Internal.FallingBlockEntity_): void;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        notify(): void;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        getDustColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        handler$dji000$spectrum$afterBreak(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        setDestroySpeed(v: number): void;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        handler$zbh000$additionalentityattributes$additionalEntityAttributes$saveBreakingPlayer(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        arch$holder(): Internal.Holder<Internal.Block>;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): void;
        lychee$setTickable(arg0: boolean): void;
        /**
         * @deprecated
        */
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        getDelayAfterPlace(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        get settings(): Internal.BlockBehaviour$Properties
        /**
         * @deprecated
        */
        get explosionResistance(): number
        get typeData(): Internal.CompoundTag
        set friction(arg0: number)
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get descriptionId(): string
        get jumpFactor(): number
        set drops(arg0: ResourceLocation_)
        get gravityMod(): number
        set speedFactor(arg0: number)
        get blockProperties(): Internal.BlockBehaviour$Properties
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get mod(): string
        get delayAfterPlace(): number
        set hasCollision(arg0: boolean)
    }
    type FloatBlock_ = FloatBlock;
    class IRecipeTransferError$Type extends Internal.Enum<Internal.IRecipeTransferError$Type> {
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        getClass(): typeof any;
        static valueOf(arg0: string): Internal.IRecipeTransferError$Type;
        toString(): string;
        notifyAll(): void;
        getDeclaringClass(): typeof Internal.IRecipeTransferError$Type;
        compareTo(arg0: Internal.IRecipeTransferError$Type_): number;
        notify(): void;
        "compareTo(mezz.jei.api.recipe.transfer.IRecipeTransferError$Type)"(arg0: Internal.IRecipeTransferError$Type_): number;
        wait(arg0: number, arg1: number): void;
        compareTo(arg0: any): number;
        name(): string;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.IRecipeTransferError$Type>>;
        hashCode(): number;
        ordinal(): number;
        wait(): void;
        static values(): Internal.IRecipeTransferError$Type[];
        wait(arg0: number): void;
        "compareTo(java.lang.Object)"(arg0: any): number;
        equals(arg0: any): boolean;
        get class(): typeof any
        get declaringClass(): typeof Internal.IRecipeTransferError$Type
        static readonly INTERNAL: (Internal.IRecipeTransferError$Type) & (Internal.IRecipeTransferError$Type);
        static readonly COSMETIC: (Internal.IRecipeTransferError$Type) & (Internal.IRecipeTransferError$Type);
        static readonly USER_FACING: (Internal.IRecipeTransferError$Type) & (Internal.IRecipeTransferError$Type);
        readonly allowsTransfer: boolean;
    }
    type IRecipeTransferError$Type_ = IRecipeTransferError$Type | "internal" | "user_facing" | "cosmetic";
    abstract class SnapshotParticipant <T> implements Internal.TransactionContext$CloseCallback, Internal.TransactionContext$OuterCloseCallback {
        constructor()
        getClass(): typeof any;
        hashCode(): number;
        toString(): string;
        afterOuterClose(result: Internal.TransactionContext$Result_): void;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        updateSnapshots(transaction: Internal.TransactionContext_): void;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        onClose(transaction: Internal.TransactionContext_, result: Internal.TransactionContext$Result_): void;
        get class(): typeof any
    }
    type SnapshotParticipant_<T> = SnapshotParticipant<T>;
    class RealmsNotification {
        getClass(): typeof any;
        dismissable(): boolean;
        toString(): string;
        notifyAll(): void;
        uuid(): Internal.UUID;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        static parseList(arg0: string): Internal.List<Internal.RealmsNotification>;
        hashCode(): number;
        wait(): void;
        seen(): boolean;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        get class(): typeof any
    }
    type RealmsNotification_ = RealmsNotification;
    interface IDrawable {
        abstract draw(arg0: Internal.GuiGraphics_, arg1: number, arg2: number): void;
        abstract getWidth(): number;
        abstract getHeight(): number;
        draw(arg0: Internal.GuiGraphics_): void;
        get width(): number
        get height(): number
    }
    type IDrawable_ = IDrawable;
    interface BucketPickup extends Internal.IForgeBucketPickup {
        getPickupSound(arg0: Internal.BlockState_): Internal.Optional<Internal.SoundEvent>;
        abstract pickupBlock(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        /**
         * @deprecated
        */
        abstract getPickupSound(): Internal.Optional<Internal.SoundEvent>;
        /**
         * @deprecated
        */
        get pickupSound(): Internal.Optional<Internal.SoundEvent>
    }
    type BucketPickup_ = BucketPickup;
    class EnumGetMethod extends Internal.Enum<Internal.EnumGetMethod> {
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        getClass(): typeof any;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.EnumGetMethod>>;
        "compareTo(com.electronwill.nightconfig.core.EnumGetMethod)"(arg0: Internal.EnumGetMethod_): number;
        toString(): string;
        isCaseSensitive(): boolean;
        notifyAll(): void;
        static valueOf(arg0: string): Internal.EnumGetMethod;
        validate<T extends Internal.Enum<T>>(arg0: any, arg1: T): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get<T extends Internal.Enum<T>>(arg0: any, arg1: T): T;
        compareTo(arg0: any): number;
        name(): string;
        static values(): Internal.EnumGetMethod[];
        hashCode(): number;
        compareTo(arg0: Internal.EnumGetMethod_): number;
        ordinal(): number;
        wait(): void;
        isOrdinalOk(): boolean;
        wait(arg0: number): void;
        "compareTo(java.lang.Object)"(arg0: any): number;
        equals(arg0: any): boolean;
        getDeclaringClass(): typeof Internal.EnumGetMethod;
        get class(): typeof any
        get caseSensitive(): boolean
        get ordinalOk(): boolean
        get declaringClass(): typeof Internal.EnumGetMethod
        static readonly ORDINAL_OR_NAME: (Internal.EnumGetMethod) & (Internal.EnumGetMethod);
        static readonly NAME: (Internal.EnumGetMethod) & (Internal.EnumGetMethod);
        static readonly NAME_IGNORECASE: (Internal.EnumGetMethod) & (Internal.EnumGetMethod);
        static readonly ORDINAL_OR_NAME_IGNORECASE: (Internal.EnumGetMethod) & (Internal.EnumGetMethod);
    }
    type EnumGetMethod_ = "name" | "ordinal_or_name" | EnumGetMethod | "ordinal_or_name_ignorecase" | "name_ignorecase";
    class PlaySoundEvent extends net.minecraftforge.client.event.sound.SoundEvent {
        constructor()
        constructor(arg0: Internal.SoundEngine_, arg1: Internal.SoundInstance_)
        getResult(): Internal.Event$Result;
        setCanceled(arg0: boolean): void;
        getClass(): typeof any;
        setSound(arg0: Internal.SoundInstance_): void;
        toString(): string;
        setPhase(arg0: Internal.EventPriority_): void;
        notifyAll(): void;
        isCanceled(): boolean;
        getOriginalSound(): Internal.SoundInstance;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        hasResult(): boolean;
        setResult(arg0: Internal.Event$Result_): void;
        getSound(): Internal.SoundInstance;
        hashCode(): number;
        isCancelable(): boolean;
        wait(): void;
        getName(): string;
        getListenerList(): Internal.ListenerList;
        wait(arg0: number): void;
        getPhase(): Internal.EventPriority;
        equals(arg0: any): boolean;
        getEngine(): Internal.SoundEngine;
        get result(): Internal.Event$Result
        set canceled(arg0: boolean)
        get class(): typeof any
        set sound(arg0: Internal.SoundInstance_)
        set phase(arg0: Internal.EventPriority_)
        get canceled(): boolean
        get originalSound(): Internal.SoundInstance
        set result(arg0: Internal.Event$Result_)
        get sound(): Internal.SoundInstance
        get cancelable(): boolean
        get name(): string
        get listenerList(): Internal.ListenerList
        get phase(): Internal.EventPriority
        get engine(): Internal.SoundEngine
    }
    type PlaySoundEvent_ = PlaySoundEvent;
    interface IEventBus {
        abstract unregister(arg0: any): void;
        abstract addListener<T extends net.minecraftforge.eventbus.api.Event>(arg0: Internal.EventPriority_, arg1: boolean, arg2: Internal.Consumer_<T>): void;
        abstract addGenericListener<T extends Internal.GenericEvent<any>, F>(arg0: F, arg1: Internal.EventPriority_, arg2: Internal.Consumer_<T>): void;
        abstract addGenericListener<T extends Internal.GenericEvent<any>, F>(arg0: F, arg1: Internal.Consumer_<T>): void;
        abstract post(arg0: net.minecraftforge.eventbus.api.Event_): boolean;
        abstract post(arg0: net.minecraftforge.eventbus.api.Event_, arg1: Internal.IEventBusInvokeDispatcher_): boolean;
        abstract addGenericListener<T extends Internal.GenericEvent<any>, F>(arg0: F, arg1: Internal.EventPriority_, arg2: boolean, arg3: Internal.Consumer_<T>): void;
        abstract register(arg0: any): void;
        abstract addGenericListener<T extends Internal.GenericEvent<any>, F>(arg0: F, arg1: Internal.EventPriority_, arg2: boolean, arg3: T, arg4: Internal.Consumer_<T>): void;
        abstract shutdown(): void;
        abstract start(): void;
        abstract addListener<T extends net.minecraftforge.eventbus.api.Event>(arg0: Internal.EventPriority_, arg1: Internal.Consumer_<T>): void;
        abstract addListener<T extends net.minecraftforge.eventbus.api.Event>(arg0: Internal.EventPriority_, arg1: boolean, arg2: T, arg3: Internal.Consumer_<T>): void;
        abstract addListener<T extends net.minecraftforge.eventbus.api.Event>(arg0: Internal.Consumer_<T>): void;
    }
    type IEventBus_ = IEventBus;
    interface IRecipeIngredientSlot extends Internal.IIngredientSlot {
        getXEIChance(): number;
        getXEIIngredientOverMouse(mouseX: number, mouseY: number): any;
        clearTooltipCallback(): void;
        addTooltipCallback(callback: Internal.Consumer_<Internal.List<net.minecraft.network.chat.Component>>): void;
        self(): com.lowdragmc.lowdraglib.gui.widget.Widget;
        getIngredientIO(): Internal.IngredientIO;
        abstract getXEIIngredients(): Internal.List<any>;
        get XEIChance(): number
        get ingredientIO(): Internal.IngredientIO
        get XEIIngredients(): Internal.List<any>
        (): Internal.List_<any>;
    }
    type IRecipeIngredientSlot_ = IRecipeIngredientSlot | (()=> Internal.List_<any>);
    class Proxy$Type extends Internal.Enum<Internal.Proxy$Type> {
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        getClass(): typeof any;
        compareTo(arg0: Internal.Proxy$Type_): number;
        toString(): string;
        notifyAll(): void;
        "compareTo(java.net.Proxy$Type)"(arg0: Internal.Proxy$Type_): number;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.Proxy$Type>>;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        compareTo(arg0: any): number;
        name(): string;
        hashCode(): number;
        static valueOf(arg0: string): Internal.Proxy$Type;
        ordinal(): number;
        wait(): void;
        wait(arg0: number): void;
        static values(): Internal.Proxy$Type[];
        getDeclaringClass(): typeof Internal.Proxy$Type;
        "compareTo(java.lang.Object)"(arg0: any): number;
        equals(arg0: any): boolean;
        get class(): typeof any
        get declaringClass(): typeof Internal.Proxy$Type
        static readonly SOCKS: (Internal.Proxy$Type) & (Internal.Proxy$Type);
        static readonly HTTP: (Internal.Proxy$Type) & (Internal.Proxy$Type);
        static readonly DIRECT: (Internal.Proxy$Type) & (Internal.Proxy$Type);
    }
    type Proxy$Type_ = Proxy$Type | "http" | "socks" | "direct";
    class GlisteringStemBlock extends Internal.StemBlock {
        constructor(gourdBlock: Internal.StemGrownBlock_, supplier: Internal.Supplier_<Internal.Item>, settings: Internal.BlockBehaviour$Properties_)
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        performBonemeal(arg0: Internal.ServerLevel_, arg1: Internal.RandomSource_, arg2: BlockPos_, arg3: Internal.BlockState_): void;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        "handler$djl000$spectrum$isFertilizable(net.minecraft.world.level.block.state.BlockState,net.minecraft.server.level.ServerLevel,net.minecraft.core.BlockPos,net.minecraft.util.RandomSource,org.spongepowered.asm.mixin.injection.callback.CallbackInfo)"(state: Internal.BlockState_, world: Internal.ServerLevel_, pos: BlockPos_, random: Internal.RandomSource_, ci: Internal.CallbackInfo_): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getSettings(): Internal.BlockBehaviour$Properties;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        getTypeData(): Internal.CompoundTag;
        setFriction(arg0: number): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getSpeedFactor(): number;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        playerDestroy(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Player_): void;
        handler$djl000$spectrum$isFertilizable(state: Internal.BlockState_, world: Internal.ServerLevel_, pos: BlockPos_, random: Internal.RandomSource_, ci: Internal.CallbackInfo_): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Internal.Player_): Internal.ItemStack;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        getRenderPropertiesInternal(): any;
        needsDynamicNodeTypeCheck(): boolean;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        setRequiresTool(v: boolean): void;
        asBlock(): Internal.Block;
        getPlant(arg0: Internal.BlockGetter_, arg1: BlockPos_): Internal.BlockState;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        puzzleslib$setItem(arg0: Internal.Item_): void;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        /**
         * @deprecated
        */
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        /**
         * @deprecated
        */
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        lychee$isTickable(): boolean;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        isBonemealSuccess(arg0: Internal.Level_, arg1: Internal.RandomSource_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        /**
         * @deprecated
        */
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        mayPlaceOn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        spawnDestroyParticles(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_): void;
        wait(): void;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Internal.Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(shape: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        setIsRandomlyTicking(arg0: boolean): void;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        registerDefaultState(arg0: Internal.BlockState_): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        /**
         * @deprecated
        */
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        isAir(arg0: Internal.BlockState_): boolean;
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        needsDynamicBurningCheck(): boolean;
        getDescriptionId(): string;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        handler$bob000$radium$postConstruct(p_i241196_1_: Internal.BlockBehaviour$Properties_, ci: Internal.CallbackInfo_): void;
        tryDropExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: Internal.ItemStack_, arg3: Internal.IntProvider_): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        handler$eok000$particular$spawnParticles(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, random: Internal.RandomSource_, ci: Internal.CallbackInfo_): void;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        setDrops(arg0: ResourceLocation_): void;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        handler$zjk001$balm$mayPlaceOn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CallbackInfoReturnable_<any>): void;
        isValidBonemealTarget(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: boolean): boolean;
        getBlockProperties(): Internal.BlockBehaviour$Properties;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getShapeForEachState(arg0: Internal.Function_<Internal.BlockState, Internal.VoxelShape>): Internal.ImmutableMap<Internal.BlockState, Internal.VoxelShape>;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        getFriction(): number;
        handler$djl000$spectrum$isFertilizable(world: Internal.LevelReader_, pos: BlockPos_, state: Internal.BlockState_, isClient: boolean, cir: Internal.CallbackInfoReturnable_<any>): void;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        createBlockStateDefinition(arg0: Internal.StateDefinition$Builder_<Internal.Block, Internal.BlockState>): void;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        notify(): void;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        modifyReturnValue$dma000$spectrum$canPlantOnTopOfCustomFarmland(original: boolean, floor: Internal.BlockState_, world: Internal.BlockGetter_, pos: BlockPos_): boolean;
        handler$dji000$spectrum$afterBreak(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        setDestroySpeed(v: number): void;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        handler$zbh000$additionalentityattributes$additionalEntityAttributes$saveBreakingPlayer(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        arch$holder(): Internal.Holder<Internal.Block>;
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        getPlantType(arg0: Internal.BlockGetter_, arg1: BlockPos_): Internal.PlantType;
        handler$djl000$spectrum$preventGrowthOnShaleClay(world: Internal.ServerLevel_, random: Internal.RandomSource_, pos: BlockPos_, state: Internal.BlockState_, ci: Internal.CallbackInfo_): void;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        "handler$djl000$spectrum$isFertilizable(net.minecraft.world.level.LevelReader,net.minecraft.core.BlockPos,net.minecraft.world.level.block.state.BlockState,boolean,org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable)"(world: Internal.LevelReader_, pos: BlockPos_, state: Internal.BlockState_, isClient: boolean, cir: Internal.CallbackInfoReturnable_<any>): void;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): void;
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        lychee$setTickable(arg0: boolean): void;
        getFruit(): Internal.StemGrownBlock;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        get settings(): Internal.BlockBehaviour$Properties
        /**
         * @deprecated
        */
        get explosionResistance(): number
        get typeData(): Internal.CompoundTag
        set friction(arg0: number)
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get descriptionId(): string
        get jumpFactor(): number
        set drops(arg0: ResourceLocation_)
        set speedFactor(arg0: number)
        get blockProperties(): Internal.BlockBehaviour$Properties
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get mod(): string
        get fruit(): Internal.StemGrownBlock
        set hasCollision(arg0: boolean)
    }
    type GlisteringStemBlock_ = GlisteringStemBlock;
    class EntityAttributeCreationEvent extends net.minecraftforge.eventbus.api.Event implements Internal.IModBusEvent {
        constructor()
        constructor(arg0: Internal.Map_<Internal.EntityType<Internal.LivingEntity>, Internal.AttributeSupplier>)
        getResult(): Internal.Event$Result;
        setCanceled(arg0: boolean): void;
        getClass(): typeof any;
        toString(): string;
        setPhase(arg0: Internal.EventPriority_): void;
        notifyAll(): void;
        isCanceled(): boolean;
        put(arg0: Internal.EntityType_<Internal.LivingEntity>, arg1: Internal.AttributeSupplier_): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        hasResult(): boolean;
        setResult(arg0: Internal.Event$Result_): void;
        hashCode(): number;
        isCancelable(): boolean;
        wait(): void;
        getListenerList(): Internal.ListenerList;
        wait(arg0: number): void;
        getPhase(): Internal.EventPriority;
        equals(arg0: any): boolean;
        get result(): Internal.Event$Result
        set canceled(arg0: boolean)
        get class(): typeof any
        set phase(arg0: Internal.EventPriority_)
        get canceled(): boolean
        set result(arg0: Internal.Event$Result_)
        get cancelable(): boolean
        get listenerList(): Internal.ListenerList
        get phase(): Internal.EventPriority
    }
    type EntityAttributeCreationEvent_ = EntityAttributeCreationEvent;
    class HatStandItem extends Internal.Item {
        constructor(properties: Internal.Item$Properties_)
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        allowContinuingBlockBreaking(player: Internal.Player_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        moonlight$addAdditionalBehavior(placementOverride: Internal.AdditionalItemPlacement_): void;
        isFireResistant(): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        moonlight$getClientAnimationExtension(): any;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        fabric_setCustomDamageHandler(handler: Internal.CustomDamageHandler_): void;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getBarColor(arg0: Internal.ItemStack_): number;
        getOrCreateDescriptionId(): string;
        getItem(): Internal.Item;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): InteractionResult;
        moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        moonlight$setClientAnimationExtension(obj: any): void;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        handler$dfl000$revelationary$getCloakedName(stack: Internal.ItemStack_, callbackInfoReturnable: Internal.CallbackInfoReturnable_<any>): void;
        isEdible(): boolean;
        getAttributeModifiers(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        cardinal_createComponents(stack: Internal.ItemStack_): Internal.ComponentContainer;
        isFoil(arg0: Internal.ItemStack_): boolean;
        "getAttributeModifiers(net.minecraft.world.entity.EquipmentSlot,net.minecraft.world.item.ItemStack)"(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        fabric_getEquipmentSlotProvider(): Internal.EquipmentSlotProvider;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        owo$tab(): number;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vector3f;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        "getAttributeModifiers(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.EquipmentSlot)"(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        allowNbtUpdateAnimation(player: Internal.Player_, hand: Internal.InteractionHand_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        fabric_getCachedItemVariant(): Internal.ItemVariant;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        fabric_getCustomDamageHandler(): Internal.CustomDamageHandler;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        static getPlayerPOVHitResult(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.ClipContext$Fluid_): Internal.BlockHitResult;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        equals(arg0: any): boolean;
        setRarity(arg0: Internal.Rarity_): void;
        getRecipeRemainder(stack: Internal.ItemStack_): Internal.ItemStack;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        /**
         * @deprecated
        */
        onDestroyed(arg0: Internal.ItemEntity_): void;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        canBeHurtBy(arg0: DamageSource_): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        fabric_setEquipmentSlotProvider(equipmentSlotProvider: Internal.EquipmentSlotProvider_): void;
        getDescriptionId(): string;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        zeta$setHumanoidArmorModel(arg0: Internal.HumanoidArmorModelGetter_): void;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: DamageSource_): void;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        getDescription(): net.minecraft.network.chat.Component;
        owo$stackGenerator(): Internal.BiConsumer<any, any>;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        useOn(context: Internal.UseOnContext_): InteractionResult;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        handler$ebb000$connectormod$redirectIsPiglinCurrency(arg0: Internal.ItemStack_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        setAttackDamage(attackDamage: number): void;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        toString(): string;
        /**
         * @deprecated
        */
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        modifyReturnValue$ffm000$quark$overrideOtherStackedOnMe(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_, arg3: Internal.Slot_, arg4: Internal.ClickAction_, arg5: Internal.Player_, arg6: Internal.SlotAccess_): boolean;
        getId(): string;
        handler$fbm000$moonlight$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        isSuitableFor(stack: Internal.ItemStack_, state: Internal.BlockState_): boolean;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        puzzleslib$setRenderProperties(arg0: any): void;
        notify(): void;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        zeta$setBlockEntityWithoutLevelRenderer(arg0: Internal.BlockEntityWithoutLevelRenderer_): void;
        handler$cog000$croptopia$overrideConstructor(arg0: Internal.Item$Properties_, arg1: Internal.CallbackInfo_): void;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        getEatingSound(): Internal.SoundEvent;
        owo$setGroup(group: Internal.CreativeModeTab_): void;
        puzzleslib$getRenderProperties(): any;
        canBeDepleted(): boolean;
        getDamage(arg0: Internal.ItemStack_): number;
        wait(arg0: number, arg1: number): void;
        getMod(): string;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        owo$group(): Internal.CreativeModeTab;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        modifyReturnValue$ffm000$quark$overrideStackedOnOther(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_): boolean;
        get drinkingSound(): Internal.SoundEvent
        get fireResistant(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set maxDamage(arg0: number)
        get orCreateDescriptionId(): string
        get item(): Internal.Item
        get class(): typeof any
        get renderPropertiesInternal(): any
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        get edible(): boolean
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        set nameKey(arg0: string)
        get idLocation(): ResourceLocation
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
        set rarity(arg0: Internal.Rarity_)
        get complex(): boolean
        get descriptionId(): string
        get creativeTab(): string
        set burnTime(i: number)
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        set itemBuilder(b: Internal.ItemBuilder_)
        set attackDamage(attackDamage: number)
        /**
         * @deprecated
        */
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        /**
         * @deprecated
        */
        get maxStackSize(): number
        get eatingSound(): Internal.SoundEvent
        get mod(): string
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
    }
    type HatStandItem_ = HatStandItem;
    class BaseFunction extends Internal.IdScriptableObject implements dev.latvian.mods.rhino.Function {
        constructor()
        constructor(scope: Internal.Scriptable_, prototype: Internal.Scriptable_)
        constructor(isGenerator: boolean)
        preventExtensions(): void;
        static getFunctionPrototype(scope: Internal.Scriptable_, cx: Internal.Context_): Internal.Scriptable;
        static "hasProperty(dev.latvian.mods.rhino.Scriptable,java.lang.String,dev.latvian.mods.rhino.Context)"(obj: Internal.Scriptable_, name: string, cx: Internal.Context_): boolean;
        setImmunePrototypeProperty(value: any): void;
        static getArrayPrototype(scope: Internal.Scriptable_, cx: Internal.Context_): Internal.Scriptable;
        static putProperty(obj: Internal.Scriptable_, key: Internal.Symbol_, value: any, cx: Internal.Context_): void;
        "get(dev.latvian.mods.rhino.Context,java.lang.String,dev.latvian.mods.rhino.Scriptable)"(cx: Internal.Context_, name: string, start: Internal.Scriptable_): any;
        static putProperty(obj: Internal.Scriptable_, name: string, value: any, cx: Internal.Context_): void;
        static "putProperty(dev.latvian.mods.rhino.Scriptable,int,java.lang.Object,dev.latvian.mods.rhino.Context)"(obj: Internal.Scriptable_, index: number, value: any, cx: Internal.Context_): void;
        abstract get(arg0: Internal.Context_, arg1: number, arg2: Internal.Scriptable_): any;
        abstract setParentScope(arg0: Internal.Scriptable_): void;
        "setAttributes(dev.latvian.mods.rhino.Context,int,int)"(cx: Internal.Context_, index: number, attributes: number): void;
        "put(dev.latvian.mods.rhino.Context,dev.latvian.mods.rhino.Symbol,dev.latvian.mods.rhino.Scriptable,java.lang.Object)"(cx: Internal.Context_, key: Internal.Symbol_, start: Internal.Scriptable_, value: any): void;
        getTypeOf(): Internal.MemberType;
        abstract getIds(arg0: Internal.Context_): any[];
        static getTopScopeValue(scope: Internal.Scriptable_, key: any, cx: Internal.Context_): any;
        defineOwnProperties(cx: Internal.Context_, props: Internal.ScriptableObject_): void;
        static deleteProperty(obj: Internal.Scriptable_, index: number, cx: Internal.Context_): boolean;
        "delete(dev.latvian.mods.rhino.Context,dev.latvian.mods.rhino.Symbol)"(cx: Internal.Context_, key: Internal.Symbol_): void;
        setAttributes(cx: Internal.Context_, name: string, attributes: number): void;
        associateValue(key: any, value: any): any;
        abstract getParentScope(): Internal.Scriptable;
        setAttributes(cx: Internal.Context_, key: Internal.Symbol_, attributes: number): void;
        static defineClass<T extends Internal.Scriptable>(scope: Internal.Scriptable_, clazz: T, cx: Internal.Context_): void;
        "delete(dev.latvian.mods.rhino.Context,java.lang.String)"(cx: Internal.Context_, name: string): void;
        getLength(): number;
        avoidObjectDetection(): boolean;
        static getClassPrototype(scope: Internal.Scriptable_, className: string, cx: Internal.Context_): Internal.Scriptable;
        put(cx: Internal.Context_, name: string, start: Internal.Scriptable_, value: any): void;
        static getProperty(obj: Internal.Scriptable_, key: Internal.Symbol_, cx: Internal.Context_): any;
        getClass(): typeof any;
        static hasProperty(obj: Internal.Scriptable_, name: string, cx: Internal.Context_): boolean;
        abstract "delete(dev.latvian.mods.rhino.Context,int)"(arg0: Internal.Context_, arg1: number): void;
        call(cx: Internal.Context_, scope: Internal.Scriptable_, thisObj: Internal.Scriptable_, args: any[]): any;
        hasInstance(cx: Internal.Context_, instance: Internal.Scriptable_): boolean;
        getExternalArrayData(): Internal.ExternalArrayData;
        abstract put(arg0: Internal.Context_, arg1: number, arg2: Internal.Scriptable_, arg3: any): void;
        static "getProperty(dev.latvian.mods.rhino.Scriptable,java.lang.String,dev.latvian.mods.rhino.Context)"(obj: Internal.Scriptable_, name: string, cx: Internal.Context_): any;
        "defineProperty(dev.latvian.mods.rhino.Context,dev.latvian.mods.rhino.Symbol,java.lang.Object,int)"(cx: Internal.Context_, key: Internal.Symbol_, value: any, attributes: number): void;
        "initPrototypeMethod(java.lang.Object,int,java.lang.String,java.lang.String,int,dev.latvian.mods.rhino.Context)"(tag: any, id: number, propertyName: string, functionName: string, arity: number, cx: Internal.Context_): Internal.IdFunctionObject;
        static defineConstProperty(destination: Internal.Scriptable_, propertyName: string, cx: Internal.Context_): void;
        sealObject(cx: Internal.Context_): void;
        initPrototypeMethod(tag: any, id: number, name: string, arity: number, cx: Internal.Context_): Internal.IdFunctionObject;
        abstract has(arg0: Internal.Context_, arg1: number, arg2: Internal.Scriptable_): boolean;
        createObject(cx: Internal.Context_, scope: Internal.Scriptable_): Internal.Scriptable;
        static deleteProperty(obj: Internal.Scriptable_, name: string, cx: Internal.Context_): boolean;
        "get(dev.latvian.mods.rhino.Context,dev.latvian.mods.rhino.Symbol,dev.latvian.mods.rhino.Scriptable)"(cx: Internal.Context_, key: Internal.Symbol_, start: Internal.Scriptable_): any;
        "initPrototypeValue(int,dev.latvian.mods.rhino.Symbol,java.lang.Object,int)"(id: number, key: Internal.Symbol_, value: any, attributes: number): void;
        static defineProperty(destination: Internal.Scriptable_, propertyName: string, value: any, attributes: number, cx: Internal.Context_): void;
        getAttributes(cx: Internal.Context_, index: number): number;
        static "deleteProperty(dev.latvian.mods.rhino.Scriptable,int,dev.latvian.mods.rhino.Context)"(obj: Internal.Scriptable_, index: number, cx: Internal.Context_): boolean;
        getArity(): number;
        toString(): string;
        notifyAll(): void;
        "initPrototypeValue(int,java.lang.String,java.lang.Object,int)"(id: number, name: string, value: any, attributes: number): void;
        setGetterOrSetter(cx: Internal.Context_, name: string, index: number, getterOrSetter: dev.latvian.mods.rhino.Callable_, isSetter: boolean): void;
        enumerationIteratorNext(cx: Internal.Context_, currentId: Internal.Consumer_<any>): boolean;
        static defineClass<T extends Internal.Scriptable>(scope: Internal.Scriptable_, clazz: T, sealed: boolean, mapInheritance: boolean, cx: Internal.Context_): string;
        has(cx: Internal.Context_, key: Internal.Symbol_, start: Internal.Scriptable_): boolean;
        static getProperty(obj: Internal.Scriptable_, name: string, cx: Internal.Context_): any;
        size(): number;
        static "putProperty(dev.latvian.mods.rhino.Scriptable,java.lang.String,java.lang.Object,dev.latvian.mods.rhino.Context)"(obj: Internal.Scriptable_, name: string, value: any, cx: Internal.Context_): void;
        execIdCall(f: Internal.IdFunctionObject_, cx: Internal.Context_, scope: Internal.Scriptable_, thisObj: Internal.Scriptable_, args: any[]): any;
        static getObjectPrototype(scope: Internal.Scriptable_, cx: Internal.Context_): Internal.Scriptable;
        wait(arg0: number): void;
        construct(cx: Internal.Context_, scope: Internal.Scriptable_, args: any[]): Internal.Scriptable;
        initPrototypeValue(id: number, key: Internal.Symbol_, value: any, attributes: number): void;
        defineProperty(cx: Internal.Context_, propertyName: string, value: any, attributes: number): void;
        initPrototypeValue(id: number, name: string, value: any, attributes: number): void;
        putConst(cx: Internal.Context_, name: string, start: Internal.Scriptable_, value: any): void;
        setAttributes(cx: Internal.Context_, index: number, attributes: number): void;
        static "getProperty(dev.latvian.mods.rhino.Scriptable,dev.latvian.mods.rhino.Symbol,dev.latvian.mods.rhino.Context)"(obj: Internal.Scriptable_, key: Internal.Symbol_, cx: Internal.Context_): any;
        defineProperty(cx: Internal.Context_, propertyName: string, delegateTo: any, getter: Internal.WrappedExecutable_, setter: Internal.WrappedExecutable_, attributes: number): void;
        getClassName(): string;
        defineFunctionProperties(cx: Internal.Context_, names: string[], clazz: typeof any, attributes: number): void;
        "delete"(cx: Internal.Context_, name: string): void;
        static putProperty(obj: Internal.Scriptable_, index: number, value: any, cx: Internal.Context_): void;
        abstract "delete"(arg0: Internal.Context_, arg1: number): void;
        "initPrototypeMethod(java.lang.Object,int,dev.latvian.mods.rhino.Symbol,java.lang.String,int,dev.latvian.mods.rhino.Context)"(tag: any, id: number, key: Internal.Symbol_, functionName: string, arity: number, cx: Internal.Context_): Internal.IdFunctionObject;
        static getGeneratorFunctionPrototype(scope: Internal.Scriptable_, cx: Internal.Context_): Internal.Scriptable;
        "put(dev.latvian.mods.rhino.Context,java.lang.String,dev.latvian.mods.rhino.Scriptable,java.lang.Object)"(cx: Internal.Context_, name: string, start: Internal.Scriptable_, value: any): void;
        static defineClass<T extends Internal.Scriptable>(scope: Internal.Scriptable_, clazz: T, sealed: boolean, cx: Internal.Context_): void;
        notify(): void;
        initPrototypeMethod(tag: any, id: number, propertyName: string, functionName: string, arity: number, cx: Internal.Context_): Internal.IdFunctionObject;
        static putConstProperty(obj: Internal.Scriptable_, name: string, value: any, cx: Internal.Context_): void;
        hasPrototypeMap(): boolean;
        static redefineProperty(obj: Internal.Scriptable_, name: string, isConst: boolean, cx: Internal.Context_): void;
        static "putProperty(dev.latvian.mods.rhino.Scriptable,dev.latvian.mods.rhino.Symbol,java.lang.Object,dev.latvian.mods.rhino.Context)"(obj: Internal.Scriptable_, key: Internal.Symbol_, value: any, cx: Internal.Context_): void;
        get(cx: Internal.Context_, key: any): any;
        get(cx: Internal.Context_, name: string, start: Internal.Scriptable_): any;
        abstract getPrototype(arg0: Internal.Context_): Internal.Scriptable;
        static getDefaultValue(object: Internal.Scriptable_, typeHint: typeof any, cx: Internal.Context_): any;
        abstract "put(dev.latvian.mods.rhino.Context,int,dev.latvian.mods.rhino.Scriptable,java.lang.Object)"(arg0: Internal.Context_, arg1: number, arg2: Internal.Scriptable_, arg3: any): void;
        enumerationIteratorHasNext(cx: Internal.Context_, currentId: Internal.Consumer_<any>): boolean;
        static "getProperty(dev.latvian.mods.rhino.Scriptable,int,dev.latvian.mods.rhino.Context)"(obj: Internal.Scriptable_, index: number, cx: Internal.Context_): any;
        abstract "has(dev.latvian.mods.rhino.Context,int,dev.latvian.mods.rhino.Scriptable)"(arg0: Internal.Context_, arg1: number, arg2: Internal.Scriptable_): boolean;
        isConst(name: string): boolean;
        initPrototypeConstructor(f: Internal.IdFunctionObject_, cx: Internal.Context_): void;
        getAttributes(cx: Internal.Context_, key: Internal.Symbol_): number;
        "getAttributes(dev.latvian.mods.rhino.Context,int)"(cx: Internal.Context_, index: number): number;
        static "deleteProperty(dev.latvian.mods.rhino.Scriptable,java.lang.String,dev.latvian.mods.rhino.Context)"(obj: Internal.Scriptable_, name: string, cx: Internal.Context_): boolean;
        isExtensible(): boolean;
        wait(): void;
        abstract setPrototype(arg0: Internal.Scriptable_): void;
        getGetterOrSetter(name: string, index: number, isSetter: boolean): any;
        getAttributes(cx: Internal.Context_, name: string): number;
        activatePrototypeMap(maxPrototypeId: number): void;
        static getPropertyIds(cx: Internal.Context_, obj: Internal.Scriptable_): any[];
        defineProperty(cx: Internal.Context_, key: Internal.Symbol_, value: any, attributes: number): void;
        getAssociatedValue(key: any): any;
        "defineProperty(dev.latvian.mods.rhino.Context,java.lang.String,java.lang.Object,int)"(cx: Internal.Context_, propertyName: string, value: any, attributes: number): void;
        "delete"(cx: Internal.Context_, key: Internal.Symbol_): void;
        initPrototypeMethod(tag: any, id: number, key: Internal.Symbol_, functionName: string, arity: number, cx: Internal.Context_): Internal.IdFunctionObject;
        static "hasProperty(dev.latvian.mods.rhino.Scriptable,int,dev.latvian.mods.rhino.Context)"(obj: Internal.Scriptable_, index: number, cx: Internal.Context_): boolean;
        static getProperty(obj: Internal.Scriptable_, index: number, cx: Internal.Context_): any;
        "has(dev.latvian.mods.rhino.Context,java.lang.String,dev.latvian.mods.rhino.Scriptable)"(cx: Internal.Context_, name: string, start: Internal.Scriptable_): boolean;
        isEmpty(): boolean;
        wait(arg0: number, arg1: number): void;
        has(cx: Internal.Context_, name: string, start: Internal.Scriptable_): boolean;
        defineConst(cx: Internal.Context_, name: string, start: Internal.Scriptable_): void;
        "defineProperty(dev.latvian.mods.rhino.Context,java.lang.String,java.lang.Class,int)"(cx: Internal.Context_, propertyName: string, clazz: typeof any, attributes: number): void;
        defineOwnProperty(cx: Internal.Context_, key: any, desc: Internal.ScriptableObject_): void;
        getFunctionName(): string;
        abstract getDefaultValue(arg0: Internal.Context_, arg1: typeof any): any;
        setExternalArrayData(cx: Internal.Context_, array: Internal.ExternalArrayData_): void;
        "getAttributes(dev.latvian.mods.rhino.Context,java.lang.String)"(cx: Internal.Context_, name: string): number;
        get(cx: Internal.Context_, key: Internal.Symbol_, start: Internal.Scriptable_): any;
        static hasProperty(obj: Internal.Scriptable_, key: Internal.Symbol_, cx: Internal.Context_): boolean;
        "setAttributes(dev.latvian.mods.rhino.Context,java.lang.String,int)"(cx: Internal.Context_, name: string, attributes: number): void;
        isSealed(cx: Internal.Context_): boolean;
        getAllIds(cx: Internal.Context_): any[];
        "has(dev.latvian.mods.rhino.Context,dev.latvian.mods.rhino.Symbol,dev.latvian.mods.rhino.Scriptable)"(cx: Internal.Context_, key: Internal.Symbol_, start: Internal.Scriptable_): boolean;
        defineProperty(cx: Internal.Context_, propertyName: string, clazz: typeof any, attributes: number): void;
        static hasProperty(obj: Internal.Scriptable_, index: number, cx: Internal.Context_): boolean;
        exportAsJSClass(maxPrototypeId: number, scope: Internal.Scriptable_, sealed: boolean, cx: Internal.Context_): Internal.IdFunctionObject;
        abstract "get(dev.latvian.mods.rhino.Context,int,dev.latvian.mods.rhino.Scriptable)"(arg0: Internal.Context_, arg1: number, arg2: Internal.Scriptable_): any;
        "setAttributes(dev.latvian.mods.rhino.Context,dev.latvian.mods.rhino.Symbol,int)"(cx: Internal.Context_, key: Internal.Symbol_, attributes: number): void;
        static "hasProperty(dev.latvian.mods.rhino.Scriptable,dev.latvian.mods.rhino.Symbol,dev.latvian.mods.rhino.Context)"(obj: Internal.Scriptable_, key: Internal.Symbol_, cx: Internal.Context_): boolean;
        hashCode(): number;
        getExternalArrayLength(): any;
        "getAttributes(dev.latvian.mods.rhino.Context,dev.latvian.mods.rhino.Symbol)"(cx: Internal.Context_, key: Internal.Symbol_): number;
        static getTopLevelScope(obj: Internal.Scriptable_): Internal.Scriptable;
        put(cx: Internal.Context_, key: Internal.Symbol_, start: Internal.Scriptable_, value: any): void;
        equals(arg0: any): boolean;
        set immunePrototypeProperty(value: any)
        set parentScope(arg0: Internal.Scriptable_)
        get typeOf(): Internal.MemberType
        get parentScope(): Internal.Scriptable
        get length(): number
        get class(): typeof any
        get externalArrayData(): Internal.ExternalArrayData
        get arity(): number
        get className(): string
        get extensible(): boolean
        set prototype(arg0: Internal.Scriptable_)
        get empty(): boolean
        get functionName(): string
        get externalArrayLength(): any
    }
    type BaseFunction_ = BaseFunction;
    class DoubleWatersidePlantBlock extends Internal.DoublePlantBlockBOP {
        constructor(arg0: Internal.BlockBehaviour$Properties_)
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getSettings(): Internal.BlockBehaviour$Properties;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        static preventCreativeDropFromBottomPart(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Player_): void;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        getTypeData(): Internal.CompoundTag;
        setFriction(arg0: number): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getSpeedFactor(): number;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        playerDestroy(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Player_): void;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Internal.Player_): Internal.ItemStack;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        getRenderPropertiesInternal(): any;
        needsDynamicNodeTypeCheck(): boolean;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        setRequiresTool(v: boolean): void;
        asBlock(): Internal.Block;
        getPlant(arg0: Internal.BlockGetter_, arg1: BlockPos_): Internal.BlockState;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        puzzleslib$setItem(arg0: Internal.Item_): void;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        /**
         * @deprecated
        */
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        /**
         * @deprecated
        */
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        lychee$isTickable(): boolean;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        /**
         * @deprecated
        */
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        mayPlaceOn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        spawnDestroyParticles(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_): void;
        wait(): void;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Internal.Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(shape: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        setIsRandomlyTicking(arg0: boolean): void;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        registerDefaultState(arg0: Internal.BlockState_): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        /**
         * @deprecated
        */
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        isAir(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        needsDynamicBurningCheck(): boolean;
        getDescriptionId(): string;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        handler$bob000$radium$postConstruct(p_i241196_1_: Internal.BlockBehaviour$Properties_, ci: Internal.CallbackInfo_): void;
        tryDropExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: Internal.ItemStack_, arg3: Internal.IntProvider_): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        static copyWaterloggedFrom(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.BlockState;
        handler$eok000$particular$spawnParticles(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, random: Internal.RandomSource_, ci: Internal.CallbackInfo_): void;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        setDrops(arg0: ResourceLocation_): void;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        getBlockProperties(): Internal.BlockBehaviour$Properties;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getShapeForEachState(arg0: Internal.Function_<Internal.BlockState, Internal.VoxelShape>): Internal.ImmutableMap<Internal.BlockState, Internal.VoxelShape>;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        getFriction(): number;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        createBlockStateDefinition(arg0: Internal.StateDefinition$Builder_<Internal.Block, Internal.BlockState>): void;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        notify(): void;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        handler$dji000$spectrum$afterBreak(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        setDestroySpeed(v: number): void;
        static placeAt(arg0: Internal.LevelAccessor_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: number): void;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        handler$zbh000$additionalentityattributes$additionalEntityAttributes$saveBreakingPlayer(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        arch$holder(): Internal.Holder<Internal.Block>;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        getPlantType(arg0: Internal.BlockGetter_, arg1: BlockPos_): Internal.PlantType;
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): void;
        lychee$setTickable(arg0: boolean): void;
        /**
         * @deprecated
        */
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        get settings(): Internal.BlockBehaviour$Properties
        /**
         * @deprecated
        */
        get explosionResistance(): number
        get typeData(): Internal.CompoundTag
        set friction(arg0: number)
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get descriptionId(): string
        get jumpFactor(): number
        set drops(arg0: ResourceLocation_)
        set speedFactor(arg0: number)
        get blockProperties(): Internal.BlockBehaviour$Properties
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get mod(): string
        set hasCollision(arg0: boolean)
    }
    type DoubleWatersidePlantBlock_ = DoubleWatersidePlantBlock;
    class HierarchyEvent extends Internal.AWTEvent {
        constructor(arg0: Internal.Component_, arg1: number, arg2: Internal.Component_, arg3: Internal.Container_, arg4: number)
        constructor(arg0: Internal.Component_, arg1: number, arg2: Internal.Component_, arg3: Internal.Container_)
        getClass(): typeof any;
        getChangedParent(): Internal.Container;
        toString(): string;
        paramString(): string;
        notifyAll(): void;
        getChanged(): Internal.Component;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        hashCode(): number;
        wait(): void;
        wait(arg0: number): void;
        setSource(arg0: any): void;
        getComponent(): Internal.Component;
        getSource(): any;
        getChangeFlags(): number;
        equals(arg0: any): boolean;
        getID(): number;
        get class(): typeof any
        get changedParent(): Internal.Container
        get changed(): Internal.Component
        set source(arg0: any)
        get component(): Internal.Component
        get source(): any
        get changeFlags(): number
        get ID(): number
        static readonly ANCESTOR_RESIZED: (1402) & (number);
        static readonly PARENT_CHANGED: (1) & (number);
        static readonly ANCESTOR_MOVED: (1401) & (number);
        static readonly HIERARCHY_LAST: (1402) & (number);
        static readonly HIERARCHY_FIRST: (1400) & (number);
        static readonly HIERARCHY_CHANGED: (1400) & (number);
        static readonly DISPLAYABILITY_CHANGED: (2) & (number);
        static readonly SHOWING_CHANGED: (4) & (number);
    }
    type HierarchyEvent_ = HierarchyEvent;
    interface Charge$Provider {
        abstract network(arg0: Internal.ServerLevel_): Internal.Charge$Network;
        (arg0: Internal.ServerLevel): Internal.Charge$Network_;
    }
    type Charge$Provider_ = Charge$Provider | ((arg0: Internal.ServerLevel)=> Internal.Charge$Network_);
    abstract class ReversiblePoweredOutfittedTrackBlock extends Internal.PoweredOutfittedTrackBlock {
        constructor(arg0: Internal.Supplier_<Internal.TrackType>, arg1: Internal.BlockBehaviour$Properties_)
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        updateState(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_): void;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        "updateState(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.Level,net.minecraft.core.BlockPos,net.minecraft.world.level.block.Block)"(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        updateDir(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: boolean): Internal.BlockState;
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getSettings(): Internal.BlockBehaviour$Properties;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        isFlexibleRail(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        getTypeData(): Internal.CompoundTag;
        setFriction(arg0: number): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getSpeedFactor(): number;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        playerDestroy(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Player_): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Internal.Player_): Internal.ItemStack;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        getRenderPropertiesInternal(): any;
        registerNode(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_): void;
        needsDynamicNodeTypeCheck(): boolean;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        deregisterNode(arg0: Internal.ServerLevel_, arg1: BlockPos_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        setRequiresTool(v: boolean): void;
        asBlock(): Internal.Block;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        canPropagatePowerTo(arg0: Internal.BlockState_): boolean;
        puzzleslib$setItem(arg0: Internal.Item_): void;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        lychee$isTickable(): boolean;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getMeterAccess(arg0: Internal.Charge_, arg1: Internal.BlockState_, arg2: Internal.ServerLevel_, arg3: BlockPos_): Internal.Charge$Access;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        placeLiquid(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.FluidState_): boolean;
        setPowered(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: boolean): void;
        spawnDestroyParticles(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_): void;
        wait(): void;
        static isPowered(arg0: Internal.BlockState_): boolean;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Internal.Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        getShapeProperty(): Internal.Property<Internal.RailShape>;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(shape: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        static isRail(arg0: Internal.Level_, arg1: BlockPos_): boolean;
        setIsRandomlyTicking(arg0: boolean): void;
        getPickupSound(arg0: Internal.BlockState_): Internal.Optional<Internal.SoundEvent>;
        getTrackType(): Internal.TrackType;
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        getSpikeMaulVariants(): Internal.List<Internal.Supplier<Internal.Block>>;
        registerDefaultState(arg0: Internal.BlockState_): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        static getRailShapeRaw(arg0: Internal.BlockState_): Internal.RailShape;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        getRailDirection(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.AbstractMinecart_): Internal.RailShape;
        getChargeSpecs(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_): Internal.Map<Internal.Charge, Internal.ChargeBlock$Spec>;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        /**
         * @deprecated
        */
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        getPickupSound(): Internal.Optional<Internal.SoundEvent>;
        onMinecartPass(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.AbstractMinecart_): void;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        isAir(arg0: Internal.BlockState_): boolean;
        updateState(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: boolean): Internal.BlockState;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        needsDynamicBurningCheck(): boolean;
        getDescriptionId(): string;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        handler$bob000$radium$postConstruct(p_i241196_1_: Internal.BlockBehaviour$Properties_, ci: Internal.CallbackInfo_): void;
        tryDropExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: Internal.ItemStack_, arg3: Internal.IntProvider_): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        handler$eok000$particular$spawnParticles(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, random: Internal.RandomSource_, ci: Internal.CallbackInfo_): void;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        getPowerPropagation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        setDrops(arg0: ResourceLocation_): void;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        pickupBlock(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        isValidRailShape(arg0: Internal.RailShape_): boolean;
        getBlockProperties(): Internal.BlockBehaviour$Properties;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getShapeForEachState(arg0: Internal.Function_<Internal.BlockState, Internal.VoxelShape>): Internal.ImmutableMap<Internal.BlockState, Internal.VoxelShape>;
        getId(): string;
        static isReversed(arg0: Internal.BlockState_): boolean;
        getLootTable(): ResourceLocation;
        canMakeSlopes(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        getFriction(): number;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        createBlockStateDefinition(arg0: Internal.StateDefinition$Builder_<Internal.Block, Internal.BlockState>): void;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        notify(): void;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        isPowered(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): boolean;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        handler$dji000$spectrum$afterBreak(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getMaxSupportedDistance(): number;
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        setDestroySpeed(v: number): void;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        handler$zbh000$additionalentityattributes$additionalEntityAttributes$saveBreakingPlayer(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        "updateState(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.Level,net.minecraft.core.BlockPos,boolean)"(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: boolean): Internal.BlockState;
        arch$holder(): Internal.Holder<Internal.Block>;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        static isRail(arg0: Internal.BlockState_): boolean;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        canPlaceLiquid(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Fluid_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isStraight(): boolean;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): void;
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        lychee$setTickable(arg0: boolean): void;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        getRailMaxSpeed(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.AbstractMinecart_): number;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        get settings(): Internal.BlockBehaviour$Properties
        /**
         * @deprecated
        */
        get explosionResistance(): number
        get typeData(): Internal.CompoundTag
        set friction(arg0: number)
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        get shapeProperty(): Internal.Property<Internal.RailShape>
        set isRandomlyTicking(arg0: boolean)
        get trackType(): Internal.TrackType
        set nameKey(arg0: string)
        get spikeMaulVariants(): Internal.List<Internal.Supplier<Internal.Block>>
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get pickupSound(): Internal.Optional<Internal.SoundEvent>
        get descriptionId(): string
        get jumpFactor(): number
        set drops(arg0: ResourceLocation_)
        set speedFactor(arg0: number)
        get blockProperties(): Internal.BlockBehaviour$Properties
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        get maxSupportedDistance(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get straight(): boolean
        get mod(): string
        set hasCollision(arg0: boolean)
        static readonly REVERSED: (Internal.BooleanProperty) & (Internal.BooleanProperty);
    }
    type ReversiblePoweredOutfittedTrackBlock_ = ReversiblePoweredOutfittedTrackBlock;
    interface Appendable {
        abstract append(arg0: Internal.CharSequence_): this;
        abstract append(arg0: Internal.CharSequence_, arg1: number, arg2: number): this;
        abstract append(arg0: string): this;
        abstract "append(java.lang.CharSequence)"(arg0: Internal.CharSequence_): this;
        abstract "append(char)"(arg0: string): this;
    }
    type Appendable_ = Appendable;
    class PlayerEvent$ItemCraftedEvent extends Internal.PlayerEvent {
        constructor()
        constructor(arg0: Internal.Player_, arg1: Internal.ItemStack_, arg2: net.minecraft.world.Container_)
        getResult(): Internal.Event$Result;
        setCanceled(arg0: boolean): void;
        getClass(): typeof any;
        toString(): string;
        setPhase(arg0: Internal.EventPriority_): void;
        getEntity(): Internal.LivingEntity;
        notifyAll(): void;
        isCanceled(): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        getInventory(): net.minecraft.world.Container;
        hasResult(): boolean;
        setResult(arg0: Internal.Event$Result_): void;
        getCrafting(): Internal.ItemStack;
        hashCode(): number;
        isCancelable(): boolean;
        wait(): void;
        getListenerList(): Internal.ListenerList;
        wait(arg0: number): void;
        getPhase(): Internal.EventPriority;
        equals(arg0: any): boolean;
        get result(): Internal.Event$Result
        set canceled(arg0: boolean)
        get class(): typeof any
        set phase(arg0: Internal.EventPriority_)
        get entity(): Internal.LivingEntity
        get canceled(): boolean
        get inventory(): net.minecraft.world.Container
        set result(arg0: Internal.Event$Result_)
        get crafting(): Internal.ItemStack
        get cancelable(): boolean
        get listenerList(): Internal.ListenerList
        get phase(): Internal.EventPriority
    }
    type PlayerEvent$ItemCraftedEvent_ = PlayerEvent$ItemCraftedEvent;
    class ClayBucketItem extends Internal.BucketItem {
        constructor(arg0: Internal.Supplier_<Internal.Fluid>, arg1: Internal.Item$Properties_)
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        allowContinuingBlockBreaking(player: Internal.Player_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        playEmptySound(arg0: Internal.Player_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): void;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        moonlight$addAdditionalBehavior(placementOverride: Internal.AdditionalItemPlacement_): void;
        isFireResistant(): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        moonlight$getClientAnimationExtension(): any;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        fabric_setCustomDamageHandler(handler: Internal.CustomDamageHandler_): void;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        canBlockContainFluid(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_): boolean;
        setMaxStackSize(arg0: number): void;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getBarColor(arg0: Internal.ItemStack_): number;
        getOrCreateDescriptionId(): string;
        getItem(): Internal.Item;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): InteractionResult;
        moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        moonlight$setClientAnimationExtension(obj: any): void;
        getFull(fluid: Internal.Fluid_): Internal.ItemStack;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        handler$dfl000$revelationary$getCloakedName(stack: Internal.ItemStack_, callbackInfoReturnable: Internal.CallbackInfoReturnable_<any>): void;
        isEdible(): boolean;
        getAttributeModifiers(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        cardinal_createComponents(stack: Internal.ItemStack_): Internal.ComponentContainer;
        isFoil(arg0: Internal.ItemStack_): boolean;
        "getAttributeModifiers(net.minecraft.world.entity.EquipmentSlot,net.minecraft.world.item.ItemStack)"(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        fabric_getEquipmentSlotProvider(): Internal.EquipmentSlotProvider;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        owo$tab(): number;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        checkExtraContent(arg0: Internal.Player_, arg1: Internal.Level_, arg2: Internal.ItemStack_, arg3: BlockPos_): void;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        arch$getFluid(): Internal.Fluid;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vector3f;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        "getAttributeModifiers(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.EquipmentSlot)"(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        allowNbtUpdateAnimation(player: Internal.Player_, hand: Internal.InteractionHand_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        fabric_getCachedItemVariant(): Internal.ItemVariant;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        fabric_getCustomDamageHandler(): Internal.CustomDamageHandler;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        static getPlayerPOVHitResult(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.ClipContext$Fluid_): Internal.BlockHitResult;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        equals(arg0: any): boolean;
        setRarity(arg0: Internal.Rarity_): void;
        getRecipeRemainder(stack: Internal.ItemStack_): Internal.ItemStack;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        /**
         * @deprecated
        */
        onDestroyed(arg0: Internal.ItemEntity_): void;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        canBeHurtBy(arg0: DamageSource_): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        fabric_setEquipmentSlotProvider(equipmentSlotProvider: Internal.EquipmentSlotProvider_): void;
        getDescriptionId(): string;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        zeta$setHumanoidArmorModel(arg0: Internal.HumanoidArmorModelGetter_): void;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: DamageSource_): void;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        getDescription(): net.minecraft.network.chat.Component;
        owo$stackGenerator(): Internal.BiConsumer<any, any>;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        useOn(arg0: Internal.UseOnContext_): InteractionResult;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        handler$ebb000$connectormod$redirectIsPiglinCurrency(arg0: Internal.ItemStack_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        static getEmptySuccessItem(arg0: Internal.ItemStack_, arg1: Internal.Player_): Internal.ItemStack;
        setAttackDamage(attackDamage: number): void;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        toString(): string;
        /**
         * @deprecated
        */
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        modifyReturnValue$ffm000$quark$overrideOtherStackedOnMe(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_, arg3: Internal.Slot_, arg4: Internal.ClickAction_, arg5: Internal.Player_, arg6: Internal.SlotAccess_): boolean;
        getId(): string;
        handler$fbm000$moonlight$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        isSuitableFor(stack: Internal.ItemStack_, state: Internal.BlockState_): boolean;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        puzzleslib$setRenderProperties(arg0: any): void;
        getEmpty(): Internal.ItemStack;
        notify(): void;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        emptyContents(arg0: Internal.Player_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockHitResult_): boolean;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        zeta$setBlockEntityWithoutLevelRenderer(arg0: Internal.BlockEntityWithoutLevelRenderer_): void;
        handler$cog000$croptopia$overrideConstructor(arg0: Internal.Item$Properties_, arg1: Internal.CallbackInfo_): void;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        getFluid(): Internal.Fluid;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        getFluid(itemStack: Internal.ItemStack_): Internal.Fluid;
        getEatingSound(): Internal.SoundEvent;
        owo$setGroup(group: Internal.CreativeModeTab_): void;
        puzzleslib$getRenderProperties(): any;
        canBeDepleted(): boolean;
        getDamage(arg0: Internal.ItemStack_): number;
        wait(arg0: number, arg1: number): void;
        getMod(): string;
        emptyContents(arg0: Internal.Player_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockHitResult_, arg4: Internal.ItemStack_): boolean;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        owo$group(): Internal.CreativeModeTab;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        modifyReturnValue$ffm000$quark$overrideStackedOnOther(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_): boolean;
        get drinkingSound(): Internal.SoundEvent
        get fireResistant(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set maxDamage(arg0: number)
        get orCreateDescriptionId(): string
        get item(): Internal.Item
        get class(): typeof any
        get renderPropertiesInternal(): any
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        get edible(): boolean
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        set nameKey(arg0: string)
        get idLocation(): ResourceLocation
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
        set rarity(arg0: Internal.Rarity_)
        get complex(): boolean
        get descriptionId(): string
        get creativeTab(): string
        set burnTime(i: number)
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        set itemBuilder(b: Internal.ItemBuilder_)
        set attackDamage(attackDamage: number)
        /**
         * @deprecated
        */
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        get empty(): Internal.ItemStack
        /**
         * @deprecated
        */
        get maxStackSize(): number
        get fluid(): Internal.Fluid
        get eatingSound(): Internal.SoundEvent
        get mod(): string
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
    }
    type ClayBucketItem_ = ClayBucketItem;
    class StreamTagVisitor$EntryResult extends Internal.Enum<Internal.StreamTagVisitor$EntryResult> {
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        getClass(): typeof any;
        toString(): string;
        compareTo(arg0: Internal.StreamTagVisitor$EntryResult_): number;
        notifyAll(): void;
        "compareTo(net.minecraft.nbt.StreamTagVisitor$EntryResult)"(arg0: Internal.StreamTagVisitor$EntryResult_): number;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        compareTo(arg0: any): number;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.StreamTagVisitor$EntryResult>>;
        name(): string;
        hashCode(): number;
        static valueOf(arg0: string): Internal.StreamTagVisitor$EntryResult;
        getDeclaringClass(): typeof Internal.StreamTagVisitor$EntryResult;
        ordinal(): number;
        wait(): void;
        wait(arg0: number): void;
        "compareTo(java.lang.Object)"(arg0: any): number;
        static values(): Internal.StreamTagVisitor$EntryResult[];
        equals(arg0: any): boolean;
        get class(): typeof any
        get declaringClass(): typeof Internal.StreamTagVisitor$EntryResult
        static readonly BREAK: (Internal.StreamTagVisitor$EntryResult) & (Internal.StreamTagVisitor$EntryResult);
        static readonly SKIP: (Internal.StreamTagVisitor$EntryResult) & (Internal.StreamTagVisitor$EntryResult);
        static readonly ENTER: (Internal.StreamTagVisitor$EntryResult) & (Internal.StreamTagVisitor$EntryResult);
        static readonly HALT: (Internal.StreamTagVisitor$EntryResult) & (Internal.StreamTagVisitor$EntryResult);
    }
    type StreamTagVisitor$EntryResult_ = StreamTagVisitor$EntryResult | "break" | "halt" | "skip" | "enter";
    class EnigmaticItem extends Internal.ItemSpellstoneCurio implements Internal.ISpellstone {
        constructor()
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        isResistantTo(arg0: string): boolean;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        allowContinuingBlockBreaking(player: Internal.Player_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        canSync(slotContext: Internal.SlotContext_, stack: Internal.ItemStack_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        moonlight$addAdditionalBehavior(placementOverride: Internal.AdditionalItemPlacement_): void;
        isFireResistant(): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        canUnequip(identifier: string, livingEntity: Internal.LivingEntity_, stack: Internal.ItemStack_): boolean;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        "getCreativeTab()"(): string;
        canWalkOnPowderedSnow(slotContext: Internal.SlotContext_, stack: Internal.ItemStack_): boolean;
        moonlight$getClientAnimationExtension(): any;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        static onConfig(arg0: Internal.OmniconfigWrapper_): void;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        curioTick(arg0: Internal.SlotContext_, arg1: Internal.ItemStack_): void;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        getLootingBonus(identifier: string, livingEntity: Internal.LivingEntity_, curio: Internal.ItemStack_, index: number): number;
        fabric_setCustomDamageHandler(handler: Internal.CustomDamageHandler_): void;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getBarColor(arg0: Internal.ItemStack_): number;
        getOrCreateDescriptionId(): string;
        getItem(): Internal.Item;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        canEquip(identifier: string, livingEntity: Internal.LivingEntity_, stack: Internal.ItemStack_): boolean;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        getClass(): typeof any;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        showAttributesTooltip(identifier: string, stack: Internal.ItemStack_): boolean;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): InteractionResult;
        moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        moonlight$setClientAnimationExtension(obj: any): void;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        onEquipFromUse(slotContext: Internal.SlotContext_, stack: Internal.ItemStack_): void;
        canUnequip(arg0: Internal.SlotContext_, arg1: Internal.ItemStack_): boolean;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        writeSyncData(stack: Internal.ItemStack_): Internal.CompoundTag;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        handler$dfl000$revelationary$getCloakedName(stack: Internal.ItemStack_, callbackInfoReturnable: Internal.CallbackInfoReturnable_<any>): void;
        isEdible(): boolean;
        getAttributeModifiers(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        "getAttributeModifiers(java.lang.String,net.minecraft.world.item.ItemStack)"(identifier: string, stack: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        readSyncData(compound: Internal.CompoundTag_, stack: Internal.ItemStack_): void;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        canSync(identifier: string, index: number, livingEntity: Internal.LivingEntity_, stack: Internal.ItemStack_): boolean;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        getFortuneBonus(identifier: string, livingEntity: Internal.LivingEntity_, curio: Internal.ItemStack_, index: number): number;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        cardinal_createComponents(stack: Internal.ItemStack_): Internal.ComponentContainer;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        onEquip(identifier: string, index: number, livingEntity: Internal.LivingEntity_, stack: Internal.ItemStack_): void;
        isFoil(arg0: Internal.ItemStack_): boolean;
        "getAttributeModifiers(net.minecraft.world.entity.EquipmentSlot,net.minecraft.world.item.ItemStack)"(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        fabric_getEquipmentSlotProvider(): Internal.EquipmentSlotProvider;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        curioTick(identifier: string, index: number, livingEntity: Internal.LivingEntity_, stack: Internal.ItemStack_): void;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        isEnderMask(slotContext: Internal.SlotContext_, enderMan: Internal.EnderMan_, stack: Internal.ItemStack_): boolean;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        canRightClickEquip(stack: Internal.ItemStack_): boolean;
        getEquipSound(slotContext: Internal.SlotContext_, stack: Internal.ItemStack_): Internal.ICurio$SoundInfo;
        owo$tab(): number;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        "makesPiglinsNeutral(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.LivingEntity)"(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        curioBreak(slotContext: Internal.SlotContext_, stack: Internal.ItemStack_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vector3f;
        "isEnderMask(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.player.Player,net.minecraft.world.entity.monster.EnderMan)"(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        isPlaceholder(): boolean;
        /**
         * @deprecated
        */
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        "getCreativeTab()"(): Internal.CreativeModeTab;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        "getAttributeModifiers(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.EquipmentSlot)"(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        "curioBreak(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.LivingEntity)"(stack: Internal.ItemStack_, livingEntity: Internal.LivingEntity_): void;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        getDropRule(arg0: Internal.SlotContext_, arg1: DamageSource_, arg2: number, arg3: boolean, arg4: Internal.ItemStack_): Internal.ICurio$DropRule;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        allowNbtUpdateAnimation(player: Internal.Player_, hand: Internal.InteractionHand_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        fabric_getCachedItemVariant(): Internal.ItemVariant;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        fabric_getCustomDamageHandler(): Internal.CustomDamageHandler;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        static getPlayerPOVHitResult(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.ClipContext$Fluid_): Internal.BlockHitResult;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        equals(arg0: any): boolean;
        "canWalkOnPowderedSnow(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.LivingEntity)"(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        setRarity(arg0: Internal.Rarity_): void;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        onUnequip(identifier: string, index: number, livingEntity: Internal.LivingEntity_, stack: Internal.ItemStack_): void;
        getRecipeRemainder(stack: Internal.ItemStack_): Internal.ItemStack;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        /**
         * @deprecated
        */
        onDestroyed(arg0: Internal.ItemEntity_): void;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        canBeHurtBy(arg0: DamageSource_): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        getDropRule(livingEntity: Internal.LivingEntity_, stack: Internal.ItemStack_): Internal.ICurio$DropRule;
        fabric_setEquipmentSlotProvider(equipmentSlotProvider: Internal.EquipmentSlotProvider_): void;
        getAttributesTooltip(tooltips: Internal.List_<net.minecraft.network.chat.Component>, stack: Internal.ItemStack_): Internal.List<net.minecraft.network.chat.Component>;
        getDescriptionId(): string;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        playRightClickEquipSound(livingEntity: Internal.LivingEntity_, stack: Internal.ItemStack_): void;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        hasCurioCapability(stack: Internal.ItemStack_): boolean;
        zeta$setHumanoidArmorModel(arg0: Internal.HumanoidArmorModelGetter_): void;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        getAttributeModifiers(slotContext: Internal.SlotContext_, uuid: Internal.UUID_, stack: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        "curioBreak(top.theillusivec4.curios.api.SlotContext,net.minecraft.world.item.ItemStack)"(slotContext: Internal.SlotContext_, stack: Internal.ItemStack_): void;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: DamageSource_): void;
        getResistanceModifier(arg0: string): Internal.Supplier<number>;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        getDescription(): net.minecraft.network.chat.Component;
        "makesPiglinsNeutral(top.theillusivec4.curios.api.SlotContext,net.minecraft.world.item.ItemStack)"(slotContext: Internal.SlotContext_, stack: Internal.ItemStack_): boolean;
        owo$stackGenerator(): Internal.BiConsumer<any, any>;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        handleEnigmaticFlight(arg0: Internal.Player_): void;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        triggerActiveAbility(arg0: Internal.Level_, arg1: Internal.ServerPlayer_, arg2: Internal.ItemStack_): void;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        getTagsTooltip(tagTooltips: Internal.List_<net.minecraft.network.chat.Component>, stack: Internal.ItemStack_): Internal.List<net.minecraft.network.chat.Component>;
        getCreativeTab(): Internal.CreativeModeTab;
        useOn(arg0: Internal.UseOnContext_): InteractionResult;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        handler$ebb000$connectormod$redirectIsPiglinCurrency(arg0: Internal.ItemStack_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        isImmuneTo(arg0: string): boolean;
        setAttackDamage(attackDamage: number): void;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        toString(): string;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        curioBreak(stack: Internal.ItemStack_, livingEntity: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        modifyReturnValue$ffm000$quark$overrideOtherStackedOnMe(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_, arg3: Internal.Slot_, arg4: Internal.ClickAction_, arg5: Internal.Player_, arg6: Internal.SlotAccess_): boolean;
        getId(): string;
        handler$fbm000$moonlight$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        isSuitableFor(stack: Internal.ItemStack_, state: Internal.BlockState_): boolean;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        puzzleslib$setRenderProperties(arg0: any): void;
        notify(): void;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        curioAnimate(identifier: string, index: number, livingEntity: Internal.LivingEntity_, stack: Internal.ItemStack_): void;
        readSyncData(slotContext: Internal.SlotContext_, compound: Internal.CompoundTag_, stack: Internal.ItemStack_): void;
        getCreativeTabStacks(): Internal.List<Internal.ItemStack>;
        writeSyncData(slotContext: Internal.SlotContext_, stack: Internal.ItemStack_): Internal.CompoundTag;
        getLootingLevel(slotContext: Internal.SlotContext_, source: DamageSource_, target: Internal.LivingEntity_, baseLooting: number, stack: Internal.ItemStack_): number;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        canEquipFromUse(arg0: Internal.SlotContext_, arg1: Internal.ItemStack_): boolean;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        getFortuneLevel(slotContext: Internal.SlotContext_, lootContext: Internal.LootContext_, stack: Internal.ItemStack_): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        static rayTrace(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.ClipContext$Fluid_): Internal.BlockHitResult;
        zeta$setBlockEntityWithoutLevelRenderer(arg0: Internal.BlockEntityWithoutLevelRenderer_): void;
        handler$cog000$croptopia$overrideConstructor(arg0: Internal.Item$Properties_, arg1: Internal.CallbackInfo_): void;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        onUnequip(arg0: Internal.SlotContext_, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_): void;
        onEquip(arg0: Internal.SlotContext_, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_): void;
        getEatingSound(): Internal.SoundEvent;
        owo$setGroup(group: Internal.CreativeModeTab_): void;
        getCooldown(arg0: Internal.Player_): number;
        puzzleslib$getRenderProperties(): any;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        "canEquip(java.lang.String,net.minecraft.world.entity.LivingEntity,net.minecraft.world.item.ItemStack)"(identifier: string, livingEntity: Internal.LivingEntity_, stack: Internal.ItemStack_): boolean;
        canBeDepleted(): boolean;
        "canWalkOnPowderedSnow(top.theillusivec4.curios.api.SlotContext,net.minecraft.world.item.ItemStack)"(slotContext: Internal.SlotContext_, stack: Internal.ItemStack_): boolean;
        getDamage(arg0: Internal.ItemStack_): number;
        wait(arg0: number, arg1: number): void;
        getSlotsTooltip(tooltips: Internal.List_<net.minecraft.network.chat.Component>, stack: Internal.ItemStack_): Internal.List<net.minecraft.network.chat.Component>;
        setPlaceholder(): Internal.Item;
        "isEnderMask(top.theillusivec4.curios.api.SlotContext,net.minecraft.world.entity.monster.EnderMan,net.minecraft.world.item.ItemStack)"(slotContext: Internal.SlotContext_, enderMan: Internal.EnderMan_, stack: Internal.ItemStack_): boolean;
        getMod(): string;
        static getDefaultProperties(): Internal.Item$Properties;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        makesPiglinsNeutral(slotContext: Internal.SlotContext_, stack: Internal.ItemStack_): boolean;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        owo$group(): Internal.CreativeModeTab;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        getAttributeModifiers(identifier: string, stack: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        "canEquip(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.EquipmentSlot,net.minecraft.world.entity.Entity)"(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        canEquip(arg0: Internal.SlotContext_, arg1: Internal.ItemStack_): boolean;
        modifyReturnValue$ffm000$quark$overrideStackedOnOther(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_): boolean;
        get drinkingSound(): Internal.SoundEvent
        get fireResistant(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get "creativeTab()"(): string
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set maxDamage(arg0: number)
        get orCreateDescriptionId(): string
        get item(): Internal.Item
        get class(): typeof any
        get renderPropertiesInternal(): any
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        get edible(): boolean
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        set nameKey(arg0: string)
        get placeholder(): boolean
        get "creativeTab()"(): Internal.CreativeModeTab
        get idLocation(): ResourceLocation
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
        set rarity(arg0: Internal.Rarity_)
        get complex(): boolean
        get descriptionId(): string
        get creativeTab(): string
        set burnTime(i: number)
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        get creativeTab(): Internal.CreativeModeTab
        set itemBuilder(b: Internal.ItemBuilder_)
        set attackDamage(attackDamage: number)
        /**
         * @deprecated
        */
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        get creativeTabStacks(): Internal.List<Internal.ItemStack>
        /**
         * @deprecated
        */
        get maxStackSize(): number
        get eatingSound(): Internal.SoundEvent
        get mod(): string
        get defaultProperties(): Internal.Item$Properties
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
        static spellstoneCooldown: (Internal.Omniconfig$IntParameter) & (Internal.Omniconfig$IntParameter);
        flightMap: Internal.Map<Internal.Player, boolean>;
    }
    type EnigmaticItem_ = EnigmaticItem;
    class DispenserBlock extends Internal.BaseEntityBlock implements Internal.DispenserBlockAccessor {
        constructor(arg0: Internal.BlockBehaviour$Properties_)
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        getDispenseMethod(arg0: Internal.ItemStack_): Internal.DispenseItemBehavior;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getSettings(): Internal.BlockBehaviour$Properties;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        getTypeData(): Internal.CompoundTag;
        setFriction(arg0: number): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getSpeedFactor(): number;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        playerDestroy(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Player_): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Internal.Player_): Internal.ItemStack;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        newBlockEntity(arg0: BlockPos_, arg1: Internal.BlockState_): Internal.BlockEntity;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        getRenderPropertiesInternal(): any;
        needsDynamicNodeTypeCheck(): boolean;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        setRequiresTool(v: boolean): void;
        asBlock(): Internal.Block;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        static getDispenserRegistry$moonlight_$md$374716$0(): Internal.Map<any, any>;
        puzzleslib$setItem(arg0: Internal.Item_): void;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        /**
         * @deprecated
        */
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static createTickerHelper<E extends Internal.BlockEntity, A extends Internal.BlockEntity>(arg0: Internal.BlockEntityType_<A>, arg1: Internal.BlockEntityType_<E>, arg2: Internal.BlockEntityTicker_<E>): Internal.BlockEntityTicker<A>;
        lychee$isTickable(): boolean;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        getTicker<T extends Internal.BlockEntity>(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockEntityType_<T>): Internal.BlockEntityTicker<T>;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        handler$dpf000$farmersdelight$onCuttingBoardDispenseFromInject(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: Internal.CallbackInfo_, arg3: Internal.BlockSourceImpl_, arg4: Internal.DispenserBlockEntity_, arg5: number, arg6: Internal.ItemStack_): void;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        spawnDestroyParticles(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_): void;
        wait(): void;
        getMaxHorizontalOffset(): number;
        static getDispensePosition(arg0: Internal.BlockSource_): Internal.Position;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Internal.Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(shape: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        setIsRandomlyTicking(arg0: boolean): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        registerDefaultState(arg0: Internal.BlockState_): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        dispenseFrom(arg0: Internal.ServerLevel_, arg1: BlockPos_): void;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        static getDispenserRegistry(): Internal.Map<Internal.Item, Internal.DispenseItemBehavior>;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        /**
         * @deprecated
        */
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        isAir(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        needsDynamicBurningCheck(): boolean;
        getDescriptionId(): string;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        handler$bob000$radium$postConstruct(p_i241196_1_: Internal.BlockBehaviour$Properties_, ci: Internal.CallbackInfo_): void;
        tryDropExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: Internal.ItemStack_, arg3: Internal.IntProvider_): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        handler$eok000$particular$spawnParticles(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, random: Internal.RandomSource_, ci: Internal.CallbackInfo_): void;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        setDrops(arg0: ResourceLocation_): void;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        getBlockProperties(): Internal.BlockBehaviour$Properties;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getShapeForEachState(arg0: Internal.Function_<Internal.BlockState, Internal.VoxelShape>): Internal.ImmutableMap<Internal.BlockState, Internal.VoxelShape>;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        getFriction(): number;
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        createBlockStateDefinition(arg0: Internal.StateDefinition$Builder_<Internal.Block, Internal.BlockState>): void;
        static registerBehavior(arg0: Internal.ItemLike_, arg1: Internal.DispenseItemBehavior_): void;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        notify(): void;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        handler$dji000$spectrum$afterBreak(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        setDestroySpeed(v: number): void;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        handler$zbh000$additionalentityattributes$additionalEntityAttributes$saveBreakingPlayer(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getListener<T extends Internal.BlockEntity>(arg0: Internal.ServerLevel_, arg1: T): Internal.GameEventListener;
        arch$holder(): Internal.Holder<Internal.Block>;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): void;
        lychee$setTickable(arg0: boolean): void;
        /**
         * @deprecated
        */
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        get settings(): Internal.BlockBehaviour$Properties
        /**
         * @deprecated
        */
        get explosionResistance(): number
        get typeData(): Internal.CompoundTag
        set friction(arg0: number)
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        get dispenserRegistry$moonlight_$md$374716$0(): Internal.Map<any, any>
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        get dispenserRegistry(): Internal.Map<Internal.Item, Internal.DispenseItemBehavior>
        set soundType(arg0: SoundType_)
        get descriptionId(): string
        get jumpFactor(): number
        set drops(arg0: ResourceLocation_)
        set speedFactor(arg0: number)
        get blockProperties(): Internal.BlockBehaviour$Properties
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get mod(): string
        set hasCollision(arg0: boolean)
        static DISPENSER_REGISTRY: ({[key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.CroptopiaSaplingItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.PresentItem]: any, [key: Internal.FertilizerItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.GTAxeItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BoatItemBOP]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.AxeItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.SuspiciousStewItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BunnyMask]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.OffsetPlacerItem]: any, [key: Internal.ModItems$1]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.TRArmourItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.DecayPlacerItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ItemNameBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.CraftingBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.InnocentWoodAxeItem]: any, [key: Internal.BannerItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDemonFurnace]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemNameBlockItem]: any, [key: Internal.BlockItemAugmentable]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemModAxe]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RebornBucketItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.EnergyCellBlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.ItemStatueBlock]: any, [key: Internal.MatterCannonItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.PaintedSlabBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ArmorComponentItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.OffsetPlacerItem]: any, [key: Internal.BrokenMageArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.PlaceOnWaterBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemAugmentable]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SplashPotionItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ArcaneFortressArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: vectorwing.farmersdelight.common.item.MilkBottleItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BoatItemBOP]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.BlockItem]: any, [key: Internal.FuelBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.TinyPotatoBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.OffsetPlacerItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.QuarkBoatItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BedItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemAugmentable]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.StandingAndWallBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.RomaniMask]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.CouplesMask]: any, [key: Internal.DoubleHighBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RebornBucketItem]: any, [key: Internal.BowlFoodItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.RebornBucketItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.DivineShield]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.GameMasterBlockItem]: any, [key: Internal.DivingArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ItemNameBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ShieldItem]: any, [key: Internal.StandingAndWallBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MorItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItemAugmentable]: any, [key: Internal.PresentItem]: any, [key: Internal.ArmorComponentItem]: any, [key: Internal.DemonArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.IceChargeItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MiningWellItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemNameBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.SignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MiniQuarryItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.EngravedWisestoneItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.FireShield]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.Items$1]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RomaniMask]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.GTAxeItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.BlockItemAugmentable]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.GTAxeItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MobBucketItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.GTAxeItem]: any, [key: Internal.ZetaSpawnEggItem]: any, [key: Internal.GemstoneArmorItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.AxeItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.CouncilArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.RebornBucketItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.DoubleHighBlockItem]: any, [key: Internal.GlassArrowItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.GTAxeItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ArcaneFortressArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.DispenserMinecartItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemAugmentable]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.StandingAndWallBlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.FloatBlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.EngravedWisestoneItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.DragonScale]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.DrumMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.PaintedBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.StandingAndWallBlockItem]: any, [key: Internal.SoulVialItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.ItemBoneChest]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.CoalCokeBlockItem]: any, [key: Internal.CraftingBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ShootingStarItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.GTAxeItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.DecayPlacerItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.StandingAndWallBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.ParrotEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.Item]: any, [key: Internal.BlockItem]: any, [key: Internal.BottomlessBundleItem]: any, [key: Internal.ConsumableItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.TRArmourItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BoatItemBOP]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SpectrumItems$8]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.PresentItem]: any, [key: Internal.ZetaSpawnEggItem]: any, [key: Internal.SilverArmorItem]: any, [key: Internal.ItemStatueBlock]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.CroptopiaSaplingItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.DyeableArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemModAxe]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.FuelBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ArcaneAxeItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BoatItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.ScreenBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ParrotEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlackboardItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TRArmourItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.FuelBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SaltCampfireItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.UpgradeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.VerticalAndWallBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ArcaneLumosItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.QPBlock$QPBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RomaniMask]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItemAugmentable]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BoatItem]: any, [key: Internal.ItemNameBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.QPBlock$QPBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BeekeeperArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.TippedArrowItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ThreatConfluxItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.HorseArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RebornBucketItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDramixAltar]: any, [key: Internal.PresentItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.solsticeBoots]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.FlagItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.InventorWizardArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.DoubleHighBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.GameMasterBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TRAxeItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.FuelBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RebornBucketItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.OffsetPlacerItem]: any, [key: Internal.BoatItemBOP]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.FuelBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.ZetaMobBucketItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemAugmentable]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.StandingAndWallBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.BoatItemBOP]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ItemNameBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItemAugmentable]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.DyeableMageArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.WarlockRobesItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.CraftingBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.EnderpearlItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.CrystalItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.UpgradeBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BombItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItemAugmentable]: any, [key: Internal.ArcaneArmorItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.FloatBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.OffsetPlacerItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.CroptopiaSaplingItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.OffsetPlacerItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TRArmourItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.ArcanumDustItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.DrumMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MajoraMask]: any, [key: Internal.CroptopiaSaplingItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ArcaneFortressArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.CustomRenderedBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemNameBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ShearsItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaDoubleHighBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.CroptopiaSaplingItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.solsticeLeggings]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.HoneycombItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.CrystalItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.QPBlock$QPBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.DivingArmorItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.FertilizerItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.FlagItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.YTechItems$8]: any, [key: Internal.BlockItem]: any, [key: Internal.CapacitorBankItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.GlassArrowItem]: any, [key: Internal.PresentItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ParrotEggItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.DrumMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemStatueBlock]: any, [key: Internal.BlockItem]: any, [key: Internal.ChainsawItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemParasectaAltar]: any, [key: Internal.BlockItem]: any, [key: Internal.ArmorComponentItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemAugmentable]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ArmorComponentItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.StandingAndWallBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ConsumableItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ItemStatueBlock]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ItemNameBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ArcaneArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.CapacitorBankItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RebornBucketItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BeekeeperArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.FuelBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.WoodBasedBlockItem]: any, [key: Internal.ZetaSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.SeedItem]: any, [key: Internal.BlockItem]: any, [key: Internal.CrystalItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.Item]: any, [key: Internal.SeedItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ItemNightmareBed]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemNameBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.DuctBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BannerItem]: any, [key: Internal.CroptopiaSaplingItem]: any, [key: Internal.RomaniMask]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItemAugmentable]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.PaintedBlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MinecartItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.GenericBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.CrystalItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.CroptopiaSaplingItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BatpackItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItemAugmentable]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BedItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.InventorWizardArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.QuarkBoatItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.DoubleHighBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BoatItemBOP]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BoatItemBOP]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectralArrowItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.Item]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BucketItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BoatItemBOP]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SaltTorchItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.OffsetPlacerItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.DivineShield]: any, [key: Internal.BlockItem]: any, [key: Internal.FueledFireboxBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.SeedItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemAugmentable]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.VerticalAndWallBlockItem]: any, [key: Internal.ItemNameBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.RebornBucketItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.StandingAndWallBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.ArmorComponentItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BeekeeperArmorItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.RebornBucketItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.FuelBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RomaniMask]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.InventorWizardArmorItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.EngravedWisestoneItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItemAugmentable]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.AxeItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.VerticalAndWallBlockItem]: any, [key: Internal.ScrapBoxItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.QPBlock$QPBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemBoundAxe]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TopHatItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.FluidTankItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumItems$7]: any, [key: Internal.BannerItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BucketItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ItemFrostedChest]: any, [key: Internal.BlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.PedestalBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZoraMask]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemStatueBlock]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ScreenBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.RebornBucketItem]: any, [key: Internal.BlockItemAugmentable]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.RebornBucketItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.ArmorComponentItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockMover$BlockMoverItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.VerticalAndWallBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.DivineShield]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.PresentItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TRArmourItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.DrumMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.YTechItems$9]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BucketItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RebornBucketItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.DivingArmorItem]: any, [key: Internal.TimberFrameItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.EnderSkullBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.PresentItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BannerItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ItemModAxe]: any, [key: Internal.AxeItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.Item]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.solsticeHelmet]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.PresentItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RebornBucketItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.StandingAndWallBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.DoubleHighBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.EmptyFluidEntityBucketItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.YTechItems$9]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.FlagItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.DemonArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BannerItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BedItem]: any, [key: Internal.BoatItemBOP]: any, [key: Internal.ScaffoldingBlockItem]: any, [key: Internal.BatpackItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.EngravedWisestoneItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SoulVialItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.solsticeChestplate]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.SeedItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.DyeBottleItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemNameBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.SnowballItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.FramedHangingSignItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ItemModAxe]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.DemonArmorItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BonelordArmorItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.DekuMask]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.OffsetPlacerItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItemAugmentable]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ShootingStarItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.VerticalAndWallBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TRArmourItem]: any, [key: Internal.BlockItem]: any, [key: Internal.PresentItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.YTechItems$9]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.UpgradeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.QuarkBoatItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.YTechItems$9]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.RebornBucketItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.PresentItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.FlagItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.YTechItems$2]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.StandingAndWallBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ArcaneLumosItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaHangingSignItem]: any, [key: Internal.TRArmourItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.CleavingAxeItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.CroptopiaSaplingItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.FuelBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.QuantumSuitItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.SeedItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.CouncilArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.EntropyManipulatorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ArmorComponentItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.GrenadeItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RebornBucketItem]: any, [key: Internal.BlockItem]: any, [key: Internal.UpgradeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.CroptopiaSaplingItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.CroptopiaSaplingItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.CrystalItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BoneArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.GenericBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BedItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpawnEggItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.PresentItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.EarthChargeItem]: any, [key: Internal.TRAxeItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.NightMask]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.CosmicCake]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaSignItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ChampionLeathers]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RomaniMask]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.GrenadeItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItemAugmentable]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.RiceItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BucketItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.ItemModAxe]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.EtheriumArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.StandingAndWallBlockItem]: any, [key: Internal.DivineShield]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ArcaneLumosItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ConsumableItem]: any, [key: Internal.RebornBucketItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.CrystalItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.PaintedBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.CrystalItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaDoubleHighBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BoatItemBOP]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BannerItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.RomaniMask]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.NanoSuitItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.UpgradeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.EngravedWisestoneItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.Item]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ParrotEggItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemNameBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemEdenChest]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.QuartzAxeItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.UpgradeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.AllfatherAxe]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.SilverArmorItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MobBucketItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RebornBucketItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemAugmentable]: any, [key: Internal.RebornBucketItem]: any, [key: Internal.BlockItemAugmentable]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.GlassArrowItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItemAugmentable]: any, [key: Internal.GenericBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ItemStatueBlock]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.PresentItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ItemAdvPump]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BonelordArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.StandingAndWallBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ArmorStandItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.FlagItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BoatItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.KeatonMask]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.EngravedWisestoneItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BowlFoodItem]: any, [key: Internal.BlockItem]: any, [key: Internal.CrystalItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BoatItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.StandingAndWallBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MinecartItem]: any, [key: Internal.GrenadeItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ArcaneArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ArcaneLumosItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemNameBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BucketItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.DuctPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ShootingStarItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.QuestBarrierBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ItemPresentBox]: any, [key: Internal.SackItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.GrenadeItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ItemModAxe]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.OffsetPlacerItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BoatItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BannerItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BannerItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.CroptopiaSaplingItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.FlorbItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ItemWakebloom]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.EtheriumArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SoapItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.CraftingBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemAugmentable]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.GTAxeItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ArmorComponentItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ArcaneWoodAxeItem]: any, [key: Internal.FireworkRocketItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.SilverArmorItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.RopeArrowItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.QuarkBoatItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.StandingAndWallBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.CouncilArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ArcaneLumosItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.OffsetPlacerItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.BlockItem]: any, [key: Internal.GaroMask]: any, [key: Internal.BlockItem]: any, [key: Internal.MinecartItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemNameBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BoatItemBOP]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.SafeItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BrokenMageArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.DyeableMageArmor]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.BlockItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SolidBucketItem]: any, [key: Internal.RebornBucketItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.FlagItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BonelordArmorItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.DrumMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.CroptopiaSaplingItem]: any, [key: Internal.StandingAndWallBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.PaintedBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.CroptopiaSaplingItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.SeedItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.GenericBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ArmorComponentItem]: any, [key: Internal.SignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.QPBlock$QPBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.FeyArmorItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TimberFrameItem]: any, [key: Internal.TRAxeItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ScentMask]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.CapacitorBankItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.AxeItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.GemstoneArmorItem]: any, [key: Internal.CrystalItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.StandingAndWallBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.PlaceOnWaterBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ConsumableItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BoatItemBOP]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.CrystalItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.OffsetPlacerItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.StandingAndWallBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.PressureBoilerTankBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.DoubleHighBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BoatItem]: any, [key: Internal.BlockItem]: any, [key: Internal.AxeItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BedItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.RebornBucketItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.Item]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BedItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.OffsetPlacerItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.CrystalItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BombItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemStatueBlock]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItemAugmentable]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.GTAxeItem]: any, [key: Internal.VerticalAndWallBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.StandingAndWallBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ParrotEggItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.FlagItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.EngravedWisestoneItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.OffsetPlacerItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.TRArmourItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.GTAxeItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItemAugmentable]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ItemNameBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BoatItemBOP]: any, [key: Internal.DoubleHighBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.DecayPlacerItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.QPBlock$QPBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.DecayPlacerItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.ArcaneLumosItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItemAugmentable]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.QPBlock$QPBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.PresentItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.YTechItems$9]: any, [key: Internal.QPBlock$QPBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.PresentItem]: any, [key: Internal.BlockItem]: any, [key: Internal.GTAxeItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.GenericBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpawnEggItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BedItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.PresentItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.ItemNameBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.DyeableHorseArmorItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.OminousSaplingBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.Flippers]: any, [key: Internal.ArmorComponentItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.SeedItem]: any, [key: Internal.BlockItem]: any, [key: Internal.HeavyBoots]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.RomaniMask]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BombItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.EnergyCellBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.WoodBasedBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.AxeItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.PaintedBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.OffsetPlacerItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SignItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.ArcaneLumosItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.HangingSignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.FairyMask]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RopeItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.ItemStatueBlock]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.DyeableMageArmor]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.PresentItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.YTechItems$4]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.CrystalItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RomaniMask]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.CroptopiaSaplingItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.FuelBlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.StandingAndWallBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.PresentItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.FlagItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BedItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BoatItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.DynamicCellItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.GenericBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BedrockShearsItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemNameBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BombItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.QuantumSuitItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BoatItemBOP]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BoatItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.DoubleHighBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.KamaroMask]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.QuantumSuitItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.TRArmourItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.FluidCellBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BoatItemBOP]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.TRArmourItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItemAugmentable]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.PlaceOnWaterBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BowlFoodItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.CroptopiaSaplingItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.PresentItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: de.dafuqs.spectrum.blocks.present.PresentItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.Item]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RocCape]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SugarCubeItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.Item]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BoatItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TRArmourItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.DyeableMageArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.TargetDummyItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.EngravedWisestoneItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.QuantumSuitItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BoatItemBOP]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.YTechItems$3]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ArcaneFortressArmorItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SaltLanternItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemNameBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.DoubleHighBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ArcaneLumosItem]: any, [key: Internal.QuarkBoatItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.RomaniMask]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.DuctBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.HazmatArmorItem]: any, [key: Internal.GTAxeItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.FeyArmorItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.RebornBucketItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.YTechItems$2]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.GTAxeItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemAugmentable]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.QuarkBoatItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.DemonArmorItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.BucketItem]: any, [key: Internal.SignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemAdvQuarry]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MelonJuiceItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MinecartItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.CroptopiaSaplingItem]: any, [key: Internal.SignItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlastMask]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.GlassArrowItem]: any, [key: Internal.FierceMask]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.ArmorComponentItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.CroptopiaSaplingItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.FlagItem]: any, [key: Internal.BlockItem]: any, [key: Internal.DrinkableItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ConduitBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ItemFluidJug]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MobBucketItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.SeedItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.OffsetPlacerItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ArmorComponentItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.UpgradeBlockItem]: any, [key: Internal.BucketItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BedItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.RebornBucketItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BannerItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BedItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.FlagItem]: any, [key: Internal.GTAxeItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.PresentItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.CroptopiaSaplingItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItemAugmentable]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemAugmentable]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BombItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MemoryItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.EngravedWisestoneItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SilverArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.CrystalItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.EngravedWisestoneItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.AxeItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BoatItemBOP]: any, [key: Internal.TRArmourItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BoatItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.EngravedWisestoneItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemModAxe]: any, [key: Internal.FireChargeItem]: any, [key: Internal.BlockItem]: any, [key: Internal.PresentItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaDoubleHighBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.UpgradeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.PresentItem]: any, [key: Internal.BlockItem]: any, [key: Internal.YTechItems$7]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.GrenadeItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.QPBlock$QPBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BoatItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.PresentItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.TRArmourItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ArmorComponentItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.PaintedBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.YTechItems$2]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.PedestalBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RebornBucketItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.GTAxeItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.DivineShield]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.OffsetPlacerItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.ItemInfiniteFluidJug]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ArmorComponentItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.FuelBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.RebornBucketItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.DrumMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.PotionItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItemAugmentable]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.DoubleHighBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.FueledFireboxBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.CrystalItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.DuctPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemModAxe]: any, [key: Internal.BlockItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemStatueBlock]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.TRArmourItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.HotCocoaItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MobBucketItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BombItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.HangingSignItem]: any, [key: Internal.OffsetPlacerItem]: any, [key: Internal.TRArmourItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ConsumableItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SaltTorchItem]: any, [key: Internal.BlockItem]: any, [key: Internal.WetLavaSpongeItem]: any, [key: Internal.SaltLanternItem]: any, [key: Internal.SeedItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RebornBucketItem]: any, [key: Internal.EtheriumAxe]: any, [key: Internal.BlockItem]: any, [key: Internal.FuelBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.QuarryItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.Item]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.OpticalPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.FuelBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.GameMasterBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RopeBlock$1]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.TRAxeItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SpawnEggItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BubbleBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BoatItemBOP]: any, [key: Internal.ArmorItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.DuctBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.FeyArmorItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SkilletItem]: any, [key: Internal.BlockItem]: any, [key: Internal.CroptopiaSaplingItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.AxeItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.FlagItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.DyeableArmorItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.DoubleHighBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.PaintedBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.FeyArmorItem]: any, [key: Internal.YTechItems$2]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MinecartItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.OffsetPlacerItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ItemArcaneCrown]: any, [key: Internal.BlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.GTAxeItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: cofh.thermal.core.common.item.EnergyCellBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: vectorwing.farmersdelight.common.item.RopeItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BoatItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TRArmourItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.ParametricMiningDeviceItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.CroptopiaSaplingItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.VerticalAndWallBlockItem]: any, [key: Internal.PressureBoilerTankBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.CrystalItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.CrystalItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.VerticalAndWallBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.TimberFrameItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.HoneyBottleItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TotemBaseItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MobBucketItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.TRArmourItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.FlagItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BoneArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RebornBucketItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.PedestalBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.RebornBucketItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemStatueBlock]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.HazmatArmorItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.GTAxeItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MirrorShieldItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ScreenBlockItem]: any, [key: Internal.CrystalItem]: any, [key: Internal.ArcaneLumosItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.ArcaneLumosItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.EngravedWisestoneItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.FuelBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.VerticalAndWallBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.GTAxeItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.EggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.TRArmourItem]: any, [key: Internal.BlockItem]: any, [key: Internal.PedestalBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TotemPoleItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.FuelBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ConsumableItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.ItemNameBlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BottleItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.OffsetPlacerItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.WoodBasedBlockItem]: any, [key: Internal.GameMasterBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.DecayPlacerItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ElytraItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ItemModAxe]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BremenMask]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RebornBucketItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.IndustrialChainsawItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ItemNameBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.DoubleHighBlockItem]: any, [key: Internal.GrenadeItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumBlocks$6]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.EnigmaticElytra]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.GenericBlockItem]: any, [key: Internal.WoodBasedBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.VerticalAndWallBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.FuelBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.CroptopiaSaplingItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.OffsetPlacerItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.GoronTunic]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.QPBlock$QPBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.DivineShield]: any, [key: Internal.GrenadeItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BoatItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.EtheriumArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MobBucketItem]: any, [key: Internal.RottenTomatoItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemAugmentable]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.CroptopiaSaplingItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BoneArmorItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.HazmatArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BannerItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ArcaneLumosItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.GameMasterBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.CloakingDeviceItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaSignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.JingleDressItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.PegasusBoots]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.BannerItem]: any, [key: Internal.BrokenMageArmor]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.DivineShield]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ArmorComponentItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.StageBarrierBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.FlagItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.CroptopiaSaplingItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.GoronMask]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BannerItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.VerticalAndWallBlockItem]: any, [key: Internal.ArmorComponentItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemArcaniumExtractor]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.TRArmourItem]: any, [key: Internal.Item]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.YTechItems$2]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.VerticalAndWallBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ArmorComponentItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.DoubleHighBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SaddleItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.OffsetPlacerItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.CrystalItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.EngravedWisestoneItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.PresentItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ColorApplicatorItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ShulkerShellItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.CroptopiaSaplingItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BedrockAxeItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.DoubleHighBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.EngravedWisestoneItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.DivineShield]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.StandingAndWallBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.GlassArrowItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.QPBlock$QPBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.EndermanHeadItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.WarlockRobesItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BoatItemBOP]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.YTechItems$6]: any, [key: Internal.BlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.GTAxeItem]: any, [key: Internal.SeedItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BedItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.OffsetPlacerItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BoatItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.SeedItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ChainsawItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.GrenadeItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.StandingAndWallBlockItem]: any, [key: Internal.FlintAndSteelItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemModAxe]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BucketItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ItemStatueBlock]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.patreonHead]: any, [key: Internal.YTechItems$2]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemNameBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.GemstoneArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.WoodBasedBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.CageItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.QPBlock$QPBlockItem]: any, [key: Internal.PlayerHeadItem]: any, [key: Internal.ZetaHangingSignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ArmorComponentItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BannerItem]: any, [key: Internal.NanoSuitItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BedItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.GenericBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.YTechItems$9]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.AxeItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ArcaneLumosItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BoatItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.QPBlock$QPBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BannerItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BedItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgottenHatItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BucketItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.PaintedBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BoatItemBOP]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.FluidTankItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.BambooSpikesTippedItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.CookingPotItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: net.mehvahdjukaar.supplementaries.common.items.KeyItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ArcaneLumosItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.EngravedWisestoneItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.RomaniMask]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.SeedItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.LingeringPotionItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.FourLeafCloverItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.PresentItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.RebornBucketItem]: any, [key: Internal.BlockItem]: any, [key: Internal.PaintedBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BoatItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.PresentItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.AxeItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.PedestalBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemNameBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.Items$1]: any, [key: Internal.BlockItem]: any, [key: Internal.IncandescentAmalgamItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.QPBlock$QPBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ItemInfiniteFluidJug]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.FloatBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.DoubleHighBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.QPBlock$QPBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.FlagItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.CraftingBlockItem]: any, [key: Internal.BlockItemAugmentable]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.QuartzAxeItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.LaserPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.CraftingBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BoatItem]: any, [key: Internal.BlockItem]: any, [key: Internal.NanoSuitItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ItemNameBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemStatueBlock]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.StandingAndWallBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MermaidsGemItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MushroomColonyItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.FloatBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.StandingAndWallBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.OffsetPlacerItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaHangingSignItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SaltCampfireItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaArrowItem$Impl]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.FlagItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.WoodBasedBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.StandingAndWallBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ShieldItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BackpackItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.CouncilArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.GTAxeItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RebornBucketItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.GTAxeItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemAugmentable]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.DoubleHighBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.UpgradeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.EngravedWisestoneItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BoatItemCoFH]: any, [key: Internal.LightningChargeItem]: any, [key: Internal.BlockItem]: any, [key: Internal.DoubleHighBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TruthMask]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ArcaneLumosItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.DivineShield]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.PresentItem]: any, [key: Internal.SignItem]: any, [key: Internal.GTAxeItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.PresentItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.PresentItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemModAxe]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BeekeeperArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.ShootingStarItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.GiantMask]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BedItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ArrowItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ArcaneLumosItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.StandingAndWallBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.SeedItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.EtheriumArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.TRArmourItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.AxeItem]: any, [key: Internal.ArmorComponentItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ItemNameBlockItem]: any, [key: Internal.EndAnchor]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BannerItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.InventorWizardArmorItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.DoubleHighBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.FluixAxeItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TRArmourItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaSignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.VerticalAndWallBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.StoneMask]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RebornBucketItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ItemNameBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.TRArmourItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.WissenStorageBaseItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumItems$6]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.VerticalAndWallBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.PresentItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemStatueBlock]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.FramedSignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BoneMealItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TRArmourItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.OffsetPlacerItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.CrystalItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.DivingArmorItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.RebornBucketItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.GrenadeItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.NanoSuitItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.OffsetPlacerItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.DrumMachineItem]: any, [key: Internal.CroptopiaSaplingItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.CrystalItem]: any, [key: Internal.ArcaneLumosItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SpectrumItems$5]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.YTechItems$9]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZoraTunic]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BedItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.PresentItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.PedestalBlockItem]: any, [key: Internal.ItemNameBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.QPBlock$QPBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.DuctPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.GTAxeItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.FlagItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.EngravedWisestoneItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ItemStatueBlock]: any, [key: Internal.HangingSignItem]: any, [key: Internal.ItemNameBlockItem]: any, [key: Internal.EngravedWisestoneItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ItemNameBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.GrenadeItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BedItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.HoverBoots]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.EngravedWisestoneItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ItemStatueBlock]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.DoubleHighBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.HorseArmorItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ScreenBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemModAxe]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MilkBucketItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.CrystalItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ItemBoundShield]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.StandingAndWallBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.DoubleHighBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.StandingAndWallBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.JarItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.GTAxeItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.ZetaSpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TRArmourItem]: any, [key: Internal.VerticalAndWallBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.PresentItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemAugmentable]: any, [key: Internal.GogglesItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.CrystalItem]: any, [key: Internal.BlockItem]: any, [key: Internal.EngravedWisestoneItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ItemStatueBlock]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.CrystalItem]: any, [key: Internal.MushroomColonyItem]: any, [key: Internal.BlockItem]: any, [key: Internal.StandingAndWallBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ShieldItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ArcaneArmorItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.CraftingBlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.FirestoneOreBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BannerItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BoneArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SaltCampfireItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.StandingAndWallBlockItem]: any, [key: Internal.WarlockRobesItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ExperienceBottleItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ArmorItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.DuctPipeBlockItem]: any, [key: Internal.PlaceOnWaterBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ComponentItem]: any, [key: Internal.AxeItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.WoodBasedBlockItem]: any, [key: Internal.QPBlock$QPBlockItem]: any, [key: Internal.BoundSoulBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.ArchaicTunic]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SteamStorageBaseItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.HangingSignItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.HorseArmorItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.DyeableArmorItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MobBucketItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.RebornBucketItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.CrystalItem]: any, [key: Internal.patreonShirt]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.BlockItem]: any, [key: Internal.FluidStorageBaseItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.LootCrateBlockItem]: any, [key: Internal.DrumMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ArcaneLumosItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.InfernalShield]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.GrenadeItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemAugmentable]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ArmorComponentItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.GTAxeItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.SaltTorchItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.QPBlock$QPBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.EngravedWisestoneItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MinecartItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.GlassArrowItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.AEBaseBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.YTechItems$5]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MobBucketItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BrokenMageArmor]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.PresentItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.PresentItem]: any, [key: Internal.YTechItems$9]: any, [key: Internal.ArcaneLumosItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.GemstoneArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ConsumableItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BoundSoulBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BoatItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ShootingStarItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemStatueBlock]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ItemModAxe]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.HazmatArmorItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SeedItem]: any, [key: Internal.DyeableArmorItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SaltLanternItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.HangingSignItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.SignItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.FuelBlockItem]: any, [key: Internal.CrystalItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.TieredBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.RebornBucketItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.OverallsItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.CroptopiaSaplingItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItemCoFH]: any, [key: Internal.SpectrumSkullBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BoatItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialPipeBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.RebornBucketItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ItemNameBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.ZetaBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.ItemDivineArmor]: any, [key: Internal.RendererBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any, [key: Internal.ForgeSpawnEggItem]: any, [key: Internal.PresentItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MaterialBlockItem]: any, [key: Internal.MetaMachineItem]: any, [key: Internal.BlockItem]: any, [key: Internal.BlockItem]: any}) & (Internal.Map<Internal.Item, Internal.DispenseItemBehavior>);
        static readonly TRIGGERED: (Internal.BooleanProperty) & (Internal.BooleanProperty);
        static readonly FACING: (Internal.DirectionProperty) & (Internal.DirectionProperty);
    }
    type DispenserBlock_ = DispenserBlock;
    class FogShape extends Internal.Enum<Internal.FogShape> {
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        getClass(): typeof any;
        toString(): string;
        notifyAll(): void;
        getIndex(): number;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        compareTo(arg0: any): number;
        static valueOf(arg0: string): Internal.FogShape;
        name(): string;
        hashCode(): number;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.FogShape>>;
        "compareTo(com.mojang.blaze3d.shaders.FogShape)"(arg0: Internal.FogShape_): number;
        ordinal(): number;
        wait(): void;
        wait(arg0: number): void;
        static values(): Internal.FogShape[];
        "compareTo(java.lang.Object)"(arg0: any): number;
        equals(arg0: any): boolean;
        compareTo(arg0: Internal.FogShape_): number;
        getDeclaringClass(): typeof Internal.FogShape;
        get class(): typeof any
        get index(): number
        get declaringClass(): typeof Internal.FogShape
        static readonly CYLINDER: (Internal.FogShape) & (Internal.FogShape);
        static readonly SPHERE: (Internal.FogShape) & (Internal.FogShape);
    }
    type FogShape_ = FogShape | "cylinder" | "sphere";
    class PastelNodeBlockEntity extends Internal.BlockEntity implements Internal.ExtendedScreenHandlerFactory, Internal.FilterConfigurable {
        constructor(blockPos: BlockPos_, blockState: Internal.BlockState_)
        requestModelDataUpdate(): void;
        "areCapsCompatible(net.minecraftforge.common.capabilities.CapabilityDispatcher)"(arg0: Internal.CapabilityDispatcher_): boolean;
        /**
         * @deprecated
        */
        setBlockState(arg0: Internal.BlockState_): void;
        hasAttached(type: Internal.AttachmentType_<any>): boolean;
        "writeScreenOpeningData(net.minecraft.server.level.ServerPlayer,net.minecraft.network.FriendlyByteBuf)"(player: Internal.ServerPlayer_, buf: Internal.FriendlyByteBuf_): void;
        getItemFilters(): Internal.List<Internal.Item>;
        load(nbt: Internal.CompoundTag_): void;
        setChanged(): void;
        canTransfer(): boolean;
        saveWithoutMetadata(): Internal.CompoundTag;
        getAttachedOrSet<A>(type: Internal.AttachmentType_<A>, defaultValue: A): A;
        removeAttached<A>(type: Internal.AttachmentType_<A>): A;
        static getFilterInventoryFromPacket(packetByteBuf: Internal.FriendlyByteBuf_): net.minecraft.world.Container;
        writeFilterNbt(tag: Internal.CompoundTag_, filterItems: Internal.List_<Internal.Item>): void;
        setRemoved(): void;
        getCapability<T>(arg0: Internal.Capability_<T>): Internal.LazyOptional<T>;
        getType(): Internal.BlockEntityType<any>;
        addItemCountUnderway(count: number): void;
        static transfer(original: Internal.AttachmentTarget_, target: Internal.AttachmentTarget_, isDeath: boolean): void;
        setNetwork(network: Internal.PastelNetwork_): void;
        setFilterItem(slot: number, item: Internal.Item_): void;
        getRenderBoundingBox(): Internal.AABB;
        getDisplayName(): net.minecraft.network.chat.Component;
        getClass(): typeof any;
        static getPosFromTag(arg0: Internal.CompoundTag_): BlockPos;
        hasAnyComparatorNearby(): boolean;
        onChunkUnloaded(): void;
        saveToItem(arg0: Internal.ItemStack_): void;
        "deserializeNBT(net.minecraft.nbt.CompoundTag)"(arg0: Internal.CompoundTag_): void;
        static addEntityType(arg0: Internal.CompoundTag_, arg1: Internal.BlockEntityType_<any>): void;
        "deserializeNBT(net.minecraft.nbt.Tag)"(arg0: Internal.Tag_): void;
        onBroken(): void;
        createMenu(syncId: number, inv: Internal.Inventory_, player: Internal.Player_): Internal.AbstractContainerMenu;
        getTransferFilterTo(other: Internal.PastelNodeBlockEntity_): Internal.Predicate<Internal.ItemVariant>;
        onComparatorAdded(direction: Internal.Direction_, offset: number): void;
        getUpdatePacket(): Internal.Packet<Internal.ClientGamePacketListener>;
        fabric_hasPersistentAttachments(): boolean;
        hasEmptyFilter(): boolean;
        clearRemoved(): void;
        shouldCloseCurrentScreen(): boolean;
        "areCapsCompatible(net.minecraftforge.common.capabilities.CapabilityProvider)"(arg0: Internal.CapabilityProvider_<Internal.BlockEntity>): boolean;
        owo$setCachedState(arg0: Internal.BlockState_): void;
        fabric_getAttachments(): Internal.Map<any, any>;
        getPersistentData(): Internal.CompoundTag;
        toString(): string;
        triggerEvent(arg0: number, arg1: number): boolean;
        hasLevel(): boolean;
        notifyAll(): void;
        updateInClientWorld(): void;
        getAttachedOrCreate<A>(type: Internal.AttachmentType_<A>, initializer: Internal.Supplier_<A>): A;
        markTransferred(): void;
        wait(arg0: number): void;
        getAttachedOrThrow<A>(type: Internal.AttachmentType_<A>): A;
        reviveCaps(): void;
        getAttached(type: Internal.AttachmentType_<any>): any;
        getUpdateTag(): Internal.CompoundTag;
        getRenderAttachmentData(): any;
        handleUpdateTag(arg0: Internal.CompoundTag_): void;
        static writeScreenOpeningData(buf: Internal.FriendlyByteBuf_, filterItems: Internal.List_<Internal.Item>): void;
        readFilterNbt(tag: Internal.CompoundTag_, filterItems: Internal.List_<Internal.Item>): void;
        modifyAttached<A>(type: Internal.AttachmentType_<A>, modifier: Internal.UnaryOperator_<A>): A;
        setLevel(world: Internal.Level_): void;
        notify(): void;
        getBlockPos(): BlockPos;
        isRemoved(): boolean;
        onLoad(): void;
        fillCrashReportCategory(arg0: Internal.CrashReportCategory_): void;
        getNetwork(): Internal.PastelNetwork;
        invalidateCaps(): void;
        getBlockState(): Internal.BlockState;
        writeScreenOpeningData(player: Internal.ServerPlayer_, buf: Internal.FriendlyByteBuf_): void;
        getAttachedOrGet<A>(type: Internal.AttachmentType_<A>, defaultValue: Internal.Supplier_<A>): A;
        static loadStatic(arg0: BlockPos_, arg1: Internal.BlockState_, arg2: Internal.CompoundTag_): Internal.BlockEntity;
        wait(): void;
        getNodeType(): Internal.PastelNodeType;
        static getFilterInventoryFromItems(items: Internal.List_<Internal.Item>): net.minecraft.world.Container;
        static "writeScreenOpeningData(net.minecraft.network.FriendlyByteBuf,java.util.List)"(buf: Internal.FriendlyByteBuf_, filterItems: Internal.List_<Internal.Item>): void;
        areCapsCompatible(arg0: Internal.CapabilityDispatcher_): boolean;
        canConnect(node: Internal.PastelNodeBlockEntity_): boolean;
        getConnectedStorage(): Internal.Storage<Internal.ItemVariant>;
        fabric_writeAttachmentsToNbt(nbt: Internal.CompoundTag_): void;
        saveAdditional(arg0: Internal.CompoundTag_): void;
        getCapability<T>(arg0: Internal.Capability_<T>, arg1: Internal.Direction_): Internal.LazyOptional<T>;
        saveWithId(): Internal.CompoundTag;
        getAttachedOrCreate<A>(type: Internal.AttachmentType_<A>): A;
        wait(arg0: number, arg1: number): void;
        getLevel(): Internal.Level;
        getItemCountUnderway(): number;
        static setChanged(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        onlyOpCanSetNbt(): boolean;
        serializeNBT(): Internal.Tag;
        saveWithFullMetadata(): Internal.CompoundTag;
        onDataPacket(arg0: Internal.Connection_, arg1: Internal.ClientboundBlockEntityDataPacket_): void;
        hasCustomOutlineRendering(arg0: Internal.Player_): boolean;
        areCapsCompatible(arg0: Internal.CapabilityProvider_<Internal.BlockEntity>): boolean;
        deserializeNBT(arg0: Internal.Tag_): void;
        setAttached(type: Internal.AttachmentType_<any>, value: any): any;
        hashCode(): number;
        fabric_readAttachmentsFromNbt(nbt: Internal.CompoundTag_): void;
        deserializeNBT(arg0: Internal.CompoundTag_): void;
        getAttachedOrElse<A>(type: Internal.AttachmentType_<A>, defaultValue: A): A;
        getRenderData(): any;
        getModelData(): Internal.ModelData;
        equals(obj: any): boolean;
        /**
         * @deprecated
        */
        set blockState(arg0: Internal.BlockState_)
        get itemFilters(): Internal.List<Internal.Item>
        get type(): Internal.BlockEntityType<any>
        set network(network: Internal.PastelNetwork_)
        get renderBoundingBox(): Internal.AABB
        get displayName(): net.minecraft.network.chat.Component
        get class(): typeof any
        get updatePacket(): Internal.Packet<Internal.ClientGamePacketListener>
        get persistentData(): Internal.CompoundTag
        get updateTag(): Internal.CompoundTag
        get renderAttachmentData(): any
        set level(world: Internal.Level_)
        get blockPos(): BlockPos
        get removed(): boolean
        get network(): Internal.PastelNetwork
        get blockState(): Internal.BlockState
        get nodeType(): Internal.PastelNodeType
        get connectedStorage(): Internal.Storage<Internal.ItemVariant>
        get level(): Internal.Level
        get itemCountUnderway(): number
        get renderData(): any
        get modelData(): Internal.ModelData
        static readonly RANGE: (12) & (number);
        static readonly ITEM_FILTER_COUNT: (5) & (number);
    }
    type PastelNodeBlockEntity_ = PastelNodeBlockEntity;
    interface MinMaxBounds$BoundsFromReaderFactory <T extends number, R extends Internal.MinMaxBounds<T>> {
        abstract create(arg0: Internal.StringReader_, arg1: T, arg2: T): R;
        (arg0: Internal.StringReader, arg1: T, arg2: T): R;
    }
    type MinMaxBounds$BoundsFromReaderFactory_<T extends number, R extends Internal.MinMaxBounds<T>> = ((arg0: Internal.StringReader, arg1: T, arg2: T)=> R) | MinMaxBounds$BoundsFromReaderFactory<T, R>;
    class GeodeLayerSettings {
        constructor(arg0: number, arg1: number, arg2: number, arg3: number)
        getClass(): typeof any;
        hashCode(): number;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
        readonly innerLayer: number;
        readonly middleLayer: number;
        static readonly CODEC: Internal.Codec<Internal.GeodeLayerSettings>;
        readonly outerLayer: number;
        readonly filling: number;
    }
    type GeodeLayerSettings_ = GeodeLayerSettings;
    interface CompositeContext {
        abstract compose(arg0: Internal.Raster_, arg1: Internal.Raster_, arg2: Internal.WritableRaster_): void;
        abstract dispose(): void;
    }
    type CompositeContext_ = CompositeContext;
    interface RegistrySupplier <T> extends Internal.DeferredSupplier<T> {
        abstract getRegistrarManager(): Internal.RegistrarManager;
        getKey(): Internal.ResourceKey<T>;
        stream(): Internal.Stream<T>;
        ifPresent(action: Internal.Consumer_<T>): void;
        orElseGet(supplier: Internal.Supplier_<T>): T;
        ifPresentOrElse(action: Internal.Consumer_<T>, emptyAction: Internal.Runnable_): void;
        getRegistryKey(): Internal.ResourceKey<Internal.Registry<T>>;
        abstract getRegistrar(): Internal.Registrar<T>;
        getOrNull(): T;
        orElse(other: T): T;
        abstract getId(): ResourceLocation;
        abstract isPresent(): boolean;
        abstract getRegistryId(): ResourceLocation;
        abstract get(): T;
        listen(callback: Internal.Consumer_<T>): void;
        toOptional(): Internal.Optional<T>;
        get registrarManager(): Internal.RegistrarManager
        get key(): Internal.ResourceKey<T>
        get registryKey(): Internal.ResourceKey<Internal.Registry<T>>
        get registrar(): Internal.Registrar<T>
        get orNull(): T
        get id(): ResourceLocation
        get present(): boolean
        get registryId(): ResourceLocation
    }
    type RegistrySupplier_<T> = RegistrySupplier<T>;
    class MetricSampler$MetricSamplerBuilder <T> {
        constructor(arg0: string, arg1: Internal.MetricCategory_, arg2: Internal.ToDoubleFunction_<T>, arg3: T)
        getClass(): typeof any;
        withBeforeTick(arg0: Internal.Consumer_<T>): this;
        hashCode(): number;
        toString(): string;
        withThresholdAlert(arg0: Internal.MetricSampler$ThresholdTest_): this;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        build(): Internal.MetricSampler;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
    }
    type MetricSampler$MetricSamplerBuilder_<T> = MetricSampler$MetricSamplerBuilder<T>;
    interface ResultConsumer <S> {
        abstract onCommandComplete(arg0: Internal.CommandContext_<S>, arg1: boolean, arg2: number): void;
        (arg0: Internal.CommandContext<S>, arg1: boolean, arg2: number): void;
    }
    type ResultConsumer_<S> = ((arg0: Internal.CommandContext<S>, arg1: boolean, arg2: number)=> void) | ResultConsumer<S>;
    class TripWireBlock extends Internal.Block {
        constructor(arg0: Internal.TripWireHookBlock_, arg1: Internal.BlockBehaviour$Properties_)
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getSettings(): Internal.BlockBehaviour$Properties;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        getTypeData(): Internal.CompoundTag;
        setFriction(arg0: number): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getSpeedFactor(): number;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        playerDestroy(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Player_): void;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Internal.Player_): Internal.ItemStack;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        getRenderPropertiesInternal(): any;
        needsDynamicNodeTypeCheck(): boolean;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        setRequiresTool(v: boolean): void;
        asBlock(): Internal.Block;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        puzzleslib$setItem(arg0: Internal.Item_): void;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        /**
         * @deprecated
        */
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        lychee$isTickable(): boolean;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        /**
         * @deprecated
        */
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        spawnDestroyParticles(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_): void;
        wait(): void;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Internal.Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(shape: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        setIsRandomlyTicking(arg0: boolean): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        registerDefaultState(arg0: Internal.BlockState_): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        /**
         * @deprecated
        */
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        isAir(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        shouldConnectTo(arg0: Internal.BlockState_, arg1: Internal.Direction_): boolean;
        needsDynamicBurningCheck(): boolean;
        getDescriptionId(): string;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        handler$bob000$radium$postConstruct(p_i241196_1_: Internal.BlockBehaviour$Properties_, ci: Internal.CallbackInfo_): void;
        tryDropExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: Internal.ItemStack_, arg3: Internal.IntProvider_): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        handler$eok000$particular$spawnParticles(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, random: Internal.RandomSource_, ci: Internal.CallbackInfo_): void;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        setDrops(arg0: ResourceLocation_): void;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        getBlockProperties(): Internal.BlockBehaviour$Properties;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getShapeForEachState(arg0: Internal.Function_<Internal.BlockState, Internal.VoxelShape>): Internal.ImmutableMap<Internal.BlockState, Internal.VoxelShape>;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        getFriction(): number;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        createBlockStateDefinition(arg0: Internal.StateDefinition$Builder_<Internal.Block, Internal.BlockState>): void;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        notify(): void;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        handler$dji000$spectrum$afterBreak(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        setDestroySpeed(v: number): void;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        handler$zbh000$additionalentityattributes$additionalEntityAttributes$saveBreakingPlayer(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        arch$holder(): Internal.Holder<Internal.Block>;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): void;
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        lychee$setTickable(arg0: boolean): void;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        get settings(): Internal.BlockBehaviour$Properties
        /**
         * @deprecated
        */
        get explosionResistance(): number
        get typeData(): Internal.CompoundTag
        set friction(arg0: number)
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get descriptionId(): string
        get jumpFactor(): number
        set drops(arg0: ResourceLocation_)
        set speedFactor(arg0: number)
        get blockProperties(): Internal.BlockBehaviour$Properties
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get mod(): string
        set hasCollision(arg0: boolean)
        static readonly ATTACHED: (Internal.BooleanProperty) & (Internal.BooleanProperty);
        static readonly NORTH: (Internal.BooleanProperty) & (Internal.BooleanProperty);
        static readonly SOUTH: (Internal.BooleanProperty) & (Internal.BooleanProperty);
        static readonly WEST: (Internal.BooleanProperty) & (Internal.BooleanProperty);
        static readonly POWERED: (Internal.BooleanProperty) & (Internal.BooleanProperty);
        static readonly DISARMED: (Internal.BooleanProperty) & (Internal.BooleanProperty);
        static readonly EAST: (Internal.BooleanProperty) & (Internal.BooleanProperty);
        static readonly AABB: (Internal.VoxelShapeSimpleCube) & (Internal.VoxelShape);
        static readonly NOT_ATTACHED_AABB: (Internal.VoxelShapeAlignedCuboid) & (Internal.VoxelShape);
    }
    type TripWireBlock_ = TripWireBlock;
    class WorkbenchRecipe$WorkbenchRecipeType implements Internal.RecipeType<any> {
        getClass(): typeof any;
        hashCode(): number;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        static simple<T extends Internal.Recipe<any>>(arg0: ResourceLocation_): Internal.RecipeType<T>;
        static register<T extends Internal.Recipe<any>>(arg0: string): Internal.RecipeType<T>;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
    }
    type WorkbenchRecipe$WorkbenchRecipeType_ = WorkbenchRecipe$WorkbenchRecipeType;
    class ImageCapabilities implements Internal.Cloneable {
        constructor(arg0: boolean)
        isAccelerated(): boolean;
        clone(): any;
        getClass(): typeof any;
        hashCode(): number;
        isTrueVolatile(): boolean;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get accelerated(): boolean
        get class(): typeof any
        get trueVolatile(): boolean
    }
    type ImageCapabilities_ = ImageCapabilities;
    class DecoratedPotRecipe extends Internal.CustomRecipe {
        constructor(arg0: ResourceLocation_, arg1: Internal.CraftingBookCategory_)
        getClass(): typeof any;
        getGroup(): string;
        getToastSymbol(): Internal.ItemStack;
        matches(arg0: Internal.CraftingContainer_, arg1: Internal.Level_): boolean;
        getSchema(): Internal.RecipeSchema;
        "matches(net.minecraft.world.inventory.CraftingContainer,net.minecraft.world.level.Level)"(arg0: Internal.CraftingContainer_, arg1: Internal.Level_): boolean;
        "assemble(net.minecraft.world.Container,net.minecraft.core.RegistryAccess)"(arg0: net.minecraft.world.Container_, arg1: Internal.RegistryAccess_): Internal.ItemStack;
        notify(): void;
        getRemainingItems(arg0: Internal.CraftingContainer_): Internal.NonNullList<Internal.ItemStack>;
        wait(arg0: number, arg1: number): void;
        assemble(arg0: Internal.CraftingContainer_, arg1: Internal.RegistryAccess_): Internal.ItemStack;
        category(): Internal.CraftingBookCategory;
        assemble(arg0: net.minecraft.world.Container_, arg1: Internal.RegistryAccess_): Internal.ItemStack;
        getSerializer(): Internal.RecipeSerializer<any>;
        getId(): ResourceLocation;
        matches(arg0: net.minecraft.world.Container_, arg1: Internal.Level_): boolean;
        getMod(): string;
        getIngredients(): Internal.NonNullList<Internal.Ingredient>;
        isSpecial(): boolean;
        hasOutput(match: Internal.ReplacementMatch_): boolean;
        getResultItem(arg0: Internal.RegistryAccess_): Internal.ItemStack;
        toString(): string;
        "assemble(net.minecraft.world.inventory.CraftingContainer,net.minecraft.core.RegistryAccess)"(arg0: Internal.CraftingContainer_, arg1: Internal.RegistryAccess_): Internal.ItemStack;
        notifyAll(): void;
        canCraftInDimensions(arg0: number, arg1: number): boolean;
        "matches(net.minecraft.world.Container,net.minecraft.world.level.Level)"(arg0: net.minecraft.world.Container_, arg1: Internal.Level_): boolean;
        showNotification(): boolean;
        replaceInput(match: Internal.ReplacementMatch_, with_: Internal.InputReplacement_): boolean;
        getType(): ResourceLocation;
        setGroup(group: string): void;
        hashCode(): number;
        getOrCreateId(): ResourceLocation;
        hasInput(match: Internal.ReplacementMatch_): boolean;
        wait(): void;
        isIncomplete(): boolean;
        wait(arg0: number): void;
        replaceOutput(match: Internal.ReplacementMatch_, with_: Internal.OutputReplacement_): boolean;
        equals(arg0: any): boolean;
        static createDecoratedPotItem(arg0: Internal.DecoratedPotBlockEntity$Decorations_): Internal.ItemStack;
        get class(): typeof any
        get group(): string
        get toastSymbol(): Internal.ItemStack
        get schema(): Internal.RecipeSchema
        get serializer(): Internal.RecipeSerializer<any>
        get id(): ResourceLocation
        get mod(): string
        get ingredients(): Internal.NonNullList<Internal.Ingredient>
        get special(): boolean
        get type(): ResourceLocation
        set group(group: string)
        get orCreateId(): ResourceLocation
        get incomplete(): boolean
    }
    type DecoratedPotRecipe_ = DecoratedPotRecipe;
    interface AccessibleSelection {
        abstract clearAccessibleSelection(): void;
        abstract getAccessibleSelection(arg0: number): Internal.Accessible;
        abstract addAccessibleSelection(arg0: number): void;
        abstract removeAccessibleSelection(arg0: number): void;
        abstract selectAllAccessibleSelection(): void;
        abstract isAccessibleChildSelected(arg0: number): boolean;
        abstract getAccessibleSelectionCount(): number;
        get accessibleSelectionCount(): number
    }
    type AccessibleSelection_ = AccessibleSelection;
    interface IMedicalConditionTracker {
        abstract progressCondition(arg0: MedicalCondition_, arg1: number): void;
        abstract removeMedicalCondition(arg0: MedicalCondition_): void;
        abstract getMaxAirSupply(): number;
        abstract getMedicalConditions(): Internal.Object2FloatMap<MedicalCondition>;
        progressRelatedCondition(material: com.gregtechceu.gtceu.api.data.chemical.material.Material_): void;
        abstract heal(arg0: MedicalCondition_, arg1: number): void;
        abstract tick(): void;
        abstract setMobEffect(arg0: Internal.MobEffect_, arg1: number): void;
        get maxAirSupply(): number
        get medicalConditions(): Internal.Object2FloatMap<MedicalCondition>
    }
    type IMedicalConditionTracker_ = IMedicalConditionTracker;
    interface ConfigurableAutoFlush {
        abstract setShouldAutoFlush(arg0: boolean): void;
        set shouldAutoFlush(arg0: boolean)
        (arg0: boolean): void;
    }
    type ConfigurableAutoFlush_ = ((arg0: boolean)=> void) | ConfigurableAutoFlush;
    class ConstructPartStorageTorso extends Internal.ItemConstructPart {
        constructor(arg0: Internal.ConstructMaterial_)
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        allowContinuingBlockBreaking(player: Internal.Player_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        moonlight$addAdditionalBehavior(placementOverride: Internal.AdditionalItemPlacement_): void;
        isFireResistant(): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        getArmor(): number;
        moonlight$getClientAnimationExtension(): any;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        fabric_setCustomDamageHandler(handler: Internal.CustomDamageHandler_): void;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getBarColor(arg0: Internal.ItemStack_): number;
        getOrCreateDescriptionId(): string;
        getItem(): Internal.Item;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): InteractionResult;
        moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        moonlight$setClientAnimationExtension(obj: any): void;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        getToughness(): number;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        handler$dfl000$revelationary$getCloakedName(stack: Internal.ItemStack_, callbackInfoReturnable: Internal.CallbackInfoReturnable_<any>): void;
        isEdible(): boolean;
        getAttributeModifiers(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        getSlot(): Internal.ConstructSlot;
        getKnockbackBonus(): number;
        canBeInLoot(arg0: Internal.LootContext_): boolean;
        getTier(arg0: Internal.Level_, arg1: Internal.ItemStack_): number;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        getActionSpeed(arg0: Internal.ConstructCapability_): number;
        cardinal_createComponents(stack: Internal.ItemStack_): Internal.ComponentContainer;
        isFoil(arg0: Internal.ItemStack_): boolean;
        "getAttributeModifiers(net.minecraft.world.entity.EquipmentSlot,net.minecraft.world.item.ItemStack)"(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        fabric_getEquipmentSlotProvider(): Internal.EquipmentSlotProvider;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        resolveTier(arg0: Internal.Level_, arg1: Internal.ItemStack_): number;
        owo$tab(): number;
        setCachedTier(arg0: number): void;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        isMutex(arg0: number): boolean;
        getCachedTier(): number;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        getBonusSpeed(): number;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        getAttackSpeedModifier(): number;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vector3f;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        "getAttributeModifiers(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.EquipmentSlot)"(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        allowNbtUpdateAnimation(player: Internal.Player_, hand: Internal.InteractionHand_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        fabric_getCachedItemVariant(): Internal.ItemVariant;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        fabric_getCustomDamageHandler(): Internal.CustomDamageHandler;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        static getPlayerPOVHitResult(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.ClipContext$Fluid_): Internal.BlockHitResult;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        equals(arg0: any): boolean;
        setRarity(arg0: Internal.Rarity_): void;
        getRecipeRemainder(stack: Internal.ItemStack_): Internal.ItemStack;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        /**
         * @deprecated
        */
        onDestroyed(arg0: Internal.ItemEntity_): void;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        getEnabledCapabilities(): Internal.ConstructCapability[];
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        canBeHurtBy(arg0: DamageSource_): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        fabric_setEquipmentSlotProvider(equipmentSlotProvider: Internal.EquipmentSlotProvider_): void;
        getManaCapacity(): number;
        getDescriptionId(): string;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        zeta$setHumanoidArmorModel(arg0: Internal.HumanoidArmorModelGetter_): void;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        setBurnTime(i: number): void;
        getIntelligenceBonus(): number;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: DamageSource_): void;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        getDescription(): net.minecraft.network.chat.Component;
        owo$stackGenerator(): Internal.BiConsumer<any, any>;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        useOn(arg0: Internal.UseOnContext_): InteractionResult;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        handler$ebb000$connectormod$redirectIsPiglinCurrency(arg0: Internal.ItemStack_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        setAttackDamage(attackDamage: number): void;
        getBackpackCapacityBoost(): number;
        getModelTypeMutex(): number;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        toString(): string;
        /**
         * @deprecated
        */
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        modifyReturnValue$ffm000$quark$overrideOtherStackedOnMe(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_, arg3: Internal.Slot_, arg4: Internal.ClickAction_, arg5: Internal.Player_, arg6: Internal.SlotAccess_): boolean;
        getId(): string;
        handler$fbm000$moonlight$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        isSuitableFor(stack: Internal.ItemStack_, state: Internal.BlockState_): boolean;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        puzzleslib$setRenderProperties(arg0: any): void;
        getAttackDamage(): number;
        notify(): void;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        zeta$setBlockEntityWithoutLevelRenderer(arg0: Internal.BlockEntityWithoutLevelRenderer_): void;
        handler$cog000$croptopia$overrideConstructor(arg0: Internal.Item$Properties_, arg1: Internal.CallbackInfo_): void;
        getFluidCapacity(): number;
        setSneakBypass(): com.mna.api.items.TieredItem;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        getEatingSound(): Internal.SoundEvent;
        owo$setGroup(group: Internal.CreativeModeTab_): void;
        puzzleslib$getRenderProperties(): any;
        canBeDepleted(): boolean;
        getDamage(arg0: Internal.ItemStack_): number;
        getMaterial(): Internal.ConstructMaterial;
        wait(arg0: number, arg1: number): void;
        getPerceptionDistanceBonus(): number;
        getInventorySizeBonus(): number;
        getRangedAttackDamage(): number;
        getMod(): string;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        owo$group(): Internal.CreativeModeTab;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        modifyReturnValue$ffm000$quark$overrideStackedOnOther(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_): boolean;
        get drinkingSound(): Internal.SoundEvent
        get fireResistant(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get armor(): number
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set maxDamage(arg0: number)
        get orCreateDescriptionId(): string
        get item(): Internal.Item
        get class(): typeof any
        get renderPropertiesInternal(): any
        get toughness(): number
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        get edible(): boolean
        get slot(): Internal.ConstructSlot
        get knockbackBonus(): number
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        set cachedTier(arg0: number)
        get cachedTier(): number
        get bonusSpeed(): number
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        get attackSpeedModifier(): number
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        set nameKey(arg0: string)
        get idLocation(): ResourceLocation
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
        set rarity(arg0: Internal.Rarity_)
        get complex(): boolean
        get enabledCapabilities(): Internal.ConstructCapability[]
        get manaCapacity(): number
        get descriptionId(): string
        get creativeTab(): string
        set burnTime(i: number)
        get intelligenceBonus(): number
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        set itemBuilder(b: Internal.ItemBuilder_)
        set attackDamage(attackDamage: number)
        get backpackCapacityBoost(): number
        get modelTypeMutex(): number
        /**
         * @deprecated
        */
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        get attackDamage(): number
        /**
         * @deprecated
        */
        get maxStackSize(): number
        get fluidCapacity(): number
        get eatingSound(): Internal.SoundEvent
        get material(): Internal.ConstructMaterial
        get perceptionDistanceBonus(): number
        get inventorySizeBonus(): number
        get rangedAttackDamage(): number
        get mod(): string
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
    }
    type ConstructPartStorageTorso_ = ConstructPartStorageTorso;
    class ProjectileImpactEvent extends Internal.EntityEvent {
        constructor()
        constructor(arg0: Internal.Projectile_, arg1: Internal.HitResult_)
        getResult(): Internal.Event$Result;
        setCanceled(arg0: boolean): void;
        getClass(): typeof any;
        toString(): string;
        setPhase(arg0: Internal.EventPriority_): void;
        notifyAll(): void;
        getProjectile(): Internal.Projectile;
        isCanceled(): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        hasResult(): boolean;
        setResult(arg0: Internal.Event$Result_): void;
        hashCode(): number;
        isCancelable(): boolean;
        getEntity(): Internal.Entity;
        wait(): void;
        getListenerList(): Internal.ListenerList;
        wait(arg0: number): void;
        getPhase(): Internal.EventPriority;
        getRayTraceResult(): Internal.HitResult;
        equals(arg0: any): boolean;
        get result(): Internal.Event$Result
        set canceled(arg0: boolean)
        get class(): typeof any
        set phase(arg0: Internal.EventPriority_)
        get projectile(): Internal.Projectile
        get canceled(): boolean
        set result(arg0: Internal.Event$Result_)
        get cancelable(): boolean
        get entity(): Internal.Entity
        get listenerList(): Internal.ListenerList
        get phase(): Internal.EventPriority
        get rayTraceResult(): Internal.HitResult
    }
    type ProjectileImpactEvent_ = ProjectileImpactEvent;
    class ModuleDescriptor$Exports$Modifier extends Internal.Enum<Internal.ModuleDescriptor$Exports$Modifier> {
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        getDeclaringClass(): typeof Internal.ModuleDescriptor$Exports$Modifier;
        getClass(): typeof any;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.ModuleDescriptor$Exports$Modifier>>;
        toString(): string;
        notifyAll(): void;
        compareTo(arg0: Internal.ModuleDescriptor$Exports$Modifier_): number;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        compareTo(arg0: any): number;
        static valueOf(arg0: string): Internal.ModuleDescriptor$Exports$Modifier;
        static values(): Internal.ModuleDescriptor$Exports$Modifier[];
        name(): string;
        hashCode(): number;
        ordinal(): number;
        wait(): void;
        wait(arg0: number): void;
        "compareTo(java.lang.Object)"(arg0: any): number;
        "compareTo(java.lang.module.ModuleDescriptor$Exports$Modifier)"(arg0: Internal.ModuleDescriptor$Exports$Modifier_): number;
        equals(arg0: any): boolean;
        get declaringClass(): typeof Internal.ModuleDescriptor$Exports$Modifier
        get class(): typeof any
        static readonly SYNTHETIC: (Internal.ModuleDescriptor$Exports$Modifier) & (Internal.ModuleDescriptor$Exports$Modifier);
        static readonly MANDATED: (Internal.ModuleDescriptor$Exports$Modifier) & (Internal.ModuleDescriptor$Exports$Modifier);
    }
    type ModuleDescriptor$Exports$Modifier_ = "mandated" | "synthetic" | ModuleDescriptor$Exports$Modifier;
    class Item implements Internal.FeatureElement, Internal.IForgeItem, Internal.ItemKJS, Internal.DelegateHolder<any>, Internal.OwoItemExtensions, Internal.IExtendedItem, Internal.ItemForgeAccessor, Internal.ItemExtensions, Internal.InjectedItemExtension, Internal.ItemFTBL, Internal.ItemLike, Internal.IrisItemLightProvider, Internal.IZetaForgeItemStuff, Internal.FabricItem, Internal.ItemCaller, Internal.ItemVariantCache {
        constructor(arg0: Internal.Item$Properties_)
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        allowContinuingBlockBreaking(player: Internal.Player_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        moonlight$addAdditionalBehavior(placementOverride: Internal.AdditionalItemPlacement_): void;
        isFireResistant(): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        moonlight$getClientAnimationExtension(): any;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        asItem(): this;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        fabric_setCustomDamageHandler(handler: Internal.CustomDamageHandler_): void;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getBarColor(arg0: Internal.ItemStack_): number;
        getOrCreateDescriptionId(): string;
        getItem(): this;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): InteractionResult;
        moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        moonlight$setClientAnimationExtension(obj: any): void;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        handler$dfl000$revelationary$getCloakedName(stack: Internal.ItemStack_, callbackInfoReturnable: Internal.CallbackInfoReturnable_<any>): void;
        isEdible(): boolean;
        getAttributeModifiers(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        cardinal_createComponents(stack: Internal.ItemStack_): Internal.ComponentContainer;
        isFoil(arg0: Internal.ItemStack_): boolean;
        "getAttributeModifiers(net.minecraft.world.entity.EquipmentSlot,net.minecraft.world.item.ItemStack)"(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        fabric_getEquipmentSlotProvider(): Internal.EquipmentSlotProvider;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        owo$tab(): number;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vector3f;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        "getAttributeModifiers(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.EquipmentSlot)"(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        allowNbtUpdateAnimation(player: Internal.Player_, hand: Internal.InteractionHand_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        fabric_getCachedItemVariant(): Internal.ItemVariant;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        fabric_getCustomDamageHandler(): Internal.CustomDamageHandler;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        static getPlayerPOVHitResult(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.ClipContext$Fluid_): Internal.BlockHitResult;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        equals(arg0: any): boolean;
        setRarity(arg0: Internal.Rarity_): void;
        getRecipeRemainder(stack: Internal.ItemStack_): Internal.ItemStack;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        /**
         * @deprecated
        */
        onDestroyed(arg0: Internal.ItemEntity_): void;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        canBeHurtBy(arg0: DamageSource_): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        fabric_setEquipmentSlotProvider(equipmentSlotProvider: Internal.EquipmentSlotProvider_): void;
        getDescriptionId(): string;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        zeta$setHumanoidArmorModel(arg0: Internal.HumanoidArmorModelGetter_): void;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: DamageSource_): void;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        getDescription(): net.minecraft.network.chat.Component;
        owo$stackGenerator(): Internal.BiConsumer<any, any>;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        useOn(arg0: Internal.UseOnContext_): InteractionResult;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        handler$ebb000$connectormod$redirectIsPiglinCurrency(arg0: Internal.ItemStack_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        setAttackDamage(attackDamage: number): void;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        toString(): string;
        /**
         * @deprecated
        */
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        modifyReturnValue$ffm000$quark$overrideOtherStackedOnMe(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_, arg3: Internal.Slot_, arg4: Internal.ClickAction_, arg5: Internal.Player_, arg6: Internal.SlotAccess_): boolean;
        getId(): Special.Item&`${string}:${string}`;
        handler$fbm000$moonlight$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        isSuitableFor(stack: Internal.ItemStack_, state: Internal.BlockState_): boolean;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        puzzleslib$setRenderProperties(arg0: any): void;
        notify(): void;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        zeta$setBlockEntityWithoutLevelRenderer(arg0: Internal.BlockEntityWithoutLevelRenderer_): void;
        handler$cog000$croptopia$overrideConstructor(arg0: Internal.Item$Properties_, arg1: Internal.CallbackInfo_): void;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        getEatingSound(): Internal.SoundEvent;
        owo$setGroup(group: Internal.CreativeModeTab_): void;
        puzzleslib$getRenderProperties(): any;
        canBeDepleted(): boolean;
        getDamage(arg0: Internal.ItemStack_): number;
        wait(arg0: number, arg1: number): void;
        getMod(): string;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        owo$group(): Internal.CreativeModeTab;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): this;
        getTypeItemStackKey(): Internal.ItemStackKey;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        modifyReturnValue$ffm000$quark$overrideStackedOnOther(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_): boolean;
        get drinkingSound(): Internal.SoundEvent
        get fireResistant(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set maxDamage(arg0: number)
        get orCreateDescriptionId(): string
        get item(): Internal.Item
        get class(): typeof any
        get renderPropertiesInternal(): any
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        get edible(): boolean
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        set nameKey(arg0: string)
        get idLocation(): ResourceLocation
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
        set rarity(arg0: Internal.Rarity_)
        get complex(): boolean
        get descriptionId(): string
        get creativeTab(): string
        set burnTime(i: number)
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        set itemBuilder(b: Internal.ItemBuilder_)
        set attackDamage(attackDamage: number)
        /**
         * @deprecated
        */
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): Special.Item&`${string}:${string}`
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        /**
         * @deprecated
        */
        get maxStackSize(): number
        get eatingSound(): Internal.SoundEvent
        get mod(): string
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
        static readonly BY_BLOCK: ({[key: Internal.GemstoneChimeBlock]: Internal.BlockItem, [key: any]: Internal.CroptopiaSaplingItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModStem]: Internal.BlockItem, [key: any]: Internal.PaintedBlockItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.WallBannerBlock]: Internal.BannerItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockNightmareBed]: Internal.ItemNightmareBed, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.TechRebornStairsBlock]: Internal.BlockItem, [key: any]: Internal.SeedItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: mod.maxbogomol.wizards_reborn.common.block.FrameBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.PrimitiveAlloySmelterBlock]: Internal.YTechItems$2, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.SignItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FluidLoaderBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.WallHangingSignBlock]: Internal.HangingSignItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.YellowAutumnLeavesBlock]: Internal.BlockItem, [key: Internal.WellspringPillarBlock]: Internal.OffsetPlacerItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: Internal.SandBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.ColoredPressurePlateBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredWoodenButtonBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.SeedItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BannerBlock]: Internal.BannerItem, [key: Internal.PostBlock]: Internal.BlockItem, [key: Internal.ColoredStrippedWoodBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.WeatheringCopperSlabBlock]: Internal.BlockItem, [key: Internal.FramedExtendedDoubleSlopePanelBlock]: Internal.BlockItem, [key: any]: Internal.SeedItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.EngravedWisestoneBlock]: Internal.EngravedWisestoneItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BlockModStairs]: Internal.BlockItem, [key: any]: Internal.JarItem, [key: Internal.GenericMachineBlock]: Internal.BlockItem, [key: Internal.TilledSlushBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.DetectorRailBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.WyeTrackBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockReinforcedGlass]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.ThrottleTrackBlock]: Internal.BlockItem, [key: any]: Internal.SignItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.LockingTrackBlock]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.BlockModBookshelf]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.BlockRubberPlank]: Internal.BlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ColoredSporeBlossomBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.SimpleRotationalBlock]: Internal.TieredBlockItem, [key: Internal.GemstonePlayerOnlyGlassBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.StainedGlassBlock]: Internal.BlockItem, [key: Internal.FramedDoubleCornerSlopePanelWallBlock]: Internal.VerticalAndWallBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredStrippedLogBlock]: Internal.BlockItem, [key: Internal.BlockModLamp]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.PresentBlock]: de.dafuqs.spectrum.blocks.present.PresentItem, [key: any]: Internal.FuelBlockItem, [key: any]: Internal.TimberFrameItem, [key: Internal.BlockTwilightFlower]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: Internal.StrippingLootPillarBlock]: Internal.BlockItem, [key: Internal.BlockModGlass]: Internal.BlockItem, [key: Internal.IronTankValveBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockModLightFence]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.EyeSwitchBlock]: Internal.BlockItem, [key: Internal.RefractionLensBlock]: Internal.OffsetPlacerItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.BlockItem, [key: Internal.IronTankWallBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.SnowLayerBlock]: Internal.BlockItem, [key: Internal.CrusherMultiblockBlock]: Internal.BlockItem, [key: Internal.ScaffoldingBlock]: Internal.ScaffoldingBlockItem, [key: Internal.StatusEffectIdolBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.PoweredRailBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockTwilightGrass]: Internal.BlockItem, [key: Internal.FramedDoorBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: Internal.LaserPipeBlock]: Internal.LaserPipeBlockItem, [key: Internal.BannerBlock]: Internal.BannerItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.TieredBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.WoodBasedBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.DryingRackBlock]: Internal.YTechItems$9, [key: Internal.BlockModLadder]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.EntityBlockActive4Way]: Internal.BlockItemAugmentable, [key: Internal.ChainBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: com.gregtechceu.gtceu.common.block.BatteryBlock]: Internal.RendererBlockItem, [key: Internal.BlockStatue]: Internal.ItemStatueBlock, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.FluidExtractorBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.ZincCarbonBatteryBlock]: Internal.BlockItem, [key: Internal.FenceBlock]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.ColoredLeavesBlock]: Internal.BlockItem, [key: Internal.FramedPillarBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.ColoredWoodenButtonBlock]: Internal.BlockItem, [key: Internal.AEDecorativeBlock]: Internal.AEBaseBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.TieredBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.ItemRoundelBlock]: Internal.BlockItem, [key: Internal.CertusQuartzClusterBlock]: Internal.AEBaseBlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.DirtPathBlock]: Internal.BlockItem, [key: Internal.ColoredLeavesBlock]: Internal.BlockItem, [key: Internal.IronTankGaugeBlock]: Internal.BlockItem, [key: Internal.StrippingLootPillarBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FenceBlock]: Internal.BlockItem, [key: Internal.FlowerBlock]: Internal.BlockItem, [key: Internal.FramedFlowerPotBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WallHangingSignBlock]: Internal.HangingSignItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.CandleBlock]: Internal.BlockItem, [key: Internal.ActiveBlock]: Internal.RendererBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.GemstoneOreBlock]: Internal.BlockItem, [key: Internal.BlockModBookshelf]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ActiveBlock]: Internal.RendererBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ColoredFenceBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.HangingSignItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.IronTankGaugeBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockModButton]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.ControlTrackBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.TieredBlockItem, [key: Internal.WeatheringSlabBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.EnderSkullBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.CandleBlock]: Internal.BlockItem, [key: Internal.GenericMachineBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.AloeBlock]: Internal.ItemNameBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockModUnbreakable]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.FlowerPotBlock]: Internal.BlockItem, [key: Internal.WeatheringBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BlockSignalBlock]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ColoredLightBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StrengthenedGlassBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.GlassBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockModStairs]: Internal.BlockItem, [key: Internal.WeatheringStairsBlock]: Internal.BlockItem, [key: Internal.DetectorTrackBlock]: Internal.BlockItem, [key: Internal.SteelTankValveBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.TrapDoorBlock]: Internal.BlockItem, [key: any]: Internal.SeedItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.BlockCozybarkLeaves]: Internal.BlockItem, [key: Internal.BaseCoralWallFanBlock]: Internal.StandingAndWallBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.DualTokenSignalBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.ColoredStairsBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.GlassFrameBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.WallBannerBlock]: Internal.BannerItem, [key: any]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ThrottleTrackBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.TanningRackBlock]: Internal.BlockItem, [key: Internal.FramedCornerSlopePanelWallBlock]: Internal.VerticalAndWallBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.StainedGlassBlock]: Internal.BlockItem, [key: any]: Internal.FuelBlockItem, [key: Internal.BlockModMobCage]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.PistonBaseBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FenceGateBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredPlankBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.DetectorTrackBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ColoredSlabBlock]: Internal.BlockItem, [key: Internal.ColoredLeavesBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.FramedMiniCubeBlock]: Internal.BlockItem, [key: Internal.PhantomNodeBlock]: Internal.AEBaseBlockItem, [key: Internal.PigmentBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.TieredBlockItem, [key: Internal.AmethystClusterBlock]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.CeilingBannerBlock]: Internal.BannerItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.PillarBlockBase]: Internal.BlockItem, [key: Internal.FramedTubeBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: Internal.EntityBlockActive4Way]: Internal.BlockItemAugmentable, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.FlowerBlockBOP]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.QuestBarrierBlock]: Internal.QuestBarrierBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.FallingBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FramedFlatStackedSlopeSlabCornerBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.PresentItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StatusEffectIdolBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.SeedItem, [key: Internal.BlockModSlab]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FenceGateBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumBlocks$5]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.GenericMachineBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ColoredFenceBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.LauncherTrackBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BoosterTrackBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ManualRollingMachineBlock]: Internal.BlockItem, [key: Internal.GemstoneOreBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.StandingSignBlockBOP]: Internal.SignItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.TrapDoorBlock]: Internal.BlockItem, [key: Internal.BlockTwilightGrass]: Internal.BlockItem, [key: Internal.WallSignBlockBOP]: Internal.SignItem, [key: Internal.AnvilBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.ColoredSporeBlossomBlock]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockModDirt]: Internal.BlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredSaplingBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: com.mna.blocks.runeforging.PedestalBlock]: Internal.TieredBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.SeedItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FramedBookshelfBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StandingSignBlock]: Internal.SignItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.CreativeEnergyCellBlock]: Internal.AEBaseBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.HoveringTomeStandBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.DisembarkingTrackBlock]: Internal.BlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.TrapDoorBlock]: Internal.BlockItem, [key: Internal.ColoredFenceGateBlock]: Internal.BlockItem, [key: Internal.FramedDoubleThreewayCornerBlock]: Internal.BlockItem, [key: Internal.FramedLargeInnerCornerSlopePanelWallBlock]: Internal.VerticalAndWallBlockItem, [key: Internal.FramedStorageBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.IronTankGaugeBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.CapacitorBankItem, [key: any]: Internal.PresentItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FlexLanternBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.AmphoraBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.EngravedWisestoneBlock]: Internal.EngravedWisestoneItem, [key: Internal.GatedTrackBlock]: Internal.BlockItem, [key: Internal.GemstoneGlassBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: mods.railcraft.world.level.block.detector.ItemDetectorBlock]: Internal.BlockItem, [key: Internal.FleshTendonsBottomBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.SteelTankValveBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FenceBlock]: Internal.BlockItem, [key: Internal.BlockModLeaves]: Internal.BlockItem, [key: Internal.GlowBlock]: Internal.BlockItem, [key: Internal.PillarBlockBase]: Internal.BlockItem, [key: Internal.BlockModSlab]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.GenericMachineBlock]: Internal.BlockItem, [key: Internal.ShulkerBoxBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.DisembarkingTrackBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FramedRedstoneBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FramedThreewayCornerBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.EmbarkingTrackBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.OrangeAutumnLeavesBlock]: Internal.BlockItem, [key: Internal.StainedGlassPaneBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.BlockStorage]: Internal.BlockItem, [key: Internal.ColoredStrippedWoodBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.StudyDeskBlock]: Internal.TieredBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.PostBlock]: Internal.BlockItem, [key: Internal.InfestedBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.TieredBlockItem, [key: any]: Internal.FuelBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SandBlockBOP]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WallHangingSignBlock]: Internal.HangingSignItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.CoralWallFanBlock]: Internal.StandingAndWallBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SimpleRotationalBlock]: Internal.TieredBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.PlayerWallHeadBlock]: Internal.PlayerHeadItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: Internal.QuantumRingBlock]: Internal.AEBaseBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FramedCornerSlopeBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.WeatheringSlabBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModButton]: Internal.BlockItem, [key: Internal.ColoredWoodBlock]: Internal.BlockItem, [key: Internal.StaminaFruitBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.BlockModSlab]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.JunctionTrackBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.CeilingBannerBlock]: Internal.BannerItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.WeatheringCopperFullBlock]: Internal.BlockItem, [key: Internal.FramedTargetBlock]: Internal.BlockItem, [key: Internal.MATarmaRootBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FramedDividedPanelBlock]: Internal.BlockItem, [key: Internal.BlockModSlab]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OpticalPipeBlock]: Internal.OpticalPipeBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.AEDecorativeBlock]: Internal.AEBaseBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ColoredFenceGateBlock]: Internal.BlockItem, [key: Internal.BlockStatue]: Internal.ItemStatueBlock, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.GemstoneOreBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.TrainDispenserBlock]: Internal.BlockItem, [key: Internal.BlockCandyCane]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: any]: Internal.SeedItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WeepingVinesBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SaltTorchBlock]: Internal.SaltTorchItem, [key: Internal.ConcretePowderBlock]: Internal.BlockItem, [key: Internal.StainedGlassPaneBlock]: Internal.BlockItem, [key: Internal.ControlTrackBlock]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.DryingRackBlock]: Internal.YTechItems$9, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ConcretePowderBlock]: Internal.BlockItem, [key: any]: Internal.SignItem, [key: Internal.IronTankGaugeBlock]: Internal.BlockItem, [key: any]: Internal.SignItem, [key: Internal.PastelNodeBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.ShimmerstoneLightBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.SignItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.FramedAdjustableDoublePanelBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.SafeItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SculkVeinBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockModUnbreakable]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.StainedGlassPaneBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.HangingSignItem, [key: Internal.IronTankValveBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.RiceItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.GenericMachineBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.GenericGeneratorBlock]: Internal.BlockItem, [key: Internal.GravelBlock]: Internal.BlockItem, [key: Internal.SignalSequencerBoxBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModPlanks]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.AEDecorativeBlock]: Internal.AEBaseBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: any]: Internal.SeedItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.DrumMachineItem, [key: Internal.WorldSpikeBlock]: Internal.BlockItem, [key: Internal.LampBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BrazierBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SheepDetectorBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FramedFlatExtendedSlopePanelCornerBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: pokefenn.totemic.block.totem.TotemBaseBlock]: Internal.TotemBaseItem, [key: Internal.DriedSaltBlock]: Internal.BlockItem, [key: Internal.BlockModSapling]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.PresentItem, [key: Internal.HalfTransparentBlock]: Internal.BlockItem, [key: any]: Internal.HangingSignItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.FlagItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.WildBombFlowerBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.CushionedFacingBlock]: Internal.BlockItem, [key: Internal.ColoredStrippedWoodBlock]: Internal.BlockItem, [key: Internal.BlockModFurnace]: Internal.BlockItem, [key: Internal.IronTankGaugeBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: com.gregtechceu.gtceu.common.block.BatteryBlock]: Internal.RendererBlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModFence]: Internal.BlockItem, [key: Internal.BlockModLadder]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.AlternatePlayerOnlyGlassBlock]: Internal.BlockItem, [key: Internal.StandingSignBlock]: Internal.SignItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FramedInverseDoubleSlopeSlabBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.SaplingBlockBOP]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.FungusBlock]: Internal.BlockItem, [key: Internal.ActiveBlock]: Internal.RendererBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.StatusEffectIdolBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SnappingIvyBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockModLamp]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.FenceBlock]: Internal.BlockItem, [key: Internal.SparklestoneBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BufferStopTrackBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.HugeMushroomBlock]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.TrappedChestBlock]: Internal.BlockItem, [key: Internal.OreBlockCoFH]: Internal.BlockItemCoFH, [key: Internal.FramedDetectorRailSlopeBlock]: Internal.BlockItem, [key: Internal.DoorBlock]: Internal.DoubleHighBlockItem, [key: Internal.AmethystClusterBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BedBlock]: Internal.BedItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ReinforcedBrickChimneyBlock]: Internal.YTechItems$2, [key: Internal.LeavesBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SimpleRotationalBlock]: Internal.TieredBlockItem, [key: Internal.BlockModPressurePlate]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ColoredPlankBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.IronTankValveBlock]: Internal.BlockItem, [key: Internal.AEDecorativeBlock]: Internal.AEBaseBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.HangingSignItem, [key: Internal.SignalReceiverBoxBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.DryingRackBlock]: Internal.YTechItems$9, [key: any]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: any]: Internal.SeedItem, [key: Internal.CloakedOreBlock]: Internal.FloatBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FlowerPotBlock]: Internal.BlockItem, [key: Internal.ShimmerstoneLightBlock]: Internal.BlockItem, [key: Internal.GemstonePlayerOnlyGlassBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.SaplingBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.BlockMachineFrame]: Internal.BlockItem, [key: Internal.FenceGateBlock]: Internal.BlockItem, [key: any]: Internal.CroptopiaSaplingItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: any]: Internal.EndermanHeadItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.StairBlock]: Internal.TieredBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.RubberBlock]: Internal.BlockItemCoFH, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.CoralFanBlock]: Internal.StandingAndWallBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.CasingBlock]: Internal.BlockItem, [key: any]: Internal.CroptopiaSaplingItem, [key: Internal.FloatBlock]: Internal.FloatBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.BristleSproutsBlock]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.KnockbackIdolBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ControlTrackBlock]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SaplingBlock]: Internal.BlockItem, [key: Internal.FramedChestBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.RefractionLensBlock]: Internal.OffsetPlacerItem, [key: Internal.FramedFlatDoubleSlopeSlabCornerBlock]: Internal.BlockItem, [key: Internal.FramedFlatStackedSlopePanelCornerBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.GemstoneOreBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.SeedItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.SaltCampfireBlock]: Internal.SaltCampfireItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.UpgradeBlock]: Internal.UpgradeBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: any]: Internal.CroptopiaSaplingItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.TripWireHookBlock]: Internal.BlockItem, [key: Internal.LongDistancePipeBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.CeilingHangingSignBlock]: Internal.HangingSignItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BrimstoneClusterBlock]: Internal.BlockItem, [key: Internal.BannerBlock]: Internal.BannerItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.SculkVeinBlock]: Internal.BlockItem, [key: Internal.PowderbarrelBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SugarStickBlock]: Internal.BlockItem, [key: Internal.BlockMobPumpkin]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.CoralWallFanBlock]: Internal.StandingAndWallBlockItem, [key: Internal.BlockModSlab]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.CoalCokeBlock]: Internal.CoalCokeBlockItem, [key: Internal.WeatheringSlabBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.WoolCarpetBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredSporeBlossomBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlockCoFH]: Internal.BlockItemCoFH, [key: Internal.FramedFlatExtendedSlopePanelCornerBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.StatueBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.EngravedWisestoneBlock]: Internal.EngravedWisestoneItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.DoorBlock]: Internal.BlockItem, [key: Internal.BlockModLamp]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FramedLatticeBlock]: Internal.BlockItem, [key: Internal.SteelTankWallBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.TrapDoorBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModButton]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.GlazedTerracottaBlock]: Internal.BlockItem, [key: Internal.ColoredStrippedWoodBlock]: Internal.BlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockHiveEgg]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.BlackslagBlock]: Internal.BlockItem, [key: Internal.GlassFrameBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.TankUnitBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItemCoFH, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WallLanternBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.CarrotBlock]: Internal.ItemNameBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: de.dafuqs.spectrum.blocks.redstone.PlayerDetectorBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.QuartzFixtureBlock]: Internal.AEBaseBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockStorage]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.EngravedWisestoneBlock]: Internal.EngravedWisestoneItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BronzeAnvilBlock]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ColoredPressurePlateBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ShulkerBoxBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.TintedGlassBlock]: Internal.BlockItem, [key: Internal.BlockStorage]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.FuelBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ChimeriteCrystalBlock]: Internal.TieredBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.ColoredStrippedLogBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModPortal]: Internal.BlockItem, [key: Internal.StainedGlassPaneBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.WeatheringBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.StainedGlassPaneBlock]: Internal.BlockItem, [key: any]: Internal.PaintedBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.CrystalBlock]: Internal.CrystalItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.SlipstreamGeneratorBlock]: Internal.TieredBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.FenceBlock]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ShulkerBoxBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.ItemNameBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.BlockModUnbreakable]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.AmethystClusterBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CrystalBlock]: Internal.CrystalItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.WeatheringSlabBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.CrystalBlock]: Internal.CrystalItem, [key: any]: Internal.SeedItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.DumpingTrackBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BoosterTrackBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockModLamp]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FenceBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: mod.maxbogomol.wizards_reborn.common.block.FluidPipeBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.ManaResevoirBlock]: Internal.TieredBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FramedThreewayCornerPillarBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ColoredWoodBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StrengthenedGlassBlock]: Internal.BlockItem, [key: any]: Internal.PaintedBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.GlazedTerracottaBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockAcid]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.CrystalBlock]: Internal.CrystalItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.KelpBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockModLamp]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.CondenserBlock]: Internal.AEBaseBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ColoredSaplingBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SaplingBlockBOP]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.TransitionTrackBlock]: Internal.BlockItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockModPlanks]: Internal.BlockItem, [key: Internal.RubberButtonBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.HugeLilyPadBlock]: Internal.PlaceOnWaterBlockItem, [key: Internal.VineBlock]: Internal.BlockItem, [key: Internal.ColoredLightBlock]: Internal.BlockItem, [key: Internal.ColoredFenceBlock]: Internal.BlockItem, [key: Internal.BlockStatue]: Internal.ItemStatueBlock, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.CasingBlock]: Internal.BlockItem, [key: Internal.TntBlock]: Internal.BlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.DecayAwayBlock]: Internal.DecayPlacerItem, [key: Internal.SteelTankValveBlock]: Internal.BlockItem, [key: Internal.SpawnerBlock]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.JadeiteLotusStemBlock]: Internal.BlockItem, [key: Internal.IronTankValveBlock]: Internal.BlockItem, [key: Internal.BlockStatue]: Internal.ItemStatueBlock, [key: Internal.ArcanaAltarBlock]: Internal.TieredBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SteelTankGaugeBlock]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: com.mna.blocks.runeforging.PedestalBlock]: Internal.TieredBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.CustomWallSignBlock]: Internal.SignItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FenceBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ChimeriteCrystalBlock]: Internal.TieredBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ColoredPressurePlateBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.HangingCobwebBlock]: Internal.BlockItem, [key: Internal.FlowerPotBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ColoredLightBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: any]: Internal.SignItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.ConcretePowderBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.FramedRedstoneWallTorchBlock]: Internal.StandingAndWallBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CoralPlantBlock]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CableBlock]: Internal.BlockItem, [key: Internal.SteelTankValveBlock]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.GenericMachineBlock]: Internal.BlockItem, [key: Internal.EldrinConduitBlock]: Internal.OffsetPlacerItem, [key: Internal.HoveringTomeStandBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SawbladeHollyBushBlock]: Internal.ItemNameBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockArcanaDoor]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.CeilingHangingSignBlock]: Internal.HangingSignItem, [key: Internal.WeightedPressurePlateBlock]: Internal.BlockItem, [key: Internal.ColoredSporeBlossomBlock]: Internal.BlockItem, [key: Internal.StorageUnitBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: Internal.BlockModFence]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModDoor]: Internal.BlockItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.HangingSignItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: any]: Internal.BlockItem, [key: Internal.ColoredFenceGateBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.WissenCellBlock]: Internal.WissenStorageBaseItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.BlockBoneChest]: Internal.ItemBoneChest, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.GlassFrameBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.AmethystClusterBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WoolCarpetBlock]: Internal.BlockItem, [key: Internal.CropBlock]: Internal.ItemNameBlockItem, [key: Internal.SaltTorchBlock]: Internal.SaltTorchItem, [key: any]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.GlassBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.FlagItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FramedElevatedDoubleSlopeEdgeBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ArcaneWoodLeavesBlock]: Internal.BlockItem, [key: any]: Internal.HangingSignItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockModPressurePlate]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SimpleRotationalBlock]: Internal.TieredBlockItem, [key: Internal.ColoredFenceGateBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.IronTankGaugeBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FramedPressurePlateBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.SteelTankWallBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.StandingSignBlockBOP]: Internal.SignItem, [key: Internal.BlockModGate]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: any]: Internal.SeedItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ColoredSaplingBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SandBlock]: Internal.BlockItemCoFH, [key: any]: Internal.CroptopiaSaplingItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.WallBannerBlock]: Internal.BannerItem, [key: Internal.RefractionLensBlock]: Internal.OffsetPlacerItem, [key: Internal.FramedWallBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.NotSoMysteriousCubeBlock]: Internal.AEBaseBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BedBlock]: Internal.BedItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.StainedGlassBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BufferStopTrackBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.LeavesBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ThrottleTrackBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.DuctPipeBlock]: Internal.DuctPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BrambleLeavesBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FungusBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.WallSignBlock]: Internal.SignItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.EntityBlockActive4Way]: Internal.BlockItemAugmentable, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockModUnbreakable]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.SimpleRotationalBlock]: Internal.TieredBlockItem, [key: Internal.EnderHopperBlock]: Internal.BlockItem, [key: Internal.BlockMobPumpkin]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.DualDistantSignalBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.EngravedWisestoneBlock]: Internal.EngravedWisestoneItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.BuddingCertusQuartzBlock]: Internal.AEBaseBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.InfestedBlock]: Internal.BlockItem, [key: Internal.ChainBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SteelTankWallBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.FallingBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.FuelBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.BuddingCertusQuartzBlock]: Internal.AEBaseBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.CoralPlantBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.EmbarkingTrackBlock]: Internal.BlockItem, [key: Internal.ColoredPlankBlock]: Internal.BlockItem, [key: Internal.SteamCasingBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FenceGateBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModStem]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: Internal.SteelTankGaugeBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.PostBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: Internal.GenericMachineBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.GlisteringStemBlock]: Internal.ItemNameBlockItem, [key: Internal.EngravedWisestoneBlock]: Internal.EngravedWisestoneItem, [key: Internal.BlockPresentBox]: Internal.ItemPresentBox, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.TieredBlockItem, [key: Internal.GemstoneChimeBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.LockingTrackBlock]: Internal.BlockItem, [key: Internal.GlowBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.DoorBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ColoredWoodBlock]: Internal.BlockItem, [key: Internal.SculkCatalystBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.TntBlockCoFH]: Internal.BlockItemCoFH, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.StandingAndWallBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FenceGateBlock]: Internal.BlockItem, [key: Internal.SeaOatsBlock]: Internal.BlockItem, [key: Internal.BlockCosmicCake]: Internal.CosmicCake, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.TieredBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.TrapDoorBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CeilingBannerBlock]: Internal.BannerItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.WallBannerBlock]: Internal.BannerItem, [key: Internal.NickelIronBatteryBlock]: Internal.BlockItem, [key: Internal.CableBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BloodOrchidBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.InscriptionTableBlock]: Internal.TieredBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.RopeItem, [key: Internal.CeilingHangingSignBlock]: Internal.HangingSignItemCoFH, [key: Internal.BaseCoralPlantBlock]: Internal.BlockItem, [key: Internal.FluidSensorBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.ActivatorTrackBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FramedSmallDoubleCornerSlopePanelWallBlock]: Internal.VerticalAndWallBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.HangingSignItem, [key: Internal.BlockModSlab]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.SeedItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.StandingSignBlock]: Internal.SignItem, [key: Internal.ColoredSporeBlossomBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.HayBlock]: Internal.BlockItem, [key: Internal.QuartzLampBlock]: Internal.BlockItem, [key: Internal.FramedCube]: Internal.BlockItem, [key: Internal.GTWallSignBlock]: Internal.SignItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.GlazedTerracottaBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.CrackedEndPortalFrameBlock]: Internal.BlockItem, [key: Internal.EngravedWisestoneBlock]: Internal.EngravedWisestoneItem, [key: any]: Internal.BlockItem, [key: Internal.BlockExMarker$BlockWaterloggedFlexMarker]: Internal.QPBlock$QPBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.WallBlock]: Internal.TieredBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.TechRebornStairsBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.SpiderEggBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FenceGateBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.DoorBlock]: Internal.DoubleHighBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: Internal.AmphoraBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.SeedItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModPressurePlate]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockStorage]: Internal.BlockItem, [key: Internal.FlowerPotBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModLamp]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.BlockModWall]: Internal.BlockItem, [key: Internal.PumpPlusBlock]: Internal.QPBlock$QPBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ManaweaveProjectorBlock]: Internal.TieredBlockItem, [key: Internal.FramedDoubleSlopedPrismBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FenceBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.BlockWhiteMushroomPlant]: Internal.ItemNameBlockItem, [key: Internal.UpgradeBlock]: Internal.UpgradeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockAcid]: Internal.BlockItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.WoolCarpetBlock]: Internal.BlockItem, [key: Internal.LeavesBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FenceGateBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ColoredWoodenButtonBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.PlacerBlock]: Internal.QPBlock$QPBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.PresentItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.LocomotiveTrackBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockStorage]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ElementalSentryBlock]: Internal.TieredBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CandleBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockLights]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.SignItem, [key: Internal.WallSkullBlock]: Internal.StandingAndWallBlockItem, [key: Internal.CeilingHangingSignBlockBOP]: Internal.HangingSignItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.WhistleTrackBlock]: Internal.BlockItem, [key: Internal.BlockModStairs]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.StringyCobwebBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RedstoneSpellTriggerBlock]: Internal.TieredBlockItem, [key: Internal.FlowerPotBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.EldrinConduitBlock]: Internal.OffsetPlacerItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockMachineCasing]: Internal.BlockItem, [key: Internal.FlowerBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.EnderChestBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.FramedDoubleCornerBlock]: Internal.BlockItem, [key: Internal.BlockModWallTorch]: Internal.StandingAndWallBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.LocomotiveTrackBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.CandleBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.ColoredFenceBlock]: Internal.BlockItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.FramedExtendedDoubleCornerSlopePanelBlock]: Internal.VerticalAndWallBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.SignItem, [key: Internal.FramedFancyPoweredRailBlock]: Internal.BlockItem, [key: Internal.OreBlockCoFH]: Internal.BlockItemCoFH, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.DispenserBlock]: Internal.BlockItem, [key: any]: Internal.FuelBlockItem, [key: Internal.DisembarkingTrackBlock]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WallSignBlock]: Internal.SignItemCoFH, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BedBlock]: Internal.BedItem, [key: any]: Internal.FlagItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.WallSignBlockBOP]: Internal.SignItem, [key: Internal.ElevatorTrackBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.DecoStoneBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.JunctionTrackBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.TrapDoorBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.SeedItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.SteelTankValveBlock]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.StandingSignBlock]: Internal.SignItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.LogBookBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BedBlock]: Internal.BedItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.FlowerPotBlock]: Internal.BlockItem, [key: Internal.TokenSignalBlock]: Internal.BlockItem, [key: Internal.BlockSolarPanel]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MolecularAssemblerBlock]: Internal.AEBaseBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.SignItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CableBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredWoodBlock]: Internal.BlockItem, [key: Internal.BlockBigLamp]: Internal.GenericBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.UpgradeBlock]: Internal.UpgradeBlockItem, [key: any]: Internal.BlockItem, [key: Internal.GenericMachineBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WitherRoseBlock]: Internal.BlockItem, [key: Internal.BlockModLightFence]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.WyeTrackBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.EnergyGeneratorBlock]: Internal.AEBaseBlockItem, [key: any]: Internal.FlagItem, [key: Internal.FramedAdjustableDoubleSlabBlock]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: Internal.ActivatorTrackBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CeilingBannerBlock]: Internal.BannerItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.LocomotiveTrackBlock]: Internal.BlockItem, [key: Internal.DoubleWaterPlantBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.CroptopiaSaplingItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockModSapling]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ArcaneLumosBlock]: Internal.ArcaneLumosItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ColoredStairsBlock]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.Block]: Internal.TieredBlockItem, [key: Internal.PigmentBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FenceBlock]: Internal.BlockItem, [key: Internal.SteelTankGaugeBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.WeatheringCopperSlabBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlockCoFH]: Internal.BlockItemCoFH, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CableBusBlock]: Internal.AEBaseBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredSlabBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.TanningRackBlock]: Internal.BlockItem, [key: Internal.WallBannerBlock]: Internal.BannerItem, [key: Internal.TechRebornStairsBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FramedWallBoardBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: Internal.IceBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.BlockModStairs]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.LightSensorBlock]: Internal.BlockItem, [key: Internal.FramedCheckeredSlabBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.SeedItem, [key: Internal.MorBlock]: Internal.MorItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.BlockStorage]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.WoolCarpetBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.CrystalBlock]: Internal.CrystalItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockModSapling]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.StainedGlassBlock]: Internal.BlockItem, [key: Internal.SteelTankWallBlock]: Internal.BlockItem, [key: Internal.TrapDoorBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: Internal.TanningRackBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: Internal.WeatheringSlabBlock]: Internal.BlockItem, [key: Internal.BlockModMobCage]: Internal.BlockItem, [key: Internal.BlockModUnbreakable]: Internal.BlockItem, [key: Internal.SteelTankGaugeBlock]: Internal.BlockItem, [key: Internal.LeavesBlock]: Internal.BlockItem, [key: Internal.AdvancedDetectorBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.ShulkerBoxBlock]: Internal.BlockItem, [key: any]: Internal.CroptopiaSaplingItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.PrimitiveSmelterBlock]: Internal.YTechItems$2, [key: Internal.GemstonePlayerOnlyGlassBlock]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.TieredBlockItem, [key: any]: Internal.BlockItem, [key: Internal.FramedVerticalStairsBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.LeavesBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.AlternatePlayerOnlyGlassBlock]: Internal.BlockItem, [key: Internal.FoliageBlockBOP]: Internal.BlockItem, [key: Internal.BlockKarosAltar]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.SimpleRotationalBlock]: Internal.TieredBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SaplingBlockBOP]: Internal.BlockItem, [key: Internal.RedstoneTimerBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StrippableLog]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlastFurnaceBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.PresentItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.TieredBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.PigmentBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FenceGateBlock]: Internal.BlockItem, [key: Internal.CushionBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockInfusionTable]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.GemstoneOreBlock]: Internal.BlockItem, [key: Internal.BlockModGrass]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.DoublePlantBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: any]: Internal.HangingSignItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BoosterTrackBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.AnyDetectorBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.IronTankWallBlock]: Internal.BlockItem, [key: Internal.SaplingBlockBOP]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FallingBlock]: Internal.BlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.StatusEffectIdolBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.ColoredWoodBlock]: Internal.BlockItem, [key: any]: Internal.SeedItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.PresentItem, [key: Internal.BlockModStairs]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.WissenCasingBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SwordPedestalBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SaplingBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ArcaneLumosBlock]: Internal.ArcaneLumosItem, [key: Internal.BlockModDoublePlant]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SandBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockDreamGrass]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FenceBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.TintedGlassBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.PigmentBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.TieredBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.LightDetectorBlock]: Internal.AEBaseBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BaseCoralFanBlock]: Internal.StandingAndWallBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.IronTankWallBlock]: Internal.BlockItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.EngravedWisestoneBlock]: Internal.EngravedWisestoneItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.HandBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SkyChestBlock]: Internal.AEBaseBlockItem, [key: Internal.LeavesBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BlockModLeaves]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SignalControllerBoxBlock]: Internal.BlockItem, [key: Internal.EngravedWisestoneBlock]: Internal.EngravedWisestoneItem, [key: Internal.DoorBlock]: Internal.BlockItemCoFH, [key: Internal.StageBarrierBlock]: Internal.StageBarrierBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.SteelTankWallBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.HangingSignItem, [key: Internal.LocomotiveDetectorBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.TanningRackBlock]: Internal.BlockItem, [key: Internal.EnderGlassBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.TurtleEggBlock]: Internal.BlockItem, [key: Internal.InscriberBlock]: Internal.AEBaseBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.RedStoneOreBlock]: Internal.BlockItem, [key: Internal.FramedSlabBlock]: Internal.BlockItem, [key: Internal.MangroveLeavesBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BedBlock]: Internal.BedItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CraftingTableBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.FuelBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.Item, [key: Internal.WallHangingSignBlock]: Internal.HangingSignItem, [key: Internal.EnderiumGlassBlock]: Internal.BlockItemCoFH, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.TrapDoorBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.TimedEyeSwitchBlock]: Internal.BlockItem, [key: Internal.GemstoneOreBlock]: Internal.BlockItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.SeedItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ChimeriteCrystalBlock]: Internal.TieredBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ColoredStrippedWoodBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.HighVoltageSUBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.EmptyDetectorBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.WallSignBlockBOP]: Internal.SignItem, [key: Internal.BlockCandyCane]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CandleBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.WoolCarpetBlock]: Internal.BlockItem, [key: Internal.BlockModLight]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.CloakedOreBlock]: Internal.BlockItem, [key: Internal.HalfTransparentBlock]: Internal.BlockItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.BlockTwilightFlower]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockBrambles]: Internal.BlockItem, [key: Internal.BlockModButton]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.ShulkerBoxBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.GlowBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.HammerPegBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ArcanePedestalBlock]: Internal.BlockItem, [key: Internal.ColoredWoodBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: Internal.FramedStairsBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FlowerBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ShootingStarBlock]: Internal.ShootingStarItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.LightCasingBlock]: Internal.BlockItem, [key: Internal.BlockModUnbreakable]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockModUnbreakable]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SwitchTrackRouterBlock]: Internal.BlockItem, [key: any]: Internal.MushroomColonyItem, [key: Internal.LeavesBlock]: Internal.BlockItem, [key: Internal.CrystalBlock]: Internal.CrystalItem, [key: Internal.GlassBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ColoredSaplingBlock]: Internal.BlockItem, [key: Internal.SteelTankWallBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.StrippingLootPillarBlock]: Internal.BlockItem, [key: Internal.BannerBlock]: Internal.BannerItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FramedTorchBlock]: Internal.StandingAndWallBlockItem, [key: Internal.FenceGateBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FenceBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.JunctionTrackBlock]: Internal.BlockItem, [key: Internal.BlackHoleChestBlock]: Internal.BlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.VineBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.SeedItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SimpleRotationalBlock]: Internal.TieredBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.BismuthClusterBlock]: Internal.BlockItem, [key: Internal.WeatheringCopperStairBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SkullBlock]: Internal.StandingAndWallBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.BlockModMobCage]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.LightBlock]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.FlowerPotBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.SeedItem, [key: Internal.FramedLadderBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModButton]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.TntBlockCoFH]: Internal.BlockItemCoFH, [key: Internal.SeagrassBlock]: Internal.BlockItem, [key: Internal.GTStandingSignBlock]: Internal.SignItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BismuthClusterBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.WeatheringCopperFullBlock]: Internal.BlockItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.ConcretePowderBlock]: Internal.BlockItem, [key: Internal.BlockTwilightFlower]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FramedFlatSlopePanelCornerBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OcculusBlock]: Internal.TieredBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockModDoublePlant]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.TanningRackBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BannerBlock]: Internal.BannerItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.TieredBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FramedLeverBlock]: Internal.BlockItem, [key: Internal.GenericGeneratorBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CrystalBlock]: Internal.CrystalItem, [key: Internal.CraftingUnitBlock]: Internal.CraftingBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.HangingRootsBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.CrystalGrowthBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredSaplingBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.PoweredRailBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.PresentItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ColoredStairsBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.SeedItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FluidUnloaderBlock]: Internal.BlockItem, [key: Internal.EldrinConduitBlock]: Internal.OffsetPlacerItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.AmethystClusterBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.WoodBasedBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.GemstoneOreBlock]: Internal.BlockItem, [key: Internal.TntBlockCoFH]: Internal.BlockItemCoFH, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SimpleRotationalBlock]: Internal.TieredBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SlimeSizingIdolBlock]: Internal.BlockItem, [key: any]: Internal.EndermanHeadItem, [key: any]: Internal.BlockItem, [key: Internal.BlockModWall]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.cloudSpawn]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.IronTankWallBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.EldrinConduitBlock]: Internal.OffsetPlacerItem, [key: Internal.BlockModTorch]: Internal.StandingAndWallBlockItem, [key: any]: Internal.HangingSignItem, [key: Internal.SmokerBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.BlockModSapling]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.TntBlockCoFH]: Internal.BlockItemCoFH, [key: any]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.ChimeriteCrystalBlock]: Internal.TieredBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.EntityBlockActive4Way]: Internal.BlockItemAugmentable, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.WallSignBlock]: Internal.SignItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.IronTankWallBlock]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ColoredLightBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.LeavesBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FlowerPotBlock]: Internal.BlockItem, [key: Internal.FusionCasingBlock]: Internal.RendererBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.LockingTrackBlock]: Internal.BlockItem, [key: Internal.TrapDoorBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockModPlanks]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.BlockModUnbreakable]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.IncandescentAmalgamBlock]: Internal.IncandescentAmalgamItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.EldrinConduitBlock]: Internal.OffsetPlacerItem, [key: any]: Internal.BlockItem, [key: Internal.MemoryBlock]: Internal.MemoryItem, [key: Internal.ConcretePowderBlock]: Internal.BlockItem, [key: Internal.ColoredStrippedWoodBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StatusEffectIdolBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.PresentItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredSporeBlossomBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.WeatheringBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.JukeboxBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FramedGateBlock]: Internal.BlockItem, [key: Internal.BeehiveBlock]: Internal.BlockItem, [key: Internal.FlowerPotBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.FungusBlock]: Internal.BlockItem, [key: Internal.TechRebornStairsBlock]: Internal.BlockItem, [key: Internal.SpanishMossBottomBlock]: Internal.BlockItem, [key: Internal.RailBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.ChimeriteCrystalBlock]: Internal.TieredBlockItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.CroptopiaSaplingItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockStorage]: Internal.BlockItem, [key: Internal.FramedFlatExtendedDoubleSlopePanelCornerBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.RootsBlock]: Internal.BlockItem, [key: Internal.SpectrumFacingBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.BatteryBlock]: Internal.RendererBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ConcretePowderBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.CandleBlock]: Internal.BlockItem, [key: Internal.BlockStorage]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockModStairs]: Internal.BlockItem, [key: Internal.EquipableCarvedPumpkinBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.TrapDoorBlock]: Internal.BlockItem, [key: Internal.BlueDekuFlowerBlock]: Internal.BlockItem, [key: Internal.MysteriousCubeBlock]: Internal.AEBaseBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WeatheringBlock]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WeatheringSlabBlock]: Internal.BlockItem, [key: Internal.BlockAltarOfCorruption]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.ColoredSporeBlossomBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockWinterberryBush]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.TieredBlockItem, [key: Internal.ColoredWoodenButtonBlock]: Internal.BlockItem, [key: Internal.PitcherCropBlock]: Internal.ItemNameBlockItem, [key: Internal.PigmentBlock]: Internal.BlockItem, [key: Internal.DoorBlock]: Internal.BlockItem, [key: Internal.BombFlowerBlock]: Internal.ItemNameBlockItem, [key: Internal.BlockModUnbreakable]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ActivatorTrackBlock]: Internal.BlockItem, [key: Internal.BlockModDungeonAir]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.SteelTankValveBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StandingSignBlock]: Internal.SignItem, [key: Internal.LightningRodBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: any]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.JunctionTrackBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.CroptopiaSaplingItem, [key: Internal.FramedPoweredRailSlopeBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CardinalFacingBlock]: Internal.BlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredStrippedWoodBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.BlockArcanaPortalFrame]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.BlockModSlab]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.TieredBlockItem, [key: Internal.CreativeWissenStorageBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.ActivatorTrackBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.WeatheringBlock]: Internal.BlockItem, [key: Internal.BlockModDirt]: Internal.BlockItem, [key: any]: Internal.FuelBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ActiveBlock]: Internal.RendererBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.GenericMachineBlock]: Internal.BlockItem, [key: Internal.ElementalSentryBlock]: Internal.TieredBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.LeavesBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.CoralBlock]: Internal.BlockItem, [key: Internal.LeavesBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.ElementalSentryBlock]: Internal.TieredBlockItem, [key: any]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RandomTeleportingIdolBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.GlowBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockBigLamp]: Internal.GenericBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.PresentItem, [key: any]: Internal.BubbleBlockItem, [key: Internal.CeilingHangingSignBlockBOP]: Internal.HangingSignItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FramedExtendedDoubleCornerSlopePanelWallBlock]: Internal.VerticalAndWallBlockItem, [key: Internal.FramedTrapDoorBlock]: Internal.BlockItem, [key: Internal.CrystalBlock]: Internal.CrystalItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlockCoFH]: Internal.BlockItemCoFH, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.DrumMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FlowerPotBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.CasingBlock]: Internal.BlockItem, [key: Internal.BlockQuadroticAltar]: Internal.BlockItem, [key: Internal.MobDetectorBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.SignItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModSlab]: Internal.BlockItem, [key: Internal.WeatheringCopperFullBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: Internal.SkullBlock]: Internal.StandingAndWallBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.WaterlilyBlockBOP]: Internal.PlaceOnWaterBlockItem, [key: any]: Internal.BlockItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: Internal.TallFlowerBlock]: Internal.DoubleHighBlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.ColoredStrippedLogBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockStorage]: Internal.BlockItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.AmethystClusterBlock]: Internal.BlockItem, [key: any]: Internal.SeedItem, [key: Internal.BigDripleafBlock]: Internal.Items$1, [key: any]: Internal.ZetaBlockItem, [key: Internal.DoorBlock]: Internal.BlockItem, [key: Internal.RuinBlock]: Internal.DecayPlacerItem, [key: Internal.TechRebornStairsBlock]: Internal.BlockItem, [key: Internal.IronTankValveBlock]: Internal.BlockItem, [key: Internal.StatusEffectIdolBlock]: Internal.BlockItem, [key: Internal.FramedFlatSlopeSlabCornerBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockModPlanks]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WallSignBlock]: Internal.SignItem, [key: any]: Internal.HangingSignItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FlowerBlockBOP]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.WallBannerBlock]: Internal.BannerItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModPlanks]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockStorage]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.CrystalGrowthBlock]: Internal.BlockItem, [key: Internal.FlexLanternBlock]: Internal.BlockItem, [key: Internal.RedstoneSensorBlock]: Internal.BlockItem, [key: Internal.CoralBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.CrystalSeedBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.StrapIronTrackBlock]: Internal.BlockItem, [key: Internal.SpectrumBuddingBlock]: Internal.BlockItem, [key: Internal.JewelerTableBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.GlazedTerracottaBlock]: Internal.BlockItem, [key: any]: Internal.ZetaSignItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockBrittleGrass]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.PresentItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.HoneyBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: Internal.BaseCoralWallFanBlock]: Internal.StandingAndWallBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.CeilingHangingSignBlockBOP]: Internal.HangingSignItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ConcretePowderBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: Internal.FramedDividedPanelBlock]: Internal.BlockItem, [key: Internal.ConduitBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.WissenCasingBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CustomCeilingHangingSignBlock]: Internal.HangingSignItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: mod.maxbogomol.wizards_reborn.common.block.FrameBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockModButton]: Internal.BlockItem, [key: Internal.ColoredLightBlock]: Internal.BlockItem, [key: Internal.BlockModPlanks]: Internal.BlockItem, [key: Internal.GenericMachineBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.FlowerBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.LockedChestBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.SpatialIOPortBlock]: Internal.AEBaseBlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.CushionedCarpetBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.TotemBaseBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BambooSpikesTippedItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockBlueFire]: Internal.BlockItem, [key: Internal.ColoredLogBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.TechRebornStairsBlock]: Internal.BlockItem, [key: Internal.EngravedWisestoneBlock]: Internal.EngravedWisestoneItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockModButton]: Internal.BlockItem, [key: Internal.TurnoutTrackBlock]: Internal.BlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.CandleBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.TaskScreenBlock]: Internal.ScreenBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModStairs]: Internal.BlockItem, [key: Internal.ActiveBlock]: Internal.RendererBlockItem, [key: Internal.GemstoneOreBlock]: Internal.BlockItem, [key: Internal.RoutingTrackBlock]: Internal.BlockItem, [key: Internal.WyeTrackBlock]: Internal.BlockItem, [key: Internal.FenceBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockModDoor]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.InfestedBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.CinderhearthBlock]: Internal.BlockItem, [key: Internal.PostBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.CloakedOreBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.StorageCellBlock]: cofh.thermal.core.common.item.EnergyCellBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItemCoFH, [key: Internal.FramedDoubleHalfStairsBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.PostBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredWoodenButtonBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.ExplosionIdolBlock]: Internal.BlockItem, [key: Internal.BlockModButton]: Internal.BlockItem, [key: Internal.PostBlock]: Internal.BlockItem, [key: Internal.BlockModLamp]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.SugarStickBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockBase]: Internal.BlockItem, [key: any]: Internal.PresentItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredSaplingBlock]: Internal.BlockItem, [key: Internal.BlockMobPumpkin]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.ItemLoaderBlock]: Internal.BlockItem, [key: Internal.BlockModPressurePlate]: Internal.BlockItem, [key: Internal.BlockModUnbreakable]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.AmethystClusterBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.WallBannerBlock]: Internal.BannerItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FreezingIdolBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.WhistleTrackBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockModMobCage]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.CrystalGrowthBlock]: Internal.BlockItem, [key: Internal.FusionShrineBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.WeatheringStairsBlock]: Internal.BlockItem, [key: Internal.ColoredLightBlock]: Internal.BlockItem, [key: Internal.CustomWallHangingSignBlock]: Internal.HangingSignItem, [key: Internal.WebbingBlock]: Internal.BlockItem, [key: Internal.FramedFenceBlock]: Internal.BlockItem, [key: Internal.BlockIceikaFire]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.LavaSpongeBlock]: Internal.BlockItem, [key: Internal.WissenSensorBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.BlackstoneDecorationBlock]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BlockModWall]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FlowerPotBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RedstoneLampBlock]: Internal.BlockItem, [key: Internal.AmethystClusterBlock]: Internal.BlockItem, [key: Internal.CardinalFacingBlock]: Internal.BlockItem, [key: Internal.BlockModFence]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: any]: Internal.PancakeItem, [key: Internal.BlockModLamp]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockStatue]: Internal.ItemStatueBlock, [key: any]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.ColoredLogBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.InfestedBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ConcretePowderBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WallHangingSignBlock]: Internal.HangingSignItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: any]: Internal.StandingAndWallBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ReplacerBlock]: Internal.QPBlock$QPBlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockModStairs]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WoolCarpetBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockModBridge]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SoulSandBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.IronBarsBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockLights]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.SignItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SimpleRotationalBlock]: Internal.TieredBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.CandleBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.CroptopiaSaplingItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SaplingBlock]: Internal.BlockItemCoFH, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockModGate]: Internal.BlockItem, [key: Internal.TechRebornStairsBlock]: Internal.BlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredLightBlock]: Internal.BlockItem, [key: Internal.GemstoneGlassBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FramedFlatElevatedSlopeSlabCornerBlock]: Internal.BlockItem, [key: Internal.FlexLanternBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: Internal.BlockModSapling]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: any]: Internal.PresentItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.ShulkerBoxBlock]: Internal.BlockItem, [key: Internal.RedstoneWallTorchBlock]: Internal.StandingAndWallBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.CeilingHangingSignBlock]: Internal.HangingSignItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModFence]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockRandomItemDropper]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.WoodBasedBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WallSkullBlock]: Internal.StandingAndWallBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FramingSawBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.TanningRackBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.DoubleWatersidePlantBlock]: Internal.BlockItem, [key: any]: Internal.CroptopiaSaplingItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.PedestalBlock]: Internal.PedestalBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.GenericMachineBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.LootCrateBlock]: Internal.LootCrateBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.DrumMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SteamBoilerTankBlock]: Internal.PressureBoilerTankBlockItem, [key: Internal.ColoredLogBlock]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FlowerBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FungusBlock]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ActiveBlock]: Internal.RendererBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.StainedGlassBlock]: Internal.BlockItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FramedDividedSlopeBlock]: Internal.BlockItem, [key: Internal.SlimeBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: Internal.FramedWallTorchBlock]: Internal.StandingAndWallBlockItem, [key: Internal.FramedRailSlopeBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.PresentItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.SugarCaneBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.PowderSnowBlock]: Internal.SolidBucketItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.WallBlock]: Internal.TieredBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.DuctPipeBlock]: Internal.DuctPipeBlockItem, [key: any]: Internal.FuelBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.MagiciansWorkbenchBlock]: Internal.TieredBlockItem, [key: Internal.RubberPressurePlateBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockModWall]: Internal.BlockItem, [key: Internal.SteelTankGaugeBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.AdvancedItemUnloaderBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FlowerPotBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SaltTorchBlock]: Internal.SaltTorchItem, [key: Internal.RubberBlock]: Internal.BlockItemCoFH, [key: Internal.BlockModDoor]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.TipiBlock]: Internal.BlockItem, [key: Internal.BlockModButton]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredSporeBlossomBlock]: Internal.BlockItem, [key: de.dafuqs.spectrum.blocks.decoration.CloverBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.AmethystClusterBlock]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.StainedGlassBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SteamBoilerTankBlock]: Internal.PressureBoilerTankBlockItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.BlockLights]: Internal.BlockItem, [key: Internal.GlowBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FramedMasonryCornerBlock]: Internal.BlockItem, [key: Internal.LumiumGlassBlock]: Internal.BlockItemCoFH, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockModWallTorch]: Internal.StandingAndWallBlockItem, [key: Internal.ColoredPressurePlateBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SimpleRotationalBlock]: Internal.TieredBlockItem, [key: Internal.BlockColdHellfireSponge]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.GlowwormSilkBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: any]: Internal.ZetaHangingSignItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.SignItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ColoredPlankBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.ColoredLogBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.TieredBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: Internal.TreasureChestBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.TurnoutTrackBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.DryingRackBlock]: Internal.YTechItems$9, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: any]: Internal.FlagItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.FramedSmallDoubleCornerSlopePanelBlock]: Internal.VerticalAndWallBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.FlowerBlock]: Internal.BlockItem, [key: Internal.SaplingBlockBOP]: Internal.BlockItem, [key: Internal.ColoredSaplingBlock]: Internal.BlockItem, [key: Internal.PureRedstoneBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.SeedItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.WeatheringCopperFullBlock]: Internal.BlockItem, [key: Internal.ArcaneLumosBlock]: Internal.ArcaneLumosItem, [key: any]: Internal.CroptopiaSaplingItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.TrapDoorBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.StrengthenedGlassBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.ColoredLeavesBlock]: Internal.BlockItem, [key: any]: Internal.ItemNameBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredLogBlock]: Internal.BlockItem, [key: Internal.ShimmerstoneLightBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModTrapdoor]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FlowerBlock]: Internal.BlockItem, [key: Internal.BlockModUnbreakable]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ItemNameBlockItem, [key: Internal.OreBlockCoFH]: Internal.BlockItemCoFH, [key: Internal.BlockModLeaves]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.PistonBaseBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockTwilightFlower]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.StructureBlock]: Internal.GameMasterBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FlowerPotBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.TieredBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ShulkerBoxBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.PostBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: com.yogpc.qp.machines.quarry.FrameBlock]: Internal.QPBlock$QPBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.GlowBlock]: Internal.BlockItem, [key: Internal.StandingSignBlockBOP]: Internal.SignItem, [key: Internal.ResinBasinBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StairBlock]: Internal.TieredBlockItem, [key: Internal.BlockMarker]: Internal.QPBlock$QPBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SpectrumLineFacingBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.PresentItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.BlockFusionControlComputer]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.EngravedWisestoneBlock]: Internal.EngravedWisestoneItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.SeedItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FramedFancyRailSlopeBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.TechRebornStairsBlock]: Internal.BlockItem, [key: Internal.FleshTendonsBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: Internal.BaseCoralPlantBlock]: Internal.BlockItem, [key: Internal.CouplerTrackBlock]: Internal.BlockItem, [key: Internal.ColoredLightBlock]: Internal.BlockItem, [key: Internal.BlockModStairs]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: any]: Internal.FlagItem, [key: Internal.FramedChiseledBookshelfBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.PedestalBlock]: Internal.PedestalBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.AmethystClusterBlock]: Internal.BlockItem, [key: any]: Internal.CroptopiaSaplingItem, [key: Internal.ColoredFenceGateBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockModPillar]: Internal.BlockItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.BlockItem, [key: Internal.RedstoneLampBlock]: Internal.BlockItem, [key: Internal.HugeCloverPetalBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: any]: Internal.HangingSignItem, [key: Internal.AbandonedTrackBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidJugBlock]: Internal.ItemInfiniteFluidJug, [key: Internal.FramedDoubleSlopeBlock]: Internal.BlockItem, [key: Internal.TechRebornStairsBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.NetherSproutsBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RootsBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: Internal.ColoredWoodenButtonBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SteelTankGaugeBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.GravelBlock]: Internal.BlockItem, [key: Internal.FenceBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WirelessAccessPointBlock]: Internal.AEBaseBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SteamExtractorBlock]: Internal.BlockItem, [key: Internal.CraftingUnitBlock]: Internal.CraftingBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.TripWireBlock]: Internal.ItemNameBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FenceGateBlock]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WeatheringCopperSlabBlock]: Internal.BlockItem, [key: Internal.RedstoneTransceiverBlock]: Internal.BlockItem, [key: Internal.BlockModLamp]: Internal.BlockItem, [key: Internal.FramedDoubleSlabBlock]: Internal.BlockItem, [key: Internal.TntBlockCoFH]: Internal.BlockItemCoFH, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.ArcaneLinenBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockArcaniteGrass]: Internal.BlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.UpgradeBlock]: Internal.UpgradeBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.PinkPetalsBlock]: Internal.BlockItem, [key: Internal.RubberTrapdoorBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SteelTankGaugeBlock]: Internal.BlockItem, [key: Internal.WeatheringStairsBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockLightCrystal]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FleshBlock]: Internal.BlockItem, [key: Internal.ColoredStrippedLogBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RottenGroundBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.TieredBlockItem, [key: Internal.FramedPrismCornerBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.IronTankGaugeBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ExpPumpBlock]: Internal.QPBlock$QPBlockItem, [key: Internal.BlockModPlanks]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredFenceGateBlock]: Internal.BlockItem, [key: Internal.BlockStorage]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockBrittleMoss]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredFenceGateBlock]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.BlockExMarker$BlockFlexMarker]: Internal.QPBlock$QPBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.TrapDoorBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockModPlanks]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.BoosterTrackBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ColoredPlankBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CeilingHangingSignBlockBOP]: Internal.HangingSignItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.CraftingUnitBlock]: Internal.CraftingBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SteelTankValveBlock]: Internal.BlockItem, [key: Internal.FramedStackedSlopeSlabBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SteelTankGaugeBlock]: Internal.BlockItem, [key: any]: Internal.HangingSignItem, [key: Internal.BlockController]: Internal.QPBlock$QPBlockItem, [key: Internal.BlockSolarPanel]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.SteelTankWallBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.BlockTwilightFlower]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.ModStairBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.EffigyBlock]: Internal.BlockItem, [key: any]: Internal.SignItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredLeavesBlock]: Internal.BlockItem, [key: Internal.ObserverBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SaplingBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.ColoredFenceBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.BlockTwilightGrass]: Internal.BlockItem, [key: Internal.BlockModDoor]: Internal.BlockItem, [key: Internal.DetectorTrackBlock]: Internal.BlockItem, [key: Internal.ColoredStairsBlock]: Internal.BlockItem, [key: Internal.FramedVerticalDoubleHalfSlopeBlock]: Internal.VerticalAndWallBlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FlowerPotBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.WissenTranslatorBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WallHangingSignBlock]: Internal.HangingSignItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.TitrationBarrelBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredSlabBlock]: Internal.BlockItem, [key: Internal.BlockSolarPanel]: Internal.BlockItem, [key: Internal.PorkBlock]: Internal.BlockItem, [key: Internal.FlowerPotBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.EnergyCellBlock]: Internal.EnergyCellBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockMobPumpkin]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredPressurePlateBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WetSpongeBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlackslagVegetationBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockModTrapdoor]: Internal.BlockItem, [key: Internal.ActiveBlock]: Internal.RendererBlockItem, [key: Internal.WeatheringCopperSlabBlock]: Internal.BlockItem, [key: Internal.BlockModPillar]: Internal.BlockItem, [key: Internal.BlockModInfiniFurnace]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ActivatorTrackBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.GlazedTerracottaBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.CoilBlock]: Internal.RendererBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.AEDecorativeBlock]: Internal.AEBaseBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BlockModSlab]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FramedCompoundSlopeSlabBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.DrumMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.CraftingUnitBlock]: Internal.CraftingBlockItem, [key: Internal.Block]: Internal.TieredBlockItem, [key: any]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StairBlock]: Internal.BlockItemCoFH, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.WhistleTrackBlock]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: any]: Internal.BlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.RendererGlassBlock]: Internal.RendererBlockItem, [key: Internal.ColoredPlankBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.CandleBlock]: Internal.BlockItem, [key: Internal.BlockModPortal]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.DynamoBlock]: Internal.BlockItemAugmentable, [key: Internal.BlockModStem]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ArcaneLumosBlock]: Internal.ArcaneLumosItem, [key: Internal.DeadBushBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.DoorBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: Internal.StorageUnitBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ConcretePowderBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ControlTrackBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.ChimeriteCrystalBlock]: Internal.TieredBlockItem, [key: Internal.ColoredPressurePlateBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.PersonalWorldSpikeBlock]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredWoodBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.ShulkerBoxBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlockCoFH]: Internal.BlockItemCoFH, [key: Internal.BlockModFurnace]: Internal.BlockItem, [key: Internal.WeatheringStairsBlock]: Internal.BlockItem, [key: Internal.WindChimeBlock]: Internal.CustomRenderedBlockItem, [key: Internal.BlockModSlab]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BufferStopTrackBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredStrippedLogBlock]: Internal.BlockItem, [key: Internal.ColoredStairsBlock]: Internal.BlockItem, [key: Internal.StorageUnitBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockModAltar]: Internal.ItemParasectaAltar, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FluidJugBlock]: Internal.ItemInfiniteFluidJug, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.LapotronicSUBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.StainedGlassBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FlowerPotBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ReinforcedObsidianBlock]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.BlockCandyCane]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.SeedItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RoutingDetectorBlock]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.TechRebornStairsBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredFenceBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BrushableBlock]: Internal.BlockItem, [key: Internal.DoomBloomBlock]: Internal.ItemNameBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.WallHangingSignBlockBOP]: Internal.HangingSignItem, [key: Internal.GrowthAcceleratorBlock]: Internal.AEBaseBlockItem, [key: Internal.BlackstoneDecorationBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FleshBlock]: Internal.BlockItem, [key: Internal.ElectricTrackBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.IronTankValveBlock]: Internal.BlockItem, [key: Internal.IOPortBlock]: Internal.AEBaseBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FenceBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.WeatheringBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlockCoFH]: Internal.BlockItemCoFH, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.CartographyTableBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockDemonFurnace]: Internal.ItemDemonFurnace, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModTrapdoor]: Internal.BlockItem, [key: Internal.WetLavaSpongeBlock]: Internal.WetLavaSpongeItem, [key: Internal.FlexLanternBlock]: Internal.BlockItem, [key: Internal.StandingSignBlock]: Internal.SignItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ChunkLoaderBlock]: Internal.AEBaseBlockItem, [key: Internal.FlowerPotBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StainedGlassBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CeilingBannerBlock]: Internal.BannerItem, [key: Internal.AlchemyBoilerBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.GlowwormSilkBottomBlock]: Internal.BlockItem, [key: Internal.FenceGateBlock]: Internal.BlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.CrucibleBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.TechRebornStairsBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.LeavesBlock]: Internal.BlockItem, [key: Internal.CartDispenserBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.BlockItem, [key: Internal.SaplingBlock]: Internal.BlockItem, [key: Internal.WissenAltarBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FramedButtonBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.ColoredPressurePlateBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.DuctPipeBlock]: Internal.DuctPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlockCoFH]: Internal.BlockItemCoFH, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.IronTankGaugeBlock]: Internal.BlockItem, [key: Internal.BlockModGrass]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.CubeGeneratorBlock]: Internal.AEBaseBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.RedStoneWireBlock]: Internal.ItemNameBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FenceBlock]: Internal.BlockItemCoFH, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockBreakerBlock]: Internal.BlockItem, [key: Internal.HugeMushroomBlock]: Internal.BlockItem, [key: Internal.StrengthenedGlassBlock]: Internal.BlockItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SFQuarryBlock]: Internal.QPBlock$QPBlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.ColoredLightBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FramedDoublePanelBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.LeavesBlock]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.OreBlockCoFH]: Internal.BlockItemCoFH, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.SeedItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.TrapDoorBlock]: Internal.BlockItem, [key: Internal.FramedSlopedStairsBlock]: Internal.BlockItem, [key: Internal.SpectrumBuddingBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.ShimmerstoneLightBlock]: Internal.BlockItem, [key: Internal.CableBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.StorageUnitBlock]: Internal.BlockItem, [key: Internal.FlowerBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BlockStorage]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.SkullBlock]: Internal.StandingAndWallBlockItem, [key: Internal.BlockModGrass]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FramedSlopeSlabBlock]: Internal.BlockItem, [key: Internal.BlockModMobCage]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockModLeaves]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.TrapDoorBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.FramedStackedCornerSlopePanelWallBlock]: Internal.VerticalAndWallBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.RedstoneLampBlock]: Internal.BlockItem, [key: Internal.ForceTrackEmitterBlock]: Internal.BlockItem, [key: Internal.CrystallarieumBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FramedLargeButtonBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.AEDecorativeBlock]: Internal.AEBaseBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.FlagItem, [key: any]: Internal.CroptopiaSaplingItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ShulkerBoxBlock]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.ColoredSporeBlossomBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: any]: Internal.SeedItem, [key: Internal.FlowerBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.RendererGlassBlock]: Internal.RendererBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.TechRebornStairsBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.WallBannerBlock]: Internal.BannerItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ModItems$1, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.WaterTankSiding]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: Internal.BlockModCrop]: Internal.ItemNameBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.CeilingHangingSignBlock]: Internal.HangingSignItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.SaplingBlockBOP]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockStorage]: Internal.BlockItem, [key: any]: Internal.ZetaHangingSignItem, [key: any]: Internal.BlockItem, [key: Internal.CoilBlock]: Internal.RendererBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SculkSensorBlock]: Internal.BlockItem, [key: Internal.ColoredWoodenButtonBlock]: Internal.BlockItem, [key: Internal.FramedFancyPoweredRailBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.ArcaneLumosBlock]: Internal.ArcaneLumosItem, [key: Internal.FramedPressurePlateBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: com.mna.blocks.decoration.BrazierBlock]: Internal.TieredBlockItem, [key: Internal.FramedSoulWallTorchBlock]: Internal.StandingAndWallBlockItem, [key: any]: Internal.BlockItem, [key: Internal.CherryLeavesBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.WeatheringBlock]: Internal.BlockItem, [key: Internal.BlockModDirt]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.FloatBlock]: Internal.SpectrumBlocks$6, [key: Internal.SlabBlock]: Internal.TieredBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.BlockModLeaves]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.QuartzGlassBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.WissenCrystallizerBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.SugarStickBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockModStairs]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.ColoredFenceGateBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.WeatheringBlock]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FluidCasingBlock]: Internal.BlockItem, [key: Internal.ButtonBlock]: Internal.BlockItemCoFH, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.FoliageBlockBOP]: Internal.BlockItem, [key: Internal.FenceGateBlock]: Internal.BlockItem, [key: Internal.GlazedTerracottaBlock]: Internal.BlockItem, [key: any]: Internal.CroptopiaSaplingItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.HayBlock]: Internal.BlockItem, [key: Internal.SugarStickBlock]: Internal.BlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.SaplingBlockBOP]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.TallFlowerBlock]: Internal.DoubleHighBlockItem, [key: Internal.RunescribingTableBlock]: Internal.TieredBlockItem, [key: Internal.ColoredLightBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockModButton]: Internal.BlockItem, [key: Internal.SteelTankGaugeBlock]: Internal.BlockItem, [key: Internal.WeatheringCopperFullBlock]: Internal.BlockItem, [key: Internal.SaplingBlockBOP]: Internal.BlockItem, [key: any]: Internal.SeedItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.BlastFurnaceBricksBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: Internal.AmethystClusterBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.NyliumBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FenceGateBlock]: Internal.BlockItem, [key: Internal.CrystalBlock]: Internal.CrystalItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.LightEmitterBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.PostBlock]: Internal.BlockItem, [key: Internal.CrystalBlock]: Internal.CrystalItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.MetaMachineBlock]: Internal.DrumMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.TieredBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.FlowerBlockBOP]: Internal.BlockItem, [key: any]: Internal.HangingSignItem, [key: any]: Internal.SignItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.PresentItem, [key: Internal.FluidCasingBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.EldrinConduitBlock]: Internal.OffsetPlacerItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModStairs]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.StainedGlassBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.EnergyAcceptorBlock]: Internal.AEBaseBlockItem, [key: any]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.CeilingHangingSignBlock]: Internal.HangingSignItem, [key: Internal.ColoredStairsBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModGlass]: Internal.BlockItem, [key: Internal.ActiveBlock]: Internal.RendererBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.SteelTankGaugeBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CertusQuartzClusterBlock]: Internal.AEBaseBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlockCoFH]: Internal.BlockItemCoFH, [key: Internal.FramedWallHangingSignBlock]: Internal.FramedHangingSignItem, [key: Internal.DecoratedPotBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.FlagItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.stoneBlock]: Internal.BlockItem, [key: Internal.StatusEffectIdolBlock]: Internal.BlockItem, [key: Internal.BlockDummy]: Internal.BlockItem, [key: Internal.BlockModLamp]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.AmphoraBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.BlockModDoor]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StainedGlassBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.TwistingVinesBlock]: Internal.BlockItem, [key: Internal.LockingTrackBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.IndustrialTNTBlock]: Internal.BlockItem, [key: Internal.BlockModLadder]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.StrengthenedGlassBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.FallDamageNegatingIdolBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BaseCoralPlantBlock]: Internal.BlockItem, [key: Internal.BrimstoneFumaroleBlock]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.TechRebornStairsBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ColoredStairsBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.SimpleRotationalBlock]: Internal.TieredBlockItem, [key: any]: Internal.BlockItem, [key: Internal.GemstoneChimeBlock]: Internal.BlockItem, [key: Internal.ColoredSporeBlossomBlock]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.TieredBlockItem, [key: any]: Internal.BlockItem, [key: Internal.SteelTankWallBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.TimedShockSwitchBlock]: Internal.BlockItem, [key: Internal.WoolCarpetBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ChorusFlowerBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FramedHorizontalPaneBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.EngravedWisestoneBlock]: Internal.EngravedWisestoneItem, [key: Internal.FenceGateBlock]: Internal.BlockItem, [key: Internal.WhistleTrackBlock]: Internal.BlockItem, [key: Internal.GobletBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WallSignBlock]: Internal.SignItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.EntityBlockActive4Way]: Internal.BlockItemAugmentable, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.WallHangingSignBlockBOP]: Internal.HangingSignItem, [key: Internal.TurnoutTrackBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockArcaniumExtractor]: Internal.ItemArcaniumExtractor, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.StrippingLootPillarBlock]: Internal.BlockItem, [key: Internal.BlockModFence]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.CandleBlock]: Internal.BlockItem, [key: Internal.BlackslagVegetationBlock]: Internal.BlockItem, [key: Internal.NetherSaltOreBlock]: Internal.BlockItem, [key: Internal.SaplingBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.SignItem, [key: Internal.SimpleRotationalBlock]: Internal.TieredBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ColoredStrippedLogBlock]: Internal.BlockItem, [key: Internal.FramedExtendedSlopePanelBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.DaylightDetectorBlock]: Internal.BlockItem, [key: Internal.FramedVerticalHalfStairsBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.ColoredFenceGateBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.CommandBlock]: Internal.GameMasterBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.RunicLightBlock]: Internal.OffsetPlacerItem, [key: Internal.CeilingHangingSignBlock]: Internal.HangingSignItem, [key: Internal.FramedFlatSlopeSlabCornerBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.DoorBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.AmphoraBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.IronTankGaugeBlock]: Internal.BlockItem, [key: Internal.StrengthenedGlassBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.ColoredSaplingBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockModButton]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FramedCheckeredCubeBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FourLeafCloverBlock]: Internal.FourLeafCloverItem, [key: Internal.CloakedOreBlock]: Internal.BlockItem, [key: Internal.BlockModGlass]: Internal.BlockItem, [key: Internal.DumpingTrackBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FramedSlabEdgeBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ColoredLeavesBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.QuitoxicReedsBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredWoodBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.WeatheringSlabBlock]: Internal.BlockItem, [key: Internal.DuctBlock]: Internal.DuctBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.ColoredStrippedLogBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.ColoredLogBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.FuelBlockItem, [key: Internal.BlockModInfiniFurnace]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.LauncherTrackBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WyeTrackBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FramedFlatElevatedSlopeSlabCornerBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.WallSignBlock]: Internal.SignItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.GenericMachineBlock]: Internal.BlockItem, [key: Internal.BlockModPressurePlate]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FramedSlabCornerBlock]: Internal.BlockItem, [key: Internal.LeavesBlock]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.GemstoneOreBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.StrippingLootPillarBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Scriptorium]: Internal.BlockItem, [key: Internal.PoweredRollingMachineBlock]: Internal.BlockItem, [key: any]: Internal.SignItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.BatteryBlock]: Internal.RendererBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockDetectorBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CeilingBannerBlock]: Internal.BannerItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BellBlock]: Internal.BlockItem, [key: Internal.RuneforgeBlock]: Internal.OffsetPlacerItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BoilingWaterCauldronBlock]: Internal.Items$1, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.StructureVoidBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: any]: Internal.SkilletItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FramedCompoundSlopePanelBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.IronTankValveBlock]: Internal.BlockItem, [key: Internal.BlockModUnbreakable]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.TieredBlockItem, [key: Internal.SmallDragonjagBlock]: Internal.BlockItem, [key: Internal.WeatherDetectorBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.TrapDoorBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockModDoor]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.CakeBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StatusEffectIdolBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SaplingBlockBOP]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.CableBlock]: Internal.BlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ShootingStarBlock]: Internal.ShootingStarItem, [key: Internal.GemstoneOreBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.DeadBranchBlock]: Internal.BlockItem, [key: Internal.BlockModGate]: Internal.BlockItem, [key: any]: Internal.BlackboardItem, [key: Internal.SignalumBlock]: Internal.BlockItemCoFH, [key: Internal.CloverBlock]: Internal.BlockItem, [key: Internal.FramedGateBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModMobCage]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ParticleSpawnerBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.GlazedTerracottaBlock]: Internal.BlockItem, [key: any]: Internal.SeedItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockModUnbreakable]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.JadeiteLotusBulbBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.FramedDoubleSlopeSlabBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockExMarker$BlockWaterlogged16Marker]: Internal.QPBlock$QPBlockItem, [key: Internal.BlockModGate]: Internal.BlockItem, [key: Internal.BlockModDoor]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.CoralBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FramedCheckeredPanelBlock]: Internal.BlockItem, [key: Internal.ColoredStrippedWoodBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.StatusEffectIdolBlock]: Internal.BlockItem, [key: Internal.BlockIcicle]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SkyStoneTankBlock]: Internal.AEBaseBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockBrambles]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockTwilightGrass]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FlowerPotBlock]: Internal.BlockItem, [key: Internal.PigmentBlock]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.StainedGlassBlock]: Internal.BlockItem, [key: Internal.FenceBlock]: Internal.BlockItem, [key: Internal.ItemBowlBlock]: Internal.BlockItem, [key: Internal.DisembarkingTrackBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FramedExtendedCornerSlopePanelBlock]: Internal.VerticalAndWallBlockItem, [key: Internal.TCoreBlocks$4]: Internal.BlockItemCoFH, [key: Internal.DoorBlock]: Internal.BlockItem, [key: Internal.DecoStoneBlock]: Internal.BlockItem, [key: Internal.BlockModSlab]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SpectrumGemstoneBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.EntityBlockActive4Way]: Internal.BlockItemAugmentable, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.CeilingHangingSignBlockBOP]: Internal.HangingSignItem, [key: Internal.WhistleTrackBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.WeatheringSlabBlock]: Internal.BlockItem, [key: Internal.UpgradeBlock]: Internal.UpgradeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RestockingChestBlock]: Internal.BlockItem, [key: Internal.LightTransferLensBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.RoutingTrackBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaHangingSignItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.DoorBlock]: Internal.DoubleHighBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.GenericMachineBlock]: Internal.BlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.PastelNodeBlock]: Internal.BlockItem, [key: Internal.FramedCornerPillarBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FlowerBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.ChimeriteCrystalBlock]: Internal.TieredBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.CellWorkbenchBlock]: Internal.AEBaseBlockItem, [key: Internal.ColoredSlabBlock]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.StrengthenedGlassBlock]: Internal.BlockItem, [key: Internal.FarmBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FramedFlatExtendedDoubleSlopePanelCornerBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: Internal.OreBlockCoFH]: Internal.BlockItemCoFH, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.StrengthenedGlassBlock]: Internal.BlockItem, [key: Internal.FirestoneBlock]: Internal.FirestoneOreBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockRubberPlankStair]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.TechRebornStairsBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FramedCollapsibleBlock]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.TallFlowerBlockBOP]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.WallSignBlockBOP]: Internal.SignItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FlowerBlockBOP]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockWreckAltar]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.HalfTransparentBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.CoralWallFanBlock]: Internal.StandingAndWallBlockItem, [key: any]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.CapacitorBankItem, [key: Internal.StatusEffectIdolBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.TrapDoorBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.TieredBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FramedSlopedPrismBlock]: Internal.BlockItem, [key: Internal.CoralPlantBlock]: Internal.BlockItem, [key: Internal.ColoredSlabBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.HeatSensorBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.TechRebornStairsBlock]: Internal.BlockItem, [key: Internal.JunctionTrackBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockStorage]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.ComparatorBlock]: Internal.BlockItem, [key: any]: Internal.SeedItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.PlayerHeadBlock]: Internal.PlayerHeadItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.HangingSignItem, [key: any]: Internal.ZetaHangingSignItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.LanternBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.CoralFanBlock]: Internal.StandingAndWallBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.TrainDetectorBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.StandingSignBlock]: Internal.SignItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FramedElevatedSlopeSlabBlock]: Internal.BlockItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.DrumMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.TaskScreenBlock]: Internal.ScreenBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.ActiveBlock]: Internal.RendererBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.PedestalBlock]: Internal.PedestalBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MorBlock]: Internal.MorItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidJugBlock]: Internal.ItemFluidJug, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.NickelZincBatteryBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.DoorBlock]: Internal.DoubleHighBlockItem, [key: Internal.Block]: Internal.TieredBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockStorage]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.BlockItem, [key: Internal.PillarBlockBase]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.BuddingAmethystBlock]: Internal.BlockItem, [key: Internal.FenceBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.HerbBlockBase]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockModDoublePlant]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.FramedStackedCornerSlopePanelBlock]: Internal.VerticalAndWallBlockItem, [key: Internal.SteamPipeBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockModSlab]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.FramedElevatedDoubleSlopeSlabBlock]: Internal.BlockItem, [key: Internal.ColoredFenceGateBlock]: Internal.BlockItem, [key: Internal.BaseCoralPlantBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockModStairs]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.ColoredStrippedLogBlock]: Internal.BlockItem, [key: Internal.FletchingTableBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MiniQuarryBlock]: Internal.MiniQuarryItem, [key: Internal.BlockMover]: Internal.BlockMover$BlockMoverItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockModSlab]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: any]: Internal.BlockItem, [key: Internal.ColoredPlankBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockHelioticBeam]: Internal.BlockItem, [key: any]: Internal.PresentItem, [key: any]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.LeavesBlock]: Internal.BlockItem, [key: Internal.BaseCoralFanBlock]: Internal.StandingAndWallBlockItem, [key: Internal.StainedGlassBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: any]: Internal.CroptopiaSaplingItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.ColoredStrippedWoodBlock]: Internal.BlockItem, [key: Internal.BlockTwilightFlower]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.FenceGateBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.AmethystClusterBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.GlassBlock]: Internal.BlockItem, [key: Internal.BlockLunicAltar]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModDirt]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredSporeBlossomBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.TieredBlockItem, [key: Internal.FenceBlock]: Internal.BlockItem, [key: any]: Internal.PresentItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CrystalApothecaryBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.PastelNodeBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.GlazedTerracottaBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModFence]: Internal.BlockItem, [key: Internal.FramedSoulTorchBlock]: Internal.StandingAndWallBlockItem, [key: Internal.EntityBlockComposter]: Internal.BlockItemAugmentable, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SaplingBlockBOP]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.WisdomFlameBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.HangingFlowerPotBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.BlockStorage]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ColoredLogBlock]: Internal.BlockItem, [key: Internal.ColoredStrippedWoodBlock]: Internal.BlockItem, [key: Internal.DoorBlock]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: Internal.ColoredPressurePlateBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.CommandBlock]: Internal.GameMasterBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.TCoreBlocks$1]: Internal.BlockItemCoFH, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.ColoredStrippedWoodBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SmallDragonjagBlock]: Internal.BlockItem, [key: Internal.SteelTankWallBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.RedstoneGravityBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.GenericMachineBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.TechRebornStairsBlock]: Internal.BlockItem, [key: Internal.FramedStackedCornerSlopePanelWallBlock]: Internal.VerticalAndWallBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.FlagItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.AmethystBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.IronTankGaugeBlock]: Internal.BlockItem, [key: Internal.LightCasingBlock]: Internal.BlockItem, [key: Internal.GlazedTerracottaBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.LodestarBlock]: Internal.TieredBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockModPortal]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.PedestalBlock]: Internal.PedestalBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.IronTankValveBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.SeedItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.QuantumLinkChamberBlock]: Internal.AEBaseBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.CeilingBannerBlock]: Internal.BannerItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.GunpowderBlock]: Internal.BlockItemCoFH, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FramedFancyRailBlock]: Internal.BlockItem, [key: Internal.CandlestickBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.DecoStoneBlock]: Internal.BlockItem, [key: Internal.ColoredPlankBlock]: Internal.BlockItem, [key: Internal.CeilingBannerBlock]: Internal.BannerItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.AmethystClusterBlock]: Internal.BlockItem, [key: Internal.BlockModGlass]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.PaintedBlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockModDoor]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.TieredBlockItem, [key: Internal.DarkSteelLadderBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.EldrinConduitBlock]: Internal.OffsetPlacerItem, [key: Internal.GemstoneOreBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockAcceleron]: Internal.BlockItem, [key: Internal.BlockAstralDust]: Internal.GenericBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.BlockFirestock]: Internal.ItemNameBlockItem, [key: Internal.ColoredWoodenButtonBlock]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.CompactingChestBlock]: Internal.BlockItem, [key: Internal.WeatheringBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ColoredPressurePlateBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.AmethystClusterBlock]: Internal.BlockItem, [key: Internal.ColoredFenceGateBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RoutingTrackBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.BlockModFence]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.TrapDoorBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CeilingHangingSignBlock]: Internal.HangingSignItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.DumpingTrackBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.BlockModStairs]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.AmethystClusterBlock]: Internal.BlockItem, [key: Internal.FramedCornerSlopePanelWallBlock]: Internal.VerticalAndWallBlockItem, [key: Internal.BlockSkyPlant]: Internal.ItemNameBlockItem, [key: Internal.EntityBlockActive4Way]: Internal.BlockItemAugmentable, [key: Internal.HighGrassPlantBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.LockingTrackBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.IronTankWallBlock]: Internal.BlockItem, [key: Internal.PigmentBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockModTorch]: Internal.StandingAndWallBlockItem, [key: Internal.LanternBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.EntityBlockActive4Way]: Internal.BlockItemAugmentable, [key: any]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FungusBlock]: Internal.BlockItem, [key: Internal.SnowblossomLeavesBlock]: Internal.BlockItem, [key: Internal.WoodenStandBlock]: Internal.BlockItem, [key: Internal.CandleBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FoliageBlockBOP]: Internal.BlockItem, [key: Internal.PiglinTradeIdolBlock]: Internal.BlockItem, [key: Internal.ColoredLightBlock]: Internal.BlockItem, [key: Internal.RadiatingEnderBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.BedBlock]: Internal.BedItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModWallTorch]: Internal.StandingAndWallBlockItem, [key: any]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ColoredFenceGateBlock]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.ColoredStrippedLogBlock]: Internal.BlockItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.BlockStorage]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SimpleRotationalBlock]: Internal.TieredBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FramedHalfPillarBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockStorage]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.EntityBlockActive4Way]: Internal.BlockItemAugmentable, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredStairsBlock]: Internal.BlockItem, [key: Internal.InfestedRotatedPillarBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BeehiveBlock]: Internal.BlockItem, [key: Internal.EntityBlockActive4Way]: Internal.BlockItemAugmentable, [key: Internal.HerbBlockBase]: Internal.BlockItem, [key: Internal.EntityBlockActive4Way]: Internal.BlockItemAugmentable, [key: Internal.LauncherTrackBlock]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlockCoFH]: Internal.BlockItemCoFH, [key: Internal.LeavesBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.CrystalResonanceGeneratorBlock]: Internal.AEBaseBlockItem, [key: Internal.BlockTwilightGrass]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.HangingSignItem, [key: Internal.HangingCobwebBottomBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.GrassBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.SandBlock]: Internal.BlockItemCoFH, [key: Internal.CeilingBannerBlock]: Internal.BannerItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.IronTankValveBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: elucent.eidolon.common.block.CandleBlock]: Internal.BlockItem, [key: Internal.FramedCenteredPanelBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.PointedDripstoneBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ChimeriteCrystalBlock]: Internal.TieredBlockItem, [key: Internal.StainedGlassPaneBlock]: Internal.BlockItem, [key: Internal.WeatheringSlabBlock]: Internal.BlockItem, [key: Internal.CloakedOreBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RedstoneLampBlock]: Internal.BlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.GrassBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.ForfeitureBlock]: Internal.DecayPlacerItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.HangingSignItem, [key: Internal.IronTankValveBlock]: Internal.BlockItem, [key: Internal.SkullBlock]: Internal.StandingAndWallBlockItem, [key: Internal.FenceGateBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.InfestedBlock]: Internal.BlockItem, [key: Internal.TankUnitBlock]: Internal.BlockItem, [key: Internal.FlowerPotBlock]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SculkShriekerBlock]: Internal.BlockItem, [key: Internal.TechRebornStairsBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockModPressurePlate]: Internal.BlockItem, [key: Internal.SpiritInstillerBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BedBlock]: Internal.BedItem, [key: Internal.BlockMoonbulb]: Internal.ItemNameBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.WallSignBlock]: Internal.SignItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.ItemNameBlockItem, [key: Internal.BlockModStairs]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: any]: Internal.SeedItem, [key: Internal.LumiumBlock]: Internal.BlockItemCoFH, [key: Internal.FramedStackedSlopePanelBlock]: Internal.BlockItem, [key: Internal.IronFurnaceBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FramedFancyPoweredRailSlopeBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.WallTorchBlock]: Internal.StandingAndWallBlockItem, [key: Internal.BlockModButton]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ParticleEmitterBlock]: Internal.TieredBlockItem, [key: Internal.CeilingBannerBlock]: Internal.BannerItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.TieredBlockItem, [key: Internal.ThrottleTrackBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ColoredPressurePlateBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FenceBlock]: Internal.BlockItem, [key: Internal.ColoredLeavesBlock]: Internal.BlockItem, [key: Internal.FramedInnerPrismCornerBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.EntityBlockActive4Way]: Internal.BlockItemAugmentable, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModTrapdoor]: Internal.BlockItem, [key: Internal.SteelTankGaugeBlock]: Internal.BlockItem, [key: Internal.SteelTankWallBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.DoorBlock]: Internal.DoubleHighBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.GenericGeneratorBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockMobPumpkin]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.SaplingBlockBOP]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.DumpingTrackBlock]: Internal.BlockItem, [key: Internal.ConcretePowderBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.HopperBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.PostBlock]: Internal.BlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.WoolCarpetBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.TechRebornStairsBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.HangingSignItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.IronTankGaugeBlock]: Internal.BlockItem, [key: Internal.BlockTwilightFlower]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockModPortal]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: Internal.SaplingBlock]: Internal.BlockItem, [key: Internal.GenericGeneratorBlock]: Internal.BlockItem, [key: Internal.WyeTrackBlock]: Internal.BlockItem, [key: Internal.BlockModSlab]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: Internal.RespawnAnchorBlock]: Internal.BlockItem, [key: Internal.GlowBlock]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StandingSignBlock]: Internal.SignItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.TechRebornStairsBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModPressurePlate]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.StandingAndWallBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockModAltar]: Internal.ItemDramixAltar, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.AnvilBlock]: Internal.BlockItem, [key: Internal.EnergyCellBlock]: Internal.EnergyCellBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.BlockModGate]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.SaltCampfireBlock]: Internal.SaltCampfireItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.TimberFrameItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FramedFlatStackedSlopeSlabCornerBlock]: Internal.BlockItem, [key: Internal.BeetrootBlock]: Internal.ItemNameBlockItem, [key: Internal.BlockRubberSapling]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SaplingBlockBOP]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SteelTankValveBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ColoredPlankBlock]: Internal.BlockItem, [key: Internal.FramedElevatedSlopeEdgeBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FenceGateBlock]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.stoneSpawn]: Internal.BlockItem, [key: Internal.BlockModSapling]: Internal.BlockItem, [key: Internal.WoolCarpetBlock]: Internal.BlockItem, [key: any]: Internal.BoundSoulBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.NecroticFocusBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.SeedItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: dev.ftb.mods.ftbquests.block.DetectorBlock]: Internal.BlockItem, [key: Internal.CopperPegBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.WallSignBlockBOP]: Internal.SignItem, [key: any]: Internal.ItemNameBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.JunctionTrackBlock]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.CrystalGrowthBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CraftingStationSlabBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredFenceBlock]: Internal.BlockItem, [key: any]: Internal.Item, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.SeedItem, [key: Internal.WallSignBlock]: Internal.SignItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.PillarBlockBase]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.TorchBlock]: Internal.StandingAndWallBlockItem, [key: Internal.CertusQuartzClusterBlock]: Internal.AEBaseBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FlowerBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.DuctBlock]: Internal.DuctBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FillerBlock]: Internal.QPBlock$QPBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.FlowerBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.SimpleRotationalBlock]: Internal.TieredBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FramedVerticalSlopedStairsBlock]: Internal.BlockItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.AqueductHydratorBlock]: Internal.YTechItems$5, [key: Internal.Block]: Internal.BlockItem, [key: Internal.WallSignBlock]: Internal.SignItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.PreservationControllerBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockStatue]: Internal.ItemStatueBlock, [key: Internal.FramedItemFrameBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockAdvPump]: Internal.ItemAdvPump, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: any]: Internal.EnchantedBookItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockElevantium]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.ShockSwitchBlock]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.FlowerPotBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.SeedItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.BlackslagVegetationBlock]: Internal.BlockItem, [key: Internal.TrapDoorBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.DynamoBlock]: Internal.BlockItemAugmentable, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockTwilightFlower]: Internal.BlockItem, [key: Internal.OreBlockCoFH]: Internal.BlockItemCoFH, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.NephriteBlossomStemBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.BlockModCrop]: Internal.ItemNameBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.CandleBlock]: Internal.BlockItem, [key: Internal.SolidFueledFireboxBlock]: Internal.FueledFireboxBlockItem, [key: Internal.Block]: Internal.TieredBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.TrapDoorBlock]: Internal.BlockItem, [key: Internal.PostBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BannerBlock]: Internal.BannerItem, [key: any]: Internal.ItemNameBlockItem, [key: any]: Internal.SeedItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.ZincSilverBatteryBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.EngravedWisestoneBlock]: Internal.EngravedWisestoneItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.AmethystClusterBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.WallBannerBlock]: Internal.BannerItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: any]: Internal.SeedItem, [key: Internal.ColoredFenceBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ArcanePedestalBlock]: Internal.BlockItem, [key: any]: Internal.HangingSignItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.GenericMachineBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FramedFancyDetectorRailSlopeBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.CreativeSteamStorageBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.FluidTankItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockModSapling]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.IronTankValveBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.WallSignBlock]: Internal.SignItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.SeedItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.IronTankWallBlock]: Internal.BlockItem, [key: Internal.TaskScreenBlock]: Internal.ScreenBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ColoredWoodBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.DecoStoneBlock]: Internal.BlockItem, [key: Internal.StandingSignBlock]: Internal.SignItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.RemotePlacerBlock]: Internal.QPBlock$QPBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.StrippableLog]: Internal.BlockItem, [key: Internal.ColoredSaplingBlock]: Internal.BlockItem, [key: Internal.StorageUnitBlock]: Internal.BlockItem, [key: Internal.ModStairBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockMobPumpkin]: Internal.BlockItem, [key: Internal.DoorBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.GTWallHangingSignBlock]: Internal.HangingSignItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SugarStickBlock]: Internal.BlockItem, [key: Internal.ColoredSaplingBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: any]: Internal.PaintedBlockItem, [key: Internal.EntityBlockActive4Way]: Internal.BlockItemAugmentable, [key: Internal.TrapDoorBlock]: Internal.BlockItem, [key: Internal.OvergrownSandBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.EngravedWisestoneBlock]: Internal.EngravedWisestoneItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.GenericMachineBlock]: Internal.BlockItem, [key: Internal.BlockModLeaves]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockModUnbreakable]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpatialAnchorBlock]: Internal.AEBaseBlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.BlockModWall]: Internal.BlockItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: Internal.BlockModButton]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FenceBlock]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.TieredBlockItem, [key: Internal.BlockLightDetectorBlock]: Internal.BlockItem, [key: Internal.CrystalBlock]: Internal.CrystalItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredPlankBlock]: Internal.BlockItem, [key: Internal.DoorBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.GlazedTerracottaBlock]: Internal.BlockItem, [key: Internal.IronTankGaugeBlock]: Internal.BlockItem, [key: Internal.BlockModStairs]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.BoosterTrackBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.UpgradeBlock]: Internal.UpgradeBlockItem, [key: Internal.FlowerBlock]: Internal.BlockItem, [key: Internal.UnlockedSwordPedestalBlock]: Internal.BlockItem, [key: Internal.BlockModGate]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FallingBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.CrystalBlock]: Internal.CrystalItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockStorage]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.PreservationRoundelBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.DropperBlock]: Internal.BlockItem, [key: Internal.ColoredSaplingBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.RefractionLensBlock]: Internal.OffsetPlacerItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.DoubleWaterPlantBlock]: Internal.BlockItem, [key: Internal.ColoredWoodenButtonBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockModCrop]: Internal.ItemNameBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.WallBlock]: Internal.TieredBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.NephriteBlossomLeavesBlock]: Internal.BlockItem, [key: Internal.DynamoBlock]: Internal.BlockItemAugmentable, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.StainedGlassBlock]: Internal.BlockItem, [key: Internal.SaltWallTorchBlock]: Internal.SaltTorchItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockModTrapdoor]: Internal.BlockItem, [key: any]: Internal.SignItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockMobPumpkin]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: any]: Internal.SignItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.IronTankWallBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.PigmentBlock]: Internal.BlockItem, [key: any]: Internal.CookingPotItem, [key: Internal.EntityBlockActive4Way]: Internal.BlockItemAugmentable, [key: Internal.FadingBlock]: Internal.DecayPlacerItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.EntityBlockCoFH]: Internal.BlockItemAugmentable, [key: Internal.TrapDoorBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockModSlab]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.ParametricMiningDeviceBlock]: Internal.ParametricMiningDeviceItem, [key: Internal.BlockModStairs]: Internal.BlockItem, [key: Internal.ItemSorterBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.CauldronBlock]: Internal.Items$1, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FungusBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockFusionCoil]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FloatBlock]: Internal.FloatBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModPressurePlate]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BaseCoralFanBlock]: Internal.StandingAndWallBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.common.block.BatteryBlock]: Internal.RendererBlockItem, [key: Internal.StemBlock]: Internal.ItemNameBlockItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: Internal.CrystalSeedBlock]: Internal.BlockItem, [key: Internal.StatusEffectIdolBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.SeedItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.BrewingStandBlock]: Internal.BlockItem, [key: Internal.IronTankGaugeBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockMobPumpkin]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: Internal.IronTankWallBlock]: Internal.BlockItem, [key: Internal.ItemDetectorBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockRaglokAltar]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.TallFlowerBlockBOP]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.RunicTorchBlock]: Internal.OffsetPlacerItem, [key: any]: Internal.BlockItem, [key: Internal.PoweredBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ShimmerstoneLightBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: any]: vectorwing.farmersdelight.common.item.RopeItem, [key: Internal.ArcaneLumosBlock]: Internal.ArcaneLumosItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.FlowerBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FramedPaneBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ColoredLeavesBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.IronBarsBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.NetherrackBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ShulkerBoxBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.OrbitalFluidRetainerBlock]: Internal.FluidStorageBaseItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ChiseledBookShelfBlock]: Internal.BlockItem, [key: Internal.FenceBlock]: Internal.BlockItem, [key: Internal.IronTankWallBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.SpectrumGemstoneBlock]: Internal.BlockItem, [key: Internal.CooldownSensorBlock]: Internal.BlockItem, [key: Internal.EntityBlockActive4Way]: Internal.BlockItemAugmentable, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.TrapDoorBlock]: Internal.BlockItem, [key: Internal.LongDistancePipeBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WallHangingSignBlock]: Internal.HangingSignItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.BlockModTorch]: Internal.StandingAndWallBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FramedVerticalDoubleHalfStairsBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CeilingHangingSignBlock]: Internal.HangingSignItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.PinkPetalsBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.GemstoneOreBlock]: Internal.BlockItem, [key: any]: Internal.SignItem, [key: Internal.BlockModGlass]: Internal.BlockItem, [key: Internal.StrengthenedGlassBlock]: Internal.BlockItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: Internal.BlockHVTransformer]: Internal.BlockItem, [key: Internal.WallHangingSignBlockBOP]: Internal.HangingSignItem, [key: Internal.BlockModDirt]: Internal.BlockItem, [key: any]: Internal.ZetaHangingSignItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.StatusEffectIdolBlock]: Internal.BlockItem, [key: Internal.BlockModSlab]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.GenericGeneratorBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.PresentItem, [key: Internal.BlockHeatTrap]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.SpectrumBlocks$1]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.PatternProviderBlock]: Internal.AEBaseBlockItem, [key: Internal.FramedDoubleSlopePanelBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.GTStandingSignBlock]: Internal.SignItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.BlockModWall]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.StatusEffectIdolBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.DoorBlock]: Internal.DoubleHighBlockItem, [key: Internal.BlockModWall]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.PostBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.WallBannerBlock]: Internal.BannerItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.ExperienceTotemBlock]: Internal.BlockItem, [key: Internal.FramedPressurePlateBlock]: Internal.BlockItem, [key: Internal.FramedWeightedPressurePlateBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.AmethystClusterBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SteelTankGaugeBlock]: Internal.BlockItem, [key: Internal.IronTankWallBlock]: Internal.BlockItem, [key: Internal.LauncherTrackBlock]: Internal.BlockItem, [key: Internal.cloudBlock]: Internal.BlockItem, [key: Internal.BlockModSapling]: Internal.BlockItem, [key: Internal.FlowerPotBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.EnderSkullBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.ItemNameBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockExMarker$Block16Marker]: Internal.QPBlock$QPBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.IronTankWallBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.LSUStorageBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModLightFence]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.CloakedOreBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BismuthClusterBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.AmethystClusterBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.AmethystBlock]: Internal.BlockItem, [key: Internal.CrystalBlock]: Internal.CrystalItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.HangingSignItem, [key: Internal.ColoredSlabBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.StandingSignBlock]: Internal.SignItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FramedCollapsibleCopycatBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.WallHangingSignBlock]: Internal.HangingSignItem, [key: Internal.WallSignBlock]: Internal.SignItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.StainedGlassPaneBlock]: Internal.BlockItem, [key: Internal.FoliageBlockBOP]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.AmethystClusterBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockMassiveLamp]: Internal.GenericBlockItem, [key: any]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MilkingIdolBlock]: Internal.BlockItem, [key: Internal.AEDecorativeBlock]: Internal.AEBaseBlockItem, [key: Internal.BlockStatue]: Internal.ItemStatueBlock, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredLogBlock]: Internal.BlockItem, [key: Internal.CoralPlantBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.CrystalBlock]: Internal.CrystalItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.StandingSignBlockBOP]: Internal.SignItem, [key: any]: Internal.BlockItem, [key: any]: Internal.SeedItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.CarpetBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MushroomBlockBOP]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.IronTankValveBlock]: Internal.BlockItem, [key: Internal.ShulkerBoxBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.WallSignBlockBOP]: Internal.SignItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.CroptopiaSaplingItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockStatue]: Internal.ItemStatueBlock, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusionCasingBlock]: Internal.RendererBlockItem, [key: any]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.EnchantmentTableBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.EntityDetectorBlock]: Internal.BlockItem, [key: Internal.ColoredSlabBlock]: Internal.BlockItem, [key: any]: Internal.PresentItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FlowerPotBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FramedVerticalHalfSlopeBlock]: Internal.VerticalAndWallBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FungusBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BaseCoralPlantBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockWinterberryVinesHead]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.GenericMachineBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockBigLamp]: Internal.GenericBlockItem, [key: Internal.BlockTwilightFlower]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ThrottleTrackBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockModDoublePlant]: Internal.BlockItem, [key: Internal.ColoredStrippedLogBlock]: Internal.BlockItem, [key: Internal.GenericMachineBlock]: Internal.BlockItem, [key: Internal.GenericMachineBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.GravelBlock]: Internal.BlockItem, [key: Internal.BlockModDirt]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: any]: Internal.ZetaHangingSignItem, [key: Internal.GlazedTerracottaBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.SaltWallTorchBlock]: Internal.SaltTorchItem, [key: Internal.MAFlowerBlock]: Internal.BlockItem, [key: Internal.DoublePlantBlockBOP]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.HerbBlockBase]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FlowerPotBlock]: Internal.BlockItem, [key: Internal.BlockStorage]: Internal.BlockItem, [key: Internal.BlockModButton]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.HangingSignItem, [key: Internal.BlockMachineFrame]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BedBlock]: Internal.BedItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.SignItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StairBlock]: Internal.TieredBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockModTrapdoor]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItemCoFH, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.CrystalBlock]: Internal.CrystalItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.DoorBlock]: Internal.DoubleHighBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockStatue]: Internal.ItemStatueBlock, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BaseCoralWallFanBlock]: Internal.StandingAndWallBlockItem, [key: Internal.ColoredWoodBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ColoredLogBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BaseCoralWallFanBlock]: Internal.StandingAndWallBlockItem, [key: any]: Internal.SeedItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.TallGrassBlock]: Internal.BlockItem, [key: Internal.IncenseBurnerBlock]: Internal.BlockItem, [key: Internal.SkyChestBlock]: Internal.AEBaseBlockItem, [key: Internal.SandBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.GrassBedBlock]: Internal.YTechItems$8, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.StorageCellBlock]: Internal.FluidCellBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ColoredLightBlock]: Internal.BlockItem, [key: Internal.WallSignBlockBOP]: Internal.SignItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.PaintedBlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.TotemOfFlamesBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.WallSignBlockBOP]: Internal.SignItem, [key: any]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WoolCarpetBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SlabBlock]: Internal.TieredBlockItem, [key: Internal.WoolCarpetBlock]: Internal.BlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.CroptopiaSaplingItem, [key: Internal.InsomniaIdolBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: Internal.CrystalGrowthBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.TechRebornStairsBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CeilingHangingSignBlock]: Internal.HangingSignItem, [key: Internal.TallFlowerBlockBOP]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ColoredSaplingBlock]: Internal.BlockItem, [key: Internal.FramedPrismBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.TieredBlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockModPlanks]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.CroptopiaSaplingItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.GemstonePlayerOnlyGlassBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FlowerBlockBOP]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.CrystalSeedBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.StrengthenedGlassBlock]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FenceGateBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.CouplerTrackBlock]: Internal.BlockItem, [key: Internal.BufferStopTrackBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FramedDoubleStairsBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.FramedFlatInverseDoubleSlopePanelCornerBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ColoredPlankBlock]: Internal.BlockItem, [key: Internal.ColoredWoodenButtonBlock]: Internal.BlockItem, [key: Internal.ColoredSaplingBlock]: Internal.BlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.WeatheringCopperStairBlock]: Internal.BlockItem, [key: Internal.PigmentBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.EntityBlockActive4Way]: Internal.BlockItemAugmentable, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.ComposterBlock]: Internal.BlockItem, [key: Internal.ColoredSaplingBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.OreBlockCoFH]: Internal.BlockItemCoFH, [key: any]: Internal.ZetaSignItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.CrystalSeedBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: Internal.MillstoneBlock]: Internal.YTechItems$2, [key: Internal.SignalInterlockBoxBlock]: Internal.BlockItem, [key: Internal.FenceBlock]: Internal.BlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.ColoredLogBlock]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.BlockTwilightFlower]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.ArcaneLumosBlock]: Internal.ArcaneLumosItem, [key: Internal.RunicAnvilBlock]: Internal.TieredBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.WallHangingSignBlockBOP]: Internal.HangingSignItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.WaterlilyBlock]: Internal.PlaceOnWaterBlockItem, [key: Internal.CrystalBlock]: Internal.CrystalItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlockCoFH]: Internal.BlockItemCoFH, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FramedInverseDoubleCornerSlopePanelWallBlock]: Internal.VerticalAndWallBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FramedDoubleThreewayCornerPillarBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: Internal.BuddingCertusQuartzBlock]: Internal.AEBaseBlockItem, [key: any]: Internal.HangingSignItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.PotatoBlock]: Internal.ItemNameBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: Internal.CloakedOreBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.AEDecorativeBlock]: Internal.AEBaseBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.AmethystClusterBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.LeavesBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlockCoFH]: Internal.BlockItemCoFH, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: any]: Internal.HangingSignItem, [key: Internal.StrengthenedGlassBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.CactusBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.FallingBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: any]: Internal.BlockItem, [key: Internal.ChimeriteCrystalBlock]: Internal.TieredBlockItem, [key: Internal.GenericMachineBlock]: Internal.BlockItem, [key: Internal.BlockModUnbreakable]: Internal.BlockItem, [key: Internal.ColoredPlankBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.ItemNameBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.BlockStatue]: Internal.ItemStatueBlock, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockModTrapdoor]: Internal.BlockItem, [key: Internal.FlowerBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.WeightedPressurePlateBlock]: Internal.BlockItem, [key: Internal.PigmentBlock]: Internal.BlockItem, [key: Internal.CeilingBannerBlock]: Internal.BannerItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.DetectorTrackBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.TieredBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.GTWallSignBlock]: Internal.SignItem, [key: Internal.LecternBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.CoralWallFanBlock]: Internal.StandingAndWallBlockItem, [key: Internal.ColoredStrippedWoodBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BrambleBlock]: Internal.BlockItem, [key: Internal.ArcaneLumosBlock]: Internal.ArcaneLumosItem, [key: Internal.BlockModProximitySpawner]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockAdvQuarry]: Internal.ItemAdvQuarry, [key: Internal.EntityBlockActive4Way]: Internal.BlockItemAugmentable, [key: Internal.ShulkerBoxBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ArcanumOreBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockModGate]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.IronTankGaugeBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpiritSallowLeavesBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.ConcretePowderBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.BigDripleafStemBlock]: Internal.Items$1, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.BedBlock]: Internal.BedItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BarrelBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SteelTankValveBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CocoaBlock]: Internal.ItemNameBlockItem, [key: any]: Internal.FuelBlockItem, [key: any]: Internal.SugarCubeItem, [key: Internal.BlockEVTransformer]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.TallGrassBlock]: Internal.BlockItem, [key: Internal.BlockTwilightFlower]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockTwilightFlower]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WallBannerBlock]: Internal.BannerItem, [key: Internal.BlockModPressurePlate]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockComputerCube]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.AmethystClusterBlock]: Internal.BlockItem, [key: Internal.AmaranthCropBlock]: Internal.ItemNameBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.TaskScreenBlock]: Internal.ScreenBlockItem, [key: Internal.ShootingStarBlock]: Internal.ShootingStarItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.SignItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.AltarOfDroughtBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.ColoredSporeBlossomBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ColoredWoodenButtonBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.GemstoneOreBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.TotemTorchBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.GemstoneGlassBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.WallHangingSignBlockBOP]: Internal.HangingSignItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredLeavesBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.HummingstoneBlock]: Internal.BlockItem, [key: Internal.FlowerPotBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockCandyCane]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockModGate]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.HangingSignItem, [key: any]: Internal.MushroomColonyItem, [key: Internal.Block]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockRubberLeaves]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ElementalSentryBlock]: Internal.TieredBlockItem, [key: Internal.SteamSensorBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: Internal.FramedCornerSlopePanelWallBlock]: Internal.VerticalAndWallBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.BlockTwilightGrass]: Internal.BlockItem, [key: Internal.GrindstoneBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.ArcaneIteratorBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.CeilingHangingSignBlock]: Internal.HangingSignItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.GenericMachineBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: Internal.StandingSignBlockBOP]: Internal.SignItem, [key: Internal.MangroveRootsBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModTrapdoor]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.ColoredStairsBlock]: Internal.BlockItem, [key: Internal.FramedInverseDoubleCornerSlopePanelBlock]: Internal.VerticalAndWallBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: any]: Internal.TimberFrameItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CampfireBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.WeatheringCopperStairBlock]: Internal.BlockItem, [key: Internal.ColoredStrippedWoodBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockTwilightFlower]: Internal.BlockItem, [key: Internal.PedestalBlock]: Internal.PedestalBlockItem, [key: Internal.HardenedGlassBlock]: Internal.BlockItemCoFH, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FeedingIdolBlock]: Internal.BlockItem, [key: any]: Internal.HangingSignItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockModGrass]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BloodBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockModSapling]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.RefractionLensBlock]: Internal.OffsetPlacerItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.GemstoneChimeBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BedBlock]: Internal.BedItem, [key: Internal.GemstoneGlassBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModPressurePlate]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BookshelfBlock]: Internal.OffsetPlacerItem, [key: Internal.BlockModPlanks]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.GTCeilingHangingSignBlock]: Internal.HangingSignItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.WallHangingSignBlockBOP]: Internal.HangingSignItem, [key: Internal.WallHangingSignBlockBOP]: Internal.HangingSignItem, [key: any]: Internal.SignItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.FramedFlatStackedSlopePanelCornerBlock]: Internal.BlockItem, [key: Internal.ColoredStrippedLogBlock]: Internal.BlockItem, [key: Internal.BlockHellfireSponge]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.TCoreBlocks$5]: Internal.BlockItemCoFH, [key: com.gregtechceu.gtceu.common.block.BatteryBlock]: Internal.RendererBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.GenericMachineBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.AEDecorativeBlock]: Internal.AEBaseBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.TntBlockCoFH]: Internal.BlockItemCoFH, [key: Internal.DryingRackBlock]: Internal.YTechItems$9, [key: Internal.TurnoutTrackBlock]: Internal.BlockItem, [key: Internal.PigmentBlock]: Internal.BlockItem, [key: Internal.NephriteBlossomBulbBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.RubberLogBlock]: Internal.BlockItem, [key: Internal.ShulkerBoxBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.GenericMachineBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SteelTankValveBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SkullBlock]: Internal.StandingAndWallBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.SeedItem, [key: Internal.EldrinAltarBlock]: Internal.TieredBlockItem, [key: any]: Internal.SignItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockStorage]: Internal.BlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.HangingSignItem, [key: Internal.FramedDoorBlock]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.ConcretePowderBlock]: Internal.BlockItem, [key: Internal.SteamCasingBlock]: Internal.BlockItem, [key: Internal.CeilingHangingSignBlockBOP]: Internal.HangingSignItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.PiglinWallSkullBlock]: Internal.StandingAndWallBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.ModStairBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: any]: Internal.CroptopiaSaplingItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FenceBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FlowerBlockBOP]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockModVine]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpanishMossBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockEdenChest]: Internal.ItemEdenChest, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FramedPillarBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BannerBlock]: Internal.BannerItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.ResearchTableBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FramedAdjustableDoubleSlabBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.Block]: Internal.TieredBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockStorage]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ColoredWoodBlock]: Internal.BlockItem, [key: Internal.BlockLVTransformer]: Internal.BlockItem, [key: Internal.WissenActivatorBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.GenericGeneratorBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.EngravedWisestoneBlock]: Internal.EngravedWisestoneItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ArcaneLumosBlock]: Internal.ArcaneLumosItem, [key: Internal.TableBlockBase]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ColoredStairsBlock]: Internal.BlockItem, [key: Internal.WoolCarpetBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BeaconBlock]: Internal.BlockItem, [key: Internal.FramedPaneBlock]: Internal.BlockItem, [key: Internal.ChimeriteCrystalBlock]: Internal.TieredBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.EntityBlockActive4Way]: Internal.BlockItemAugmentable, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BambooStalkBlock]: Internal.BlockItem, [key: Internal.GenericMachineBlock]: Internal.BlockItem, [key: Internal.TorchBlock]: Internal.StandingAndWallBlockItem, [key: any]: Internal.WoodBasedBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.SeedItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.CraftingStationBlock]: Internal.BlockItem, [key: Internal.ShimmerstoneLightBlock]: Internal.BlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.CouplerTrackBlock]: Internal.BlockItem, [key: any]: Internal.PresentItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FenceGateBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FramedGlowingCube]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FramedCornerSlopePanelBlock]: Internal.VerticalAndWallBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SlabBlock]: Internal.TieredBlockItem, [key: Internal.CrystalBlock]: Internal.CrystalItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.DryingRackBlock]: Internal.YTechItems$9, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.SackItem, [key: Internal.ColoredPlankBlock]: Internal.BlockItem, [key: Internal.FramedFloorBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumFacingBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.StonecutterBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FramedWeightedPressurePlateBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockAcid]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.EnderDropperBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaSignItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.DragonEggBlock]: Internal.BlockItem, [key: any]: Internal.HangingSignItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.StairBlock]: Internal.TieredBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WeatheringStairsBlock]: Internal.BlockItem, [key: Internal.FramedRedstoneTorchBlock]: Internal.StandingAndWallBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.InfestedBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FenceBlock]: Internal.BlockItem, [key: Internal.GatedTrackBlock]: Internal.BlockItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.PigmentBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ArcanumGrowthBlock]: Internal.BlockItem, [key: Internal.WallSignBlockBOP]: Internal.SignItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CloakedOreBlock]: Internal.FloatBlockItem, [key: Internal.BlockStatue]: Internal.ItemStatueBlock, [key: any]: Internal.PresentItem, [key: Internal.MelonBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.LadderBlock]: Internal.BlockItem, [key: Internal.MAWaterFlowerBlock]: Internal.ItemWakebloom, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SteelTankWallBlock]: Internal.BlockItem, [key: Internal.ExperienceSensorBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FenceGateBlock]: Internal.BlockItem, [key: Internal.TechRebornStairsBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockKarosHeatTile]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockThermalVent]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ChimeriteCrystalBlock]: Internal.TieredBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.GenericMachineBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BlockAlarm]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpatialPylonBlock]: Internal.AEBaseBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockTwilightFlower]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ShearingIdolBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.FramedCeilingHangingSignBlock]: Internal.FramedHangingSignItem, [key: Internal.SteelTankWallBlock]: Internal.BlockItem, [key: Internal.SandBlockBOP]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.DetectorTrackBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModStairs]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.DoorBlock]: Internal.DoubleHighBlockItem, [key: Internal.ItemGenBlock]: Internal.AEBaseBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModLamp]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.TechRebornStairsBlock]: Internal.BlockItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FenceBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FenceBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.TechRebornStairsBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.ColoredSlabBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SandBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.GlassBlock]: Internal.BlockItem, [key: Internal.BlockModDoor]: Internal.BlockItem, [key: Internal.BlockModCrop]: Internal.ItemNameBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.HighSpeedElectricTrackBlock]: Internal.BlockItem, [key: Internal.ColoredLeavesBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FramedExtendedDoubleCornerSlopePanelBlock]: Internal.VerticalAndWallBlockItem, [key: Internal.BlockModButton]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.CalibratedSculkSensorBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BannerBlock]: Internal.BannerItem, [key: Internal.ItemUnloaderBlock]: Internal.BlockItem, [key: any]: Internal.SeedItem, [key: Internal.LeavesBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockModLamp]: Internal.BlockItem, [key: Internal.StrengthenedGlassBlock]: Internal.BlockItem, [key: Internal.BlockPlacerBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StatusEffectIdolBlock]: Internal.BlockItem, [key: Internal.SaltLanternBlock]: Internal.SaltLanternItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockStorage]: Internal.BlockItem, [key: Internal.RendererGlassBlock]: Internal.RendererBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: Internal.OneWayTrackBlock]: Internal.BlockItem, [key: Internal.CustomCeilingHangingSignBlock]: Internal.HangingSignItem, [key: Internal.FramedPanelBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FlowerPotBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredSlabBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: Internal.WallHangingSignBlock]: Internal.HangingSignItem, [key: Internal.CraftingUnitBlock]: Internal.CraftingBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockArcanaDoor]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ChimeriteCrystalBlock]: Internal.TieredBlockItem, [key: Internal.WallSkullBlock]: Internal.StandingAndWallBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.CeilingBannerBlock]: Internal.BannerItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.CoralFanBlock]: Internal.StandingAndWallBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.ColoredSporeBlossomBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.SaplingBlockBOP]: Internal.BlockItem, [key: Internal.GenericMachineBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BarrierBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.FlagItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockMassiveLamp]: Internal.GenericBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BannerBlock]: Internal.BannerItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.FramedExtendedCornerSlopePanelWallBlock]: Internal.VerticalAndWallBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.BlockModCrop]: Internal.ItemNameBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.IronAlloyFurnaceBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.CaveVinesBlock]: Internal.ItemNameBlockItem, [key: Internal.TechRebornStairsBlock]: Internal.BlockItem, [key: Internal.FramedDoublePrismCornerBlock]: Internal.BlockItem, [key: Internal.ChimeriteCrystalBlock]: Internal.TieredBlockItem, [key: any]: Internal.HangingSignItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.WallHangingSignBlock]: Internal.HangingSignItem, [key: Internal.WeatheringBlock]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockModPressurePlate]: Internal.BlockItem, [key: Internal.FenceBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.BlockModTorch]: Internal.StandingAndWallBlockItem, [key: Internal.FluidFueledFireboxBlock]: Internal.FueledFireboxBlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.StrengthenedGlassBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.ColoredLeavesBlock]: Internal.BlockItem, [key: Internal.DoorBlock]: Internal.DoubleHighBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModWall]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockModLamp]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.TotemOfDisenchantBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.ColoredStairsBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.GemstoneOreBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.DoubleHighBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.HeartboundChestBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: Internal.WallTorchBlock]: Internal.StandingAndWallBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.StandingAndWallBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.VillagerDetectorBlock]: Internal.BlockItem, [key: Internal.FusionShrineBlock]: Internal.BlockItem, [key: Internal.AdvancedItemLoaderBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ActiveBlock]: Internal.RendererBlockItem, [key: Internal.SwitchTrackLeverBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.PostBlock]: Internal.BlockItem, [key: Internal.FrameBlock]: Internal.BlockItem, [key: Internal.TrapDoorBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.FuelBlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModStairs]: Internal.BlockItem, [key: Internal.EldrinConduitBlock]: Internal.OffsetPlacerItem, [key: any]: Internal.FlagItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FramedInverseDoubleSlopePanelBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModGlass]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.CoralPlantBlock]: Internal.BlockItem, [key: Internal.ConcretePowderBlock]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.PresentItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ActivatorTrackBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WitherSkullBlock]: Internal.StandingAndWallBlockItem, [key: Internal.ArcaneLumosBlock]: Internal.ArcaneLumosItem, [key: any]: Internal.BlockItem, [key: Internal.EffigyBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ColoredLogBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.HugeMushroomBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BlockModSlab]: Internal.BlockItem, [key: Internal.BlockModSlab]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockMobPumpkin]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.DistantSignalBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.GlassBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FramedTrapDoorBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FramedPrismBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FenceBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FramedVerticalDividedStairsBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.AmethystClusterBlock]: Internal.BlockItem, [key: Internal.CrackedDragonboneBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.TieredBlockItem, [key: Internal.TargetBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.TieredBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.StatusEffectIdolBlock]: Internal.BlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.AffinityTinkerBlock]: Internal.TieredBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredLightBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FramedSlopeBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.PreservationBlockDetectorBlock]: Internal.BlockItem, [key: Internal.BlockModPressurePlate]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.CarvedPumpkinBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FramedInnerThreewayCornerBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.StrippingLootPillarBlock]: Internal.BlockItem, [key: Internal.GenericMachineBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.LodestarBlock]: Internal.TieredBlockItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.AmethystClusterBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FlowerBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.CeilingHangingSignBlockBOP]: Internal.HangingSignItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.RoutingTrackBlock]: Internal.BlockItem, [key: Internal.ColoredPressurePlateBlock]: Internal.BlockItem, [key: Internal.CraftingMonitorBlock]: Internal.CraftingBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MiningWellBlock]: Internal.MiningWellItem, [key: Internal.VibrationChamberBlock]: Internal.AEBaseBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.PyriteRipperBlock]: Internal.BlockItem, [key: Internal.QuarryBlock]: Internal.QuarryItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BlockStorage]: Internal.BlockItem, [key: Internal.HugeMushroomBlock]: Internal.BlockItem, [key: Internal.BlockModMobCage]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.GlowBlock]: Internal.BlockItem, [key: Internal.StandingSignBlockBOP]: Internal.SignItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FramedDoubleCornerSlopePanelBlock]: Internal.VerticalAndWallBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.CertusQuartzClusterBlock]: Internal.AEBaseBlockItem, [key: Internal.IronTankWallBlock]: Internal.BlockItem, [key: Internal.BlockArcanaPortal]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.AnvilBlock]: Internal.BlockItem, [key: any]: Internal.PresentItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.TieredBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ColoredStrippedLogBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StandingSignBlock]: Internal.SignItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaSignItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.LeavesBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockModWallTorch]: Internal.StandingAndWallBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockModDirt]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.GemstoneChimeBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ColoredFenceGateBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.TilledShaleClayBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ElementalSentryBlock]: Internal.TieredBlockItem, [key: Internal.ColoredPressurePlateBlock]: Internal.BlockItem, [key: Internal.BlockModLamp]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FurnaceBlock]: Internal.BlockItem, [key: Internal.ColoredSporeBlossomBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockSolarPanel]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SteelTankGaugeBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.StainedGlassPaneBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.BlockModUnbreakable]: Internal.BlockItem, [key: Internal.FramedDividedSlabBlock]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SpectrumBuddingBlock]: Internal.BlockItem, [key: Internal.MapleLeavesBlock]: Internal.BlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.StairBlock]: Internal.TieredBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.CraftingUnitBlock]: Internal.AEBaseBlockItem, [key: any]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.NetherWartBlock]: Internal.ItemNameBlockItem, [key: Internal.CrystalBlock]: Internal.CrystalItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ColoredSlabBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ChorusPlantBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockModMobCage]: Internal.BlockItem, [key: Internal.GemstonePlayerOnlyGlassBlock]: Internal.BlockItem, [key: Internal.BannerBlock]: Internal.BannerItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.TieredBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockTwilightGrass]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ColoredLeavesBlock]: Internal.BlockItem, [key: Internal.FlowerBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SteelTankValveBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SnifferEggBlock]: Internal.BlockItem, [key: Internal.WallHangingSignBlockBOP]: Internal.HangingSignItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.BlockFrostedAllure]: Internal.BlockItem, [key: Internal.CouplerTrackBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.WallHangingSignBlockBOP]: Internal.HangingSignItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.CoralBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.TrapDoorBlock]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModSlab]: Internal.BlockItem, [key: Internal.EldrinConduitBlock]: Internal.OffsetPlacerItem, [key: Internal.ColoredStairsBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.TieredBlockItem, [key: Internal.PastelNodeBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.DekuFlowerBlock]: Internal.BlockItem, [key: Internal.ColoredFenceBlock]: Internal.BlockItem, [key: any]: Internal.PresentItem, [key: any]: Internal.BlockItem, [key: Internal.BlockSolarPanel]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CloakedOreBlock]: Internal.BlockItem, [key: Internal.StainedGlassPaneBlock]: Internal.BlockItem, [key: Internal.BlockModPressurePlate]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.FramedLatticeBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StorageUnitBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.ColoredStrippedWoodBlock]: Internal.BlockItem, [key: Internal.CrystalBlock]: Internal.CrystalItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.CroptopiaSaplingItem, [key: Internal.FirestarterIdolBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.ColoredSlabBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.ItemNameBlockItem, [key: Internal.FramedSlopeEdgeBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.TntBlockCoFH]: Internal.BlockItemCoFH, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockModLamp]: Internal.BlockItem, [key: Internal.GlowBlock]: Internal.BlockItem, [key: Internal.ExtraTickFarmlandBlock]: Internal.BlockItem, [key: Internal.WallHangingSignBlock]: Internal.HangingSignItem, [key: Internal.PigmentBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockModLeaves]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.SteelTankWallBlock]: Internal.BlockItem, [key: Internal.BlockDreamGrass]: Internal.BlockItem, [key: Internal.IronTankValveBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockWorkbench]: Internal.QPBlock$QPBlockItem, [key: Internal.TrapDoorBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.AmaranthBushelBlock]: Internal.BlockItem, [key: Internal.BlockMachineCasing]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.CrystalBlock]: Internal.CrystalItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.SaplingBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StrengthenedGlassBlock]: Internal.BlockItem, [key: Internal.EngravedWisestoneBlock]: Internal.EngravedWisestoneItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.SignItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ColoredFenceBlock]: Internal.BlockItem, [key: Internal.ArcaneLumosBlock]: Internal.ArcaneLumosItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.SeedItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockMobPumpkin]: Internal.BlockItem, [key: Internal.LowVoltageSUBlock]: Internal.BlockItem, [key: Internal.ColoredLeavesBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.GlowBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.EyebulbBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ColoredLeavesBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.StainedGlassPaneBlock]: Internal.BlockItem, [key: Internal.BlockArcaniteVinesHead]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredSaplingBlock]: Internal.BlockItem, [key: Internal.UpgradeBlock]: Internal.UpgradeBlockItem, [key: Internal.FramedAdjustableDoublePanelBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.WallBlock]: Internal.TieredBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.BlockModUnbreakable]: Internal.BlockItem, [key: any]: Internal.SignItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: Internal.DryingRackBlock]: Internal.YTechItems$9, [key: Internal.Block]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.TrapDoorBlock]: Internal.BlockItemCoFH, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModButton]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BaseCoralFanBlock]: Internal.StandingAndWallBlockItem, [key: Internal.DuctBlock]: Internal.DuctBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.EntityBlockActive4Way]: Internal.BlockItemAugmentable, [key: any]: Internal.ModItems$1, [key: Internal.TrapDoorBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.SilverfishInsertingIdolBlock]: Internal.BlockItem, [key: Internal.PlateBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.WallHangingSignBlockBOP]: Internal.HangingSignItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BufferStopTrackBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockTwilightFlower]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SaplingBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WallBannerBlock]: Internal.BannerItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.CommandBlock]: Internal.GameMasterBlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CokeOvenBricksBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.EntityBlockActive4Way]: Internal.BlockItemAugmentable, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.BlockStorage]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.GlowBlock]: Internal.BlockItem, [key: Internal.OreBlockCoFH]: Internal.BlockItemCoFH, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.BlockArcanaDoor]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.AmethystClusterBlock]: Internal.BlockItem, [key: Internal.BedBlock]: Internal.BedItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: any]: Internal.SeedItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.EntityBlockActive4Way]: Internal.BlockItemAugmentable, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ResonantLilyBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.InterfaceBlock]: Internal.AEBaseBlockItem, [key: Internal.FramedSlopePanelBlock]: Internal.BlockItem, [key: any]: Internal.SignItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BlockStorage]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.JunctionTrackBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.FlagItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.IronTankValveBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.common.block.BatteryBlock]: Internal.RendererBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.CrystalSeedBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.WeatheringStairsBlock]: Internal.BlockItem, [key: Internal.ColoredPressurePlateBlock]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: any]: Internal.HangingSignItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.GemstoneGlassBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.TinyTNTBlock]: Internal.AEBaseBlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.SoulEnchanterBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.StandingSignBlockBOP]: Internal.SignItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.JigsawBlock]: Internal.GameMasterBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: Internal.LockingTrackBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ReinforcedTrackBlock]: Internal.BlockItem, [key: Internal.ControllerBlock]: Internal.AEBaseBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FenceGateBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.FuelBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FlowerBlock]: Internal.BlockItem, [key: Internal.PoweredFramingSawBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredWoodenButtonBlock]: Internal.BlockItem, [key: Internal.PressurePlateBlock]: Internal.BlockItemCoFH, [key: Internal.CeilingHangingSignBlock]: Internal.HangingSignItem, [key: Internal.StandingSignBlock]: Internal.SignItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockEndAnchor]: Internal.EndAnchor, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.SugarStickBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.TechRebornStairsBlock]: Internal.BlockItem, [key: Internal.SaplingBlockBOP]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.TechRebornStairsBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.netherSpawn]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.PresentItem, [key: Internal.GenericMachineBlock]: Internal.BlockItem, [key: Internal.BlockRubberLog]: Internal.BlockItem, [key: Internal.BlockModMobCage]: Internal.BlockItem, [key: Internal.BlockModLamp]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ConcretePowderBlock]: Internal.BlockItem, [key: Internal.SpectrumLineFacingBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BlockPinkGlowbone]: Internal.ItemNameBlockItem, [key: any]: Internal.BlockItem, [key: Internal.CableBlock]: Internal.BlockItem, [key: Internal.GenericMachineBlock]: Internal.BlockItem, [key: Internal.BlockModSlab]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.PaintedBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.BatteryBlock]: Internal.RendererBlockItem, [key: Internal.AnvilBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockModStairs]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BlockModSlab]: Internal.BlockItem, [key: Internal.RepeaterBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.ColoredStrippedLogBlock]: Internal.BlockItem, [key: Internal.CoilBlock]: Internal.RendererBlockItem, [key: Internal.PostBlock]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.RefractionLensBlock]: Internal.OffsetPlacerItem, [key: Internal.ConstructWorkbenchBlock]: Internal.OffsetPlacerItem, [key: Internal.ColoredStrippedLogBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.CustomWallSignBlock]: Internal.SignItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BlockWithTooltip]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.CoffinBlock]: Internal.TieredBlockItem, [key: Internal.TurnoutTrackBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.GenericMachineBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.SeedItem, [key: Internal.OminousSaplingBlock]: Internal.OminousSaplingBlockItem, [key: any]: Internal.BlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.GlazedTerracottaBlock]: Internal.BlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.EntityBlockActive4Way]: Internal.BlockItemAugmentable, [key: any]: Internal.ConduitBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.ColoredSporeBlossomBlock]: Internal.BlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CeilingHangingSignBlock]: Internal.HangingSignItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.SeedItem, [key: Internal.ColoredPlankBlock]: Internal.BlockItem, [key: Internal.ActiveBlock]: Internal.RendererBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.SteelTankGaugeBlock]: Internal.BlockItem, [key: Internal.SimpleRotationalBlock]: Internal.TieredBlockItem, [key: Internal.BlockEtherium]: Internal.GenericBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.WoolCarpetBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.TntBlockCoFH]: Internal.BlockItemCoFH, [key: Internal.OreBlockCoFH]: Internal.BlockItemCoFH, [key: Internal.FenceBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FramedFancyDetectorRailBlock]: Internal.BlockItem, [key: Internal.SculkBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SmallDragonjagBlock]: Internal.BlockItem, [key: any]: Internal.SignItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: Internal.TntBlockCoFH]: Internal.BlockItemCoFH, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.AzaleaBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.AmethystClusterBlock]: Internal.BlockItem, [key: Internal.TrapDoorBlock]: Internal.BlockItem, [key: Internal.spaceSpawn]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ColoredLightBlock]: Internal.BlockItem, [key: Internal.SmallDripleafBlock]: Internal.DoubleHighBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.StandingAndWallBlockItem, [key: Internal.FramedPoweredRailSlopeBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SlabBlock]: Internal.BlockItemCoFH, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SpectrumBlocks$3]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.DualBlockSignalBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.AlchemyFurnaceBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.DoublePlantBlock]: Internal.DoubleHighBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.BlockModWall]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.EnchantedAshBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.PostBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.SmallDragonjagBlock]: Internal.BlockItem, [key: Internal.HoveringTomeStandBlock]: Internal.BlockItem, [key: Internal.TallFlowerBlock]: Internal.DoubleHighBlockItem, [key: Internal.DryingRackBlock]: Internal.YTechItems$9, [key: Internal.BlockModLamp]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CeilingHangingSignBlock]: Internal.HangingSignItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.ThesisDeskBlock]: Internal.TieredBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.ArcaneLumosBlock]: Internal.ArcaneLumosItem, [key: Internal.PastelNodeBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FirePitBlock]: Internal.YTechItems$7, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ScrollshelfBlock]: Internal.OffsetPlacerItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModPressurePlate]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.FramedItemFrameBlock]: Internal.BlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockModUnbreakable]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ArcaneWorkbenchBlock]: Internal.BlockItem, [key: Internal.CustomStandingSignBlock]: Internal.SignItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.DoorBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.RendererGlassBlock]: Internal.RendererBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ConcretePowderBlock]: Internal.BlockItem, [key: Internal.EntityBlock6Way]: Internal.BlockItemCoFH, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CandleBlock]: Internal.BlockItem, [key: Internal.NyliumBlock]: Internal.BlockItem, [key: any]: Internal.SignItem, [key: Internal.SteelTankValveBlock]: Internal.BlockItem, [key: Internal.BlockModLamp]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockStatue]: Internal.ItemStatueBlock, [key: Internal.sandBlock]: Internal.BlockItem, [key: Internal.BlockModTrapdoor]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.GlowLichenBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.RedStoneOreBlock]: Internal.BlockItem, [key: Internal.ColoredSlabBlock]: Internal.BlockItem, [key: Internal.CeilingHangingSignBlockBOP]: Internal.HangingSignItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.DisenchanterBlock]: Internal.TieredBlockItem, [key: Internal.BlockMachineCasing]: Internal.BlockItem, [key: Internal.FramedFlatElevatedDoubleSlopeSlabCornerBlock]: Internal.BlockItem, [key: Internal.ColoredLogBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.EngravedWisestoneBlock]: Internal.EngravedWisestoneItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.PaintedSlabBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.EmptyBatteryBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.EntityBlockActive4Way]: Internal.BlockItemAugmentable, [key: Internal.BlockTwilightFlower]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ActivatorTrackBlock]: Internal.BlockItem, [key: Internal.ColoredStairsBlock]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ColorPickerBlock]: Internal.BlockItem, [key: Internal.DoorBlock]: Internal.BlockItem, [key: Internal.TanningRackBlock]: Internal.BlockItem, [key: Internal.ArcaneLumosBlock]: Internal.ArcaneLumosItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.PostBlock]: Internal.BlockItem, [key: Internal.ColoredFenceGateBlock]: Internal.BlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.CableBlock]: Internal.BlockItem, [key: Internal.CampfireBlock]: Internal.BlockItem, [key: Internal.SpectrumFacingBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MatrixFrameBlock]: Internal.AEBaseBlockItem, [key: Internal.BlockModFence]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockSolarPanel]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RedstoneTorchBlock]: Internal.StandingAndWallBlockItem, [key: Internal.FenceGateBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.BedBlock]: Internal.BedItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.AmethystClusterBlock]: Internal.BlockItem, [key: Internal.BlockModDoor]: Internal.BlockItem, [key: Internal.BannerBlock]: Internal.BannerItem, [key: Internal.SpectrumGemstoneBlock]: Internal.BlockItem, [key: Internal.SpectrumGemstoneBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.ActiveBlock]: Internal.RendererBlockItem, [key: Internal.StrippableLogBlock]: Internal.BlockItem, [key: Internal.CeilingBannerBlock]: Internal.BannerItem, [key: Internal.NoteBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ReplacerDummyBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModUnbreakable]: Internal.BlockItem, [key: Internal.BedBlock]: Internal.BedItem, [key: Internal.SpectrumBuddingBlock]: Internal.BlockItem, [key: any]: Internal.PresentItem, [key: Internal.Block]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.WissenCasingBlock]: Internal.BlockItem, [key: elucent.eidolon.common.block.CandleBlock]: Internal.BlockItem, [key: Internal.ColoredWoodBlock]: Internal.BlockItem, [key: any]: Internal.SignItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.HeartFlowerBlock]: Internal.BlockItem, [key: Internal.FramedVerticalSlicedStairsBlock]: Internal.BlockItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.UpgradeBlock]: Internal.UpgradeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.AqueductBlock]: Internal.YTechItems$3, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.SwitchTrackMotorBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.BlockModUnbreakable]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BannerBlock]: Internal.BannerItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: Internal.StandingSignBlock]: Internal.SignItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.SteelTankGaugeBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SaltCampfireBlock]: Internal.SaltCampfireItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockModLeaves]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.DuctPipeBlock]: Internal.DuctPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StrippableLogBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.JadeiteFlowerBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockModUnbreakable]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.StatusEffectIdolBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.TieredBlockItem, [key: Internal.SmallDragonjagBlock]: Internal.BlockItem, [key: Internal.BlockStatue]: Internal.ItemStatueBlock, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BrushableBlock]: Internal.BlockItem, [key: any]: Internal.CapacitorBankItem, [key: Internal.MudBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.HugeMushroomBlock]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.BlockArcanaDoor]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.DoorBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.StainedGlassBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockModButton]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.LoomBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FramedDoublePrismBlock]: Internal.BlockItem, [key: Internal.TrapDoorBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.WallSkullBlock]: Internal.StandingAndWallBlockItem, [key: Internal.SaplingBlock]: Internal.BlockItem, [key: Internal.BlockModInfiniFurnace]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ArcaneLumosBlock]: Internal.ArcaneLumosItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.GlowBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockModPressurePlate]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MangrovePropaguleBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.EtherealGlassBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FenceGateBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockModLamp]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredWoodenButtonBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FenceGateBlock]: Internal.BlockItemCoFH, [key: any]: Internal.ZetaBlockItem, [key: Internal.CrystalBlock]: Internal.CrystalItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.FramedSlicedStairsBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockModGrass]: Internal.BlockItem, [key: Internal.FoliageBlockBOP]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BrimstoneBudBlock]: Internal.BlockItem, [key: Internal.BlockKarosDispenser]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.TanningRackBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.StainedGlassPaneBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ColoredFenceBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: any]: Internal.FuelBlockItem, [key: Internal.BlockModSlab]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.ArcanumOreBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.WallBannerBlock]: Internal.BannerItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FenceGateBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockLightCrystal]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CableBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.BatteryBlock]: Internal.RendererBlockItem, [key: any]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.GravelBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FungusBlock]: Internal.BlockItem, [key: Internal.FlowerBlockBOP]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.WallBannerBlock]: Internal.BannerItem, [key: Internal.BonemealingIdolBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.FuelBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SporeBlossomBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ManaweavingAltarBlock]: Internal.TieredBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.HighGrassBlock]: Internal.BlockItem, [key: Internal.FenceBlock]: Internal.BlockItem, [key: Internal.MagmaBlock]: Internal.BlockItem, [key: Internal.CoralFanBlock]: Internal.StandingAndWallBlockItem, [key: Internal.BlockLightCrystal]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: Internal.BlockMVTransformer]: Internal.BlockItem, [key: Internal.ColoredSlabBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockModStairs]: Internal.BlockItem, [key: Internal.FramedButtonBlock]: Internal.BlockItem, [key: Internal.FoliageBlockBOP]: Internal.BlockItem, [key: Internal.WisdomFlameBlock]: Internal.BlockItem, [key: Internal.CoilBlock]: Internal.RendererBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaDoubleHighBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.HangingSignItem, [key: Internal.FlowerPotBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.PostBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: mod.maxbogomol.wizards_reborn.common.block.FrameBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.ArcaneLumosBlock]: Internal.ArcaneLumosItem, [key: Internal.IronTankWallBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.ArcaneLumosBlock]: Internal.ArcaneLumosItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.PumpkinBlock]: Internal.BlockItem, [key: Internal.CrystalBlock]: Internal.CrystalItem, [key: Internal.BlockModStairs]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.EndRodBlock]: Internal.BlockItem, [key: Internal.WardingCandleBlock]: Internal.TieredBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.DynamoBlock]: Internal.BlockItemAugmentable, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.IronTankValveBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaSignItem, [key: Internal.TankUnitBlock]: Internal.BlockItem, [key: Internal.WyeTrackBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.TinyPotatoBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.WaterloggableLeverBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BlockModLeaves]: Internal.BlockItem, [key: any]: Internal.SignItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.PusBubbleBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModDoor]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WallHangingSignBlock]: Internal.HangingSignItem, [key: Internal.AmethystClusterBlock]: Internal.BlockItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.CroptopiaSaplingItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.HangingSignItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SpectrumBlocks$4]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ChimeriteCrystalBlock]: Internal.TieredBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.ChargerBlock]: Internal.AEBaseBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FenceGateBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BlockTomatoPlant]: Internal.ItemNameBlockItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: any]: Internal.SeedItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.SignItem, [key: Internal.SpellSpecializationBlock]: Internal.TieredBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StandingSignBlockBOP]: Internal.SignItem, [key: Internal.TrapDoorBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockModGlass]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.ShootingStarBlock]: Internal.ShootingStarItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.ArcaneHopperBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModPressurePlate]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.AEDecorativeBlock]: Internal.AEBaseBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.WallSignBlock]: Internal.SignItem, [key: Internal.ConcretePowderBlock]: Internal.BlockItem, [key: Internal.LeavesBlock]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockModDoor]: Internal.BlockItem, [key: Internal.FramedFenceGateBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItemCoFH, [key: any]: Internal.BlockItem, [key: Internal.DriveBlock]: Internal.AEBaseBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FenceGateBlock]: Internal.BlockItem, [key: Internal.BlockModLamp]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.BlockPurpleGlowbone]: Internal.ItemNameBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.CreativeFluidStorageBlock]: Internal.BlockItem, [key: Internal.TorchflowerCropBlock]: Internal.ItemNameBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaDoubleHighBlockItem, [key: Internal.ColoredWoodBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.SnowyDirtBlock]: Internal.BlockItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.BlockSpike]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.DoorBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.IronBarsBlock]: Internal.BlockItem, [key: Internal.BlockMobPumpkin]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WeatheringCopperFullBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.GlowBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.GloomBlock]: Internal.BlockItem, [key: Internal.TechRebornStairsBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SaplingBlock]: Internal.BlockItem, [key: Internal.TechRebornStairsBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.AmethystClusterBlock]: Internal.BlockItem, [key: Internal.ColoredStairsBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.DrumMachineItem, [key: Internal.OneWayTrackBlock]: Internal.BlockItem, [key: Internal.WallSignBlockBOP]: Internal.SignItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.StainedGlassBlock]: Internal.BlockItem, [key: Internal.TurnoutTrackBlock]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.BlockModDirt]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.CoilBlock]: Internal.RendererBlockItem, [key: Internal.FramedSlopedPrismBlock]: Internal.BlockItem, [key: Internal.WhistleTrackBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.ColoredPressurePlateBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.TechRebornStairsBlock]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.LeavesBlock]: Internal.BlockItem, [key: any]: Internal.SeedItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.FramedStandingSignBlock]: Internal.FramedSignItem, [key: Internal.FramedExtendedCornerSlopePanelWallBlock]: Internal.VerticalAndWallBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BoosterTrackBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WeatheringCopperFullBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SteelTankValveBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.DragonboneBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CandleBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModLeaves]: Internal.BlockItem, [key: Internal.BlockModFence]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.SeerStoneBlock]: Internal.TieredBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModUnbreakable]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FallingBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.BlockModFence]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.SignItem, [key: Internal.PedestalBlock]: Internal.PedestalBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.LootCrateOpenerBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.LocomotiveTrackBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.ColoredStrippedLogBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.SpectrumBlocks$2]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.CeilingHangingSignBlockBOP]: Internal.HangingSignItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.PresentItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MediumVoltageSUBlock]: Internal.BlockItem, [key: Internal.CarpetBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockWaterloggedMarker]: Internal.QPBlock$QPBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.Block]: Internal.TieredBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockModStairs]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.EmbarkingTrackBlock]: Internal.BlockItem, [key: Internal.LeavesBlock]: Internal.BlockItemCoFH, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.FramedSlicedStairsBlock]: Internal.BlockItem, [key: Internal.HighSpeedTrackBlock]: Internal.BlockItem, [key: Internal.ColoredLeavesBlock]: Internal.BlockItem, [key: Internal.ColoredStairsBlock]: Internal.BlockItem, [key: Internal.FlowerPotBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: Internal.AmethystClusterBlock]: Internal.BlockItem, [key: Internal.BlockCandyCane]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.WallSignBlock]: Internal.SignItem, [key: Internal.SteamCasingBlock]: Internal.BlockItem, [key: Internal.FlowerBlockBOP]: Internal.BlockItem, [key: Internal.TechRebornStairsBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.PrimoHeartFlowerBlock]: Internal.BlockItem, [key: Internal.LocomotiveTrackBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.ColoredSporeBlossomBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.WallSignBlock]: Internal.SignItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.IronTankWallBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.FlagItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WallHangingSignBlock]: Internal.HangingSignItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SteamTurbineBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.GatedTrackBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockModLamp]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockModButton]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FramedLargeButtonBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.RootedDirtBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.CustomWallHangingSignBlock]: Internal.HangingSignItem, [key: Internal.BlockModButton]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.CouplerTrackBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WebBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModWall]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.PresentItem, [key: any]: Internal.PresentItem, [key: Internal.GlazedTerracottaBlock]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.TieredBlockItem, [key: any]: Internal.BlockItem, [key: Internal.BannerBlock]: Internal.BannerItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WallHangingSignBlock]: Internal.HangingSignItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.BlockModSlab]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.FenceBlock]: Internal.BlockItem, [key: Internal.BlockStatue]: Internal.ItemStatueBlock, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StainedGlassPaneBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.SeedItem, [key: any]: Internal.HangingSignItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.FlagItem, [key: any]: Internal.HangingSignItem, [key: Internal.ShulkerBoxBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.EngravedWisestoneBlock]: Internal.EngravedWisestoneItem, [key: any]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.WisdomFlameBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SaplingBlockBOP]: Internal.BlockItem, [key: any]: Internal.PaintedBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ColoredWoodBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FramedStackedCornerSlopePanelBlock]: Internal.VerticalAndWallBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: Internal.BlockBuddingOlivine]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.FlagItem, [key: Internal.BlockModLeaves]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SignalBlockRelayBoxBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.RubberDoorBlock]: Internal.BlockItem, [key: Internal.TotemPoleBlock]: Internal.TotemPoleItem, [key: Internal.StainedGlassPaneBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockModInfiniFurnace]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockStatue]: Internal.ItemStatueBlock, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OneWayTrackBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FlowerPotBlock]: Internal.BlockItem, [key: Internal.BedBlock]: Internal.BedItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.TrapDoorBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: appeng.block.storage.ChestBlock]: Internal.AEBaseBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.IronTankGaugeBlock]: Internal.BlockItem, [key: Internal.WeatheringStairsBlock]: Internal.BlockItem, [key: Internal.TankUnitBlock]: Internal.BlockItem, [key: Internal.SandBlockBOP]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.EldrinConduitBlock]: Internal.OffsetPlacerItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockArcanaPortalFrame]: Internal.BlockItem, [key: Internal.BlockModSoulTrap]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModPressurePlate]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: any]: Internal.PresentItem, [key: Internal.LeavesBlock]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.LeverBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.PresentItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.TrapDoorBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.PetalsOfInnocenceBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.FenceBlock]: Internal.BlockItem, [key: Internal.RedStoneOreBlock]: Internal.BlockItem, [key: Internal.BlockModPressurePlate]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.GlowBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.BaseCoralFanBlock]: Internal.StandingAndWallBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MASandFlowerBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.PigmentBlock]: Internal.BlockItem, [key: Internal.CeilingBannerBlock]: Internal.BannerItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.FramedStackedSlopeEdgeBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.AoEStatusEffectIdolBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.JadeVinePetalBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.CloakedOreBlock]: Internal.BlockItem, [key: Internal.WoolCarpetBlock]: Internal.BlockItem, [key: Internal.GTWallHangingSignBlock]: Internal.HangingSignItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.BlockModGlass]: Internal.BlockItem, [key: Internal.StemBlock]: Internal.ItemNameBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BannerBlock]: Internal.BannerItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.EnderiumBlock]: Internal.BlockItemCoFH, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.WoodBasedBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.ShootingStarBlock]: Internal.ShootingStarItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.RopeBlock$1, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockSpike]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredStrippedWoodBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: any]: Internal.ZetaDoubleHighBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.GlowBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.StandingSignBlock]: Internal.SignItemCoFH, [key: Internal.Block]: Internal.TieredBlockItem, [key: any]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockModLamp]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.WoolCarpetBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.CroptopiaSaplingItem, [key: Internal.StatusEffectIdolBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockDreamGrass]: Internal.BlockItem, [key: Internal.SpongeBlock]: Internal.BlockItem, [key: Internal.ColoredFenceGateBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.GTCeilingHangingSignBlock]: Internal.HangingSignItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.PotionWorkshopBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.FenceGateBlock]: Internal.BlockItem, [key: Internal.TankDetectorBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FramedLargeInnerCornerSlopePanelBlock]: Internal.VerticalAndWallBlockItem, [key: Internal.BlockModUnbreakable]: Internal.BlockItem, [key: Internal.DumpingTrackBlock]: Internal.BlockItem, [key: Internal.BlockModWall]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockModDoor]: Internal.BlockItem, [key: Internal.ShimmerstoneLightBlock]: Internal.BlockItem, [key: Internal.BlockModPressurePlate]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ColoredFenceBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.UpgradeBlock]: Internal.UpgradeBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlockCoFH]: Internal.BlockItemCoFH, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SandBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BookItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.HugeMushroomBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.SandBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.GenericMachineBlock]: Internal.BlockItem, [key: Internal.FeedStationBlock]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredLogBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockModLamp]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.DrumMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.WoolCarpetBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: Internal.CoralFanBlock]: Internal.StandingAndWallBlockItem, [key: Internal.WitherWallSkullBlock]: Internal.StandingAndWallBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockModWall]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.FramedPyramidBlock]: Internal.BlockItem, [key: Internal.ArcaneLumosBlock]: Internal.ArcaneLumosItem, [key: any]: Internal.SeedItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockModGrass]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SteelTankWallBlock]: Internal.BlockItem, [key: Internal.CoilBlock]: Internal.RendererBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ThrottleTrackBlock]: Internal.BlockItem, [key: Internal.PlayerDetectorBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.ManaCrystalBlock]: Internal.TieredBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FramedCornerStripBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FenceGateBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.SeedItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SteamThermalStorageBlock]: Internal.SteamStorageBaseItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.CryingObsidianBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.CroptopiaSaplingItem, [key: Internal.BaseCoralWallFanBlock]: Internal.StandingAndWallBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockModSlab]: Internal.BlockItem, [key: Internal.AnvilBlock]: Internal.BlockItem, [key: Internal.CrystalBlock]: Internal.CrystalItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.TranscriptionTableBlock]: Internal.TieredBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.DecoStoneBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.GlowBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockModPlanks]: Internal.BlockItem, [key: Internal.FramedPyramidBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.DoorBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.TntBlockCoFH]: Internal.BlockItemCoFH, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockStorage]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.EmptyBatteryBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.BlockModLamp]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.ElementalSentryBlock]: Internal.TieredBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.GlowingMossBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.CoilBlock]: Internal.RendererBlockItem, [key: Internal.BuddingCertusQuartzBlock]: Internal.AEBaseBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.CrankBlock]: Internal.AEBaseBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.GenericMachineBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockModTrapdoor]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.TieredBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.ArcaneCenserBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.ThrottleTrackBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.ShulkerBoxBlock]: Internal.BlockItem, [key: Internal.LocomotiveTrackBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SeaPickleBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.GatedTrackBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredPressurePlateBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ColoredPlankBlock]: Internal.BlockItem, [key: Internal.FramedCornerSlopeBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SteelTankValveBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.DikeGateBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.FluidTankItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.PresentItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.LeavesBlock]: Internal.BlockItem, [key: Internal.ColoredPressurePlateBlock]: Internal.BlockItem, [key: Internal.FusionCasingBlock]: Internal.RendererBlockItem, [key: Internal.ShulkerBoxBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.SteelTankValveBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.DetectorTrackBlock]: Internal.BlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.TotemOfExperienceAbsorptionBlock]: Internal.BlockItem, [key: Internal.BlockModPortal]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.SignItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.RunicPedestalBlock]: Internal.BlockItem, [key: Internal.CraftingUnitBlock]: Internal.CraftingBlockItem, [key: Internal.DoorBlock]: Internal.DoubleHighBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.BlockModGlass]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.SmithingTableBlock]: Internal.BlockItem, [key: Internal.DoorBlock]: Internal.DoubleHighBlockItem, [key: any]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.SignalumGlassBlock]: Internal.BlockItemCoFH, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.sandSpawn]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ArcaneLumosBlock]: Internal.ArcaneLumosItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.TableBlockBase]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.FluidCasingBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredStairsBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MyceliumBlock]: Internal.BlockItem, [key: Internal.BlockMachineFrame]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.CoralBlock]: Internal.BlockItem, [key: Internal.DoorBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.BlockModGlass]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.StandingSignBlock]: Internal.SignItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredLogBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.HugeMushroomBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.EldrinConduitBlock]: Internal.OffsetPlacerItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.SeedItem, [key: Internal.FlowerPotBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.TieredBlockItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: Internal.EntityBlockActive]: Internal.BlockItemAugmentable, [key: Internal.DoublePlantBlock]: Internal.DoubleHighBlockItem, [key: any]: Internal.PresentItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BlockModLeaves]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.EmbarkingTrackBlock]: Internal.BlockItem, [key: Internal.DrumBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.InnocentWoodLeavesBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FenceGateBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ColoredFenceBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.DoorBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockModGate]: Internal.BlockItem, [key: Internal.FramedCornerSlopePanelBlock]: Internal.VerticalAndWallBlockItem, [key: Internal.BlockStorage]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.SeedItem, [key: Internal.FramedOneWayWindowBlock]: Internal.BlockItem, [key: Internal.FlowerBlockBOP]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SimpleRotationalBlock]: Internal.TieredBlockItem, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.ColoredSaplingBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.ModStairBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: Internal.ColoredWoodenButtonBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: Internal.AzaleaBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.RedstoneLampBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.EldrinConduitBlock]: Internal.OffsetPlacerItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MossBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FramedHalfStairsBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.TurnoutTrackBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockModLeaves]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.CageItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ItemBowlBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.ChimeriteCrystalBlock]: Internal.TieredBlockItem, [key: Internal.FungusBlock]: Internal.BlockItem, [key: Internal.ShinglesBlock]: Internal.BlockItem, [key: Internal.ThreatConfluxBlock]: Internal.ThreatConfluxItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.InfestedBlock]: Internal.BlockItem, [key: Internal.FramedBouncyCubeBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.StrengthenedGlassBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FramedFlatElevatedDoubleSlopeSlabCornerBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.GenericGeneratorBlock]: Internal.BlockItem, [key: Internal.BlockFrostedChest]: Internal.ItemFrostedChest, [key: Internal.StrippingLootPillarBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.TCoreBlocks$2]: Internal.BlockItemCoFH, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.TankUnitBlock]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.WorktableBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.ArcanePedestalBlock]: Internal.BlockItem, [key: Internal.AmethystClusterBlock]: Internal.BlockItem, [key: Internal.BlockNuke]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SweetBerryBushBlock]: Internal.ItemNameBlockItem, [key: any]: Internal.BlockItem, [key: Internal.WeatheringStairsBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.LavaCauldronBlock]: Internal.Items$1, [key: Internal.AmethystClusterBlock]: Internal.BlockItem, [key: Internal.TallFlowerBlockBOP]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SaltLanternBlock]: Internal.SaltLanternItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.EndPortalFrameBlock]: Internal.BlockItem, [key: Internal.CeilingHangingSignBlock]: Internal.HangingSignItem, [key: Internal.SaltLanternBlock]: Internal.SaltLanternItem, [key: Internal.FramedCenteredSlabBlock]: Internal.BlockItem, [key: Internal.CrushedObsidian]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockModStairs]: Internal.BlockItem, [key: Internal.LauncherTrackBlock]: Internal.BlockItem, [key: Internal.CeilingBannerBlock]: Internal.BannerItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.EntityBlockActive4Way]: Internal.BlockItemAugmentable, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.DoorBlock]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BlockModGrass]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredStrippedWoodBlock]: Internal.BlockItem, [key: Internal.LocomotiveTrackBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockPinfly]: Internal.ItemNameBlockItem, [key: Internal.FlowerBlockBOP]: Internal.BlockItem, [key: any]: Internal.CroptopiaSaplingItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.AqueductValveBlock]: Internal.YTechItems$6, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: Internal.MAFlowerBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.PigmentBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.GlazedTerracottaBlock]: Internal.BlockItem, [key: Internal.FenceBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MermaidsBrushBlock]: Internal.MermaidsGemItem, [key: Internal.BookMoverBlock]: Internal.QPBlock$QPBlockItem, [key: Internal.InvisibleWallBlock]: Internal.BlockItem, [key: Internal.ShimmerstoneLightBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.WeatheringCopperStairBlock]: Internal.BlockItem, [key: Internal.AnimalDetectorBlock]: Internal.BlockItem, [key: Internal.BlockModLamp]: Internal.BlockItem, [key: Internal.MasterSwordPedestalBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.LockingTrackBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.DetectorTrackBlock]: Internal.BlockItem, [key: Internal.MushroomBlockBOP]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: Internal.LightCasingBlock]: Internal.BlockItem, [key: Internal.SteelTankValveBlock]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.StandingAndWallBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.EmbarkingTrackBlock]: Internal.BlockItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.GenericGeneratorBlock]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.CeilingHangingSignBlockBOP]: Internal.HangingSignItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModButton]: Internal.BlockItem, [key: Internal.BlockKarosHeatTile]: Internal.BlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.StainedGlassBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.AlternatePlayerOnlyGlassBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.ColoredStrippedLogBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.InterdimensionalSUBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ShulkerBoxBlock]: Internal.BlockItem, [key: Internal.OneWayTrackBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.Block]: Internal.TieredBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.DoorBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FramedFancyPoweredRailSlopeBlock]: Internal.BlockItem, [key: Internal.GenericMachineBlock]: Internal.BlockItem, [key: Internal.BlockModLamp]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BlockModGate]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SteelTankGaugeBlock]: Internal.BlockItem, [key: Internal.BlockStorage]: Internal.BlockItem, [key: Internal.SaplingBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.StandingSignBlockBOP]: Internal.SignItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredPlankBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlackMateriaBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.WhistleTrackBlock]: Internal.BlockItem, [key: Internal.FramedDividedStairsBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.BedrockAnvilBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockModVine]: Internal.BlockItem, [key: Internal.DynamoBlock]: Internal.BlockItemAugmentable, [key: any]: Internal.SignItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.DoorBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MushroomBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.DekuFlowerBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.CoralWallFanBlock]: Internal.StandingAndWallBlockItem, [key: Internal.BedBlock]: Internal.BedItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.LeavesBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.SeedItem, [key: Internal.StatusEffectIdolBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SimpleRotationalBlock]: Internal.TieredBlockItem, [key: Internal.TrapDoorBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SteelTankWallBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.IllusionBlock]: Internal.TieredBlockItem, [key: Internal.BlockModTrapdoor]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.ColoredSlabBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModPlanks]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SpectrumFacingBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockTwilightFlower]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.TechRebornStairsBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BannerBlock]: Internal.BannerItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.EnchanterBlock]: Internal.BlockItem, [key: Internal.FramedExtendedDoubleCornerSlopePanelWallBlock]: Internal.VerticalAndWallBlockItem, [key: Internal.FramedFlatSlopePanelCornerBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.DynamoBlock]: Internal.BlockItemAugmentable, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CrystalSeedBlock]: Internal.BlockItem, [key: Internal.ColoredSlabBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockMobPumpkin]: Internal.BlockItem, [key: Internal.FailingBlock]: Internal.DecayPlacerItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.HerbBlockBase]: Internal.BlockItem, [key: Internal.StainedGlassPaneBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.TieredBlockItem, [key: Internal.JacarandaLeavesBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ColoredFenceGateBlock]: Internal.BlockItem, [key: Internal.ColoredFenceBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.GlazedTerracottaBlock]: Internal.BlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredFenceBlock]: Internal.BlockItem, [key: Internal.StorageUnitBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.SaltWallTorchBlock]: Internal.SaltTorchItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ExplosionIdolBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredLightBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.AmethystBlock]: Internal.BlockItem, [key: Internal.FramedDoubleHalfSlopeBlock]: Internal.VerticalAndWallBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.AgeDetectorBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockModLog]: Internal.BlockItem, [key: Internal.BlockModCrop]: Internal.ItemNameBlockItem, [key: Internal.WeatheringCopperFullBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BedBlock]: Internal.BedItem, [key: Internal.BannerBlock]: Internal.BannerItem, [key: Internal.SandBlock]: Internal.BlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.SeedItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.CrystalBlock]: Internal.CrystalItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: any]: Internal.CroptopiaSaplingItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.FramedCornerSlopePanelBlock]: Internal.VerticalAndWallBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BoosterTrackBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.WallHangingSignBlock]: Internal.HangingSignItemCoFH, [key: Internal.FlowerPotBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.GemstoneOreBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FenceGateBlock]: Internal.BlockItem, [key: Internal.StatusEffectIdolBlock]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: any]: Internal.WoodBasedBlockItem, [key: Internal.CustomStandingSignBlock]: Internal.SignItem, [key: Internal.BlockModVine]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.RadiantGlassBlock]: Internal.BlockItem, [key: Internal.BlockMassiveLamp]: Internal.GenericBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.TokenSignalBoxBlock]: Internal.BlockItem, [key: Internal.SaplingBlockBOP]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SignalCapacitorBoxBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.HalfTransparentBlock]: Internal.BlockItem, [key: Internal.ControlTrackBlock]: Internal.BlockItem, [key: Internal.BlockModMobCage]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.GenericGeneratorBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FenceGateBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.SaplingBlockBOP]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockModMoss]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.EngravedWisestoneBlock]: Internal.EngravedWisestoneItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.StrippingLootPillarBlock]: Internal.BlockItem, [key: Internal.FlowerBlock]: Internal.BlockItem, [key: Internal.AmethystClusterBlock]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.DynamoBlock]: Internal.BlockItemAugmentable, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BlockModPressurePlate]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.AmethystClusterBlock]: Internal.BlockItem, [key: Internal.LineTeleportingIdolBlock]: Internal.BlockItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FramedVerticalDoubleStairsBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockModBridge]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.SeedItem, [key: Internal.FenceGateBlock]: Internal.BlockItem, [key: Internal.AnvilBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SimpleRotationalBlock]: Internal.TieredBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusionCasingBlock]: Internal.RendererBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.PaintSplotchesBlock]: Internal.AEBaseBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.FuelBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.BoundSoulBlockItem, [key: Internal.TechRebornStairsBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.PigmentBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.WeatheringStairsBlock]: Internal.BlockItem, [key: Internal.FramedFlatInverseDoubleSlopeSlabCornerBlock]: Internal.BlockItem, [key: Internal.ColoredWoodBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.PowderSnowCauldronBlock]: Internal.Items$1, [key: any]: Internal.BlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ChimeriteCrystalBlock]: Internal.TieredBlockItem, [key: Internal.VillagerConvertingIdolBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.FrogspawnBlock]: Internal.PlaceOnWaterBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.WallBannerBlock]: Internal.BannerItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.EldrinFumeBlock]: Internal.TieredBlockItem, [key: Internal.ColoredFenceBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.FlowerPotBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.IronTankWallBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.CrystallarieumGrowableBlock]: Internal.BlockItem, [key: Internal.AlchemyMachineBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.RedstoneCalculatorBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.ColoredWoodenButtonBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FluidPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.WallBlock]: Internal.TieredBlockItem, [key: Internal.BlockModMobCage]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.CandlestickBlock]: Internal.BlockItem, [key: Internal.AqueductFertilizerBlock]: Internal.YTechItems$4, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.BlockStatue]: Internal.ItemStatueBlock, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.FenceGateBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StainedGlassPaneBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ColoredWoodBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusionCasingBlock]: Internal.RendererBlockItem, [key: Internal.EntityBlockActive4Way]: Internal.BlockItemAugmentable, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StairBlock]: Internal.TieredBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockModStairs]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.CoilBlock]: Internal.RendererBlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.EngravedWisestoneBlock]: Internal.EngravedWisestoneItem, [key: Internal.CrystalBlock]: Internal.CrystalItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.api.block.RendererBlock]: Internal.RendererBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.Block]: Internal.TieredBlockItem, [key: Internal.OneWayTrackBlock]: Internal.BlockItem, [key: Internal.WallBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.DoorBlock]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.StatusEffectIdolBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.TieredBlockItem, [key: Internal.FenceBlock]: Internal.BlockItem, [key: Internal.BlockModSlab]: Internal.BlockItem, [key: Internal.BlockStorage]: Internal.BlockItem, [key: Internal.BlockModFence]: Internal.BlockItem, [key: Internal.TCoreBlocks$3]: Internal.BlockItemCoFH, [key: Internal.TransitionTrackBlock]: Internal.BlockItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.CeilingBannerBlock]: Internal.BannerItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.PaintedBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockModPortal]: Internal.BlockItem, [key: Internal.SpectrumSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.BlockRefinedIronFence]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BookStandBlock]: Internal.TieredBlockItem, [key: Internal.GatedTrackBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.SteamOvenBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.IronBarsBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.WallSignBlock]: Internal.SignItem, [key: Internal.CarpetBlock]: Internal.BlockItem, [key: any]: Internal.HangingSignItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.PottersWheelBlock]: Internal.YTechItems$2, [key: Internal.BlockStatue]: Internal.ItemStatueBlock, [key: any]: Internal.ZetaBlockItem, [key: Internal.ChestBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.DropExperienceBlock]: Internal.BlockItem, [key: Internal.BlockModUnbreakable]: Internal.BlockItem, [key: Internal.BlockStorage]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItemCoFH, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockModStairs]: Internal.BlockItem, [key: Internal.GlisteringMelonBlock]: Internal.BlockItem, [key: Internal.AnalogSignalControllerBoxBlock]: Internal.BlockItem, [key: Internal.StairBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.RoutingTrackBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.StairBlock]: Internal.TieredBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: any]: Internal.BlockItem, [key: Internal.WallBannerBlock]: Internal.BannerItem, [key: any]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.IronTankValveBlock]: Internal.BlockItem, [key: Internal.StandingSignBlockBOP]: Internal.SignItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.HairBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.BlockStorage]: Internal.BlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.ColoredLogBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.DoorBlock]: Internal.BlockItem, [key: Internal.StainedGlassPaneBlock]: Internal.BlockItem, [key: Internal.ColoredWoodenButtonBlock]: Internal.BlockItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.BlockModGate]: Internal.BlockItem, [key: Internal.CandleBlock]: Internal.BlockItem, [key: Internal.BlockDreamLamp]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.AdjustableSUBlock]: Internal.BlockItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.StrengthenedGlassBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.SpectrumWallSkullBlock]: Internal.SpectrumSkullBlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.DisembarkingTrackBlock]: Internal.BlockItem, [key: any]: Internal.FlagItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ButtonBlock]: Internal.BlockItem, [key: Internal.GlazedTerracottaBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: any]: Internal.ZetaSignItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.CreativeGeneratorBlock]: Internal.QPBlock$QPBlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.CandleBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FramedExtendedCornerSlopePanelBlock]: Internal.VerticalAndWallBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockLights]: Internal.BlockItem, [key: Internal.ItemPipeBlock]: Internal.MaterialPipeBlockItem, [key: Internal.ColoredSlabBlock]: Internal.BlockItem, [key: Internal.RotatedPillarBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.ColoredLeavesBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.LampBlock]: Internal.BlockItem, [key: Internal.CreativeLightStorageBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.BlockModPortal]: Internal.BlockItem, [key: mods.railcraft.world.level.block.detector.PlayerDetectorBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.SlabBlock]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.ColoredLightBlock]: Internal.BlockItem, [key: Internal.BlockModUnbreakable]: Internal.BlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.FenceBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.TallFlowerBlock]: Internal.DoubleHighBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BrickChimneyBlock]: Internal.YTechItems$2, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.FramedFlatDoubleSlopePanelCornerBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.IronTankGaugeBlock]: Internal.BlockItem, [key: Internal.CandleBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.PresentItem, [key: Internal.EngravedWisestoneBlock]: Internal.EngravedWisestoneItem, [key: Internal.MushroomBlock]: Internal.BlockItem, [key: Internal.Block]: Internal.BlockItem, [key: any]: Internal.BlockItem, [key: Internal.DoorBlock]: Internal.DoubleHighBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.BlockMobPumpkin]: Internal.BlockItem, [key: Internal.AmethystClusterBlock]: Internal.BlockItem, [key: Internal.GenericGeneratorBlock]: Internal.BlockItem, [key: Internal.BlockModSapling]: Internal.BlockItem, [key: Internal.CreativeParticleSpawnerBlock]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.SteelTankWallBlock]: Internal.BlockItem, [key: Internal.FusedQuartzBlock]: Internal.BlockItem, [key: Internal.FramedHalfSlopeBlock]: Internal.VerticalAndWallBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.Block]: Internal.BlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.PressurePlateBlock]: Internal.BlockItem, [key: Internal.FramedWallSignBlock]: Internal.FramedSignItem, [key: Internal.CableBlock]: Internal.BlockItem, [key: Internal.CloakedOreBlock]: Internal.BlockItem, [key: Internal.BlockMod]: Internal.BlockItem, [key: Internal.BlockLights]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MetaMachineBlock]: Internal.MetaMachineItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: Internal.OreBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: Internal.ColoredLogBlock]: Internal.BlockItem, [key: Internal.WyeTrackBlock]: Internal.BlockItem, [key: Internal.MaterialBlock]: Internal.MaterialBlockItem, [key: any]: Internal.ZetaBlockItem, [key: com.gregtechceu.gtceu.common.block.CableBlock]: Internal.MaterialPipeBlockItem}) & (Internal.Map<Internal.Block, Internal.Item>);
        static readonly EAT_DURATION: (32) & (number);
        static readonly BASE_ATTACK_DAMAGE_UUID: (Internal.UUID) & (Internal.UUID);
        static readonly MAX_STACK_SIZE: (64) & (number);
        static readonly MAX_BAR_WIDTH: (13) & (number);
        static readonly BASE_ATTACK_SPEED_UUID: (Internal.UUID) & (Internal.UUID);
        descriptionId: string;
        static readonly $assertionsDisabled: (true) & (boolean);
        readonly canRepair: boolean;
        moonlight$clientAnimationProvider: any;
        craftingRemainingItem: Internal.Item;
        owo$group: Internal.CreativeModeTab;
    }
    type Item_ = Item | Special.Item;
    class DynamicRecipeComponent extends Internal.Record {
        constructor(desc: Internal.TypeDescJS_, factory: Internal.DynamicRecipeComponent$Factory_)
        desc(): Internal.TypeDescJS;
        getClass(): typeof any;
        hashCode(): number;
        toString(): string;
        factory(): Internal.DynamicRecipeComponent$Factory;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        equals(o: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
    }
    type DynamicRecipeComponent_ = DynamicRecipeComponent;
    interface ScoreboardNameProvider {
        abstract getReferencedContextParams(): Internal.Set<Internal.LootContextParam<any>>;
        abstract getType(): Internal.LootScoreProviderType;
        abstract getScoreboardName(arg0: Internal.LootContext_): string;
        get referencedContextParams(): Internal.Set<Internal.LootContextParam<any>>
        get type(): Internal.LootScoreProviderType
    }
    type ScoreboardNameProvider_ = ScoreboardNameProvider;
    interface ItemSupplier {
        abstract getItem(): Internal.ItemStack;
        get item(): Internal.ItemStack
        (): Internal.ItemStack_;
    }
    type ItemSupplier_ = ItemSupplier | (()=> Internal.ItemStack_);
    class FramedSlicedStairsBlock extends Internal.AbstractFramedDoubleBlock {
        constructor(arg0: xfacthd.framedblocks.common.data.BlockType_)
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        getCamoOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        getCamoShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: number): number;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getSettings(): Internal.BlockBehaviour$Properties;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        /**
         * @deprecated
        */
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        getTypeData(): Internal.CompoundTag;
        setFriction(arg0: number): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getSolidityCheck(arg0: Internal.BlockState_, arg1: Internal.Direction_): Internal.SolidityCheck;
        rotate(arg0: Internal.BlockState_, arg1: Internal.BlockHitResult_, arg2: Internal.Rotation_): Internal.BlockState;
        getSpeedFactor(): number;
        getComponentBySkipPredicate(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): Internal.BlockState;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        playerDestroy(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Player_): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Internal.Player_): Internal.ItemStack;
        getClass(): typeof any;
        abstract getBlockType(): Internal.IBlockType;
        getMaxVerticalOffset(): number;
        newBlockEntity(arg0: BlockPos_, arg1: Internal.BlockState_): Internal.BlockEntity;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        getRenderPropertiesInternal(): any;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        needsDynamicNodeTypeCheck(): boolean;
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        getBlockPair(arg0: Internal.BlockState_): Internal.Tuple<Internal.BlockState, Internal.BlockState>;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        "rotate(net.minecraft.world.level.block.state.BlockState,net.minecraft.core.Direction,net.minecraft.world.level.block.Rotation)"(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        calculateTopInteractionMode(arg0: Internal.BlockState_): Internal.DoubleBlockTopInteractionMode;
        setRequiresTool(v: boolean): void;
        asBlock(): Internal.Block;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        static itemModelSourcePanel(): Internal.BlockState;
        puzzleslib$setItem(arg0: Internal.Item_): void;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        doesBlockOccludeBeaconBeam(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        useCamoOcclusionShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        /**
         * @deprecated
        */
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        lychee$isTickable(): boolean;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static testComponent(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        isSuffocating(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        getTicker<T extends Internal.BlockEntity>(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockEntityType_<T>): Internal.BlockEntityTicker<T>;
        /**
         * @deprecated
        */
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        updateShapeLockable(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Supplier_<Internal.BlockState>): Internal.BlockState;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        lockState(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Player_, arg3: Internal.ItemStack_): boolean;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        placeLiquid(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.FluidState_): boolean;
        getCamoVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        spawnDestroyParticles(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_): void;
        wait(): void;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Internal.Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(shape: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        setIsRandomlyTicking(arg0: boolean): void;
        getPickupSound(arg0: Internal.BlockState_): Internal.Optional<Internal.SoundEvent>;
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        registerDefaultState(arg0: Internal.BlockState_): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        createBlockItem(): Internal.BlockItem;
        printCamoBlock(arg0: Internal.CompoundTag_): Internal.Optional<Internal.MutableComponent>;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        needCullingUpdateAfterStateChange(arg0: Internal.LevelReader_, arg1: Internal.BlockState_, arg2: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        shouldPreventNeighborCulling(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.BlockState_): boolean;
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        getPickupSound(): Internal.Optional<Internal.SoundEvent>;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        isAir(arg0: Internal.BlockState_): boolean;
        static createProperties(arg0: Internal.IBlockType_): Internal.BlockBehaviour$Properties;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getCamoDrops(arg0: Internal.List_<Internal.ItemStack>, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        "rotate(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.phys.BlockHitResult,net.minecraft.world.level.block.Rotation)"(arg0: Internal.BlockState_, arg1: Internal.BlockHitResult_, arg2: Internal.Rotation_): Internal.BlockState;
        static getStatePair(arg0: Internal.BlockState_): Internal.Tuple<Internal.BlockState, Internal.BlockState>;
        needsDynamicBurningCheck(): boolean;
        getDescriptionId(): string;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        handler$bob000$radium$postConstruct(p_i241196_1_: Internal.BlockBehaviour$Properties_, ci: Internal.CallbackInfo_): void;
        tryDropExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: Internal.ItemStack_, arg3: Internal.IntProvider_): void;
        static itemModelSourceSlab(): Internal.BlockState;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        handler$eok000$particular$spawnParticles(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, random: Internal.RandomSource_, ci: Internal.CallbackInfo_): void;
        getJumpFactor(): number;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        setDrops(arg0: ResourceLocation_): void;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        pickupBlock(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        static playCamoBreakSound(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        getBlockProperties(): Internal.BlockBehaviour$Properties;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        runOcclusionTestAndGetLookupState(arg0: Internal.SideSkipPredicate_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockState_, arg5: Internal.Direction_): Internal.BlockState;
        notifyAll(): void;
        getShapeForEachState(arg0: Internal.Function_<Internal.BlockState, Internal.VoxelShape>): Internal.ImmutableMap<Internal.BlockState, Internal.VoxelShape>;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        getFriction(): number;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        createBlockStateDefinition(arg0: Internal.StateDefinition$Builder_<Internal.Block, Internal.BlockState>): void;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        calculateBlockPair(arg0: Internal.BlockState_): Internal.Tuple<Internal.BlockState, Internal.BlockState>;
        notify(): void;
        getTopInteractionMode(arg0: Internal.BlockState_): Internal.DoubleBlockTopInteractionMode;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        canCamoSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        handler$dji000$spectrum$afterBreak(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        static toggleYSlope(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        /**
         * @deprecated
        */
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        handleUse(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): InteractionResult;
        setDestroySpeed(v: number): void;
        tryApplyCamoImmediately(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.LivingEntity_, arg3: Internal.ItemStack_): void;
        isIntangible(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): boolean;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        handler$zbh000$additionalentityattributes$additionalEntityAttributes$saveBreakingPlayer(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        updateCulling(arg0: Internal.LevelReader_, arg1: BlockPos_): void;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getListener<T extends Internal.BlockEntity>(arg0: Internal.ServerLevel_, arg1: T): Internal.GameEventListener;
        arch$holder(): Internal.Holder<Internal.Block>;
        static generateShapes(arg0: Internal.ImmutableList_<Internal.BlockState>): Internal.ShapeProvider;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        handleBlockLeftClick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        playBreakSound(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): boolean;
        canPlaceLiquid(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Fluid_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        calculateSolidityCheck(arg0: Internal.BlockState_, arg1: Internal.Direction_): Internal.SolidityCheck;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        calculateCamoGetter(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.Direction_): Internal.CamoGetter;
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        initCache(arg0: Internal.BlockState_): Internal.StateCache;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        getCamoGetter(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.Direction_): Internal.CamoGetter;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): void;
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        lychee$setTickable(arg0: boolean): void;
        getComponentAtEdge(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Direction_, arg4: Internal.Direction_): Internal.BlockState;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        getCache(arg0: Internal.BlockState_): Internal.StateCache;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        rotate(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        unpackNestedModelData(arg0: Internal.ModelData_, arg1: Internal.BlockState_, arg2: Internal.BlockState_): Internal.ModelData;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        get settings(): Internal.BlockBehaviour$Properties
        /**
         * @deprecated
        */
        get explosionResistance(): number
        get typeData(): Internal.CompoundTag
        set friction(arg0: number)
        get speedFactor(): number
        get class(): typeof any
        get blockType(): Internal.IBlockType
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get pickupSound(): Internal.Optional<Internal.SoundEvent>
        get descriptionId(): string
        get jumpFactor(): number
        set drops(arg0: ResourceLocation_)
        set speedFactor(arg0: number)
        get blockProperties(): Internal.BlockBehaviour$Properties
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get mod(): string
        set hasCollision(arg0: boolean)
    }
    type FramedSlicedStairsBlock_ = FramedSlicedStairsBlock;
    interface ChestMenuInventoryClickEvent$Callback {
        abstract onClick(arg0: Internal.ChestMenuInventoryClickEvent_): void;
        (arg0: Internal.ChestMenuInventoryClickEvent): void;
    }
    type ChestMenuInventoryClickEvent$Callback_ = ChestMenuInventoryClickEvent$Callback | ((arg0: Internal.ChestMenuInventoryClickEvent)=> void);
    class QuarterProperty extends Internal.Enum<Internal.QuarterProperty> implements Internal.StringRepresentable {
        getClass(): typeof any;
        static fromEnumWithMapping<E extends Internal.Enum<E> & Internal.StringRepresentable>(arg0: Internal.Supplier_<E[]>, arg1: Internal.Function_<string, string>): Internal.StringRepresentable$EnumCodec<E>;
        "compareTo(biomesoplenty.common.block.state.properties.QuarterProperty)"(arg0: Internal.QuarterProperty_): number;
        getSerializedName(): string;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        compareTo(arg0: any): number;
        static fromEnum<E extends Internal.Enum<E> & Internal.StringRepresentable>(arg0: Internal.Supplier_<E[]>): Internal.StringRepresentable$EnumCodec<E>;
        getDeclaringClass(): typeof Internal.QuarterProperty;
        getName(): string;
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        toString(): string;
        compareTo(arg0: Internal.QuarterProperty_): number;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.QuarterProperty>>;
        notifyAll(): void;
        name(): string;
        static valueOf(arg0: string): Internal.QuarterProperty;
        hashCode(): number;
        static keys(arg0: Internal.StringRepresentable_[]): Internal.Keyable;
        ordinal(): number;
        wait(): void;
        wait(arg0: number): void;
        "compareTo(java.lang.Object)"(arg0: any): number;
        equals(arg0: any): boolean;
        static values(): Internal.QuarterProperty[];
        get class(): typeof any
        get serializedName(): string
        get declaringClass(): typeof Internal.QuarterProperty
        get name(): string
        static readonly SOUTH_EAST: (Internal.QuarterProperty) & (Internal.QuarterProperty);
        static readonly NORTH_EAST: (Internal.QuarterProperty) & (Internal.QuarterProperty);
        static readonly NORTH_WEST: (Internal.QuarterProperty) & (Internal.QuarterProperty);
        static readonly SOUTH_WEST: (Internal.QuarterProperty) & (Internal.QuarterProperty);
    }
    type QuarterProperty_ = "north_west" | "north_east" | "south_west" | QuarterProperty | "south_east";
    interface Boolean2ObjectFunction <V> extends it.unimi.dsi.fastutil.Function<boolean, V> {
        put(arg0: boolean, arg1: V): V;
        andThenShort(arg0: Internal.Object2ShortFunction_<V>): Internal.Boolean2ShortFunction;
        andThenObject<T>(arg0: Internal.Object2ObjectFunction_<V, T>): Internal.Boolean2ObjectFunction<T>;
        composeFloat(arg0: Internal.Float2BooleanFunction_): Internal.Float2ObjectFunction<V>;
        composeReference<T>(arg0: Internal.Reference2BooleanFunction_<T>): Internal.Reference2ObjectFunction<T, V>;
        /**
         * @deprecated
        */
        "getOrDefault(java.lang.Object,java.lang.Object)"(arg0: any, arg1: V): V;
        /**
         * @deprecated
        */
        getOrDefault(arg0: any, arg1: V): V;
        /**
         * @deprecated
        */
        "put(java.lang.Object,java.lang.Object)"(arg0: any, arg1: any): any;
        andThenDouble(arg0: Internal.Object2DoubleFunction_<V>): Internal.Boolean2DoubleFunction;
        /**
         * @deprecated
        */
        containsKey(arg0: any): boolean;
        andThenFloat(arg0: Internal.Object2FloatFunction_<V>): Internal.Boolean2FloatFunction;
        "remove(boolean)"(arg0: boolean): V;
        andThenInt(arg0: Internal.Object2IntFunction_<V>): Internal.Boolean2IntFunction;
        composeLong(arg0: Internal.Long2BooleanFunction_): Internal.Long2ObjectFunction<V>;
        /**
         * @deprecated
        */
        put(arg0: boolean, arg1: V): V;
        /**
         * @deprecated
        */
        "get(java.lang.Object)"(arg0: any): V;
        /**
         * @deprecated
        */
        get(arg0: any): V;
        /**
         * @deprecated
        */
        "put(java.lang.Boolean,java.lang.Object)"(arg0: boolean, arg1: V): V;
        /**
         * @deprecated
        */
        put(arg0: any, arg1: any): any;
        /**
         * @deprecated
        */
        remove(arg0: any): V;
        andThenLong(arg0: Internal.Object2LongFunction_<V>): Internal.Boolean2LongFunction;
        "containsKey(boolean)"(arg0: boolean): boolean;
        /**
         * @deprecated
        */
        compose<T>(arg0: Internal.Function_<T, boolean>): Internal.Function<T, V>;
        apply(arg0: boolean): V;
        "getOrDefault(boolean,java.lang.Object)"(arg0: boolean, arg1: V): V;
        abstract get(arg0: boolean): V;
        abstract "get(boolean)"(arg0: boolean): V;
        andThenByte(arg0: Internal.Object2ByteFunction_<V>): Internal.Boolean2ByteFunction;
        andThen<V>(arg0: Internal.Function_<V, V>): Internal.Function<boolean, V>;
        composeShort(arg0: Internal.Short2BooleanFunction_): Internal.Short2ObjectFunction<V>;
        composeInt(arg0: Internal.Int2BooleanFunction_): Internal.Int2ObjectFunction<V>;
        composeChar(arg0: Internal.Char2BooleanFunction_): Internal.Char2ObjectFunction<V>;
        "put(boolean,java.lang.Object)"(arg0: boolean, arg1: V): V;
        containsKey(arg0: boolean): boolean;
        composeObject<T>(arg0: Internal.Object2BooleanFunction_<T>): Internal.Object2ObjectFunction<T, V>;
        andThenReference<T>(arg0: Internal.Object2ReferenceFunction_<V, T>): Internal.Boolean2ReferenceFunction<T>;
        remove(arg0: boolean): V;
        size(): number;
        composeDouble(arg0: Internal.Double2BooleanFunction_): Internal.Double2ObjectFunction<V>;
        clear(): void;
        composeByte(arg0: Internal.Byte2BooleanFunction_): Internal.Byte2ObjectFunction<V>;
        defaultReturnValue(): V;
        getOrDefault(arg0: boolean, arg1: V): V;
        identity<T>(): Internal.Function<T, T>;
        defaultReturnValue(arg0: V): void;
        /**
         * @deprecated
        */
        "remove(java.lang.Object)"(arg0: any): V;
        andThenChar(arg0: Internal.Object2CharFunction_<V>): Internal.Boolean2CharFunction;
        /**
         * @deprecated
        */
        "containsKey(java.lang.Object)"(arg0: any): boolean;
    }
    type Boolean2ObjectFunction_<V> = Boolean2ObjectFunction<V>;
    class HoeItemBuilder extends Internal.HandheldItemBuilder {
        constructor(i: ResourceLocation_)
        static toToolTier(o: any): Internal.Tier;
        /**
         * Adds subtypes to the item. The function should return a collection of item stacks, each with a different subtype.
         * 
         * Each subtype will appear as a separate item in JEI and the creative inventory.
        */
        subtypes(fn: Internal.Function_<Internal.ItemStack, Internal.Collection<Internal.ItemStack>>): Internal.ItemBuilder;
        createAdditionalObjects(): void;
        /**
         * Gets called when the item is used to hurt an entity.
         * 
         * For example, when using a sword to hit a mob, this is called.
        */
        hurtEnemy(context: Internal.Predicate_<Internal.ItemBuilder$HurtEnemyContext>): Internal.ItemBuilder;
        getTranslationKeyGroup(): string;
        notify(): void;
        get(): Internal.Item;
        /**
         * Makes the item not stackable, equivalent to setting the item's max stack size to 1.
        */
        unstackable(): Internal.ItemBuilder;
        /**
         * When players finish using the item.
         * 
         * This is called only when `useDuration` ticks have passed.
         * 
         * For example, when eating food, this is called when the player has finished eating the food, so hunger is restored.
        */
        finishUsing(finishUsing: Internal.ItemBuilder$FinishUsingCallback_): Internal.ItemBuilder;
        /**
         * Colorizes item's texture of the given index. Index is used when you have multiple layers, e.g. a crushed ore (of rock + ore).
        */
        color(index: number, color: Internal.ItemTintFunction_): Internal.ItemBuilder;
        getRegistryType(): Internal.RegistryInfo<any>;
        /**
         * Modifies the tool tier.
        */
        modifyTier(callback: Internal.Consumer_<Internal.MutableToolTier>): Internal.HandheldItemBuilder;
        /**
         * Adds an attribute modifier to the item.
         * 
         * An attribute modifier is something like a damage boost or a speed boost.
         * On tools, they're applied when the item is held, on armor, they're
         * applied when the item is worn.
         * @param attribute The resource location of the attribute, e.g. 'generic.attack_damage'
         * @param identifier A unique identifier for the modifier. Modifiers are considered the same if they have the same identifier.
         * @param d The amount of the modifier.
         * @param operation The operation to apply the modifier with. Can be ADDITION, MULTIPLY_BASE, or MULTIPLY_TOTAL.
        */
        modifyAttribute(attribute: ResourceLocation_, identifier: string, d: number, operation: Internal.AttributeModifier$Operation_): Internal.ItemBuilder;
        /**
         * Sets the item's model (parent).
        */
        parentModel(m: string): Internal.ItemBuilder;
        /**
         * Colorizes item's texture of the given index. Useful for coloring items, like GT ores ore dusts.
        */
        color(callback: Internal.ItemTintFunction_): Internal.ItemBuilder;
        /**
         * Sets the item's max stack size. Default is 64.
        */
        maxStackSize(v: number): Internal.ItemBuilder;
        /**
         * Adds a tooltip to the item.
        */
        tooltip(text: net.minecraft.network.chat.Component_): Internal.ItemBuilder;
        "transformObject(net.minecraft.world.item.Item)"(obj: Internal.Item_): Internal.Item;
        /**
         * Determines the width of the item's durability bar. Defaulted to vanilla behavior.
         * 
         * The function should return a value between 0 and 13 (max width of the bar).
        */
        barWidth(barWidth: Internal.ToIntFunction_<Internal.ItemStack>): Internal.ItemBuilder;
        /**
         * Combined method of formattedDisplayName().displayName(name).
        */
        formattedDisplayName(name: net.minecraft.network.chat.Component_): Internal.BuilderBase<Internal.Item>;
        /**
         * Sets the base attack speed of the tool. Different tools have different baselines.
         * 
         * For example, a sword has a baseline of -2.4, while an axe has a baseline of -3.1.
         * 
         * The actual speed is the sum of the baseline and the speed from tier + 4 (bare hand).
        */
        speedBaseline(f: number): Internal.HandheldItemBuilder;
        /**
         * Sets the item's rarity.
        */
        rarity(v: Internal.Rarity_): Internal.ItemBuilder;
        /**
         * Makes the item fire resistant like netherite tools.
        */
        fireResistant(): Internal.ItemBuilder;
        /**
         * Sets the display name for this object, e.g. `Stone`.
         * 
         * This will be overridden by a lang file if it exists.
        */
        displayName(name: net.minecraft.network.chat.Component_): Internal.BuilderBase<Internal.Item>;
        /**
         * Determines the animation of the item when used, e.g. eating food.
        */
        useAnimation(animation: Internal.UseAnim_): Internal.ItemBuilder;
        tier(t: Internal.Tier_): Internal.HandheldItemBuilder;
        getBuilderTranslationKey(): string;
        /**
         * Determines if player will start using the item.
         * 
         * For example, when eating food, returning true will make the player start eating the food.
        */
        use(use: Internal.ItemBuilder$UseCallback_): Internal.ItemBuilder;
        /**
         * When players did not finish using the item but released the right mouse button halfway through.
         * 
         * An example is the bow, where the arrow is shot when the player releases the right mouse button.
         * 
         * To ensure the bow won't finish using, Minecraft sets the `useDuration` to a very high number (1h).
        */
        releaseUsing(releaseUsing: Internal.ItemBuilder$ReleaseUsingCallback_): Internal.ItemBuilder;
        /**
         * Sets the item's container item, e.g. a bucket for a milk bucket.
        */
        containerItem(id: ResourceLocation_): Internal.ItemBuilder;
        wait(): void;
        /**
         * Sets the item's burn time. Default is 0 (Not a fuel).
        */
        burnTime(v: number): Internal.ItemBuilder;
        /**
         * Directlys set the item's texture json.
        */
        textureJson(json: Internal.JsonObject_): Internal.ItemBuilder;
        static toArmorMaterial(o: any): Internal.ArmorMaterial;
        generateLang(lang: Internal.LangEventJS_): void;
        /**
         * The duration when the item is used.
         * 
         * For example, when eating food, this is the time it takes to eat the food.
         * This can change the eating speed, or be used for other things (like making a custom bow).
        */
        useDuration(useDuration: Internal.ToIntFunction_<Internal.ItemStack>): Internal.ItemBuilder;
        /**
         * Sets the attack speed of the tool.
        */
        speed(f: number): Internal.HandheldItemBuilder;
        getClass(): typeof any;
        /**
         * Makes the item fire resistant like netherite tools (or not).
        */
        fireResistant(isFireResistant: boolean): Internal.ItemBuilder;
        /**
         * Sets the item's texture by given key.
        */
        texture(key: string, tex: string): Internal.ItemBuilder;
        /**
         * Sets the item's max damage. Default is 0 (No durability).
        */
        maxDamage(v: number): Internal.ItemBuilder;
        "transformObject(java.lang.Object)"(arg0: any): any;
        wait(arg0: number, arg1: number): void;
        createItemProperties(): Internal.Item$Properties;
        /**
         * Sets the item's name dynamically.
        */
        name(name: Internal.ItemBuilder$NameCallback_): Internal.ItemBuilder;
        generateDataJsons(generator: Internal.DataJsonGenerator_): void;
        createObject(): Internal.Item;
        /**
         * Sets the base attack damage of the tool. Different tools have different baselines.
         * 
         * For example, a sword has a baseline of 3, while an axe has a baseline of 6.
         * 
         * The actual damage is the sum of the baseline and the attackDamageBonus from tier.
        */
        attackDamageBaseline(f: number): Internal.HandheldItemBuilder;
        /**
         * Makes the item glow like enchanted, even if it's not enchanted.
        */
        glow(v: boolean): Internal.ItemBuilder;
        transformObject(arg0: any): any;
        /**
         * Directly set the item's model json.
        */
        modelJson(json: Internal.JsonObject_): Internal.ItemBuilder;
        toString(): string;
        /**
         * Set the food properties of the item.
        */
        food(b: Internal.Consumer_<Internal.FoodBuilder>): Internal.ItemBuilder;
        notifyAll(): void;
        /**
         * Makes displayName() override language files.
        */
        formattedDisplayName(): Internal.BuilderBase<Internal.Item>;
        hashCode(): number;
        /**
         * Sets the item's texture (layer0).
        */
        texture(tex: string): Internal.ItemBuilder;
        transformObject(obj: Internal.Item_): Internal.Item;
        wait(arg0: number): void;
        /**
         * Determines the color of the item's durability bar. Defaulted to vanilla behavior.
        */
        barColor(barColor: Internal.Function_<Internal.ItemStack, dev.latvian.mods.rhino.mod.util.color.Color>): Internal.ItemBuilder;
        /**
         * Sets the translation key for this object, e.g. `block.minecraft.stone`.
        */
        translationKey(key: string): Internal.BuilderBase<Internal.Item>;
        /**
         * Adds a tag to this object, e.g. `minecraft:stone`.
        */
        tag(tag: ResourceLocation_): Internal.BuilderBase<Internal.Item>;
        /**
         * Sets the attack damage bonus of the tool.
        */
        attackDamageBonus(f: number): Internal.HandheldItemBuilder;
        equals(arg0: any): boolean;
        newID(pre: string, post: string): ResourceLocation;
        /**
         * @deprecated
        */
        group(g: string): Internal.ItemBuilder;
        generateAssetJsons(generator: Internal.AssetJsonGenerator_): void;
        get translationKeyGroup(): string
        get registryType(): Internal.RegistryInfo<any>
        get builderTranslationKey(): string
        get class(): typeof any
    }
    type HoeItemBuilder_ = HoeItemBuilder;
    interface IOffsetPlace {
        abstract adjustPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockPlaceContext;
        (arg0: Internal.BlockPlaceContext): Internal.BlockPlaceContext_;
    }
    type IOffsetPlace_ = IOffsetPlace | ((arg0: Internal.BlockPlaceContext)=> Internal.BlockPlaceContext_);
    class Layer$Instance {
        getClass(): typeof any;
        toString(): string;
        notifyAll(): void;
        alignComponentToWidget(locator: Internal.Predicate_<Internal.AbstractWidget>, anchor: Internal.Layer$Instance$AnchorSide_, justification: number, component: io.wispforest.owo.ui.core.Component_): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        hashCode(): number;
        dispatchLayoutUpdates(): void;
        wait(): void;
        queryWidget(locator: Internal.Predicate_<Internal.AbstractWidget>): Internal.AbstractWidget;
        wait(arg0: number): void;
        resize(width: number, height: number): void;
        equals(arg0: any): boolean;
        alignComponentToHandledScreenCoordinates(component: io.wispforest.owo.ui.core.Component_, x: number, y: number): void;
        get class(): typeof any
        readonly screen: S;
        readonly adapter: Internal.OwoUIAdapter<R>;
        aggressivePositioning: boolean;
    }
    type Layer$Instance_ = Layer$Instance;
    class VileniumIngotItem extends Internal.Item implements Internal.IParticleItem {
        constructor(arg0: Internal.Item$Properties_)
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        allowContinuingBlockBreaking(player: Internal.Player_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        moonlight$addAdditionalBehavior(placementOverride: Internal.AdditionalItemPlacement_): void;
        isFireResistant(): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        moonlight$getClientAnimationExtension(): any;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        fabric_setCustomDamageHandler(handler: Internal.CustomDamageHandler_): void;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getBarColor(arg0: Internal.ItemStack_): number;
        getOrCreateDescriptionId(): string;
        getItem(): Internal.Item;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): InteractionResult;
        moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        moonlight$setClientAnimationExtension(obj: any): void;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        handler$dfl000$revelationary$getCloakedName(stack: Internal.ItemStack_, callbackInfoReturnable: Internal.CallbackInfoReturnable_<any>): void;
        isEdible(): boolean;
        getAttributeModifiers(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        cardinal_createComponents(stack: Internal.ItemStack_): Internal.ComponentContainer;
        isFoil(arg0: Internal.ItemStack_): boolean;
        "getAttributeModifiers(net.minecraft.world.entity.EquipmentSlot,net.minecraft.world.item.ItemStack)"(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        fabric_getEquipmentSlotProvider(): Internal.EquipmentSlotProvider;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        owo$tab(): number;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vector3f;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        "getAttributeModifiers(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.EquipmentSlot)"(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        allowNbtUpdateAnimation(player: Internal.Player_, hand: Internal.InteractionHand_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        fabric_getCachedItemVariant(): Internal.ItemVariant;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        fabric_getCustomDamageHandler(): Internal.CustomDamageHandler;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        static getPlayerPOVHitResult(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.ClipContext$Fluid_): Internal.BlockHitResult;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        equals(arg0: any): boolean;
        setRarity(arg0: Internal.Rarity_): void;
        getRecipeRemainder(stack: Internal.ItemStack_): Internal.ItemStack;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        /**
         * @deprecated
        */
        onDestroyed(arg0: Internal.ItemEntity_): void;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        canBeHurtBy(arg0: DamageSource_): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        fabric_setEquipmentSlotProvider(equipmentSlotProvider: Internal.EquipmentSlotProvider_): void;
        getDescriptionId(): string;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        zeta$setHumanoidArmorModel(arg0: Internal.HumanoidArmorModelGetter_): void;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: DamageSource_): void;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        getDescription(): net.minecraft.network.chat.Component;
        owo$stackGenerator(): Internal.BiConsumer<any, any>;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        useOn(arg0: Internal.UseOnContext_): InteractionResult;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        handler$ebb000$connectormod$redirectIsPiglinCurrency(arg0: Internal.ItemStack_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        setAttackDamage(attackDamage: number): void;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        toString(): string;
        /**
         * @deprecated
        */
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        modifyReturnValue$ffm000$quark$overrideOtherStackedOnMe(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_, arg3: Internal.Slot_, arg4: Internal.ClickAction_, arg5: Internal.Player_, arg6: Internal.SlotAccess_): boolean;
        getId(): string;
        handler$fbm000$moonlight$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        isSuitableFor(stack: Internal.ItemStack_, state: Internal.BlockState_): boolean;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        puzzleslib$setRenderProperties(arg0: any): void;
        notify(): void;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        zeta$setBlockEntityWithoutLevelRenderer(arg0: Internal.BlockEntityWithoutLevelRenderer_): void;
        handler$cog000$croptopia$overrideConstructor(arg0: Internal.Item$Properties_, arg1: Internal.CallbackInfo_): void;
        addParticles(arg0: Internal.Level_, arg1: Internal.ItemEntity_): void;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        getEatingSound(): Internal.SoundEvent;
        owo$setGroup(group: Internal.CreativeModeTab_): void;
        puzzleslib$getRenderProperties(): any;
        canBeDepleted(): boolean;
        getDamage(arg0: Internal.ItemStack_): number;
        wait(arg0: number, arg1: number): void;
        getMod(): string;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        owo$group(): Internal.CreativeModeTab;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        modifyReturnValue$ffm000$quark$overrideStackedOnOther(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_): boolean;
        get drinkingSound(): Internal.SoundEvent
        get fireResistant(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set maxDamage(arg0: number)
        get orCreateDescriptionId(): string
        get item(): Internal.Item
        get class(): typeof any
        get renderPropertiesInternal(): any
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        get edible(): boolean
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        set nameKey(arg0: string)
        get idLocation(): ResourceLocation
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
        set rarity(arg0: Internal.Rarity_)
        get complex(): boolean
        get descriptionId(): string
        get creativeTab(): string
        set burnTime(i: number)
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        set itemBuilder(b: Internal.ItemBuilder_)
        set attackDamage(attackDamage: number)
        /**
         * @deprecated
        */
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        /**
         * @deprecated
        */
        get maxStackSize(): number
        get eatingSound(): Internal.SoundEvent
        get mod(): string
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
    }
    type VileniumIngotItem_ = VileniumIngotItem;
    class EnterBlockEvent extends Internal.PlayerEvent {
        constructor()
        constructor(arg0: Internal.Player_, arg1: Internal.BlockState_)
        getResult(): Internal.Event$Result;
        setCanceled(arg0: boolean): void;
        getClass(): typeof any;
        toString(): string;
        getBlockState(): Internal.BlockState;
        setPhase(arg0: Internal.EventPriority_): void;
        getEntity(): Internal.LivingEntity;
        notifyAll(): void;
        isCanceled(): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        hasResult(): boolean;
        setResult(arg0: Internal.Event$Result_): void;
        hashCode(): number;
        isCancelable(): boolean;
        wait(): void;
        getListenerList(): Internal.ListenerList;
        wait(arg0: number): void;
        getPhase(): Internal.EventPriority;
        equals(arg0: any): boolean;
        get result(): Internal.Event$Result
        set canceled(arg0: boolean)
        get class(): typeof any
        get blockState(): Internal.BlockState
        set phase(arg0: Internal.EventPriority_)
        get entity(): Internal.LivingEntity
        get canceled(): boolean
        set result(arg0: Internal.Event$Result_)
        get cancelable(): boolean
        get listenerList(): Internal.ListenerList
        get phase(): Internal.EventPriority
    }
    type EnterBlockEvent_ = EnterBlockEvent;
    class CustomStandingSignBlock extends Internal.StandingSignBlock {
        constructor(arg0: Internal.BlockBehaviour$Properties_, arg1: Internal.WoodType_)
        getSignHitboxCenterPosition(arg0: Internal.BlockState_): Vec3d;
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static getWoodType(arg0: Internal.Block_): Internal.WoodType;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getSettings(): Internal.BlockBehaviour$Properties;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        getTypeData(): Internal.CompoundTag;
        setFriction(arg0: number): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getSpeedFactor(): number;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        playerDestroy(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Player_): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Internal.Player_): Internal.ItemStack;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        newBlockEntity(arg0: BlockPos_, arg1: Internal.BlockState_): Internal.BlockEntity;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        getRenderPropertiesInternal(): any;
        needsDynamicNodeTypeCheck(): boolean;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        setRequiresTool(v: boolean): void;
        asBlock(): Internal.Block;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        openTextEdit(arg0: Internal.Player_, arg1: Internal.SignBlockEntity_, arg2: boolean): void;
        puzzleslib$setItem(arg0: Internal.Item_): void;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        /**
         * @deprecated
        */
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static createTickerHelper<E extends Internal.BlockEntity, A extends Internal.BlockEntity>(arg0: Internal.BlockEntityType_<A>, arg1: Internal.BlockEntityType_<E>, arg2: Internal.BlockEntityTicker_<E>): Internal.BlockEntityTicker<A>;
        lychee$isTickable(): boolean;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        getTicker<T extends Internal.BlockEntity>(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockEntityType_<T>): Internal.BlockEntityTicker<T>;
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        getYRotationDegrees(arg0: Internal.BlockState_): number;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        placeLiquid(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.FluidState_): boolean;
        spawnDestroyParticles(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_): void;
        wait(): void;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Internal.Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(shape: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        getPickupSound(arg0: Internal.BlockState_): Internal.Optional<Internal.SoundEvent>;
        setIsRandomlyTicking(arg0: boolean): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        registerDefaultState(arg0: Internal.BlockState_): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        type(): Internal.WoodType;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        /**
         * @deprecated
        */
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        /**
         * @deprecated
        */
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        getPickupSound(): Internal.Optional<Internal.SoundEvent>;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        isAir(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        needsDynamicBurningCheck(): boolean;
        getDescriptionId(): string;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        handler$bob000$radium$postConstruct(p_i241196_1_: Internal.BlockBehaviour$Properties_, ci: Internal.CallbackInfo_): void;
        tryDropExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: Internal.ItemStack_, arg3: Internal.IntProvider_): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        handler$eok000$particular$spawnParticles(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, random: Internal.RandomSource_, ci: Internal.CallbackInfo_): void;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        setDrops(arg0: ResourceLocation_): void;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        pickupBlock(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        getBlockProperties(): Internal.BlockBehaviour$Properties;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getShapeForEachState(arg0: Internal.Function_<Internal.BlockState, Internal.VoxelShape>): Internal.ImmutableMap<Internal.BlockState, Internal.VoxelShape>;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        getFriction(): number;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        createBlockStateDefinition(arg0: Internal.StateDefinition$Builder_<Internal.Block, Internal.BlockState>): void;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        notify(): void;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        handler$dji000$spectrum$afterBreak(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        setDestroySpeed(v: number): void;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        handler$zbh000$additionalentityattributes$additionalEntityAttributes$saveBreakingPlayer(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getListener<T extends Internal.BlockEntity>(arg0: Internal.ServerLevel_, arg1: T): Internal.GameEventListener;
        arch$holder(): Internal.Holder<Internal.Block>;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        canPlaceLiquid(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Fluid_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): void;
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        lychee$setTickable(arg0: boolean): void;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        get settings(): Internal.BlockBehaviour$Properties
        /**
         * @deprecated
        */
        get explosionResistance(): number
        get typeData(): Internal.CompoundTag
        set friction(arg0: number)
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get pickupSound(): Internal.Optional<Internal.SoundEvent>
        get descriptionId(): string
        get jumpFactor(): number
        set drops(arg0: ResourceLocation_)
        set speedFactor(arg0: number)
        get blockProperties(): Internal.BlockBehaviour$Properties
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get mod(): string
        set hasCollision(arg0: boolean)
    }
    type CustomStandingSignBlock_ = CustomStandingSignBlock;
    class VariantBlockStateBuilder$PartialBlockstate implements Internal.Predicate<Internal.BlockState> {
        getClass(): typeof any;
        test(arg0: Internal.BlockState_): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        setModels(...arg0: Internal.ConfiguredModel_[]): Internal.VariantBlockStateBuilder;
        static isEqual<T>(arg0: any): Internal.Predicate<T>;
        test(arg0: any): boolean;
        static comparingByProperties(): Internal.Comparator<Internal.VariantBlockStateBuilder$PartialBlockstate>;
        partialState(): this;
        negate(): Internal.Predicate<Internal.BlockState>;
        "test(java.lang.Object)"(arg0: any): boolean;
        static not<T>(arg0: Internal.Predicate_<T>): Internal.Predicate<T>;
        toString(): string;
        getSetStates(): Internal.SortedMap<Internal.Property<any>, Internal.Comparable<any>>;
        notifyAll(): void;
        getOwner(): Internal.Block;
        and(arg0: Internal.Predicate_<Internal.BlockState>): Internal.Predicate<Internal.BlockState>;
        hashCode(): number;
        "test(net.minecraft.world.level.block.state.BlockState)"(arg0: Internal.BlockState_): boolean;
        "with"<T extends Internal.Comparable<T>>(arg0: Internal.Property_<T>, arg1: T): this;
        wait(): void;
        modelForState(): Internal.ConfiguredModel$Builder<Internal.VariantBlockStateBuilder>;
        or(arg0: Internal.Predicate_<Internal.BlockState>): Internal.Predicate<Internal.BlockState>;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        addModels(...arg0: Internal.ConfiguredModel_[]): this;
        get class(): typeof any
        set models(...arg0: Internal.ConfiguredModel_[])
        get setStates(): Internal.SortedMap<Internal.Property<any>, Internal.Comparable<any>>
        get owner(): Internal.Block
    }
    type VariantBlockStateBuilder$PartialBlockstate_ = VariantBlockStateBuilder$PartialBlockstate;
    class GoalSelectorDebugRenderer$DebugGoal {
        constructor(arg0: BlockPos_, arg1: number, arg2: string, arg3: boolean)
        getClass(): typeof any;
        hashCode(): number;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
        readonly name: string;
        readonly priority: number;
        readonly isRunning: boolean;
        readonly pos: BlockPos;
    }
    type GoalSelectorDebugRenderer$DebugGoal_ = GoalSelectorDebugRenderer$DebugGoal;
    abstract class HangingEntity extends Internal.Entity {
        constructor(arg0: Internal.EntityType_<Internal.HangingEntity>, arg1: Internal.Level_, arg2: BlockPos_)
        constructor(arg0: Internal.EntityType_<Internal.HangingEntity>, arg1: Internal.Level_)
        isInWall(): boolean;
        getAllSlots(): Internal.Iterable<Internal.ItemStack>;
        getUpVector(arg0: number): Vec3d;
        gameEvent(arg0: Internal.GameEvent_, arg1: Internal.Entity_): void;
        remove(arg0: Internal.Entity$RemovalReason_): void;
        getBlockZ(): number;
        isSuppressingBounce(): boolean;
        dampensVibrations(): boolean;
        hasAttached(type: Internal.AttachmentType_<any>): boolean;
        isSilent(): boolean;
        "playSound(net.minecraft.sounds.SoundEvent)"(arg0: Internal.SoundEvent_): void;
        getPitch(): number;
        newDoubleList(...arg0: number[]): Internal.ListTag;
        isOnFire(): boolean;
        rotate(arg0: Internal.Rotation_): number;
        getPositionCodec(): Internal.VecDeltaCodec;
        getPassengersAndSelf(): Internal.Stream<any>;
        getPickedResult(arg0: Internal.HitResult_): Internal.ItemStack;
        setMaxUpStep(arg0: number): void;
        /**
         * @deprecated
        */
        updateFluidHeightAndDoFluidPushing(arg0: Internal.TagKey_<Internal.Fluid>, arg1: number): boolean;
        runCommandSilent(command: string): number;
        setPosition(x: number, y: number, z: number): void;
        chunkPosition(): Internal.ChunkPos;
        rayTrace(distance: number, fluids: boolean): Internal.RayTraceResultJS;
        gameEvent(arg0: Internal.GameEvent_): void;
        alwaysAccepts(): boolean;
        isShiftKeyDown(): boolean;
        isInFluidType(arg0: Internal.FluidState_): boolean;
        setUUID(arg0: Internal.UUID_): void;
        checkBelowWorld(): void;
        isVisuallyCrawling(): boolean;
        setMotionZ(z: number): void;
        setFluidTypeHeight(arg0: Internal.FluidType_, arg1: number): void;
        "deserializeNBT(net.minecraft.nbt.Tag)"(arg0: Internal.Tag_): void;
        handler$zza000$step_height_entity_attribute$getStepHeight(cir: Internal.CallbackInfoReturnable_<any>): void;
        canFreeze(): boolean;
        ignoreExplosion(): boolean;
        teleportRelative(arg0: number, arg1: number, arg2: number): void;
        getBlockY(): number;
        isSpectator(): boolean;
        isInWaterOrBubble(): boolean;
        updateFluidHeightAndDoFluidPushing(): void;
        spawnAtLocation(arg0: Internal.ItemLike_, arg1: number): Internal.ItemEntity;
        getPersistentData(): Internal.CompoundTag;
        handler$cil001$dsurround$playStepSound(pos: BlockPos_, state: Internal.BlockState_, ci: Internal.CallbackInfo_): void;
        getPortalCooldown(): number;
        getItem(): Internal.ItemStack;
        getRandomZ(arg0: number): number;
        causeFallDamage(arg0: number, arg1: number, arg2: DamageSource_): boolean;
        getPosition(arg0: number): Vec3d;
        setRemoved(arg0: Internal.Entity$RemovalReason_): void;
        getAttachedOrCreate<A>(type: Internal.AttachmentType_<A>, initializer: Internal.Supplier_<A>): A;
        isInWaterRainOrBubble(): boolean;
        getDistanceSq(arg0: number, arg1: number, arg2: number): number;
        getRemovalReason(): Internal.Entity$RemovalReason;
        wait(arg0: number): void;
        isIgnoringBlockTriggers(): boolean;
        isInRain(): boolean;
        getHandHoldingItemAngle(arg0: Internal.Item_): Vec3d;
        recalculateBoundingBox(): void;
        onFlap(): void;
        canUpdate(arg0: boolean): void;
        getEyeInFluidType(): Internal.FluidType;
        distanceToSqr(arg0: Vec3d_): number;
        syncComponent(key: Internal.ComponentKey_<any>): void;
        resetFallDistance(): void;
        canSprint(): boolean;
        modifyAttached<A>(type: Internal.AttachmentType_<A>, modifier: Internal.UnaryOperator_<A>): A;
        blockPosition(): BlockPos;
        isSteppingCarefully(): boolean;
        setLevel(arg0: Internal.Level_): void;
        setBoundingBox(arg0: Internal.AABB_): void;
        isAmbientCreature(): boolean;
        getSoundFromFluidType(arg0: Internal.FluidType_, arg1: Internal.SoundAction_): Internal.SoundEvent;
        "spawnAtLocation(net.minecraft.world.item.ItemStack,float)"(arg0: Internal.ItemStack_, arg1: number): Internal.ItemEntity;
        getPos(): BlockPos;
        addAdditionalSaveData(arg0: Internal.CompoundTag_): void;
        getBlockX(): number;
        /**
         * @deprecated
        */
        getLightLevelDependentMagicValue(): number;
        getEncodeId(): string;
        getY(arg0: number): number;
        getBlock(): Internal.BlockContainerJS;
        getNbt(): Internal.CompoundTag;
        setInvisible(arg0: boolean): void;
        invalidateCaps(): void;
        getName(): net.minecraft.network.chat.Component;
        abstract dropItem(arg0: Internal.Entity_): void;
        canEnterPose(arg0: Internal.Pose_): boolean;
        onGround(): boolean;
        getControlledVehicle(): Internal.Entity;
        isOnSameTeam(arg0: Internal.Entity_): boolean;
        attack(arg0: DamageSource_, arg1: number): boolean;
        getBlockSpeedFactor(): number;
        onInsideBubbleColumn(arg0: boolean): void;
        isInFluidType(arg0: Internal.BiPredicate_<Internal.FluidType, number>): boolean;
        tick(): void;
        getEyePosition(): Vec3d;
        getEyeHeight(): number;
        hasPassenger(arg0: Internal.Predicate_<Internal.Entity>): boolean;
        getYaw(): number;
        isPushedByFluid(arg0: Internal.FluidType_): boolean;
        getComponentContainer(): Internal.ComponentContainer;
        tryCheckInsideBlocks(): void;
        hasPermissions(arg0: number): boolean;
        getCapability<T>(arg0: Internal.Capability_<T>, arg1: Internal.Direction_): Internal.LazyOptional<T>;
        teleportTo(dimension: ResourceLocation_, x: number, y: number, z: number, yaw: number, pitch: number): void;
        onInsideBlock(arg0: Internal.BlockState_): void;
        setCustomNameVisible(arg0: boolean): void;
        isAlliedTo(arg0: Internal.Team_): boolean;
        handler$cpk000$mna$playSound(arg0: Internal.SoundEvent_, arg1: number, arg2: number, arg3: Internal.CallbackInfo_): void;
        getAttachedOrCreate<A>(type: Internal.AttachmentType_<A>): A;
        getControllingPassenger(): Internal.LivingEntity;
        getRemainingFireTicks(): number;
        limitPistonMovement(arg0: Vec3d_): Vec3d;
        getScriptType(): Internal.ScriptType;
        onlyOpCanSetNbt(): boolean;
        startRiding(arg0: Internal.Entity_): boolean;
        saveWithoutId(arg0: Internal.CompoundTag_): Internal.CompoundTag;
        getForward(): Vec3d;
        serializeNBT(): Internal.Tag;
        addMotion(arg0: number, arg1: number, arg2: number): void;
        fireImmune(): boolean;
        getMaxFallDistance(): number;
        getZ(arg0: number): number;
        hasCustomOutlineRendering(arg0: Internal.Player_): boolean;
        getId(): number;
        canBeHitByProjectile(): boolean;
        getTicksFrozen(): number;
        getRecipientsForComponentSync(): Internal.Iterable<any>;
        getRandomX(arg0: number): number;
        handler$dkf000$spectrum$dropStack(stack: Internal.ItemStack_, cir: Internal.CallbackInfoReturnable_<any>): void;
        getEyeY(): number;
        spawnAtLocation(arg0: Internal.ItemStack_, arg1: number): Internal.ItemEntity;
        setDirection(arg0: Internal.Direction_): void;
        pick(arg0: number, arg1: number, arg2: boolean): Internal.HitResult;
        setStatusMessage(message: net.minecraft.network.chat.Component_): void;
        fabric_readAttachmentsFromNbt(nbt: Internal.CompoundTag_): void;
        getBoundingBox(): Internal.AABB;
        isInWaterOrRain(): boolean;
        isDescending(): boolean;
        setItemSlot(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): void;
        getYHeadRot(): number;
        equals(arg0: any): boolean;
        handler$cpk000$mna$canEnterPose(arg0: Internal.Pose_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        getViewYRot(arg0: number): number;
        getSwimSound(): Internal.SoundEvent;
        dismountsUnderwater(): boolean;
        playerTouch(arg0: Internal.Player_): void;
        addTag(arg0: string): boolean;
        getEyeHeight(arg0: Internal.Pose_): number;
        getAddEntityPacket(): Internal.Packet<Internal.ClientGamePacketListener>;
        syncPacketPositionCodec(arg0: number, arg1: number, arg2: number): void;
        doWaterSplashEffect(): void;
        getTeam(): Internal.Team;
        canAddPassenger(arg0: Internal.Entity_): boolean;
        shouldRenderAtSqrDistance(arg0: number): boolean;
        getAttachedOrSet<A>(type: Internal.AttachmentType_<A>, defaultValue: A): A;
        damageSources(): Internal.DamageSources;
        removeAttached<A>(type: Internal.AttachmentType_<A>): A;
        setTicksFrozen(arg0: number): void;
        recreateFromPacket(arg0: Internal.ClientboundAddEntityPacket_): void;
        abstract getWidth(): number;
        getMyRidingOffset(): number;
        canStartSwimming(): boolean;
        dismountTo(arg0: number, arg1: number, arg2: number): void;
        setDeltaMovement(arg0: Vec3d_): void;
        getLeashOffset(arg0: number): Vec3d;
        hasCustomName(): boolean;
        isLiving(): boolean;
        isGlowing(): boolean;
        getX(): number;
        "isInFluidType(net.minecraft.world.level.material.FluidState)"(arg0: Internal.FluidState_): boolean;
        isVehicle(): boolean;
        static transfer(original: Internal.AttachmentTarget_, target: Internal.AttachmentTarget_, isDeath: boolean): void;
        getLeashOffset(): Vec3d;
        isAttackable(): boolean;
        spawnAtLocation(arg0: Internal.ItemStack_): Internal.ItemEntity;
        processPortalCooldown(): void;
        mergeNbt(tag: Internal.CompoundTag_): Internal.Entity;
        thunderHit(arg0: Internal.ServerLevel_, arg1: Internal.LightningBolt_): void;
        setIsInPowderSnow(arg0: boolean): void;
        doEnchantDamageEffects(arg0: Internal.LivingEntity_, arg1: Internal.Entity_): void;
        setCustomName(arg0: net.minecraft.network.chat.Component_): void;
        getSlot(arg0: number): Internal.SlotAccess;
        handleNetherPortal(): void;
        "deserializeNBT(net.minecraft.nbt.CompoundTag)"(arg0: Internal.CompoundTag_): void;
        getTeamId(): string;
        stopSeenByPlayer(arg0: Internal.ServerPlayer_): void;
        canBeRiddenUnderFluidType(arg0: Internal.FluidType_, arg1: Internal.Entity_): boolean;
        wthit_getTypeName(): net.minecraft.network.chat.Component;
        isUnderWater(): boolean;
        getSwimHighSpeedSplashSound(): Internal.SoundEvent;
        stopRiding(): void;
        getBoundingBoxForPose(arg0: Internal.Pose_): Internal.AABB;
        isCustomNameVisible(): boolean;
        isSupportedBy(arg0: BlockPos_): boolean;
        getPistonPushReaction(): Internal.PushReaction;
        getX(arg0: number): number;
        shouldRiderSit(): boolean;
        lookAt(arg0: Internal.EntityAnchorArgument$Anchor_, arg1: Vec3d_): void;
        captureDrops(arg0: Internal.Collection_<Internal.ItemEntity>): Internal.Collection<Internal.ItemEntity>;
        getSelfAndPassengers(): Internal.Stream<any>;
        rayTrace(distance: number): Internal.RayTraceResultJS;
        getDeltaMovement(): Vec3d;
        isInFluidType(arg0: Internal.FluidType_): boolean;
        getFluidMotionScale(arg0: Internal.FluidType_): number;
        getMotionX(): number;
        "onSyncedDataUpdated(java.util.List)"(arg0: Internal.List_<Internal.SynchedEntityData$DataValue<any>>): void;
        hasPassenger(arg0: Internal.Entity_): boolean;
        syncComponent(key: Internal.ComponentKey_<any>, packetWriter: Internal.ComponentPacketWriter_, predicate: Internal.PlayerSyncPredicate_): void;
        hasIndirectPassenger(arg0: Internal.Entity_): boolean;
        getEntityData(): Internal.SynchedEntityData;
        setSecondsOnFire(arg0: number): void;
        moveTo(arg0: number, arg1: number, arg2: number): void;
        "getDisplayName()"(): net.minecraft.network.chat.Component;
        handleInsidePortal(arg0: BlockPos_): void;
        calculateViewVector(arg0: number, arg1: number): Vec3d;
        setMotion(arg0: number, arg1: number, arg2: number): void;
        playSound(arg0: Internal.SoundEvent_): void;
        makeBoundingBox(): Internal.AABB;
        absMoveTo(arg0: number, arg1: number, arg2: number): void;
        onBelowWorld(): void;
        isOnRails(): boolean;
        getAttachedOrThrow<A>(type: Internal.AttachmentType_<A>): A;
        restoreFrom(arg0: Internal.Entity_): void;
        reapplyPosition(): void;
        getDimensionChangingDelay(): number;
        isPeacefulCreature(): boolean;
        setOnGround(arg0: boolean): void;
        setPos(arg0: number, arg1: number, arg2: number): void;
        setYaw(arg0: number): void;
        getPickRadius(): number;
        notify(): void;
        getFirstTick(): boolean;
        getVehicle(): Internal.Entity;
        isEffectiveAi(): boolean;
        startRiding(arg0: Internal.Entity_, arg1: boolean): boolean;
        getStringUuid(): string;
        isRemoved(): boolean;
        setSwimming(arg0: boolean): void;
        canHydrateInFluidType(arg0: Internal.FluidType_): boolean;
        teleportToWithTicket(arg0: number, arg1: number, arg2: number): void;
        fillCrashReportCategory(arg0: Internal.CrashReportCategory_): void;
        getRotationVector(): Internal.Vec2;
        refreshDimensions(): void;
        self(): Internal.Entity;
        isSprinting(): boolean;
        "spawnAtLocation(net.minecraft.world.level.ItemLike)"(arg0: Internal.ItemLike_): Internal.ItemEntity;
        getMotionY(): number;
        canCollideWith(arg0: Internal.Entity_): boolean;
        setShiftKeyDown(arg0: boolean): void;
        getEyePosition(arg0: number): Vec3d;
        getPassengers(): Internal.EntityArrayList;
        getBlockExplosionResistance(arg0: Internal.Explosion_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.FluidState_, arg5: number): number;
        calculateUpVector(arg0: number, arg1: number): Vec3d;
        spawnSprintParticle(): void;
        getFluidFallDistanceModifier(arg0: Internal.FluidType_): number;
        getMaxHeightFluidType(): Internal.FluidType;
        getZ(): number;
        canSpawnSprintParticle(): boolean;
        checkSupportingBlock(arg0: boolean, arg1: Vec3d_): void;
        canRide(arg0: Internal.Entity_): boolean;
        "moveTo(net.minecraft.core.BlockPos,float,float)"(arg0: BlockPos_, arg1: number, arg2: number): void;
        teleportTo(arg0: number, arg1: number, arg2: number): void;
        getServer(): Internal.MinecraftServer;
        moveRelative(arg0: number, arg1: Vec3d_): void;
        getOnPos(arg0: number): BlockPos;
        isAddedToWorld(): boolean;
        getFirstPassenger(): Internal.Entity;
        saveAsPassenger(arg0: Internal.CompoundTag_): boolean;
        getRelativePortalPosition(arg0: Internal.Direction$Axis_, arg1: Internal.BlockUtil$FoundRectangle_): Vec3d;
        interact(arg0: Internal.Player_, arg1: Internal.InteractionHand_): InteractionResult;
        removePassenger(arg0: Internal.Entity_): void;
        getDismountLocationForPassenger(arg0: Internal.LivingEntity_): Vec3d;
        gtceu$setFireImmune(isImmune: boolean): void;
        invokeSetLevel(arg0: Internal.Level_): void;
        checkSlowFallDistance(): void;
        updateInWaterStateAndDoWaterCurrentPushing(): void;
        getSoundSource(): Internal.SoundSource;
        addPassenger(arg0: Internal.Entity_): void;
        setFabricBalmData(arg0: Internal.CompoundTag_): void;
        removeAfterChangingDimensions(): void;
        getPose(): Internal.Pose;
        touchingUnloadedChunk(): boolean;
        getSharedFlag(arg0: number): boolean;
        getLookAngle(): Vec3d;
        setPositionAndRotation(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        checkFallDamage(arg0: number, arg1: boolean, arg2: Internal.BlockState_, arg3: BlockPos_): void;
        getPermissionLevel(): number;
        getMotionZ(): number;
        removeVehicle(): void;
        defineSynchedData(): void;
        nextStep(): number;
        isInvisible(): boolean;
        checkInsideBlocks(): void;
        is(arg0: Internal.Entity_): boolean;
        setZ(z: number): void;
        /**
         * @deprecated
        */
        getBlockStateOnLegacy(): Internal.BlockState;
        getY(): number;
        ejectPassengers(): void;
        hashCode(): number;
        deserializeNBT(arg0: Internal.CompoundTag_): void;
        createHoverEvent(): Internal.HoverEvent;
        getProfile(): Internal.GameProfile;
        static setViewScale(arg0: number): void;
        setLevelCallback(arg0: Internal.EntityInLevelCallback_): void;
        getExitPortal(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: boolean, arg3: Internal.WorldBorder_): Internal.Optional<Internal.BlockUtil$FoundRectangle>;
        showVehicleHealth(): boolean;
        getDistance(pos: BlockPos_): number;
        playSound(arg0: Internal.SoundEvent_, arg1: number, arg2: number): void;
        "areCapsCompatible(net.minecraftforge.common.capabilities.CapabilityDispatcher)"(arg0: Internal.CapabilityDispatcher_): boolean;
        playMuffledStepSound(arg0: Internal.BlockState_, arg1: BlockPos_): void;
        startSeenByPlayer(arg0: Internal.ServerPlayer_): void;
        isOnScoreboardTeam(teamId: string): boolean;
        /**
         * @deprecated
        */
        isPushedByFluid(): boolean;
        position(): Vec3d;
        displayFireAnimation(): boolean;
        turn(arg0: number, arg1: number): void;
        getAirSupply(): number;
        getRopeHoldPosition(arg0: number): Vec3d;
        copyPosition(arg0: Internal.Entity_): void;
        onAddedToWorld(): void;
        "hasPassenger(net.minecraft.world.entity.Entity)"(arg0: Internal.Entity_): boolean;
        isCrouching(): boolean;
        waterSwimSound(): void;
        moveTo(arg0: BlockPos_, arg1: number, arg2: number): void;
        isPlayer(): boolean;
        isAnimal(): boolean;
        survives(): boolean;
        readAdditionalSaveData(arg0: Internal.CompoundTag_): void;
        canBeCollidedWith(): boolean;
        getMotionDirection(): Internal.Direction;
        asComponentProvider(): Internal.ComponentProvider;
        setY(y: number): void;
        getFeetBlockState(): Internal.BlockState;
        lavaHurt(): void;
        handleDamageEvent(arg0: DamageSource_): void;
        getFabricBalmData(): Internal.CompoundTag;
        canChangeDimensions(): boolean;
        changeDimension(arg0: Internal.ServerLevel_, arg1: Internal.ITeleporter_): Internal.Entity;
        getCommandSenderWorld(): Internal.Level;
        isHorizontalCollisionMinor(arg0: Vec3d_): boolean;
        positionRider(arg0: Internal.Entity_): void;
        baseTick(): void;
        broadcastToPlayer(arg0: Internal.ServerPlayer_): boolean;
        changeDimension(arg0: Internal.ServerLevel_): Internal.Entity;
        setSharedFlag(arg0: number, arg1: boolean): void;
        getEyeHeightAccess(arg0: Internal.Pose_, arg1: Internal.EntityDimensions_): number;
        getCustomName(): net.minecraft.network.chat.Component;
        getClass(): typeof any;
        isVisuallySwimming(): boolean;
        getMaxAirSupply(): number;
        canTrample(arg0: Internal.BlockState_, arg1: BlockPos_, arg2: number): boolean;
        processFlappingMovement(): void;
        attack(hp: number): void;
        canSwimInFluidType(arg0: Internal.FluidType_): boolean;
        getFireImmuneTicks(): number;
        getFacing(): Internal.Direction;
        "hasPassenger(java.util.function.Predicate)"(arg0: Internal.Predicate_<Internal.Entity>): boolean;
        getDimensions(arg0: Internal.Pose_): Internal.EntityDimensions;
        abstract getHeight(): number;
        isPassengerOfSameVehicle(arg0: Internal.Entity_): boolean;
        isSwimming(): boolean;
        getBoundingBoxForCulling(): Internal.AABB;
        setSprinting(arg0: boolean): void;
        mayInteract(arg0: Internal.Level_, arg1: BlockPos_): boolean;
        static collideBoundingBox(entity: Internal.Entity_, movement: Vec3d_, entityBoundingBox: Internal.AABB_, world: Internal.Level_, collisions: Internal.List_<any>): Vec3d;
        setRot(arg0: number, arg1: number): void;
        setPortalCooldown(): void;
        setX(x: number): void;
        trackingPosition(): Vec3d;
        getNameTagOffsetY(): number;
        isInvulnerable(): boolean;
        isInLava(): boolean;
        getPortalWaitTime(): number;
        isInWater(): boolean;
        awardKillScore(arg0: Internal.Entity_, arg1: number, arg2: DamageSource_): void;
        getBlockStateOn(): Internal.BlockState;
        getFluidJumpThreshold(): number;
        unsetRemoved(): void;
        "setPositionAndRotation(double,double,double,float,float)"(x: number, y: number, z: number, yaw: number, pitch: number): void;
        isInvisibleTo(arg0: Internal.Player_): boolean;
        /**
         * @deprecated
        */
        fixupDimensions(): void;
        spectrum$setActuallyTouchingWater(actuallyTouchingWater: boolean): void;
        setAirSupply(arg0: number): void;
        getOnPos(): BlockPos;
        getRootVehicle(): Internal.Entity;
        save(arg0: Internal.CompoundTag_): boolean;
        repositionEntityAfterLoad(): boolean;
        getBlockPosBelowThatAffectsMyMovement(): BlockPos;
        moveTowardsClosestSpace(arg0: number, arg1: number, arg2: number): void;
        isNoGravity(): boolean;
        getStepHeight(): number;
        static getCollisionHorizontalEscapeVector(arg0: number, arg1: number, arg2: number): Vec3d;
        acceptsFailure(): boolean;
        playCombinationStepSounds(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: BlockPos_): void;
        setOnGroundWithKnownMovement(arg0: boolean, arg1: Vec3d_): void;
        setOldPosAndRot(): void;
        isFree(arg0: number, arg1: number, arg2: number): boolean;
        updateSwimming(): void;
        "moveTo(double,double,double)"(arg0: number, arg1: number, arg2: number): void;
        setRemainingFireTicks(arg0: number): void;
        getCachedFeetBlockState(): Internal.BlockState;
        shouldInformAdmins(): boolean;
        canFluidExtinguish(arg0: Internal.FluidType_): boolean;
        rideTick(): void;
        /**
         * @deprecated
        */
        getOnPosLegacy(): BlockPos;
        setPos(arg0: Vec3d_): void;
        findDimensionEntryPoint(arg0: Internal.ServerLevel_): Internal.PortalInfo;
        wait(): void;
        getUuid(): Internal.UUID;
        spawn(): void;
        areCapsCompatible(arg0: Internal.CapabilityDispatcher_): boolean;
        handler$dke000$spectrum$isSubmergedIn(fluidTag: Internal.TagKey_<any>, cir: Internal.CallbackInfoReturnable_<any>): void;
        teleportTo(arg0: Internal.ServerLevel_, arg1: number, arg2: number, arg3: number, arg4: Internal.Set_<Internal.RelativeMovement>, arg5: number, arg6: number): boolean;
        fabric_writeAttachmentsToNbt(nbt: Internal.CompoundTag_): void;
        shouldShowName(): boolean;
        markHurt(): void;
        getArmorSlots(): Internal.Iterable<Internal.ItemStack>;
        setSilent(arg0: boolean): void;
        captureDrops(): Internal.Collection<Internal.ItemEntity>;
        hasExactlyOnePlayerPassenger(): boolean;
        kill(): void;
        getSwimSplashSound(): Internal.SoundEvent;
        isOnPortalCooldown(): boolean;
        playSwimSound(arg0: number): void;
        animateHurt(arg0: number): void;
        syncComponent(key: Internal.ComponentKey_<any>, packetWriter: Internal.ComponentPacketWriter_): void;
        modifyReturnValue$zbi000$additionalentityattributes$getMaxAir(original: number): number;
        setPitch(arg0: number): void;
        isMultipartEntity(): boolean;
        setPosRaw(arg0: number, arg1: number, arg2: number): void;
        handleEntityEvent(arg0: number): void;
        getParts(): Internal.PartEntity<any>[];
        isAlwaysTicking(): boolean;
        interactAt(arg0: Internal.Player_, arg1: Vec3d_, arg2: Internal.InteractionHand_): InteractionResult;
        deserializeNBT(arg0: Internal.Tag_): void;
        positionRider(arg0: Internal.Entity_, arg1: Internal.Entity$MoveFunction_): void;
        lerpTo(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): void;
        onPassengerTurned(arg0: Internal.Entity_): void;
        revive(): void;
        spawnAtLocation(arg0: Internal.ItemLike_): Internal.ItemEntity;
        setAttached(type: Internal.AttachmentType_<any>, value: any): any;
        getBbWidth(): number;
        /**
         * @deprecated
        */
        couldAcceptPassenger(): boolean;
        isEyeInFluidType(arg0: Internal.FluidType_): boolean;
        getForgePersistentData(): Internal.CompoundTag;
        addDeltaMovement(arg0: Vec3d_): void;
        lithiumOnBlockCacheDeleted(): void;
        "spawnAtLocation(net.minecraft.world.level.ItemLike,int)"(arg0: Internal.ItemLike_, arg1: number): Internal.ItemEntity;
        setInvulnerable(arg0: boolean): void;
        "getName()"(): net.minecraft.network.chat.Component;
        push(arg0: Internal.Entity_): void;
        isInFluidType(): boolean;
        mirror(arg0: Internal.Mirror_): number;
        canUpdate(): boolean;
        getTypeName(): net.minecraft.network.chat.Component;
        getTicksRequiredToFreeze(): number;
        /**
         * @deprecated
        */
        maxUpStep(): number;
        setGlowing(arg0: boolean): void;
        load(arg0: Internal.CompoundTag_): void;
        isAlive(): boolean;
        getBbHeight(): number;
        getUsername(): string;
        move(arg0: Internal.MoverType_, arg1: Vec3d_): void;
        getPrimaryStepSoundBlockPos(arg0: BlockPos_): BlockPos;
        getViewVector(arg0: number): Vec3d;
        getTags(): Internal.Set<string>;
        onRemovedFromWorld(): void;
        lithiumOnBlockCacheSet(newState: Internal.BlockState_): void;
        getCapability<T>(arg0: Internal.Capability_<T>): Internal.LazyOptional<T>;
        isPickable(): boolean;
        handler$dke000$spectrum$isSubmergedInWater(cir: Internal.CallbackInfoReturnable_<any>): void;
        isInFluidType(predicate: Internal.BiPredicate_<any, any>, forAllTypes: boolean): boolean;
        setYHeadRot(arg0: number): void;
        hasControllingPassenger(): boolean;
        closerThan(arg0: Internal.Entity_, arg1: number, arg2: number): boolean;
        absMoveTo(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        getPickResult(): Internal.ItemStack;
        getPercentFrozen(): number;
        getRandomY(): number;
        setPortalCooldown(arg0: number): void;
        getDisplayName(): net.minecraft.network.chat.Component;
        hasGlowingTag(): boolean;
        shouldBlockExplode(arg0: Internal.Explosion_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: number): boolean;
        setPosition(block: Internal.BlockContainerJS_): void;
        handler$den000$eidolon$eidolonrepraised$isAlliedTo(arg0: Internal.Entity_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        spectrum$isActuallyTouchingWater(): boolean;
        shouldBeSaved(): boolean;
        getFluidTypeHeight(arg0: Internal.FluidType_): number;
        fabric_hasPersistentAttachments(): boolean;
        getViewXRot(arg0: number): number;
        canRiderInteract(): boolean;
        "areCapsCompatible(net.minecraftforge.common.capabilities.CapabilityProvider)"(arg0: Internal.CapabilityProvider_<Internal.Entity>): boolean;
        fabric_getAttachments(): Internal.Map<any, any>;
        removeTag(arg0: string): boolean;
        setPose(arg0: Internal.Pose_): void;
        /**
         * @deprecated
        */
        getFluidHeight(arg0: Internal.TagKey_<Internal.Fluid>): number;
        getEntityType(): Internal.EntityType<any>;
        isWaterCreature(): boolean;
        toString(): string;
        notifyAll(): void;
        getPassengersRidingOffset(): number;
        "isInFluidType(java.util.function.BiPredicate)"(arg0: Internal.BiPredicate_<Internal.FluidType, number>): boolean;
        distanceToEntitySqr(arg0: Internal.Entity_): number;
        "getServer()"(): Internal.MinecraftServer;
        isFrame(): boolean;
        isPushable(): boolean;
        setYBodyRot(arg0: number): void;
        discard(): void;
        onClientRemoval(): void;
        sendSystemMessage(arg0: net.minecraft.network.chat.Component_): void;
        acceptsSuccess(): boolean;
        reviveCaps(): void;
        getDistance(x: number, y: number, z: number): number;
        setMotionY(y: number): void;
        setNoGravity(arg0: boolean): void;
        getAttached(type: Internal.AttachmentType_<any>): any;
        getIndirectPassengers(): Internal.Iterable<any>;
        setRotation(yaw: number, pitch: number): void;
        createCommandSourceStack(): Internal.CommandSourceStack;
        isControlledByLocalInstance(): boolean;
        handler$cam000$radium$tryShortcutFluidPushing(ci: Internal.CallbackInfo_, box: Internal.AABB_, x1: number, x2: number, y1: number, y2: number, z1: number, z2: number, zero: number): void;
        isMonster(): boolean;
        getHorizontalFacing(): Internal.Direction;
        setId(arg0: number): void;
        onSyncedDataUpdated(arg0: Internal.List_<Internal.SynchedEntityData$DataValue<any>>): void;
        getType(): string;
        getLightProbePosition(arg0: number): Vec3d;
        getComponent<C extends dev.onyxstudios.cca.api.v3.component.Component>(key: Internal.ComponentKey_<C>): C;
        onAboveBubbleCol(arg0: boolean): void;
        "playSound(net.minecraft.sounds.SoundEvent,float,float)"(arg0: Internal.SoundEvent_, arg1: number, arg2: number): void;
        toComponentPacket(key: Internal.ComponentKey_<any>, writer: Internal.ComponentPacketWriter_, recipient: Internal.ServerPlayer_): Internal.ClientboundCustomPayloadPacket;
        isPassenger(): boolean;
        hasPose(arg0: Internal.Pose_): boolean;
        playStepSound(arg0: BlockPos_, arg1: Internal.BlockState_): void;
        checkDespawn(): void;
        /**
         * @deprecated
        */
        isEyeInFluid(arg0: Internal.TagKey_<Internal.Fluid>): boolean;
        isInvulnerableTo(arg0: DamageSource_): boolean;
        makeStuckInBlock(arg0: Internal.BlockState_, arg1: Vec3d_): void;
        getAttachedOrGet<A>(type: Internal.AttachmentType_<A>, defaultValue: Internal.Supplier_<A>): A;
        skipAttackInteraction(arg0: Internal.Entity_): boolean;
        maybeBackOffFromEdge(arg0: Vec3d_, arg1: Internal.MoverType_): Vec3d;
        newFloatList(...arg0: number[]): Internal.ListTag;
        lerpMotion(arg0: number, arg1: number, arg2: number): void;
        shouldRender(arg0: number, arg1: number, arg2: number): boolean;
        onSyncedDataUpdated(arg0: Internal.EntityDataAccessor_<any>): void;
        lerpHeadTo(arg0: number, arg1: number): void;
        isFlapping(): boolean;
        getEyeHeight(arg0: Internal.Pose_, arg1: Internal.EntityDimensions_): number;
        static getViewScale(): number;
        setMotionX(x: number): void;
        getMovementEmission(): Internal.Entity$MovementEmission;
        getHandSlots(): Internal.Iterable<Internal.ItemStack>;
        distanceToEntity(arg0: Internal.Entity_): number;
        getVisualRotationYInDegrees(): number;
        abstract playPlacementSound(): void;
        wait(arg0: number, arg1: number): void;
        isDiscrete(): boolean;
        getTeamColor(): number;
        setNbt(nbt: Internal.CompoundTag_): void;
        lithiumSetClimbingMobCachingSectionUpdateBehavior(listening: boolean): void;
        unRide(): void;
        getLevel(): Internal.Level;
        "spawnAtLocation(net.minecraft.world.item.ItemStack)"(arg0: Internal.ItemStack_): Internal.ItemEntity;
        "isInFluidType(net.minecraftforge.fluids.FluidType)"(arg0: Internal.FluidType_): boolean;
        extinguish(): void;
        updateDynamicGameEventListener(arg0: Internal.BiConsumer_<Internal.DynamicGameEventListener<any>, Internal.ServerLevel>): void;
        moveTo(arg0: Vec3d_): void;
        isColliding(arg0: BlockPos_, arg1: Internal.BlockState_): boolean;
        updateInWaterStateAndDoFluidPushing(): boolean;
        "onSyncedDataUpdated(net.minecraft.network.syncher.EntityDataAccessor)"(arg0: Internal.EntityDataAccessor_<any>): void;
        areCapsCompatible(arg0: Internal.CapabilityProvider_<Internal.Entity>): boolean;
        extinguishFire(): void;
        getBlockJumpFactor(): number;
        tell(message: net.minecraft.network.chat.Component_): void;
        closerThan(arg0: Internal.Entity_, arg1: number): boolean;
        getDistanceSq(pos: BlockPos_): number;
        killedEntity(arg0: Internal.ServerLevel_, arg1: Internal.LivingEntity_): boolean;
        getAttachedOrElse<A>(type: Internal.AttachmentType_<A>, defaultValue: A): A;
        playEntityOnFireExtinguishedSound(): void;
        getClassification(arg0: boolean): Internal.MobCategory;
        isFreezing(): boolean;
        isFullyFrozen(): boolean;
        runCommand(command: string): number;
        setSharedFlagOnFire(arg0: boolean): void;
        get inWall(): boolean
        get allSlots(): Internal.Iterable<Internal.ItemStack>
        get blockZ(): number
        get suppressingBounce(): boolean
        get silent(): boolean
        get pitch(): number
        get onFire(): boolean
        get positionCodec(): Internal.VecDeltaCodec
        get passengersAndSelf(): Internal.Stream<any>
        set maxUpStep(arg0: number)
        get shiftKeyDown(): boolean
        set UUID(arg0: Internal.UUID_)
        get visuallyCrawling(): boolean
        set motionZ(z: number)
        get blockY(): number
        get spectator(): boolean
        get inWaterOrBubble(): boolean
        get persistentData(): Internal.CompoundTag
        get portalCooldown(): number
        get item(): Internal.ItemStack
        set removed(arg0: Internal.Entity$RemovalReason_)
        get inWaterRainOrBubble(): boolean
        get removalReason(): Internal.Entity$RemovalReason
        get ignoringBlockTriggers(): boolean
        get inRain(): boolean
        get eyeInFluidType(): Internal.FluidType
        get steppingCarefully(): boolean
        set level(arg0: Internal.Level_)
        set boundingBox(arg0: Internal.AABB_)
        get ambientCreature(): boolean
        get pos(): BlockPos
        get blockX(): number
        /**
         * @deprecated
        */
        get lightLevelDependentMagicValue(): number
        get encodeId(): string
        get block(): Internal.BlockContainerJS
        get nbt(): Internal.CompoundTag
        set invisible(arg0: boolean)
        get name(): net.minecraft.network.chat.Component
        get controlledVehicle(): Internal.Entity
        get blockSpeedFactor(): number
        get eyePosition(): Vec3d
        get eyeHeight(): number
        get yaw(): number
        get componentContainer(): Internal.ComponentContainer
        set customNameVisible(arg0: boolean)
        get controllingPassenger(): Internal.LivingEntity
        get remainingFireTicks(): number
        get scriptType(): Internal.ScriptType
        get forward(): Vec3d
        get maxFallDistance(): number
        get id(): number
        get ticksFrozen(): number
        get recipientsForComponentSync(): Internal.Iterable<any>
        get eyeY(): number
        set direction(arg0: Internal.Direction_)
        set statusMessage(message: net.minecraft.network.chat.Component_)
        get boundingBox(): Internal.AABB
        get inWaterOrRain(): boolean
        get descending(): boolean
        get YHeadRot(): number
        get swimSound(): Internal.SoundEvent
        get addEntityPacket(): Internal.Packet<Internal.ClientGamePacketListener>
        get team(): Internal.Team
        set ticksFrozen(arg0: number)
        get width(): number
        get myRidingOffset(): number
        set deltaMovement(arg0: Vec3d_)
        get living(): boolean
        get glowing(): boolean
        get x(): number
        get vehicle(): boolean
        get leashOffset(): Vec3d
        get attackable(): boolean
        set isInPowderSnow(arg0: boolean)
        set customName(arg0: net.minecraft.network.chat.Component_)
        get teamId(): string
        get underWater(): boolean
        get swimHighSpeedSplashSound(): Internal.SoundEvent
        get customNameVisible(): boolean
        get pistonPushReaction(): Internal.PushReaction
        get selfAndPassengers(): Internal.Stream<any>
        get deltaMovement(): Vec3d
        get motionX(): number
        get entityData(): Internal.SynchedEntityData
        set secondsOnFire(arg0: number)
        get "displayName()"(): net.minecraft.network.chat.Component
        get onRails(): boolean
        get dimensionChangingDelay(): number
        get peacefulCreature(): boolean
        set onGround(arg0: boolean)
        set yaw(arg0: number)
        get pickRadius(): number
        get firstTick(): boolean
        get vehicle(): Internal.Entity
        get effectiveAi(): boolean
        get stringUuid(): string
        get removed(): boolean
        set swimming(arg0: boolean)
        get rotationVector(): Internal.Vec2
        get sprinting(): boolean
        get motionY(): number
        set shiftKeyDown(arg0: boolean)
        get passengers(): Internal.EntityArrayList
        get maxHeightFluidType(): Internal.FluidType
        get z(): number
        get server(): Internal.MinecraftServer
        get addedToWorld(): boolean
        get firstPassenger(): Internal.Entity
        get soundSource(): Internal.SoundSource
        set fabricBalmData(arg0: Internal.CompoundTag_)
        get pose(): Internal.Pose
        get lookAngle(): Vec3d
        get permissionLevel(): number
        get motionZ(): number
        get invisible(): boolean
        set z(z: number)
        /**
         * @deprecated
        */
        get blockStateOnLegacy(): Internal.BlockState
        get y(): number
        get profile(): Internal.GameProfile
        set viewScale(arg0: number)
        set levelCallback(arg0: Internal.EntityInLevelCallback_)
        /**
         * @deprecated
        */
        get pushedByFluid(): boolean
        get airSupply(): number
        get crouching(): boolean
        get player(): boolean
        get animal(): boolean
        get motionDirection(): Internal.Direction
        set y(y: number)
        get feetBlockState(): Internal.BlockState
        get fabricBalmData(): Internal.CompoundTag
        get commandSenderWorld(): Internal.Level
        get customName(): net.minecraft.network.chat.Component
        get class(): typeof any
        get visuallySwimming(): boolean
        get maxAirSupply(): number
        get fireImmuneTicks(): number
        get facing(): Internal.Direction
        get height(): number
        get swimming(): boolean
        get boundingBoxForCulling(): Internal.AABB
        set sprinting(arg0: boolean)
        set x(x: number)
        get nameTagOffsetY(): number
        get invulnerable(): boolean
        get inLava(): boolean
        get portalWaitTime(): number
        get inWater(): boolean
        get blockStateOn(): Internal.BlockState
        get fluidJumpThreshold(): number
        set airSupply(arg0: number)
        get onPos(): BlockPos
        get rootVehicle(): Internal.Entity
        get blockPosBelowThatAffectsMyMovement(): BlockPos
        get noGravity(): boolean
        get stepHeight(): number
        set remainingFireTicks(arg0: number)
        get cachedFeetBlockState(): Internal.BlockState
        /**
         * @deprecated
        */
        get onPosLegacy(): BlockPos
        set pos(arg0: Vec3d_)
        get uuid(): Internal.UUID
        get armorSlots(): Internal.Iterable<Internal.ItemStack>
        set silent(arg0: boolean)
        get swimSplashSound(): Internal.SoundEvent
        get onPortalCooldown(): boolean
        set pitch(arg0: number)
        get multipartEntity(): boolean
        get parts(): Internal.PartEntity<any>[]
        get alwaysTicking(): boolean
        get bbWidth(): number
        get forgePersistentData(): Internal.CompoundTag
        set invulnerable(arg0: boolean)
        get "name()"(): net.minecraft.network.chat.Component
        get inFluidType(): boolean
        get typeName(): net.minecraft.network.chat.Component
        get ticksRequiredToFreeze(): number
        set glowing(arg0: boolean)
        get alive(): boolean
        get bbHeight(): number
        get username(): string
        get tags(): Internal.Set<string>
        get pickable(): boolean
        set YHeadRot(arg0: number)
        get pickResult(): Internal.ItemStack
        get percentFrozen(): number
        get randomY(): number
        set portalCooldown(arg0: number)
        get displayName(): net.minecraft.network.chat.Component
        set position(block: Internal.BlockContainerJS_)
        set pose(arg0: Internal.Pose_)
        get entityType(): Internal.EntityType<any>
        get waterCreature(): boolean
        get passengersRidingOffset(): number
        get "server()"(): Internal.MinecraftServer
        get frame(): boolean
        get pushable(): boolean
        set YBodyRot(arg0: number)
        set motionY(y: number)
        set noGravity(arg0: boolean)
        get indirectPassengers(): Internal.Iterable<any>
        get controlledByLocalInstance(): boolean
        get monster(): boolean
        get horizontalFacing(): Internal.Direction
        set id(arg0: number)
        get type(): string
        get passenger(): boolean
        get flapping(): boolean
        get viewScale(): number
        set motionX(x: number)
        get movementEmission(): Internal.Entity$MovementEmission
        get handSlots(): Internal.Iterable<Internal.ItemStack>
        get visualRotationYInDegrees(): number
        get discrete(): boolean
        get teamColor(): number
        set nbt(nbt: Internal.CompoundTag_)
        get level(): Internal.Level
        get blockJumpFactor(): number
        get freezing(): boolean
        get fullyFrozen(): boolean
        set sharedFlagOnFire(arg0: boolean)
        pos: BlockPos;
        direction: Internal.Direction;
        static readonly HANGING_ENTITY: Internal.Predicate<Internal.Entity>;
    }
    type HangingEntity_ = HangingEntity;
}
declare namespace divinerpg.items.vanilla {
    class ItemStaff extends Internal.ItemModRanged {
        constructor(arg0: number, arg1: number)
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        allowContinuingBlockBreaking(player: Internal.Player_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        moonlight$addAdditionalBehavior(placementOverride: Internal.AdditionalItemPlacement_): void;
        isFireResistant(): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        moonlight$getClientAnimationExtension(): any;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        fabric_setCustomDamageHandler(handler: Internal.CustomDamageHandler_): void;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getBarColor(arg0: Internal.ItemStack_): number;
        getOrCreateDescriptionId(): string;
        getItem(): Internal.Item;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): InteractionResult;
        moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        moonlight$setClientAnimationExtension(obj: any): void;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        handler$dfl000$revelationary$getCloakedName(stack: Internal.ItemStack_, callbackInfoReturnable: Internal.CallbackInfoReturnable_<any>): void;
        isEdible(): boolean;
        getAttributeModifiers(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        cardinal_createComponents(stack: Internal.ItemStack_): Internal.ComponentContainer;
        isFoil(arg0: Internal.ItemStack_): boolean;
        "getAttributeModifiers(net.minecraft.world.entity.EquipmentSlot,net.minecraft.world.item.ItemStack)"(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        fabric_getEquipmentSlotProvider(): Internal.EquipmentSlotProvider;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        owo$tab(): number;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vector3f;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        "getAttributeModifiers(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.EquipmentSlot)"(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        allowNbtUpdateAnimation(player: Internal.Player_, hand: Internal.InteractionHand_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        fabric_getCachedItemVariant(): Internal.ItemVariant;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        fabric_getCustomDamageHandler(): Internal.CustomDamageHandler;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        static getPlayerPOVHitResult(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.ClipContext$Fluid_): Internal.BlockHitResult;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        equals(arg0: any): boolean;
        setRarity(arg0: Internal.Rarity_): void;
        getRecipeRemainder(stack: Internal.ItemStack_): Internal.ItemStack;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        /**
         * @deprecated
        */
        onDestroyed(arg0: Internal.ItemEntity_): void;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        canBeHurtBy(arg0: DamageSource_): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        fabric_setEquipmentSlotProvider(equipmentSlotProvider: Internal.EquipmentSlotProvider_): void;
        getDescriptionId(): string;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        zeta$setHumanoidArmorModel(arg0: Internal.HumanoidArmorModelGetter_): void;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: DamageSource_): void;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        getDescription(): net.minecraft.network.chat.Component;
        owo$stackGenerator(): Internal.BiConsumer<any, any>;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        useOn(arg0: Internal.UseOnContext_): InteractionResult;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        handler$ebb000$connectormod$redirectIsPiglinCurrency(arg0: Internal.ItemStack_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        setAttackDamage(attackDamage: number): void;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        toString(): string;
        /**
         * @deprecated
        */
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        modifyReturnValue$ffm000$quark$overrideOtherStackedOnMe(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_, arg3: Internal.Slot_, arg4: Internal.ClickAction_, arg5: Internal.Player_, arg6: Internal.SlotAccess_): boolean;
        getId(): string;
        handler$fbm000$moonlight$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        isSuitableFor(stack: Internal.ItemStack_, state: Internal.BlockState_): boolean;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        puzzleslib$setRenderProperties(arg0: any): void;
        notify(): void;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        zeta$setBlockEntityWithoutLevelRenderer(arg0: Internal.BlockEntityWithoutLevelRenderer_): void;
        handler$cog000$croptopia$overrideConstructor(arg0: Internal.Item$Properties_, arg1: Internal.CallbackInfo_): void;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        getEatingSound(): Internal.SoundEvent;
        owo$setGroup(group: Internal.CreativeModeTab_): void;
        puzzleslib$getRenderProperties(): any;
        canBeDepleted(): boolean;
        getDamage(arg0: Internal.ItemStack_): number;
        wait(arg0: number, arg1: number): void;
        getMod(): string;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        owo$group(): Internal.CreativeModeTab;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        modifyReturnValue$ffm000$quark$overrideStackedOnOther(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_): boolean;
        get drinkingSound(): Internal.SoundEvent
        get fireResistant(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set maxDamage(arg0: number)
        get orCreateDescriptionId(): string
        get item(): Internal.Item
        get class(): typeof any
        get renderPropertiesInternal(): any
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        get edible(): boolean
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        set nameKey(arg0: string)
        get idLocation(): ResourceLocation
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
        set rarity(arg0: Internal.Rarity_)
        get complex(): boolean
        get descriptionId(): string
        get creativeTab(): string
        set burnTime(i: number)
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        set itemBuilder(b: Internal.ItemBuilder_)
        set attackDamage(attackDamage: number)
        /**
         * @deprecated
        */
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        /**
         * @deprecated
        */
        get maxStackSize(): number
        get eatingSound(): Internal.SoundEvent
        get mod(): string
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
    }
    type ItemStaff_ = ItemStaff;
}
