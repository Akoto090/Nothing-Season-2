/// <reference path="./internal_*.d.ts" />
declare namespace dev.emi.emi.mixin.accessor {
    interface ShovelItemAccessor {
        getPathStates(): Internal.Map<Internal.Block, Internal.BlockState>;
        get pathStates(): Internal.Map<Internal.Block, Internal.BlockState>
    }
    type ShovelItemAccessor_ = ShovelItemAccessor;
}
declare namespace Internal {
    interface MouseWheelListener extends Internal.EventListener {
        abstract mouseWheelMoved(arg0: Internal.MouseWheelEvent_): void;
        (arg0: Internal.MouseWheelEvent): void;
    }
    type MouseWheelListener_ = ((arg0: Internal.MouseWheelEvent)=> void) | MouseWheelListener;
    class ParticleTypes$1 extends Internal.ParticleType<T> {
        constructor(arg0: boolean, arg1: Internal.ParticleOptions$Deserializer_<any>, arg2: Internal.Function_<any, any>)
        getClass(): typeof any;
        getDeserializer(): Internal.ParticleOptions$Deserializer<T>;
        hashCode(): number;
        toString(): string;
        codec(): Internal.Codec<T>;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        getOverrideLimiter(): boolean;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
        get deserializer(): Internal.ParticleOptions$Deserializer<T>
        get overrideLimiter(): boolean
        readonly f_123827_: Internal.Function<any, any>;
    }
    type ParticleTypes$1_ = ParticleTypes$1;
    class AttackDamageMobEffect extends Internal.MobEffect {
        constructor(arg0: Internal.MobEffectCategory_, arg1: number, arg2: number)
        getDisplayName(): net.minecraft.network.chat.Component;
        getClass(): typeof any;
        addAttributeModifier(arg0: Internal.Attribute_, arg1: string, arg2: number, arg3: Internal.AttributeModifier$Operation_): Internal.MobEffect;
        isInstantenous(): boolean;
        addAttributeModifiers(arg0: Internal.LivingEntity_, arg1: Internal.AttributeMap_, arg2: number): void;
        applyInstantenousEffect(arg0: Internal.Entity_, arg1: Internal.Entity_, arg2: Internal.LivingEntity_, arg3: number, arg4: number): void;
        notify(): void;
        isBeneficial(): boolean;
        wait(arg0: number, arg1: number): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientMobEffectExtensions>): void;
        getEffectRendererInternal(): any;
        getColor(): number;
        removeAttributeModifiers(arg0: Internal.LivingEntity_, arg1: Internal.AttributeMap_, arg2: number): void;
        applyEffectTick(arg0: Internal.LivingEntity_, arg1: number): void;
        getAttributeModifierValue(arg0: number, arg1: Internal.AttributeModifier_): number;
        getSortOrder(arg0: Internal.MobEffectInstance_): number;
        getDescriptionId(): string;
        static getIdFromNullable(arg0: Internal.MobEffect_): number;
        getCategory(): Internal.MobEffectCategory;
        toString(): string;
        getCurativeItems(): Internal.List<Internal.ItemStack>;
        notifyAll(): void;
        setFactorDataFactory(arg0: Internal.Supplier_<Internal.MobEffectInstance$FactorData>): Internal.MobEffect;
        createFactorData(): Internal.Optional<Internal.MobEffectInstance$FactorData>;
        static byId(arg0: number): Internal.MobEffect;
        hashCode(): number;
        getAttributeModifiers(): Internal.Map<Internal.Attribute, Internal.AttributeModifier>;
        wait(): void;
        getOrCreateDescriptionId(): string;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        isDurationEffectTick(arg0: number, arg1: number): boolean;
        static getId(arg0: Internal.MobEffect_): number;
        get displayName(): net.minecraft.network.chat.Component
        get class(): typeof any
        get instantenous(): boolean
        get beneficial(): boolean
        get effectRendererInternal(): any
        get color(): number
        get descriptionId(): string
        get category(): Internal.MobEffectCategory
        get curativeItems(): Internal.List<Internal.ItemStack>
        set factorDataFactory(arg0: Internal.Supplier_<Internal.MobEffectInstance$FactorData>)
        get attributeModifiers(): Internal.Map<Internal.Attribute, Internal.AttributeModifier>
        get orCreateDescriptionId(): string
        readonly multiplier: number;
    }
    type AttackDamageMobEffect_ = AttackDamageMobEffect;
    interface CarvingMask$Mask {
        abstract test(arg0: number, arg1: number, arg2: number): boolean;
        (arg0: number, arg1: number, arg2: number): boolean;
    }
    type CarvingMask$Mask_ = ((arg0: number, arg1: number, arg2: number)=> boolean) | CarvingMask$Mask;
    class BlockLightDetectorBlock extends Internal.DetectorBlock {
        constructor(settings: Internal.BlockBehaviour$Properties_)
        getSignal(state: Internal.BlockState_, world: Internal.BlockGetter_, pos: BlockPos_, direction: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getSettings(): Internal.BlockBehaviour$Properties;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        getTypeData(): Internal.CompoundTag;
        setFriction(arg0: number): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        getRenderShape(state: Internal.BlockState_): Internal.RenderShape;
        getSpeedFactor(): number;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        playerDestroy(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Player_): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Internal.Player_): Internal.ItemStack;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        getRenderPropertiesInternal(): any;
        needsDynamicNodeTypeCheck(): boolean;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        setRequiresTool(v: boolean): void;
        asBlock(): Internal.Block;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        puzzleslib$setItem(arg0: Internal.Item_): void;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        /**
         * @deprecated
        */
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        tick(state: Internal.BlockState_, world: Internal.ServerLevel_, pos: BlockPos_, random: Internal.RandomSource_): void;
        lychee$isTickable(): boolean;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        use(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, player: Internal.Player_, hand: Internal.InteractionHand_, hit: Internal.BlockHitResult_): InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        spawnDestroyParticles(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_): void;
        wait(): void;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Internal.Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(shape: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        setIsRandomlyTicking(arg0: boolean): void;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        registerDefaultState(arg0: Internal.BlockState_): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        isSignalSource(state: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        /**
         * @deprecated
        */
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        /**
         * @deprecated
        */
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        isAir(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        needsDynamicBurningCheck(): boolean;
        getDescriptionId(): string;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        handler$bob000$radium$postConstruct(p_i241196_1_: Internal.BlockBehaviour$Properties_, ci: Internal.CallbackInfo_): void;
        tryDropExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: Internal.ItemStack_, arg3: Internal.IntProvider_): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        handler$eok000$particular$spawnParticles(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, random: Internal.RandomSource_, ci: Internal.CallbackInfo_): void;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        setDrops(arg0: ResourceLocation_): void;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        useShapeForLightOcclusion(state: Internal.BlockState_): boolean;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        getBlockProperties(): Internal.BlockBehaviour$Properties;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getShapeForEachState(arg0: Internal.Function_<Internal.BlockState, Internal.VoxelShape>): Internal.ImmutableMap<Internal.BlockState, Internal.VoxelShape>;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        onPlace(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, oldState: Internal.BlockState_, notify: boolean): void;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        getFriction(): number;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        createBlockStateDefinition(arg0: Internal.StateDefinition$Builder_<Internal.Block, Internal.BlockState>): void;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        notify(): void;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        handler$dji000$spectrum$afterBreak(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        setDestroySpeed(v: number): void;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        handler$zbh000$additionalentityattributes$additionalEntityAttributes$saveBreakingPlayer(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        arch$holder(): Internal.Holder<Internal.Block>;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): void;
        getShape(state: Internal.BlockState_, world: Internal.BlockGetter_, pos: BlockPos_, context: Internal.CollisionContext_): Internal.VoxelShape;
        lychee$setTickable(arg0: boolean): void;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        get settings(): Internal.BlockBehaviour$Properties
        /**
         * @deprecated
        */
        get explosionResistance(): number
        get typeData(): Internal.CompoundTag
        set friction(arg0: number)
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get descriptionId(): string
        get jumpFactor(): number
        set drops(arg0: ResourceLocation_)
        set speedFactor(arg0: number)
        get blockProperties(): Internal.BlockBehaviour$Properties
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get mod(): string
        set hasCollision(arg0: boolean)
    }
    type BlockLightDetectorBlock_ = BlockLightDetectorBlock;
    class MASandFlowerBlock extends Internal.MAFlowerBlock {
        constructor(arg0: Internal.BlockBehaviour$Properties_)
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getSettings(): Internal.BlockBehaviour$Properties;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        getTypeData(): Internal.CompoundTag;
        setFriction(arg0: number): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getSpeedFactor(): number;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        playerDestroy(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Player_): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Internal.Player_): Internal.ItemStack;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        getRenderPropertiesInternal(): any;
        needsDynamicNodeTypeCheck(): boolean;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        setRequiresTool(v: boolean): void;
        asBlock(): Internal.Block;
        abstract getPlant(arg0: Internal.BlockGetter_, arg1: BlockPos_): Internal.BlockState;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        puzzleslib$setItem(arg0: Internal.Item_): void;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        /**
         * @deprecated
        */
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        lychee$isTickable(): boolean;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        /**
         * @deprecated
        */
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        mayPlaceOn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        spawnDestroyParticles(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_): void;
        wait(): void;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Internal.Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(shape: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        setIsRandomlyTicking(arg0: boolean): void;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        registerDefaultState(arg0: Internal.BlockState_): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        /**
         * @deprecated
        */
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        isAir(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        needsDynamicBurningCheck(): boolean;
        getDescriptionId(): string;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        handler$bob000$radium$postConstruct(p_i241196_1_: Internal.BlockBehaviour$Properties_, ci: Internal.CallbackInfo_): void;
        tryDropExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: Internal.ItemStack_, arg3: Internal.IntProvider_): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        handler$eok000$particular$spawnParticles(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, random: Internal.RandomSource_, ci: Internal.CallbackInfo_): void;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        setDrops(arg0: ResourceLocation_): void;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        getBlockProperties(): Internal.BlockBehaviour$Properties;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getShapeForEachState(arg0: Internal.Function_<Internal.BlockState, Internal.VoxelShape>): Internal.ImmutableMap<Internal.BlockState, Internal.VoxelShape>;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        getFriction(): number;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        createBlockStateDefinition(arg0: Internal.StateDefinition$Builder_<Internal.Block, Internal.BlockState>): void;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        notify(): void;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        handler$dji000$spectrum$afterBreak(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        setDestroySpeed(v: number): void;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        handler$zbh000$additionalentityattributes$additionalEntityAttributes$saveBreakingPlayer(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        arch$holder(): Internal.Holder<Internal.Block>;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        getPlantType(arg0: Internal.BlockGetter_, arg1: BlockPos_): Internal.PlantType;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): void;
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        lychee$setTickable(arg0: boolean): void;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        get settings(): Internal.BlockBehaviour$Properties
        /**
         * @deprecated
        */
        get explosionResistance(): number
        get typeData(): Internal.CompoundTag
        set friction(arg0: number)
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get descriptionId(): string
        get jumpFactor(): number
        set drops(arg0: ResourceLocation_)
        set speedFactor(arg0: number)
        get blockProperties(): Internal.BlockBehaviour$Properties
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get mod(): string
        set hasCollision(arg0: boolean)
    }
    type MASandFlowerBlock_ = MASandFlowerBlock;
    class JsonObject extends Internal.JsonElement {
        constructor()
        deepCopy(): this;
        notify(): void;
        getAsLong(): number;
        isJsonArray(): boolean;
        add(arg0: string, arg1: Internal.JsonElement_): void;
        "addProperty(java.lang.String,java.lang.Character)"(arg0: string, arg1: string): void;
        addProperty(arg0: string, arg1: string): void;
        entrySet(): Internal.Set<Internal.Map$Entry<string, Internal.JsonElement>>;
        getAsJsonArray(arg0: string): Internal.JsonArray;
        /**
         * @deprecated
        */
        getAsCharacter(): string;
        getAsByte(): number;
        wait(): void;
        asMap(): Internal.Map<string, Internal.JsonElement>;
        getAsShort(): number;
        getClass(): typeof any;
        keySet(): Internal.Set<string>;
        getAsBigDecimal(): Internal.BigDecimal;
        get(arg0: string): Internal.JsonElement;
        "addProperty(java.lang.String,java.lang.Number)"(arg0: string, arg1: number): void;
        wait(arg0: number, arg1: number): void;
        getAsJsonPrimitive(): Internal.JsonPrimitive;
        "addProperty(java.lang.String,java.lang.String)"(arg0: string, arg1: string): void;
        getAsFloat(): number;
        getAsJsonObject(arg0: string): this;
        isJsonObject(): boolean;
        getAsJsonArray(): Internal.JsonArray;
        remove(arg0: string): Internal.JsonElement;
        addProperty(arg0: string, arg1: number): void;
        "addProperty(java.lang.String,java.lang.Boolean)"(arg0: string, arg1: boolean): void;
        getAsBoolean(): boolean;
        toString(): string;
        isJsonPrimitive(): boolean;
        isJsonNull(): boolean;
        getAsJsonPrimitive(arg0: string): Internal.JsonPrimitive;
        notifyAll(): void;
        getAsBigInteger(): Internal.BigInteger;
        getAsDouble(): number;
        addProperty(arg0: string, arg1: string): void;
        hashCode(): number;
        size(): number;
        getAsInt(): number;
        getAsString(): string;
        has(arg0: string): boolean;
        getAsNumber(): number;
        getAsJsonObject(): this;
        wait(arg0: number): void;
        addProperty(arg0: string, arg1: boolean): void;
        equals(arg0: any): boolean;
        getAsJsonNull(): Internal.JsonNull;
        get asLong(): number
        get jsonArray(): boolean
        /**
         * @deprecated
        */
        get asCharacter(): string
        get asByte(): number
        get asShort(): number
        get class(): typeof any
        get asBigDecimal(): Internal.BigDecimal
        get asJsonPrimitive(): Internal.JsonPrimitive
        get asFloat(): number
        get jsonObject(): boolean
        get asJsonArray(): Internal.JsonArray
        get asBoolean(): boolean
        get jsonPrimitive(): boolean
        get jsonNull(): boolean
        get asBigInteger(): Internal.BigInteger
        get asDouble(): number
        get asInt(): number
        get asString(): string
        get asNumber(): number
        get asJsonObject(): Internal.JsonObject
        get asJsonNull(): Internal.JsonNull
    }
    type JsonObject_ = JsonObject;
    interface NarrationSupplier {
        abstract updateNarration(arg0: Internal.NarrationElementOutput_): void;
        (arg0: Internal.NarrationElementOutput): void;
    }
    type NarrationSupplier_ = ((arg0: Internal.NarrationElementOutput)=> void) | NarrationSupplier;
    class FallingBlockEntity extends Internal.Entity implements Internal.LycheeFallingBlockEntity {
        constructor(arg0: Internal.Level_, arg1: number, arg2: number, arg3: number, arg4: Internal.BlockState_)
        constructor(arg0: Internal.EntityType_<Internal.FallingBlockEntity>, arg1: Internal.Level_)
        isInWall(): boolean;
        getAllSlots(): Internal.Iterable<Internal.ItemStack>;
        getUpVector(arg0: number): Vec3d;
        gameEvent(arg0: Internal.GameEvent_, arg1: Internal.Entity_): void;
        remove(arg0: Internal.Entity$RemovalReason_): void;
        getBlockZ(): number;
        isSuppressingBounce(): boolean;
        dampensVibrations(): boolean;
        hasAttached(type: Internal.AttachmentType_<any>): boolean;
        isSilent(): boolean;
        "playSound(net.minecraft.sounds.SoundEvent)"(id: Internal.SoundEvent_): void;
        getPitch(): number;
        newDoubleList(...arg0: number[]): Internal.ListTag;
        isOnFire(): boolean;
        rotate(arg0: Internal.Rotation_): number;
        modify$zlf000$supplementaries$concreteFix(original: BlockPos_): BlockPos;
        getPositionCodec(): Internal.VecDeltaCodec;
        getPassengersAndSelf(): Internal.Stream<any>;
        getPickedResult(arg0: Internal.HitResult_): Internal.ItemStack;
        setMaxUpStep(arg0: number): void;
        /**
         * @deprecated
        */
        updateFluidHeightAndDoFluidPushing(arg0: Internal.TagKey_<Internal.Fluid>, arg1: number): boolean;
        runCommandSilent(command: string): number;
        setPosition(x: number, y: number, z: number): void;
        chunkPosition(): Internal.ChunkPos;
        rayTrace(distance: number, fluids: boolean): Internal.RayTraceResultJS;
        gameEvent(arg0: Internal.GameEvent_): void;
        alwaysAccepts(): boolean;
        isShiftKeyDown(): boolean;
        isInFluidType(arg0: Internal.FluidState_): boolean;
        setUUID(arg0: Internal.UUID_): void;
        checkBelowWorld(): void;
        isVisuallyCrawling(): boolean;
        setMotionZ(z: number): void;
        setFluidTypeHeight(arg0: Internal.FluidType_, arg1: number): void;
        "deserializeNBT(net.minecraft.nbt.Tag)"(arg0: Internal.Tag_): void;
        handler$zza000$step_height_entity_attribute$getStepHeight(cir: Internal.CallbackInfoReturnable_<any>): void;
        canFreeze(): boolean;
        ignoreExplosion(): boolean;
        teleportRelative(arg0: number, arg1: number, arg2: number): void;
        getBlockY(): number;
        isSpectator(): boolean;
        isInWaterOrBubble(): boolean;
        updateFluidHeightAndDoFluidPushing(): void;
        spawnAtLocation(arg0: Internal.ItemLike_, arg1: number): Internal.ItemEntity;
        getPersistentData(): Internal.CompoundTag;
        handler$cil001$dsurround$playStepSound(pos: BlockPos_, state: Internal.BlockState_, ci: Internal.CallbackInfo_): void;
        getPortalCooldown(): number;
        getItem(): Internal.ItemStack;
        causeFallDamage(arg0: number, arg1: number, arg2: DamageSource_): boolean;
        getRandomZ(arg0: number): number;
        getPosition(arg0: number): Vec3d;
        setRemoved(arg0: Internal.Entity$RemovalReason_): void;
        getAttachedOrCreate<A>(type: Internal.AttachmentType_<A>, initializer: Internal.Supplier_<A>): A;
        isInWaterRainOrBubble(): boolean;
        getDistanceSq(arg0: number, arg1: number, arg2: number): number;
        getRemovalReason(): Internal.Entity$RemovalReason;
        wait(arg0: number): void;
        isIgnoringBlockTriggers(): boolean;
        isInRain(): boolean;
        getHandHoldingItemAngle(arg0: Internal.Item_): Vec3d;
        onFlap(): void;
        canUpdate(arg0: boolean): void;
        getEyeInFluidType(): Internal.FluidType;
        distanceToSqr(arg0: Vec3d_): number;
        syncComponent(key: Internal.ComponentKey_<any>): void;
        resetFallDistance(): void;
        canSprint(): boolean;
        modifyAttached<A>(type: Internal.AttachmentType_<A>, modifier: Internal.UnaryOperator_<A>): A;
        blockPosition(): BlockPos;
        isSteppingCarefully(): boolean;
        setLevel(arg0: Internal.Level_): void;
        setBoundingBox(arg0: Internal.AABB_): void;
        isAmbientCreature(): boolean;
        getSoundFromFluidType(arg0: Internal.FluidType_, arg1: Internal.SoundAction_): Internal.SoundEvent;
        "spawnAtLocation(net.minecraft.world.item.ItemStack,float)"(arg0: Internal.ItemStack_, arg1: number): Internal.ItemEntity;
        addAdditionalSaveData(arg0: Internal.CompoundTag_): void;
        getBlockX(): number;
        /**
         * @deprecated
        */
        getLightLevelDependentMagicValue(): number;
        getEncodeId(): string;
        getY(arg0: number): number;
        getBlock(): Internal.BlockContainerJS;
        getNbt(): Internal.CompoundTag;
        setInvisible(arg0: boolean): void;
        invalidateCaps(): void;
        getName(): net.minecraft.network.chat.Component;
        canEnterPose(arg0: Internal.Pose_): boolean;
        onGround(): boolean;
        getControlledVehicle(): Internal.Entity;
        isOnSameTeam(arg0: Internal.Entity_): boolean;
        attack(arg0: DamageSource_, arg1: number): boolean;
        getBlockSpeedFactor(): number;
        onInsideBubbleColumn(arg0: boolean): void;
        isInFluidType(arg0: Internal.BiPredicate_<Internal.FluidType, number>): boolean;
        tick(): void;
        getEyePosition(): Vec3d;
        getEyeHeight(): number;
        hasPassenger(arg0: Internal.Predicate_<Internal.Entity>): boolean;
        getYaw(): number;
        setHurtsEntities(arg0: number, arg1: number): void;
        isPushedByFluid(arg0: Internal.FluidType_): boolean;
        getComponentContainer(): Internal.ComponentContainer;
        tryCheckInsideBlocks(): void;
        hasPermissions(arg0: number): boolean;
        getCapability<T>(arg0: Internal.Capability_<T>, arg1: Internal.Direction_): Internal.LazyOptional<T>;
        teleportTo(dimension: ResourceLocation_, x: number, y: number, z: number, yaw: number, pitch: number): void;
        onInsideBlock(arg0: Internal.BlockState_): void;
        setCustomNameVisible(arg0: boolean): void;
        isAlliedTo(arg0: Internal.Team_): boolean;
        handler$cpk000$mna$playSound(arg0: Internal.SoundEvent_, arg1: number, arg2: number, arg3: Internal.CallbackInfo_): void;
        getAttachedOrCreate<A>(type: Internal.AttachmentType_<A>): A;
        getControllingPassenger(): Internal.LivingEntity;
        getRemainingFireTicks(): number;
        limitPistonMovement(arg0: Vec3d_): Vec3d;
        getScriptType(): Internal.ScriptType;
        onlyOpCanSetNbt(): boolean;
        startRiding(arg0: Internal.Entity_): boolean;
        saveWithoutId(arg0: Internal.CompoundTag_): Internal.CompoundTag;
        getForward(): Vec3d;
        serializeNBT(): Internal.Tag;
        addMotion(arg0: number, arg1: number, arg2: number): void;
        fireImmune(): boolean;
        getMaxFallDistance(): number;
        getZ(arg0: number): number;
        hasCustomOutlineRendering(arg0: Internal.Player_): boolean;
        getId(): number;
        canBeHitByProjectile(): boolean;
        getTicksFrozen(): number;
        getRecipientsForComponentSync(): Internal.Iterable<any>;
        getRandomX(arg0: number): number;
        handler$dkf000$spectrum$dropStack(stack: Internal.ItemStack_, cir: Internal.CallbackInfoReturnable_<any>): void;
        getEyeY(): number;
        spawnAtLocation(arg0: Internal.ItemStack_, arg1: number): Internal.ItemEntity;
        pick(arg0: number, arg1: number, arg2: boolean): Internal.HitResult;
        setStatusMessage(message: net.minecraft.network.chat.Component_): void;
        fabric_readAttachmentsFromNbt(nbt: Internal.CompoundTag_): void;
        getBoundingBox(): Internal.AABB;
        isInWaterOrRain(): boolean;
        isDescending(): boolean;
        setItemSlot(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): void;
        getYHeadRot(): number;
        equals(arg0: any): boolean;
        handler$cpk000$mna$canEnterPose(arg0: Internal.Pose_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        getViewYRot(arg0: number): number;
        getSwimSound(): Internal.SoundEvent;
        dismountsUnderwater(): boolean;
        playerTouch(arg0: Internal.Player_): void;
        addTag(arg0: string): boolean;
        getAddEntityPacket(): Internal.Packet<Internal.ClientGamePacketListener>;
        getEyeHeight(arg0: Internal.Pose_): number;
        syncPacketPositionCodec(arg0: number, arg1: number, arg2: number): void;
        doWaterSplashEffect(): void;
        getTeam(): Internal.Team;
        canAddPassenger(arg0: Internal.Entity_): boolean;
        shouldRenderAtSqrDistance(arg0: number): boolean;
        getAttachedOrSet<A>(type: Internal.AttachmentType_<A>, defaultValue: A): A;
        damageSources(): Internal.DamageSources;
        removeAttached<A>(type: Internal.AttachmentType_<A>): A;
        setTicksFrozen(arg0: number): void;
        recreateFromPacket(arg0: Internal.ClientboundAddEntityPacket_): void;
        getMyRidingOffset(): number;
        canStartSwimming(): boolean;
        dismountTo(arg0: number, arg1: number, arg2: number): void;
        setDeltaMovement(arg0: Vec3d_): void;
        getLeashOffset(arg0: number): Vec3d;
        handler$edh000$architectury$handleLand(ci: Internal.CallbackInfo_, block: Internal.Block_, blockPos2: BlockPos_, bl: boolean, bl2: boolean, d: number, blockState: Internal.BlockState_): void;
        hasCustomName(): boolean;
        isLiving(): boolean;
        isGlowing(): boolean;
        getX(): number;
        "isInFluidType(net.minecraft.world.level.material.FluidState)"(arg0: Internal.FluidState_): boolean;
        isVehicle(): boolean;
        static transfer(original: Internal.AttachmentTarget_, target: Internal.AttachmentTarget_, isDeath: boolean): void;
        getLeashOffset(): Vec3d;
        isAttackable(): boolean;
        spawnAtLocation(arg0: Internal.ItemStack_): Internal.ItemEntity;
        processPortalCooldown(): void;
        mergeNbt(tag: Internal.CompoundTag_): Internal.Entity;
        thunderHit(arg0: Internal.ServerLevel_, arg1: Internal.LightningBolt_): void;
        setIsInPowderSnow(arg0: boolean): void;
        doEnchantDamageEffects(arg0: Internal.LivingEntity_, arg1: Internal.Entity_): void;
        setCustomName(arg0: net.minecraft.network.chat.Component_): void;
        getSlot(arg0: number): Internal.SlotAccess;
        handleNetherPortal(): void;
        "deserializeNBT(net.minecraft.nbt.CompoundTag)"(arg0: Internal.CompoundTag_): void;
        getTeamId(): string;
        stopSeenByPlayer(arg0: Internal.ServerPlayer_): void;
        canBeRiddenUnderFluidType(arg0: Internal.FluidType_, arg1: Internal.Entity_): boolean;
        wthit_getTypeName(): net.minecraft.network.chat.Component;
        isUnderWater(): boolean;
        getSwimHighSpeedSplashSound(): Internal.SoundEvent;
        stopRiding(): void;
        getBoundingBoxForPose(arg0: Internal.Pose_): Internal.AABB;
        isCustomNameVisible(): boolean;
        isSupportedBy(arg0: BlockPos_): boolean;
        getPistonPushReaction(): Internal.PushReaction;
        getX(arg0: number): number;
        shouldRiderSit(): boolean;
        lookAt(arg0: Internal.EntityAnchorArgument$Anchor_, arg1: Vec3d_): void;
        captureDrops(arg0: Internal.Collection_<Internal.ItemEntity>): Internal.Collection<Internal.ItemEntity>;
        getSelfAndPassengers(): Internal.Stream<any>;
        rayTrace(distance: number): Internal.RayTraceResultJS;
        getDeltaMovement(): Vec3d;
        isInFluidType(arg0: Internal.FluidType_): boolean;
        getFluidMotionScale(arg0: Internal.FluidType_): number;
        getMotionX(): number;
        "onSyncedDataUpdated(java.util.List)"(arg0: Internal.List_<Internal.SynchedEntityData$DataValue<any>>): void;
        hasPassenger(arg0: Internal.Entity_): boolean;
        syncComponent(key: Internal.ComponentKey_<any>, packetWriter: Internal.ComponentPacketWriter_, predicate: Internal.PlayerSyncPredicate_): void;
        hasIndirectPassenger(arg0: Internal.Entity_): boolean;
        getEntityData(): Internal.SynchedEntityData;
        setSecondsOnFire(arg0: number): void;
        moveTo(arg0: number, arg1: number, arg2: number): void;
        "getDisplayName()"(): net.minecraft.network.chat.Component;
        handleInsidePortal(arg0: BlockPos_): void;
        getStartPos(): BlockPos;
        calculateViewVector(arg0: number, arg1: number): Vec3d;
        setMotion(arg0: number, arg1: number, arg2: number): void;
        playSound(arg0: Internal.SoundEvent_): void;
        makeBoundingBox(): Internal.AABB;
        absMoveTo(arg0: number, arg1: number, arg2: number): void;
        onBelowWorld(): void;
        isOnRails(): boolean;
        getAttachedOrThrow<A>(type: Internal.AttachmentType_<A>): A;
        restoreFrom(arg0: Internal.Entity_): void;
        reapplyPosition(): void;
        getDimensionChangingDelay(): number;
        isPeacefulCreature(): boolean;
        setOnGround(arg0: boolean): void;
        setYaw(arg0: number): void;
        setPos(arg0: number, arg1: number, arg2: number): void;
        getPickRadius(): number;
        notify(): void;
        getFirstTick(): boolean;
        getVehicle(): Internal.Entity;
        isEffectiveAi(): boolean;
        startRiding(arg0: Internal.Entity_, arg1: boolean): boolean;
        getStringUuid(): string;
        isRemoved(): boolean;
        setSwimming(arg0: boolean): void;
        canHydrateInFluidType(arg0: Internal.FluidType_): boolean;
        teleportToWithTicket(arg0: number, arg1: number, arg2: number): void;
        fillCrashReportCategory(arg0: Internal.CrashReportCategory_): void;
        getRotationVector(): Internal.Vec2;
        refreshDimensions(): void;
        self(): Internal.Entity;
        isSprinting(): boolean;
        "spawnAtLocation(net.minecraft.world.level.ItemLike)"(arg0: Internal.ItemLike_): Internal.ItemEntity;
        getMotionY(): number;
        canCollideWith(arg0: Internal.Entity_): boolean;
        setShiftKeyDown(arg0: boolean): void;
        getEyePosition(arg0: number): Vec3d;
        callOnBrokenAfterFall(arg0: Internal.Block_, arg1: BlockPos_): void;
        getPassengers(): Internal.EntityArrayList;
        getBlockExplosionResistance(arg0: Internal.Explosion_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.FluidState_, arg5: number): number;
        calculateUpVector(arg0: number, arg1: number): Vec3d;
        spawnSprintParticle(): void;
        getFluidFallDistanceModifier(arg0: Internal.FluidType_): number;
        getMaxHeightFluidType(): Internal.FluidType;
        getZ(): number;
        canSpawnSprintParticle(): boolean;
        checkSupportingBlock(arg0: boolean, arg1: Vec3d_): void;
        canRide(arg0: Internal.Entity_): boolean;
        "moveTo(net.minecraft.core.BlockPos,float,float)"(arg0: BlockPos_, arg1: number, arg2: number): void;
        lychee$matched(): void;
        teleportTo(arg0: number, arg1: number, arg2: number): void;
        getServer(): Internal.MinecraftServer;
        moveRelative(arg0: number, arg1: Vec3d_): void;
        getOnPos(arg0: number): BlockPos;
        isAddedToWorld(): boolean;
        getFirstPassenger(): Internal.Entity;
        saveAsPassenger(arg0: Internal.CompoundTag_): boolean;
        getRelativePortalPosition(arg0: Internal.Direction$Axis_, arg1: Internal.BlockUtil$FoundRectangle_): Vec3d;
        interact(arg0: Internal.Player_, arg1: Internal.InteractionHand_): InteractionResult;
        removePassenger(arg0: Internal.Entity_): void;
        getDismountLocationForPassenger(arg0: Internal.LivingEntity_): Vec3d;
        gtceu$setFireImmune(isImmune: boolean): void;
        invokeSetLevel(arg0: Internal.Level_): void;
        checkSlowFallDistance(): void;
        updateInWaterStateAndDoWaterCurrentPushing(): void;
        getSoundSource(): Internal.SoundSource;
        addPassenger(arg0: Internal.Entity_): void;
        setFabricBalmData(arg0: Internal.CompoundTag_): void;
        removeAfterChangingDimensions(): void;
        getPose(): Internal.Pose;
        touchingUnloadedChunk(): boolean;
        getSharedFlag(arg0: number): boolean;
        getLookAngle(): Vec3d;
        setPositionAndRotation(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        checkFallDamage(arg0: number, arg1: boolean, arg2: Internal.BlockState_, arg3: BlockPos_): void;
        setStartPos(arg0: BlockPos_): void;
        getPermissionLevel(): number;
        getMotionZ(): number;
        removeVehicle(): void;
        defineSynchedData(): void;
        nextStep(): number;
        isInvisible(): boolean;
        checkInsideBlocks(): void;
        is(arg0: Internal.Entity_): boolean;
        setZ(z: number): void;
        /**
         * @deprecated
        */
        getBlockStateOnLegacy(): Internal.BlockState;
        getY(): number;
        ejectPassengers(): void;
        hashCode(): number;
        deserializeNBT(arg0: Internal.CompoundTag_): void;
        createHoverEvent(): Internal.HoverEvent;
        getProfile(): Internal.GameProfile;
        static setViewScale(arg0: number): void;
        setLevelCallback(arg0: Internal.EntityInLevelCallback_): void;
        getExitPortal(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: boolean, arg3: Internal.WorldBorder_): Internal.Optional<Internal.BlockUtil$FoundRectangle>;
        showVehicleHealth(): boolean;
        getDistance(pos: BlockPos_): number;
        playSound(arg0: Internal.SoundEvent_, arg1: number, arg2: number): void;
        "areCapsCompatible(net.minecraftforge.common.capabilities.CapabilityDispatcher)"(arg0: Internal.CapabilityDispatcher_): boolean;
        playMuffledStepSound(arg0: Internal.BlockState_, arg1: BlockPos_): void;
        startSeenByPlayer(arg0: Internal.ServerPlayer_): void;
        isOnScoreboardTeam(teamId: string): boolean;
        /**
         * @deprecated
        */
        isPushedByFluid(): boolean;
        position(): Vec3d;
        displayFireAnimation(): boolean;
        turn(arg0: number, arg1: number): void;
        getAirSupply(): number;
        getRopeHoldPosition(arg0: number): Vec3d;
        copyPosition(arg0: Internal.Entity_): void;
        onAddedToWorld(): void;
        "hasPassenger(net.minecraft.world.entity.Entity)"(arg0: Internal.Entity_): boolean;
        isCrouching(): boolean;
        waterSwimSound(): void;
        moveTo(arg0: BlockPos_, arg1: number, arg2: number): void;
        isPlayer(): boolean;
        isAnimal(): boolean;
        readAdditionalSaveData(arg0: Internal.CompoundTag_): void;
        canBeCollidedWith(): boolean;
        getMotionDirection(): Internal.Direction;
        asComponentProvider(): Internal.ComponentProvider;
        setY(y: number): void;
        getFeetBlockState(): Internal.BlockState;
        lavaHurt(): void;
        handleDamageEvent(arg0: DamageSource_): void;
        getFabricBalmData(): Internal.CompoundTag;
        canChangeDimensions(): boolean;
        changeDimension(arg0: Internal.ServerLevel_, arg1: Internal.ITeleporter_): Internal.Entity;
        getCommandSenderWorld(): Internal.Level;
        isHorizontalCollisionMinor(arg0: Vec3d_): boolean;
        positionRider(arg0: Internal.Entity_): void;
        baseTick(): void;
        broadcastToPlayer(arg0: Internal.ServerPlayer_): boolean;
        changeDimension(arg0: Internal.ServerLevel_): Internal.Entity;
        disableDrop(): void;
        setSharedFlag(arg0: number, arg1: boolean): void;
        getEyeHeightAccess(arg0: Internal.Pose_, arg1: Internal.EntityDimensions_): number;
        getCustomName(): net.minecraft.network.chat.Component;
        getClass(): typeof any;
        isVisuallySwimming(): boolean;
        getMaxAirSupply(): number;
        canTrample(arg0: Internal.BlockState_, arg1: BlockPos_, arg2: number): boolean;
        processFlappingMovement(): void;
        attack(hp: number): void;
        canSwimInFluidType(arg0: Internal.FluidType_): boolean;
        getFireImmuneTicks(): number;
        getFacing(): Internal.Direction;
        "hasPassenger(java.util.function.Predicate)"(arg0: Internal.Predicate_<Internal.Entity>): boolean;
        getDimensions(arg0: Internal.Pose_): Internal.EntityDimensions;
        isPassengerOfSameVehicle(arg0: Internal.Entity_): boolean;
        isSwimming(): boolean;
        getBoundingBoxForCulling(): Internal.AABB;
        setSprinting(arg0: boolean): void;
        mayInteract(arg0: Internal.Level_, arg1: BlockPos_): boolean;
        static collideBoundingBox(entity: Internal.Entity_, movement: Vec3d_, entityBoundingBox: Internal.AABB_, world: Internal.Level_, collisions: Internal.List_<any>): Vec3d;
        setRot(arg0: number, arg1: number): void;
        setPortalCooldown(): void;
        setX(x: number): void;
        trackingPosition(): Vec3d;
        getNameTagOffsetY(): number;
        isInvulnerable(): boolean;
        isInLava(): boolean;
        getPortalWaitTime(): number;
        isInWater(): boolean;
        awardKillScore(arg0: Internal.Entity_, arg1: number, arg2: DamageSource_): void;
        getBlockStateOn(): Internal.BlockState;
        getFluidJumpThreshold(): number;
        unsetRemoved(): void;
        "setPositionAndRotation(double,double,double,float,float)"(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        isInvisibleTo(arg0: Internal.Player_): boolean;
        /**
         * @deprecated
        */
        fixupDimensions(): void;
        spectrum$setActuallyTouchingWater(actuallyTouchingWater: boolean): void;
        setAirSupply(arg0: number): void;
        getOnPos(): BlockPos;
        getRootVehicle(): Internal.Entity;
        save(arg0: Internal.CompoundTag_): boolean;
        repositionEntityAfterLoad(): boolean;
        getBlockPosBelowThatAffectsMyMovement(): BlockPos;
        moveTowardsClosestSpace(arg0: number, arg1: number, arg2: number): void;
        isNoGravity(): boolean;
        getStepHeight(): number;
        static getCollisionHorizontalEscapeVector(arg0: number, arg1: number, arg2: number): Vec3d;
        acceptsFailure(): boolean;
        playCombinationStepSounds(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: BlockPos_): void;
        setOnGroundWithKnownMovement(arg0: boolean, arg1: Vec3d_): void;
        setOldPosAndRot(): void;
        isFree(arg0: number, arg1: number, arg2: number): boolean;
        updateSwimming(): void;
        "moveTo(double,double,double)"(arg0: number, arg1: number, arg2: number): void;
        setRemainingFireTicks(arg0: number): void;
        getCachedFeetBlockState(): Internal.BlockState;
        shouldInformAdmins(): boolean;
        canFluidExtinguish(arg0: Internal.FluidType_): boolean;
        rideTick(): void;
        /**
         * @deprecated
        */
        getOnPosLegacy(): BlockPos;
        setPos(arg0: Vec3d_): void;
        findDimensionEntryPoint(arg0: Internal.ServerLevel_): Internal.PortalInfo;
        wait(): void;
        getUuid(): Internal.UUID;
        spawn(): void;
        areCapsCompatible(arg0: Internal.CapabilityDispatcher_): boolean;
        handler$dke000$spectrum$isSubmergedIn(fluidTag: Internal.TagKey_<any>, cir: Internal.CallbackInfoReturnable_<any>): void;
        teleportTo(arg0: Internal.ServerLevel_, arg1: number, arg2: number, arg3: number, arg4: Internal.Set_<Internal.RelativeMovement>, arg5: number, arg6: number): boolean;
        fabric_writeAttachmentsToNbt(nbt: Internal.CompoundTag_): void;
        shouldShowName(): boolean;
        markHurt(): void;
        getArmorSlots(): Internal.Iterable<Internal.ItemStack>;
        setSilent(arg0: boolean): void;
        captureDrops(): Internal.Collection<Internal.ItemEntity>;
        hasExactlyOnePlayerPassenger(): boolean;
        kill(): void;
        getSwimSplashSound(): Internal.SoundEvent;
        isOnPortalCooldown(): boolean;
        playSwimSound(arg0: number): void;
        animateHurt(arg0: number): void;
        syncComponent(key: Internal.ComponentKey_<any>, packetWriter: Internal.ComponentPacketWriter_): void;
        modifyReturnValue$zbi000$additionalentityattributes$getMaxAir(original: number): number;
        setPitch(arg0: number): void;
        isMultipartEntity(): boolean;
        setPosRaw(arg0: number, arg1: number, arg2: number): void;
        handleEntityEvent(arg0: number): void;
        getParts(): Internal.PartEntity<any>[];
        isAlwaysTicking(): boolean;
        interactAt(arg0: Internal.Player_, arg1: Vec3d_, arg2: Internal.InteractionHand_): InteractionResult;
        deserializeNBT(arg0: Internal.Tag_): void;
        positionRider(arg0: Internal.Entity_, arg1: Internal.Entity$MoveFunction_): void;
        lerpTo(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): void;
        onPassengerTurned(arg0: Internal.Entity_): void;
        revive(): void;
        spawnAtLocation(arg0: Internal.ItemLike_): Internal.ItemEntity;
        setAttached(type: Internal.AttachmentType_<any>, value: any): any;
        getBbWidth(): number;
        /**
         * @deprecated
        */
        couldAcceptPassenger(): boolean;
        isEyeInFluidType(arg0: Internal.FluidType_): boolean;
        getForgePersistentData(): Internal.CompoundTag;
        addDeltaMovement(arg0: Vec3d_): void;
        lithiumOnBlockCacheDeleted(): void;
        "spawnAtLocation(net.minecraft.world.level.ItemLike,int)"(arg0: Internal.ItemLike_, arg1: number): Internal.ItemEntity;
        setInvulnerable(arg0: boolean): void;
        "getName()"(): net.minecraft.network.chat.Component;
        push(arg0: Internal.Entity_): void;
        isInFluidType(): boolean;
        mirror(arg0: Internal.Mirror_): number;
        canUpdate(): boolean;
        getTypeName(): net.minecraft.network.chat.Component;
        getTicksRequiredToFreeze(): number;
        /**
         * @deprecated
        */
        maxUpStep(): number;
        setGlowing(arg0: boolean): void;
        load(arg0: Internal.CompoundTag_): void;
        isAlive(): boolean;
        getBbHeight(): number;
        getUsername(): string;
        getPrimaryStepSoundBlockPos(arg0: BlockPos_): BlockPos;
        move(arg0: Internal.MoverType_, arg1: Vec3d_): void;
        getViewVector(arg0: number): Vec3d;
        getTags(): Internal.Set<string>;
        onRemovedFromWorld(): void;
        lithiumOnBlockCacheSet(newState: Internal.BlockState_): void;
        getCapability<T>(arg0: Internal.Capability_<T>): Internal.LazyOptional<T>;
        isPickable(): boolean;
        handler$dke000$spectrum$isSubmergedInWater(cir: Internal.CallbackInfoReturnable_<any>): void;
        isInFluidType(predicate: Internal.BiPredicate_<any, any>, forAllTypes: boolean): boolean;
        setYHeadRot(arg0: number): void;
        hasControllingPassenger(): boolean;
        closerThan(arg0: Internal.Entity_, arg1: number, arg2: number): boolean;
        absMoveTo(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        getPickResult(): Internal.ItemStack;
        getPercentFrozen(): number;
        getRandomY(): number;
        setPortalCooldown(arg0: number): void;
        getDisplayName(): net.minecraft.network.chat.Component;
        hasGlowingTag(): boolean;
        shouldBlockExplode(arg0: Internal.Explosion_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: number): boolean;
        setPosition(block: Internal.BlockContainerJS_): void;
        handler$den000$eidolon$eidolonrepraised$isAlliedTo(arg0: Internal.Entity_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        lychee$anvilDamageChance(arg0: number): void;
        spectrum$isActuallyTouchingWater(): boolean;
        shouldBeSaved(): boolean;
        getFluidTypeHeight(arg0: Internal.FluidType_): number;
        fabric_hasPersistentAttachments(): boolean;
        handler$ffg000$quark$stopTickingIfRemoved(arg0: Internal.CallbackInfo_): void;
        getViewXRot(arg0: number): number;
        canRiderInteract(): boolean;
        lychee$cancelDrop(): void;
        "areCapsCompatible(net.minecraftforge.common.capabilities.CapabilityProvider)"(arg0: Internal.CapabilityProvider_<Internal.Entity>): boolean;
        fabric_getAttachments(): Internal.Map<any, any>;
        removeTag(arg0: string): boolean;
        setPose(arg0: Internal.Pose_): void;
        /**
         * @deprecated
        */
        getFluidHeight(arg0: Internal.TagKey_<Internal.Fluid>): number;
        getEntityType(): Internal.EntityType<any>;
        isWaterCreature(): boolean;
        toString(): string;
        notifyAll(): void;
        getPassengersRidingOffset(): number;
        "isInFluidType(java.util.function.BiPredicate)"(arg0: Internal.BiPredicate_<Internal.FluidType, number>): boolean;
        distanceToEntitySqr(arg0: Internal.Entity_): number;
        "getServer()"(): Internal.MinecraftServer;
        isFrame(): boolean;
        isPushable(): boolean;
        setYBodyRot(arg0: number): void;
        discard(): void;
        onClientRemoval(): void;
        sendSystemMessage(arg0: net.minecraft.network.chat.Component_): void;
        acceptsSuccess(): boolean;
        reviveCaps(): void;
        getDistance(x: number, y: number, z: number): number;
        setMotionY(y: number): void;
        setNoGravity(arg0: boolean): void;
        getAttached(type: Internal.AttachmentType_<any>): any;
        getIndirectPassengers(): Internal.Iterable<any>;
        setRotation(yaw: number, pitch: number): void;
        createCommandSourceStack(): Internal.CommandSourceStack;
        isControlledByLocalInstance(): boolean;
        handler$cam000$radium$tryShortcutFluidPushing(ci: Internal.CallbackInfo_, box: Internal.AABB_, x1: number, x2: number, y1: number, y2: number, z1: number, z2: number, zero: number): void;
        isMonster(): boolean;
        getHorizontalFacing(): Internal.Direction;
        setId(arg0: number): void;
        onSyncedDataUpdated(arg0: Internal.List_<Internal.SynchedEntityData$DataValue<any>>): void;
        getType(): string;
        getLightProbePosition(arg0: number): Vec3d;
        getComponent<C extends dev.onyxstudios.cca.api.v3.component.Component>(key: Internal.ComponentKey_<C>): C;
        onAboveBubbleCol(arg0: boolean): void;
        getBlockState(): Internal.BlockState;
        "playSound(net.minecraft.sounds.SoundEvent,float,float)"(arg0: Internal.SoundEvent_, arg1: number, arg2: number): void;
        toComponentPacket(key: Internal.ComponentKey_<any>, writer: Internal.ComponentPacketWriter_, recipient: Internal.ServerPlayer_): Internal.ClientboundCustomPayloadPacket;
        isPassenger(): boolean;
        hasPose(arg0: Internal.Pose_): boolean;
        playStepSound(arg0: BlockPos_, arg1: Internal.BlockState_): void;
        checkDespawn(): void;
        /**
         * @deprecated
        */
        isEyeInFluid(arg0: Internal.TagKey_<Internal.Fluid>): boolean;
        isInvulnerableTo(arg0: DamageSource_): boolean;
        makeStuckInBlock(arg0: Internal.BlockState_, arg1: Vec3d_): void;
        getAttachedOrGet<A>(type: Internal.AttachmentType_<A>, defaultValue: Internal.Supplier_<A>): A;
        skipAttackInteraction(arg0: Internal.Entity_): boolean;
        maybeBackOffFromEdge(arg0: Vec3d_, arg1: Internal.MoverType_): Vec3d;
        newFloatList(...arg0: number[]): Internal.ListTag;
        lerpMotion(arg0: number, arg1: number, arg2: number): void;
        shouldRender(arg0: number, arg1: number, arg2: number): boolean;
        onSyncedDataUpdated(arg0: Internal.EntityDataAccessor_<any>): void;
        lerpHeadTo(arg0: number, arg1: number): void;
        isFlapping(): boolean;
        getEyeHeight(arg0: Internal.Pose_, arg1: Internal.EntityDimensions_): number;
        static getViewScale(): number;
        setMotionX(x: number): void;
        getMovementEmission(): Internal.Entity$MovementEmission;
        getHandSlots(): Internal.Iterable<Internal.ItemStack>;
        distanceToEntity(arg0: Internal.Entity_): number;
        getVisualRotationYInDegrees(): number;
        wait(arg0: number, arg1: number): void;
        isDiscrete(): boolean;
        getTeamColor(): number;
        setNbt(nbt: Internal.CompoundTag_): void;
        lithiumSetClimbingMobCachingSectionUpdateBehavior(listening: boolean): void;
        unRide(): void;
        getLevel(): Internal.Level;
        "spawnAtLocation(net.minecraft.world.item.ItemStack)"(arg0: Internal.ItemStack_): Internal.ItemEntity;
        "isInFluidType(net.minecraftforge.fluids.FluidType)"(arg0: Internal.FluidType_): boolean;
        extinguish(): void;
        updateDynamicGameEventListener(arg0: Internal.BiConsumer_<Internal.DynamicGameEventListener<any>, Internal.ServerLevel>): void;
        moveTo(arg0: Vec3d_): void;
        isColliding(arg0: BlockPos_, arg1: Internal.BlockState_): boolean;
        updateInWaterStateAndDoFluidPushing(): boolean;
        "onSyncedDataUpdated(net.minecraft.network.syncher.EntityDataAccessor)"(arg0: Internal.EntityDataAccessor_<any>): void;
        areCapsCompatible(arg0: Internal.CapabilityProvider_<Internal.Entity>): boolean;
        extinguishFire(): void;
        getBlockJumpFactor(): number;
        tell(message: net.minecraft.network.chat.Component_): void;
        closerThan(arg0: Internal.Entity_, arg1: number): boolean;
        getDistanceSq(pos: BlockPos_): number;
        killedEntity(arg0: Internal.ServerLevel_, arg1: Internal.LivingEntity_): boolean;
        getAttachedOrElse<A>(type: Internal.AttachmentType_<A>, defaultValue: A): A;
        playEntityOnFireExtinguishedSound(): void;
        getClassification(arg0: boolean): Internal.MobCategory;
        isFreezing(): boolean;
        isFullyFrozen(): boolean;
        runCommand(command: string): number;
        setSharedFlagOnFire(arg0: boolean): void;
        static fall(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.FallingBlockEntity;
        get inWall(): boolean
        get allSlots(): Internal.Iterable<Internal.ItemStack>
        get blockZ(): number
        get suppressingBounce(): boolean
        get silent(): boolean
        get pitch(): number
        get onFire(): boolean
        get positionCodec(): Internal.VecDeltaCodec
        get passengersAndSelf(): Internal.Stream<any>
        set maxUpStep(arg0: number)
        get shiftKeyDown(): boolean
        set UUID(arg0: Internal.UUID_)
        get visuallyCrawling(): boolean
        set motionZ(z: number)
        get blockY(): number
        get spectator(): boolean
        get inWaterOrBubble(): boolean
        get persistentData(): Internal.CompoundTag
        get portalCooldown(): number
        get item(): Internal.ItemStack
        set removed(arg0: Internal.Entity$RemovalReason_)
        get inWaterRainOrBubble(): boolean
        get removalReason(): Internal.Entity$RemovalReason
        get ignoringBlockTriggers(): boolean
        get inRain(): boolean
        get eyeInFluidType(): Internal.FluidType
        get steppingCarefully(): boolean
        set level(arg0: Internal.Level_)
        set boundingBox(arg0: Internal.AABB_)
        get ambientCreature(): boolean
        get blockX(): number
        /**
         * @deprecated
        */
        get lightLevelDependentMagicValue(): number
        get encodeId(): string
        get block(): Internal.BlockContainerJS
        get nbt(): Internal.CompoundTag
        set invisible(arg0: boolean)
        get name(): net.minecraft.network.chat.Component
        get controlledVehicle(): Internal.Entity
        get blockSpeedFactor(): number
        get eyePosition(): Vec3d
        get eyeHeight(): number
        get yaw(): number
        get componentContainer(): Internal.ComponentContainer
        set customNameVisible(arg0: boolean)
        get controllingPassenger(): Internal.LivingEntity
        get remainingFireTicks(): number
        get scriptType(): Internal.ScriptType
        get forward(): Vec3d
        get maxFallDistance(): number
        get id(): number
        get ticksFrozen(): number
        get recipientsForComponentSync(): Internal.Iterable<any>
        get eyeY(): number
        set statusMessage(message: net.minecraft.network.chat.Component_)
        get boundingBox(): Internal.AABB
        get inWaterOrRain(): boolean
        get descending(): boolean
        get YHeadRot(): number
        get swimSound(): Internal.SoundEvent
        get addEntityPacket(): Internal.Packet<Internal.ClientGamePacketListener>
        get team(): Internal.Team
        set ticksFrozen(arg0: number)
        get myRidingOffset(): number
        set deltaMovement(arg0: Vec3d_)
        get living(): boolean
        get glowing(): boolean
        get x(): number
        get vehicle(): boolean
        get leashOffset(): Vec3d
        get attackable(): boolean
        set isInPowderSnow(arg0: boolean)
        set customName(arg0: net.minecraft.network.chat.Component_)
        get teamId(): string
        get underWater(): boolean
        get swimHighSpeedSplashSound(): Internal.SoundEvent
        get customNameVisible(): boolean
        get pistonPushReaction(): Internal.PushReaction
        get selfAndPassengers(): Internal.Stream<any>
        get deltaMovement(): Vec3d
        get motionX(): number
        get entityData(): Internal.SynchedEntityData
        set secondsOnFire(arg0: number)
        get "displayName()"(): net.minecraft.network.chat.Component
        get startPos(): BlockPos
        get onRails(): boolean
        get dimensionChangingDelay(): number
        get peacefulCreature(): boolean
        set onGround(arg0: boolean)
        set yaw(arg0: number)
        get pickRadius(): number
        get firstTick(): boolean
        get vehicle(): Internal.Entity
        get effectiveAi(): boolean
        get stringUuid(): string
        get removed(): boolean
        set swimming(arg0: boolean)
        get rotationVector(): Internal.Vec2
        get sprinting(): boolean
        get motionY(): number
        set shiftKeyDown(arg0: boolean)
        get passengers(): Internal.EntityArrayList
        get maxHeightFluidType(): Internal.FluidType
        get z(): number
        get server(): Internal.MinecraftServer
        get addedToWorld(): boolean
        get firstPassenger(): Internal.Entity
        get soundSource(): Internal.SoundSource
        set fabricBalmData(arg0: Internal.CompoundTag_)
        get pose(): Internal.Pose
        get lookAngle(): Vec3d
        set startPos(arg0: BlockPos_)
        get permissionLevel(): number
        get motionZ(): number
        get invisible(): boolean
        set z(z: number)
        /**
         * @deprecated
        */
        get blockStateOnLegacy(): Internal.BlockState
        get y(): number
        get profile(): Internal.GameProfile
        set viewScale(arg0: number)
        set levelCallback(arg0: Internal.EntityInLevelCallback_)
        /**
         * @deprecated
        */
        get pushedByFluid(): boolean
        get airSupply(): number
        get crouching(): boolean
        get player(): boolean
        get animal(): boolean
        get motionDirection(): Internal.Direction
        set y(y: number)
        get feetBlockState(): Internal.BlockState
        get fabricBalmData(): Internal.CompoundTag
        get commandSenderWorld(): Internal.Level
        get customName(): net.minecraft.network.chat.Component
        get class(): typeof any
        get visuallySwimming(): boolean
        get maxAirSupply(): number
        get fireImmuneTicks(): number
        get facing(): Internal.Direction
        get swimming(): boolean
        get boundingBoxForCulling(): Internal.AABB
        set sprinting(arg0: boolean)
        set x(x: number)
        get nameTagOffsetY(): number
        get invulnerable(): boolean
        get inLava(): boolean
        get portalWaitTime(): number
        get inWater(): boolean
        get blockStateOn(): Internal.BlockState
        get fluidJumpThreshold(): number
        set airSupply(arg0: number)
        get onPos(): BlockPos
        get rootVehicle(): Internal.Entity
        get blockPosBelowThatAffectsMyMovement(): BlockPos
        get noGravity(): boolean
        get stepHeight(): number
        set remainingFireTicks(arg0: number)
        get cachedFeetBlockState(): Internal.BlockState
        /**
         * @deprecated
        */
        get onPosLegacy(): BlockPos
        set pos(arg0: Vec3d_)
        get uuid(): Internal.UUID
        get armorSlots(): Internal.Iterable<Internal.ItemStack>
        set silent(arg0: boolean)
        get swimSplashSound(): Internal.SoundEvent
        get onPortalCooldown(): boolean
        set pitch(arg0: number)
        get multipartEntity(): boolean
        get parts(): Internal.PartEntity<any>[]
        get alwaysTicking(): boolean
        get bbWidth(): number
        get forgePersistentData(): Internal.CompoundTag
        set invulnerable(arg0: boolean)
        get "name()"(): net.minecraft.network.chat.Component
        get inFluidType(): boolean
        get typeName(): net.minecraft.network.chat.Component
        get ticksRequiredToFreeze(): number
        set glowing(arg0: boolean)
        get alive(): boolean
        get bbHeight(): number
        get username(): string
        get tags(): Internal.Set<string>
        get pickable(): boolean
        set YHeadRot(arg0: number)
        get pickResult(): Internal.ItemStack
        get percentFrozen(): number
        get randomY(): number
        set portalCooldown(arg0: number)
        get displayName(): net.minecraft.network.chat.Component
        set position(block: Internal.BlockContainerJS_)
        set pose(arg0: Internal.Pose_)
        get entityType(): Internal.EntityType<any>
        get waterCreature(): boolean
        get passengersRidingOffset(): number
        get "server()"(): Internal.MinecraftServer
        get frame(): boolean
        get pushable(): boolean
        set YBodyRot(arg0: number)
        set motionY(y: number)
        set noGravity(arg0: boolean)
        get indirectPassengers(): Internal.Iterable<any>
        get controlledByLocalInstance(): boolean
        get monster(): boolean
        get horizontalFacing(): Internal.Direction
        set id(arg0: number)
        get type(): string
        get blockState(): Internal.BlockState
        get passenger(): boolean
        get flapping(): boolean
        get viewScale(): number
        set motionX(x: number)
        get movementEmission(): Internal.Entity$MovementEmission
        get handSlots(): Internal.Iterable<Internal.ItemStack>
        get visualRotationYInDegrees(): number
        get discrete(): boolean
        get teamColor(): number
        set nbt(nbt: Internal.CompoundTag_)
        get level(): Internal.Level
        get blockJumpFactor(): number
        get freezing(): boolean
        get fullyFrozen(): boolean
        set sharedFlagOnFire(arg0: boolean)
        time: number;
        dropItem: boolean;
        static readonly DATA_START_POS: Internal.EntityDataAccessor<BlockPos>;
        blockData: Internal.CompoundTag;
        blockState: Internal.BlockState;
        cancelDrop: boolean;
    }
    type FallingBlockEntity_ = FallingBlockEntity;
    class PathfindingRenderer implements Internal.DebugRenderer$SimpleDebugRenderer {
        constructor()
        getClass(): typeof any;
        addPath(arg0: number, arg1: net.minecraft.world.level.pathfinder.Path_, arg2: number): void;
        toString(): string;
        notifyAll(): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        static renderPath(arg0: Internal.PoseStack_, arg1: Internal.MultiBufferSource_, arg2: net.minecraft.world.level.pathfinder.Path_, arg3: number, arg4: boolean, arg5: boolean, arg6: number, arg7: number, arg8: number): void;
        hashCode(): number;
        render(arg0: Internal.PoseStack_, arg1: Internal.MultiBufferSource_, arg2: number, arg3: number, arg4: number): void;
        wait(): void;
        clear(): void;
        wait(arg0: number): void;
        static renderPathLine(arg0: Internal.PoseStack_, arg1: Internal.VertexConsumer_, arg2: net.minecraft.world.level.pathfinder.Path_, arg3: number, arg4: number, arg5: number): void;
        equals(arg0: any): boolean;
        get class(): typeof any
    }
    type PathfindingRenderer_ = PathfindingRenderer;
    class SparklestoneBlock extends Internal.Block {
        constructor(settings: Internal.BlockBehaviour$Properties_)
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getSettings(): Internal.BlockBehaviour$Properties;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        getTypeData(): Internal.CompoundTag;
        setFriction(arg0: number): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getSpeedFactor(): number;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        playerDestroy(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Player_): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Internal.Player_): Internal.ItemStack;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        getRenderPropertiesInternal(): any;
        needsDynamicNodeTypeCheck(): boolean;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        setRequiresTool(v: boolean): void;
        asBlock(): Internal.Block;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        puzzleslib$setItem(arg0: Internal.Item_): void;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        /**
         * @deprecated
        */
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        /**
         * @deprecated
        */
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        lychee$isTickable(): boolean;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        /**
         * @deprecated
        */
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        spawnDestroyParticles(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_): void;
        wait(): void;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Internal.Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(shape: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        setIsRandomlyTicking(arg0: boolean): void;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        registerDefaultState(arg0: Internal.BlockState_): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        /**
         * @deprecated
        */
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        /**
         * @deprecated
        */
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        isAir(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        needsDynamicBurningCheck(): boolean;
        getDescriptionId(): string;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        handler$bob000$radium$postConstruct(p_i241196_1_: Internal.BlockBehaviour$Properties_, ci: Internal.CallbackInfo_): void;
        tryDropExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: Internal.ItemStack_, arg3: Internal.IntProvider_): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        handler$eok000$particular$spawnParticles(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, random: Internal.RandomSource_, ci: Internal.CallbackInfo_): void;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        setDrops(arg0: ResourceLocation_): void;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        getBlockProperties(): Internal.BlockBehaviour$Properties;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getShapeForEachState(arg0: Internal.Function_<Internal.BlockState, Internal.VoxelShape>): Internal.ImmutableMap<Internal.BlockState, Internal.VoxelShape>;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        getFriction(): number;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        createBlockStateDefinition(arg0: Internal.StateDefinition$Builder_<Internal.Block, Internal.BlockState>): void;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        notify(): void;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        handler$dji000$spectrum$afterBreak(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        setDestroySpeed(v: number): void;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        handler$zbh000$additionalentityattributes$additionalEntityAttributes$saveBreakingPlayer(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        arch$holder(): Internal.Holder<Internal.Block>;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, random: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): void;
        lychee$setTickable(arg0: boolean): void;
        /**
         * @deprecated
        */
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        get settings(): Internal.BlockBehaviour$Properties
        /**
         * @deprecated
        */
        get explosionResistance(): number
        get typeData(): Internal.CompoundTag
        set friction(arg0: number)
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get descriptionId(): string
        get jumpFactor(): number
        set drops(arg0: ResourceLocation_)
        set speedFactor(arg0: number)
        get blockProperties(): Internal.BlockBehaviour$Properties
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get mod(): string
        set hasCollision(arg0: boolean)
    }
    type SparklestoneBlock_ = SparklestoneBlock;
    class PotionPendantItem extends Internal.SpectrumTrinketItem implements Internal.InkPoweredPotionFillable {
        constructor(settings: Internal.Item$Properties_, maxEffectCount: number, maxAmplifier: number, unlockIdentifier: ResourceLocation_)
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        allowContinuingBlockBreaking(player: Internal.Player_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        moonlight$addAdditionalBehavior(placementOverride: Internal.AdditionalItemPlacement_): void;
        isFireResistant(): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        static "equipItem(net.minecraft.world.entity.LivingEntity,net.minecraft.world.item.ItemStack)"(user: Internal.LivingEntity_, stack: Internal.ItemStack_): boolean;
        appendHoverText(stack: Internal.ItemStack_, world: Internal.Level_, tooltip: Internal.List_<net.minecraft.network.chat.Component>, context: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        moonlight$getClientAnimationExtension(): any;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        fabric_setCustomDamageHandler(handler: Internal.CustomDamageHandler_): void;
        maxEffectCount(): number;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        onBreak(stack: Internal.ItemStack_, slot: dev.emi.trinkets.api.SlotReference_, entity: Internal.LivingEntity_): void;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getBarColor(arg0: Internal.ItemStack_): number;
        getOrCreateDescriptionId(): string;
        getItem(): Internal.Item;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        /**
         * @deprecated
        */
        getVanillaEffects(stack: Internal.ItemStack_): Internal.List<Internal.MobEffectInstance>;
        getRenderPropertiesInternal(): any;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): InteractionResult;
        getDropRule(stack: Internal.ItemStack_, slot: dev.emi.trinkets.api.SlotReference_, entity: Internal.LivingEntity_): Internal.TrinketEnums$DropRule;
        moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        moonlight$setClientAnimationExtension(obj: any): void;
        getUnlockIdentifier(): ResourceLocation;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        getModifiers(stack: Internal.ItemStack_, slot: dev.emi.trinkets.api.SlotReference_, entity: Internal.LivingEntity_, uuid: Internal.UUID_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        handler$dfl000$revelationary$getCloakedName(stack: Internal.ItemStack_, callbackInfoReturnable: Internal.CallbackInfoReturnable_<any>): void;
        isEdible(): boolean;
        getAttributeModifiers(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(world: Internal.Level_, user: Internal.Player_, hand: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        canEquipMoreThanOne(): boolean;
        tick(stack: Internal.ItemStack_, slot: dev.emi.trinkets.api.SlotReference_, entity: Internal.LivingEntity_): void;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        cardinal_createComponents(stack: Internal.ItemStack_): Internal.ComponentContainer;
        getEquipSound(stack: Internal.ItemStack_, slot: dev.emi.trinkets.api.SlotReference_, entity: Internal.LivingEntity_): Internal.SoundEvent;
        isFoil(stack: Internal.ItemStack_): boolean;
        "getAttributeModifiers(net.minecraft.world.entity.EquipmentSlot,net.minecraft.world.item.ItemStack)"(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        fabric_getEquipmentSlotProvider(): Internal.EquipmentSlotProvider;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        canUnequip(stack: Internal.ItemStack_, slot: dev.emi.trinkets.api.SlotReference_, entity: Internal.LivingEntity_): boolean;
        static hasEquipped(entity: any, item: Internal.Item_): boolean;
        owo$tab(): number;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        addOrUpgradeEffects(potionFillableStack: Internal.ItemStack_, newEffects: Internal.List_<Internal.InkPoweredStatusEffectInstance>): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        static getFirstEquipped(entity: Internal.LivingEntity_, item: Internal.Item_): Internal.Optional<Internal.ItemStack>;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vector3f;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        "getAttributeModifiers(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.EquipmentSlot)"(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        allowNbtUpdateAnimation(player: Internal.Player_, hand: Internal.InteractionHand_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        fabric_getCachedItemVariant(): Internal.ItemVariant;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        fabric_getCustomDamageHandler(): Internal.CustomDamageHandler;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        static getPlayerPOVHitResult(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.ClipContext$Fluid_): Internal.BlockHitResult;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        maxEffectAmplifier(): number;
        canEquipFromUse(stack: Internal.ItemStack_, entity: Internal.LivingEntity_): boolean;
        equals(arg0: any): boolean;
        setRarity(arg0: Internal.Rarity_): void;
        "canEquip(net.minecraft.world.item.ItemStack,dev.emi.trinkets.api.SlotReference,net.minecraft.world.entity.LivingEntity)"(stack: Internal.ItemStack_, slot: dev.emi.trinkets.api.SlotReference_, entity: Internal.LivingEntity_): boolean;
        getRecipeRemainder(stack: Internal.ItemStack_): Internal.ItemStack;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        clearEffects(itemStack: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        onDestroyed(arg0: Internal.ItemEntity_): void;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        static "hasEquipped(java.lang.Object,net.minecraft.world.item.Item)"(entity: any, item: Internal.Item_): boolean;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        canBeHurtBy(arg0: DamageSource_): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        fabric_setEquipmentSlotProvider(equipmentSlotProvider: Internal.EquipmentSlotProvider_): void;
        getDescriptionId(): string;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        zeta$setHumanoidArmorModel(arg0: Internal.HumanoidArmorModelGetter_): void;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        static equipItem(user: Internal.Player_, stack: Internal.ItemStack_): boolean;
        static equipItem(user: Internal.LivingEntity_, stack: Internal.ItemStack_): boolean;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        isAtLeastPartiallyFilled(itemStack: Internal.ItemStack_): boolean;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: DamageSource_): void;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        getDescription(): net.minecraft.network.chat.Component;
        owo$stackGenerator(): Internal.BiConsumer<any, any>;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        onEquip(stack: Internal.ItemStack_, slot: dev.emi.trinkets.api.SlotReference_, entity: Internal.LivingEntity_): void;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        useOn(arg0: Internal.UseOnContext_): InteractionResult;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        static hasEquipped(entity: Internal.LivingEntity_, item: Internal.Item_): boolean;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        handler$ebb000$connectormod$redirectIsPiglinCurrency(arg0: Internal.ItemStack_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        static "hasEquipped(net.minecraft.world.entity.LivingEntity,net.minecraft.world.item.Item)"(entity: Internal.LivingEntity_, item: Internal.Item_): boolean;
        getEffects(stack: Internal.ItemStack_): Internal.List<Internal.InkPoweredStatusEffectInstance>;
        setAttackDamage(attackDamage: number): void;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        toString(): string;
        /**
         * @deprecated
        */
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        modifyReturnValue$ffm000$quark$overrideOtherStackedOnMe(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_, arg3: Internal.Slot_, arg4: Internal.ClickAction_, arg5: Internal.Player_, arg6: Internal.SlotAccess_): boolean;
        getId(): string;
        handler$fbm000$moonlight$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        isSuitableFor(stack: Internal.ItemStack_, state: Internal.BlockState_): boolean;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        puzzleslib$setRenderProperties(arg0: any): void;
        static "equipItem(net.minecraft.world.entity.player.Player,net.minecraft.world.item.ItemStack)"(user: Internal.Player_, stack: Internal.ItemStack_): boolean;
        notify(): void;
        canEquip(stack: Internal.ItemStack_, slot: dev.emi.trinkets.api.SlotReference_, entity: Internal.LivingEntity_): boolean;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        appendPotionFillableTooltip(stack: Internal.ItemStack_, tooltip: Internal.List_<net.minecraft.network.chat.Component>, attributeModifierText: Internal.MutableComponent_, showDuration: boolean): void;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        zeta$setBlockEntityWithoutLevelRenderer(arg0: Internal.BlockEntityWithoutLevelRenderer_): void;
        handler$cog000$croptopia$overrideConstructor(arg0: Internal.Item$Properties_, arg1: Internal.CallbackInfo_): void;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        getEatingSound(): Internal.SoundEvent;
        owo$setGroup(group: Internal.CreativeModeTab_): void;
        puzzleslib$getRenderProperties(): any;
        canBeDepleted(): boolean;
        getDamage(arg0: Internal.ItemStack_): number;
        wait(arg0: number, arg1: number): void;
        isFull(itemStack: Internal.ItemStack_): boolean;
        isWeapon(): boolean;
        onUnequip(stack: Internal.ItemStack_, slot: dev.emi.trinkets.api.SlotReference_, entity: Internal.LivingEntity_): void;
        getMod(): string;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        owo$group(): Internal.CreativeModeTab;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        adjustFinalCostFor(instance: Internal.InkPoweredStatusEffectInstance_): number;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        "canEquip(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.EquipmentSlot,net.minecraft.world.entity.Entity)"(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        modifyReturnValue$ffm000$quark$overrideStackedOnOther(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_): boolean;
        get drinkingSound(): Internal.SoundEvent
        get fireResistant(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set maxDamage(arg0: number)
        get orCreateDescriptionId(): string
        get item(): Internal.Item
        get class(): typeof any
        get renderPropertiesInternal(): any
        get unlockIdentifier(): ResourceLocation
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        get edible(): boolean
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        set nameKey(arg0: string)
        get idLocation(): ResourceLocation
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
        set rarity(arg0: Internal.Rarity_)
        get complex(): boolean
        get descriptionId(): string
        get creativeTab(): string
        set burnTime(i: number)
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        set itemBuilder(b: Internal.ItemBuilder_)
        set attackDamage(attackDamage: number)
        /**
         * @deprecated
        */
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        /**
         * @deprecated
        */
        get maxStackSize(): number
        get eatingSound(): Internal.SoundEvent
        get weapon(): boolean
        get mod(): string
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
    }
    type PotionPendantItem_ = PotionPendantItem;
    class OutlineBufferSource implements Internal.OutlineBufferSourceAccessor, Internal.MultiBufferSource {
        constructor(arg0: Internal.MultiBufferSource$BufferSource_)
        getClass(): typeof any;
        static immediateWithBuffers(layerBuffers: Internal.Map_<any, any>, fallbackBuffer: Internal.BufferBuilder_): Internal.MultiBufferSource$BufferSource;
        static immediate(arg0: Internal.BufferBuilder_): Internal.MultiBufferSource$BufferSource;
        toString(): string;
        notifyAll(): void;
        getBuffer(arg0: Internal.RenderType_): Internal.VertexConsumer;
        getOutlineBufferSource(): Internal.MultiBufferSource$BufferSource;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        hashCode(): number;
        wait(): void;
        wait(arg0: number): void;
        endOutlineBatch(): void;
        equals(arg0: any): boolean;
        setColor(arg0: number, arg1: number, arg2: number, arg3: number): void;
        get class(): typeof any
        get outlineBufferSource(): Internal.MultiBufferSource$BufferSource
    }
    type OutlineBufferSource_ = OutlineBufferSource;
    abstract class AbstractCollection <E> implements Internal.Collection<E> {
        getClass(): typeof any;
        add(arg0: E): boolean;
        parallelStream(): Internal.Stream<E>;
        isEmpty(): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        retainAll(arg0: Internal.Collection_<any>): boolean;
        containsAll(arg0: Internal.Collection_<any>): boolean;
        toArray<T>(arg0: Internal.IntFunction_<T[]>): T[];
        contains(arg0: any): boolean;
        addAll(arg0: Internal.Collection_<E>): boolean;
        toString(): string;
        forEach(arg0: Internal.Consumer_<E>): void;
        notifyAll(): void;
        toArray<T>(arg0: T[]): T[];
        "toArray(java.lang.Object[])"<T>(arg0: T[]): T[];
        remove(arg0: any): boolean;
        "toArray(java.util.function.IntFunction)"<T>(arg0: Internal.IntFunction_<T[]>): T[];
        toArray(): any[];
        abstract iterator(): Internal.Iterator<E>;
        abstract size(): number;
        abstract hashCode(): number;
        stream(): Internal.Stream<E>;
        removeAll(arg0: Internal.Collection_<any>): boolean;
        wait(): void;
        clear(): void;
        removeIf(arg0: Internal.Predicate_<E>): boolean;
        wait(arg0: number): void;
        spliterator(): Internal.Spliterator<E>;
        abstract equals(arg0: any): boolean;
        get class(): typeof any
        get empty(): boolean
    }
    type AbstractCollection_<E> = AbstractCollection<E>;
    interface BlockGetter extends Internal.LevelHeightAccessor, Internal.FabricBlockView, Internal.BlockViewMixin, Internal.IForgeBlockGetter {
        getMinSection(): number;
        abstract getBlockState(arg0: BlockPos_): Internal.BlockState;
        clipWithInteractionOverride(arg0: Vec3d_, arg1: Vec3d_, arg2: BlockPos_, arg3: Internal.VoxelShape_, arg4: Internal.BlockState_): Internal.BlockHitResult;
        getSectionIndex(arg0: number): number;
        getMaxSection(): number;
        getMaxBuildHeight(): number;
        getBlockEntityRenderData(pos: BlockPos_): any;
        getBiomeFabric(pos: BlockPos_): Internal.Holder<Internal.Biome>;
        getLightEmission(arg0: BlockPos_): number;
        getBlockFloorHeight(arg0: BlockPos_): number;
        getSectionYFromSectionIndex(arg0: number): number;
        create(arg0: number, arg1: number): Internal.LevelHeightAccessor;
        "isOutsideBuildHeight(int)"(arg0: number): boolean;
        clip(arg0: Internal.ClipContext_): Internal.BlockHitResult;
        getBlockFloorHeight(arg0: Internal.VoxelShape_, arg1: Internal.Supplier_<Internal.VoxelShape>): number;
        abstract getBlockEntity(arg0: BlockPos_): Internal.BlockEntity;
        abstract getHeight(): number;
        getBlockEntity<T extends Internal.BlockEntity>(arg0: BlockPos_, arg1: Internal.BlockEntityType_<T>): Internal.Optional<T>;
        isOutsideBuildHeight(arg0: BlockPos_): boolean;
        getModelDataManager(): Internal.ModelDataManager;
        isOutsideBuildHeight(arg0: number): boolean;
        isBlockInLine(arg0: Internal.ClipBlockStateContext_): Internal.BlockHitResult;
        abstract getFluidState(arg0: BlockPos_): Internal.FluidState;
        "isOutsideBuildHeight(net.minecraft.core.BlockPos)"(arg0: BlockPos_): boolean;
        getBlockStates(arg0: Internal.AABB_): Internal.Stream<Internal.BlockState>;
        getExistingBlockEntity(arg0: BlockPos_): Internal.BlockEntity;
        getSectionsCount(): number;
        abstract getMinBuildHeight(): number;
        hasBiomes(): boolean;
        getMaxLightLevel(): number;
        getSectionIndexFromSectionY(arg0: number): number;
        traverseBlocks<T, C>(arg0: Vec3d_, arg1: Vec3d_, arg2: C, arg3: Internal.BiFunction_<C, BlockPos, T>, arg4: Internal.Function_<C, T>): T;
        get minSection(): number
        get maxSection(): number
        get maxBuildHeight(): number
        get height(): number
        get modelDataManager(): Internal.ModelDataManager
        get sectionsCount(): number
        get minBuildHeight(): number
        get maxLightLevel(): number
    }
    type BlockGetter_ = BlockGetter;
    class RedstoneConfiguration implements Internal.Syncable, reborncore.common.util.NBTSerializable {
        constructor(blockEntity: Internal.MachineBaseBlockEntity_)
        getClass(): typeof any;
        write(): Internal.CompoundTag;
        toString(): string;
        getSyncPair(pairList: Internal.List_<org.apache.commons.lang3.tuple.Pair<Internal.Supplier<any>, Internal.Consumer<any>>>): void;
        static getElementByName(name: string): Internal.RedstoneConfiguration$Element;
        notifyAll(): void;
        setState(element: Internal.RedstoneConfiguration$Element_, state: Internal.RedstoneConfiguration$State_): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        getState(element: Internal.RedstoneConfiguration$Element_): Internal.RedstoneConfiguration$State;
        isActive(element: Internal.RedstoneConfiguration$Element_): boolean;
        refreshCache(): void;
        hashCode(): number;
        read(tag: Internal.CompoundTag_): void;
        wait(): void;
        wait(arg0: number): void;
        getElements(): Internal.List<Internal.RedstoneConfiguration$Element>;
        equals(arg0: any): boolean;
        get class(): typeof any
        get elements(): Internal.List<Internal.RedstoneConfiguration$Element>
        static FLUID_IO: (Internal.RedstoneConfiguration$Element) & (Internal.RedstoneConfiguration$Element);
        static ITEM_IO: (Internal.RedstoneConfiguration$Element) & (Internal.RedstoneConfiguration$Element);
        static fluidStack: (Internal.ItemStack) & (Internal.ItemStack);
        static RECIPE_PROCESSING: (Internal.RedstoneConfiguration$Element) & (Internal.RedstoneConfiguration$Element);
        static powerStack: (Internal.ItemStack) & (Internal.ItemStack);
        static POWER_IO: (Internal.RedstoneConfiguration$Element) & (Internal.RedstoneConfiguration$Element);
    }
    type RedstoneConfiguration_ = RedstoneConfiguration;
    interface ComponentListener extends Internal.EventListener {
        abstract componentShown(arg0: Internal.ComponentEvent_): void;
        abstract componentHidden(arg0: Internal.ComponentEvent_): void;
        abstract componentResized(arg0: Internal.ComponentEvent_): void;
        abstract componentMoved(arg0: Internal.ComponentEvent_): void;
    }
    type ComponentListener_ = ComponentListener;
    class LootPool$Builder implements Internal.FabricLootPoolBuilder, Internal.FunctionUserBuilder<Internal.LootPool$Builder>, Internal.ConditionUserBuilder<Internal.LootPool$Builder>, Internal.LootPoolBuilderAccessor {
        constructor()
        "with"(entry: Internal.LootPoolEntryContainer_): this;
        getClass(): typeof any;
        when<E>(arg0: Internal.Iterable_<E>, arg1: Internal.Function_<E, Internal.LootItemCondition$Builder>): this;
        "with(java.util.Collection)"(entries: Internal.Collection_<any>): this;
        apply(functions: Internal.Collection_<any>): this;
        "conditionally(java.util.Collection)"(conditions: Internal.Collection_<any>): this;
        "with"(entries: Internal.Collection_<any>): this;
        apply<E>(arg0: Internal.Iterable_<E>, arg1: Internal.Function_<E, Internal.LootItemFunction$Builder>): this;
        unwrap(): Internal.ConditionUserBuilder<any>;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        conditionally(conditions: Internal.Collection_<any>): this;
        static copyOf(pool: Internal.LootPool_): Internal.LootPool$Builder;
        setRolls(arg0: Internal.NumberProvider_): this;
        "apply(java.lang.Object[],java.util.function.Function)"<E>(arg0: E[], arg1: Internal.Function_<E, Internal.LootItemFunction$Builder>): this;
        name(arg0: string): this;
        conditionally(condition: Internal.LootItemCondition_): this;
        getEntries(): Internal.List<any>;
        add(arg0: Internal.LootPoolEntryContainer$Builder_<any>): this;
        "conditionally(net.minecraft.world.level.storage.loot.predicates.LootItemCondition)"(condition: Internal.LootItemCondition_): this;
        when(arg0: Internal.LootItemCondition$Builder_): this;
        "apply(java.lang.Iterable,java.util.function.Function)"<E>(arg0: Internal.Iterable_<E>, arg1: Internal.Function_<E, Internal.LootItemFunction$Builder>): this;
        "apply(net.minecraft.world.level.storage.loot.functions.LootItemFunction)"(function_: Internal.LootItemFunction_): this;
        toString(): string;
        setBonusRolls(arg0: Internal.NumberProvider_): this;
        apply<E>(arg0: E[], arg1: Internal.Function_<E, Internal.LootItemFunction$Builder>): this;
        apply(arg0: Internal.LootItemFunction$Builder_): this;
        notifyAll(): void;
        build(): Internal.LootPool;
        "apply(net.minecraft.world.level.storage.loot.functions.LootItemFunction$Builder)"(arg0: Internal.LootItemFunction$Builder_): this;
        "with(net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer)"(entry: Internal.LootPoolEntryContainer_): this;
        hashCode(): number;
        wait(): void;
        wait(arg0: number): void;
        "apply(java.util.Collection)"(functions: Internal.Collection_<any>): this;
        equals(arg0: any): boolean;
        apply(function_: Internal.LootItemFunction_): this;
        get class(): typeof any
        set rolls(arg0: Internal.NumberProvider_)
        get entries(): Internal.List<any>
        set bonusRolls(arg0: Internal.NumberProvider_)
        readonly conditions: Internal.List<Internal.LootItemCondition>;
        readonly functions: Internal.List<Internal.LootItemFunction>;
        readonly entries: Internal.List<Internal.LootPoolEntryContainer>;
    }
    type LootPool$Builder_ = LootPool$Builder;
    class RecipeBookCategories extends Internal.Enum<Internal.RecipeBookCategories> implements Internal.IExtensibleEnum, Internal.RecipeBookCategoriesAccessor {
        getClass(): typeof any;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        compareTo(arg0: any): number;
        static getCategories(arg0: Internal.RecipeBookType_): Internal.List<Internal.RecipeBookCategories>;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.RecipeBookCategories>>;
        getDeclaringClass(): typeof Internal.RecipeBookCategories;
        static valueOf(arg0: string): Internal.RecipeBookCategories;
        static setAGGREGATE_CATEGORIES(arg0: Internal.Map_<Internal.RecipeBookCategories, Internal.List<Internal.RecipeBookCategories>>): void;
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        static create(arg0: string, ...arg1: Internal.ItemStack_[]): Internal.RecipeBookCategories;
        static createCodecForExtensibleEnum<E extends Internal.Enum<E> & Internal.StringRepresentable>(arg0: Internal.Supplier_<E[]>, arg1: Internal.Function_<string, E>): Internal.Codec<E>;
        toString(): string;
        /**
         * @deprecated
        */
        init(): void;
        notifyAll(): void;
        static setAGGREGATE_CATEGORIES$connectormod_$md$374716$0(arg0: Internal.Map_<any, any>): void;
        static values(): Internal.RecipeBookCategories[];
        name(): string;
        hashCode(): number;
        getIconItems(): Internal.List<Internal.ItemStack>;
        ordinal(): number;
        wait(): void;
        wait(arg0: number): void;
        "compareTo(java.lang.Object)"(arg0: any): number;
        equals(arg0: any): boolean;
        "compareTo(net.minecraft.client.RecipeBookCategories)"(arg0: Internal.RecipeBookCategories_): number;
        compareTo(arg0: Internal.RecipeBookCategories_): number;
        get class(): typeof any
        get declaringClass(): typeof Internal.RecipeBookCategories
        set AGGREGATE_CATEGORIES(arg0: Internal.Map_<Internal.RecipeBookCategories, Internal.List<Internal.RecipeBookCategories>>)
        set AGGREGATE_CATEGORIES$connectormod_$md$374716$0(arg0: Internal.Map_<any, any>)
        get iconItems(): Internal.List<Internal.ItemStack>
        static readonly CRAFTING_SEARCH: (Internal.RecipeBookCategories) & (Internal.RecipeBookCategories);
        static readonly SMOKER_SEARCH: (Internal.RecipeBookCategories) & (Internal.RecipeBookCategories);
        static readonly SMOKER_CATEGORIES: ([Internal.RecipeBookCategories, Internal.RecipeBookCategories]) & (Internal.List<Internal.RecipeBookCategories>);
        static readonly BLAST_FURNACE_SEARCH: (Internal.RecipeBookCategories) & (Internal.RecipeBookCategories);
        static readonly CRAFTING_BUILDING_BLOCKS: (Internal.RecipeBookCategories) & (Internal.RecipeBookCategories);
        static readonly STONECUTTER: (Internal.RecipeBookCategories) & (Internal.RecipeBookCategories);
        static readonly CRAFTING_MISC: (Internal.RecipeBookCategories) & (Internal.RecipeBookCategories);
        static readonly CRAFTING_REDSTONE: (Internal.RecipeBookCategories) & (Internal.RecipeBookCategories);
        static readonly SMOKER_FOOD: (Internal.RecipeBookCategories) & (Internal.RecipeBookCategories);
        static AGGREGATE_CATEGORIES: ({[key: Internal.RecipeBookCategories]: [Internal.RecipeBookCategories, Internal.RecipeBookCategories, Internal.RecipeBookCategories], [key: Internal.RecipeBookCategories]: [Internal.RecipeBookCategories, Internal.RecipeBookCategories, Internal.RecipeBookCategories], [key: Internal.RecipeBookCategories]: [Internal.RecipeBookCategories], [key: Internal.RecipeBookCategories]: [Internal.RecipeBookCategories, Internal.RecipeBookCategories], [key: Internal.RecipeBookCategories]: [Internal.RecipeBookCategories, Internal.RecipeBookCategories, Internal.RecipeBookCategories, Internal.RecipeBookCategories]}) & (Internal.Map<Internal.RecipeBookCategories, Internal.List<Internal.RecipeBookCategories>>);
        static readonly UNKNOWN: (Internal.RecipeBookCategories) & (Internal.RecipeBookCategories);
        static readonly CRAFTING_EQUIPMENT: (Internal.RecipeBookCategories) & (Internal.RecipeBookCategories);
        static readonly FURNACE_BLOCKS: (Internal.RecipeBookCategories) & (Internal.RecipeBookCategories);
        static readonly BLAST_FURNACE_MISC: (Internal.RecipeBookCategories) & (Internal.RecipeBookCategories);
        static readonly BLAST_FURNACE_CATEGORIES: ([Internal.RecipeBookCategories, Internal.RecipeBookCategories, Internal.RecipeBookCategories]) & (Internal.List<Internal.RecipeBookCategories>);
        static readonly CRAFTING_CATEGORIES: ([Internal.RecipeBookCategories, Internal.RecipeBookCategories, Internal.RecipeBookCategories, Internal.RecipeBookCategories, Internal.RecipeBookCategories]) & (Internal.List<Internal.RecipeBookCategories>);
        static readonly FURNACE_SEARCH: (Internal.RecipeBookCategories) & (Internal.RecipeBookCategories);
        static readonly FURNACE_MISC: (Internal.RecipeBookCategories) & (Internal.RecipeBookCategories);
        static readonly SMITHING: (Internal.RecipeBookCategories) & (Internal.RecipeBookCategories);
        static readonly FURNACE_FOOD: (Internal.RecipeBookCategories) & (Internal.RecipeBookCategories);
        static readonly CAMPFIRE: (Internal.RecipeBookCategories) & (Internal.RecipeBookCategories);
        static readonly FURNACE_CATEGORIES: ([Internal.RecipeBookCategories, Internal.RecipeBookCategories, Internal.RecipeBookCategories, Internal.RecipeBookCategories]) & (Internal.List<Internal.RecipeBookCategories>);
        static readonly BLAST_FURNACE_BLOCKS: (Internal.RecipeBookCategories) & (Internal.RecipeBookCategories);
    }
    type RecipeBookCategories_ = "crafting_misc" | "smoker_search" | "furnace_misc" | "cooking_search" | "cooking_misc" | "smithing" | "crafting_building_blocks" | "crafting_search" | RecipeBookCategories | "blast_furnace_misc" | "stonecutter" | "furnace_search" | "campfire" | "cooking_meals" | "blast_furnace_search" | "smoker_food" | "blast_furnace_blocks" | "cooking_drinks" | "unknown" | "furnace_food" | "crafting_equipment" | "furnace_blocks" | "crafting_redstone";
    interface IInputDisable {
        abstract getDisabledFlags(): Internal.EnumSet<Internal.IInputDisable$InputMask>;
        getDisableMask(): number;
        get disabledFlags(): Internal.EnumSet<Internal.IInputDisable$InputMask>
        get disableMask(): number
        (): Internal.EnumSet_<Internal.IInputDisable$InputMask>;
    }
    type IInputDisable_ = IInputDisable | (()=> Internal.EnumSet_<Internal.IInputDisable$InputMask>);
    interface BiomeFilter extends Internal.Predicate<Internal.BiomeModifications$BiomeContext> {
        idFilter(cx: Internal.Context_, s: string): this;
        test(arg0: any): boolean;
        not<T>(arg0: Internal.Predicate_<T>): Internal.Predicate<T>;
        of(cx: Internal.Context_, o: any): this;
        abstract test(arg0: Internal.BiomeModifications$BiomeContext_): boolean;
        and(arg0: Internal.Predicate_<Internal.BiomeModifications$BiomeContext>): Internal.Predicate<Internal.BiomeModifications$BiomeContext>;
        "test(java.lang.Object)"(arg0: any): boolean;
        negate(): Internal.Predicate<Internal.BiomeModifications$BiomeContext>;
        abstract "test(dev.architectury.registry.level.biome.BiomeModifications$BiomeContext)"(arg0: Internal.BiomeModifications$BiomeContext_): boolean;
        or(arg0: Internal.Predicate_<Internal.BiomeModifications$BiomeContext>): Internal.Predicate<Internal.BiomeModifications$BiomeContext>;
        isEqual<T>(arg0: any): Internal.Predicate<T>;
        readonly ALWAYS_FALSE: Internal.BiomeFilter;
        readonly ALWAYS_TRUE: Internal.BiomeFilter;
    }
    type BiomeFilter_ = Internal.Biome_ | Special.Biome | Internal.BiomeFilter_[] | RegExp | {tag?: `#${Special.BiomeTag}`, id?: Special.Biome, type?: Special.Biome, not?: Internal.BiomeFilter_, or?: Internal.BiomeFilter_} | `#${Special.BiomeTag}` | "-" | {not?: Internal.BiomeFilter_, or?: Internal.BiomeFilter_} | "*" | BiomeFilter | Internal.Biome_[];
    class ZipFile implements Internal.Closeable, Internal.ZipConstants {
        constructor(arg0: Internal.File_, arg1: number)
        constructor(arg0: Internal.File_)
        constructor(arg0: Internal.File_, arg1: number, arg2: Internal.Charset_)
        constructor(arg0: string, arg1: Internal.Charset_)
        constructor(arg0: Internal.File_, arg1: Internal.Charset_)
        constructor(arg0: string)
        getClass(): typeof any;
        getComment(): string;
        toString(): string;
        notifyAll(): void;
        getEntry(arg0: string): Internal.ZipEntry;
        notify(): void;
        stream(): Internal.Stream<Internal.ZipEntry>;
        wait(arg0: number, arg1: number): void;
        entries(): Internal.Enumeration<Internal.ZipEntry>;
        size(): number;
        hashCode(): number;
        wait(): void;
        getName(): string;
        close(): void;
        wait(arg0: number): void;
        getInputStream(arg0: Internal.ZipEntry_): Internal.InputStream;
        equals(arg0: any): boolean;
        get class(): typeof any
        get comment(): string
        get name(): string
        static readonly OPEN_READ: (1) & (number);
        static readonly OPEN_DELETE: (4) & (number);
    }
    type ZipFile_ = ZipFile;
    class LionHeartMobEffect extends Internal.AttackDamageMobEffect {
        constructor()
        getDisplayName(): net.minecraft.network.chat.Component;
        getClass(): typeof any;
        addAttributeModifier(arg0: Internal.Attribute_, arg1: string, arg2: number, arg3: Internal.AttributeModifier$Operation_): Internal.MobEffect;
        isInstantenous(): boolean;
        addAttributeModifiers(arg0: Internal.LivingEntity_, arg1: Internal.AttributeMap_, arg2: number): void;
        applyInstantenousEffect(arg0: Internal.Entity_, arg1: Internal.Entity_, arg2: Internal.LivingEntity_, arg3: number, arg4: number): void;
        notify(): void;
        isBeneficial(): boolean;
        wait(arg0: number, arg1: number): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientMobEffectExtensions>): void;
        getEffectRendererInternal(): any;
        getColor(): number;
        removeAttributeModifiers(arg0: Internal.LivingEntity_, arg1: Internal.AttributeMap_, arg2: number): void;
        applyEffectTick(arg0: Internal.LivingEntity_, arg1: number): void;
        getAttributeModifierValue(arg0: number, arg1: Internal.AttributeModifier_): number;
        getSortOrder(arg0: Internal.MobEffectInstance_): number;
        getDescriptionId(): string;
        static getIdFromNullable(arg0: Internal.MobEffect_): number;
        getCategory(): Internal.MobEffectCategory;
        toString(): string;
        getCurativeItems(): Internal.List<Internal.ItemStack>;
        notifyAll(): void;
        setFactorDataFactory(arg0: Internal.Supplier_<Internal.MobEffectInstance$FactorData>): Internal.MobEffect;
        createFactorData(): Internal.Optional<Internal.MobEffectInstance$FactorData>;
        static byId(arg0: number): Internal.MobEffect;
        hashCode(): number;
        getAttributeModifiers(): Internal.Map<Internal.Attribute, Internal.AttributeModifier>;
        wait(): void;
        getOrCreateDescriptionId(): string;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        isDurationEffectTick(arg0: number, arg1: number): boolean;
        static getId(arg0: Internal.MobEffect_): number;
        get displayName(): net.minecraft.network.chat.Component
        get class(): typeof any
        get instantenous(): boolean
        get beneficial(): boolean
        get effectRendererInternal(): any
        get color(): number
        get descriptionId(): string
        get category(): Internal.MobEffectCategory
        get curativeItems(): Internal.List<Internal.ItemStack>
        set factorDataFactory(arg0: Internal.Supplier_<Internal.MobEffectInstance$FactorData>)
        get attributeModifiers(): Internal.Map<Internal.Attribute, Internal.AttributeModifier>
        get orCreateDescriptionId(): string
    }
    type LionHeartMobEffect_ = LionHeartMobEffect;
    class BookContents extends Internal.AbstractReadStateHolder {
        constructor(arg0: Internal.Book_, arg1: Internal.ImmutableMap_<ResourceLocation, Internal.BookCategory>, arg2: Internal.ImmutableMap_<ResourceLocation, Internal.BookEntry>, arg3: Internal.ImmutableMap_<Internal.ItemStackUtil$StackWrapper, com.mojang.datafixers.util.Pair<Internal.BookEntry, number>>, arg4: Internal.BookCategory_)
        getClass(): typeof any;
        toString(): string;
        isErrored(): boolean;
        notifyAll(): void;
        getEntryForStack(arg0: Internal.ItemStack_): com.mojang.datafixers.util.Pair<Internal.BookEntry, number>;
        markReadStateDirty(): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        static empty(arg0: Internal.Book_, arg1: Internal.Exception_): Internal.BookContents;
        setTopEntry(arg0: ResourceLocation_, arg1: number): void;
        hashCode(): number;
        getCurrentGui(): Internal.GuiBook;
        wait(): void;
        getReadState(): Internal.EntryDisplayState;
        getException(): Internal.Exception;
        wait(arg0: number): void;
        openLexiconGui(arg0: Internal.GuiBook_, arg1: boolean): void;
        equals(arg0: any): boolean;
        checkValidCurrentEntry(): void;
        static mostImportantState(arg0: Internal.Stream_<Internal.EntryDisplayState>): Internal.EntryDisplayState;
        get class(): typeof any
        get errored(): boolean
        get currentGui(): Internal.GuiBook
        get readState(): Internal.EntryDisplayState
        get exception(): Internal.Exception
        readonly categories: Internal.Map<ResourceLocation, Internal.BookCategory>;
        currentGui: Internal.GuiBook;
        readonly guiStack: Internal.Deque<Internal.GuiBook>;
        static readonly addonTemplates: ({}) & (Internal.Map<ResourceLocation, Internal.Supplier<Internal.BookTemplate>>);
        readonly entries: Internal.Map<ResourceLocation, Internal.BookEntry>;
        readonly pamphletCategory: Internal.BookCategory;
    }
    type BookContents_ = BookContents;
    class QuartzSwordItem extends Internal.SwordItem {
        constructor(arg0: Internal.Item$Properties_, arg1: any_)
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        allowContinuingBlockBreaking(player: Internal.Player_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        moonlight$addAdditionalBehavior(placementOverride: Internal.AdditionalItemPlacement_): void;
        isFireResistant(): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        moonlight$getClientAnimationExtension(): any;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        fabric_setCustomDamageHandler(handler: Internal.CustomDamageHandler_): void;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getBarColor(arg0: Internal.ItemStack_): number;
        getOrCreateDescriptionId(): string;
        getItem(): Internal.Item;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): InteractionResult;
        kjs$getAttributeMap(): Internal.Multimap<any, any>;
        moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        moonlight$setClientAnimationExtension(obj: any): void;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        handler$dfl000$revelationary$getCloakedName(stack: Internal.ItemStack_, callbackInfoReturnable: Internal.CallbackInfoReturnable_<any>): void;
        isEdible(): boolean;
        getAttributeModifiers(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        getDamage(): number;
        cardinal_createComponents(stack: Internal.ItemStack_): Internal.ComponentContainer;
        isFoil(arg0: Internal.ItemStack_): boolean;
        "getAttributeModifiers(net.minecraft.world.entity.EquipmentSlot,net.minecraft.world.item.ItemStack)"(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        fabric_getEquipmentSlotProvider(): Internal.EquipmentSlotProvider;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        owo$tab(): number;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        getTier(): Internal.Tier;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vector3f;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        "getAttributeModifiers(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.EquipmentSlot)"(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        allowNbtUpdateAnimation(player: Internal.Player_, hand: Internal.InteractionHand_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        fabric_getCachedItemVariant(): Internal.ItemVariant;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        fabric_getCustomDamageHandler(): Internal.CustomDamageHandler;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        static getPlayerPOVHitResult(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.ClipContext$Fluid_): Internal.BlockHitResult;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        equals(arg0: any): boolean;
        setRarity(arg0: Internal.Rarity_): void;
        getRecipeRemainder(stack: Internal.ItemStack_): Internal.ItemStack;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        /**
         * @deprecated
        */
        onDestroyed(arg0: Internal.ItemEntity_): void;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        canBeHurtBy(arg0: DamageSource_): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        fabric_setEquipmentSlotProvider(equipmentSlotProvider: Internal.EquipmentSlotProvider_): void;
        getDescriptionId(): string;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        zeta$setHumanoidArmorModel(arg0: Internal.HumanoidArmorModelGetter_): void;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: DamageSource_): void;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        getDescription(): net.minecraft.network.chat.Component;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        owo$stackGenerator(): Internal.BiConsumer<any, any>;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        kjs$getMutableAttributeMap(): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        useOn(arg0: Internal.UseOnContext_): InteractionResult;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        handler$ebb000$connectormod$redirectIsPiglinCurrency(arg0: Internal.ItemStack_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        setAttackDamage(attackDamage: number): void;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        toString(): string;
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        modifyReturnValue$ffm000$quark$overrideOtherStackedOnMe(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_, arg3: Internal.Slot_, arg4: Internal.ClickAction_, arg5: Internal.Player_, arg6: Internal.SlotAccess_): boolean;
        getId(): string;
        handler$fbm000$moonlight$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        isSuitableFor(stack: Internal.ItemStack_, state: Internal.BlockState_): boolean;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        puzzleslib$setRenderProperties(arg0: any): void;
        notify(): void;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        zeta$setBlockEntityWithoutLevelRenderer(arg0: Internal.BlockEntityWithoutLevelRenderer_): void;
        handler$cog000$croptopia$overrideConstructor(arg0: Internal.Item$Properties_, arg1: Internal.CallbackInfo_): void;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        getEatingSound(): Internal.SoundEvent;
        owo$setGroup(group: Internal.CreativeModeTab_): void;
        puzzleslib$getRenderProperties(): any;
        canBeDepleted(): boolean;
        getDamage(arg0: Internal.ItemStack_): number;
        wait(arg0: number, arg1: number): void;
        handler$doi000$dummmmmmy$hurtItem(stack: Internal.ItemStack_, entity: Internal.LivingEntity_, player: Internal.LivingEntity_, cir: Internal.CallbackInfoReturnable_<any>): void;
        getMod(): string;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        owo$group(): Internal.CreativeModeTab;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        kjs$setAttributeMap(arg0: Internal.Multimap_<any, any>): void;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        modifyReturnValue$ffm000$quark$overrideStackedOnOther(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_): boolean;
        get drinkingSound(): Internal.SoundEvent
        get fireResistant(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set maxDamage(arg0: number)
        get orCreateDescriptionId(): string
        get item(): Internal.Item
        get class(): typeof any
        get renderPropertiesInternal(): any
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        get edible(): boolean
        get damage(): number
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        get tier(): Internal.Tier
        set nameKey(arg0: string)
        get idLocation(): ResourceLocation
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
        set rarity(arg0: Internal.Rarity_)
        get complex(): boolean
        get descriptionId(): string
        get creativeTab(): string
        set burnTime(i: number)
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        set itemBuilder(b: Internal.ItemBuilder_)
        set attackDamage(attackDamage: number)
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        /**
         * @deprecated
        */
        get maxStackSize(): number
        get eatingSound(): Internal.SoundEvent
        get mod(): string
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
    }
    type QuartzSwordItem_ = QuartzSwordItem;
    class AnimationProcessor$QueuedAnimation extends Internal.Record {
        constructor(animation: software.bernie.geckolib.core.animation.Animation_, loopType: Internal.Animation$LoopType_)
        getClass(): typeof any;
        hashCode(): number;
        toString(): string;
        animation(): software.bernie.geckolib.core.animation.Animation;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        loopType(): Internal.Animation$LoopType;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
    }
    type AnimationProcessor$QueuedAnimation_ = AnimationProcessor$QueuedAnimation;
    class WaySignStructure extends Internal.Structure {
        constructor(config: Internal.Structure$StructureSettings_, startPool: Internal.Holder_<Internal.StructureTemplatePool>, startJigsawName: Internal.Optional_<ResourceLocation>, minY: number, maxY: number)
        static simpleCodec<S extends Internal.Structure>(arg0: Internal.Function_<Internal.Structure$StructureSettings, S>): Internal.Codec<S>;
        getClass(): typeof any;
        findGenerationPoint(context: Internal.Structure$GenerationContext_): Internal.Optional<Internal.Structure$GenerationStub>;
        generate(arg0: Internal.RegistryAccess_, arg1: Internal.ChunkGenerator_, arg2: Internal.BiomeSource_, arg3: Internal.RandomState_, arg4: Internal.StructureTemplateManager_, arg5: number, arg6: Internal.ChunkPos_, arg7: number, arg8: Internal.LevelHeightAccessor_, arg9: Internal.Predicate_<Internal.Holder<Internal.Biome>>): Internal.StructureStart;
        static recomputeValidStructureCache(access: Internal.RegistryAccess_): void;
        biomes(): Internal.HolderSet<Internal.Biome>;
        findValidGenerationPoint(arg0: Internal.Structure$GenerationContext_): Internal.Optional<Internal.Structure$GenerationStub>;
        step(): Internal.GenerationStep$Decoration;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        type(): Internal.StructureType<any>;
        modifiableStructureInfo(): Internal.ModifiableStructureInfo;
        static clearCache(): void;
        static getLowestY(arg0: Internal.Structure$GenerationContext_, arg1: number, arg2: number, arg3: number, arg4: number): number;
        toString(): string;
        spawnOverrides(): Internal.Map<Internal.MobCategory, Internal.StructureSpawnOverride>;
        notifyAll(): void;
        terrainAdaptation(): Internal.TerrainAdjustment;
        static getLowestY(arg0: Internal.Structure$GenerationContext_, arg1: number, arg2: number): number;
        adjustBoundingBox(arg0: Internal.BoundingBox_): Internal.BoundingBox;
        static onTopOfChunkCenter(arg0: Internal.Structure$GenerationContext_, arg1: Internal.Heightmap$Types_, arg2: Internal.Consumer_<Internal.StructurePiecesBuilder>): Internal.Optional<Internal.Structure$GenerationStub>;
        hashCode(): number;
        static settingsCodec<S extends Internal.Structure>(arg0: Internal.RecordCodecBuilder$Instance_<S>): Internal.RecordCodecBuilder<S, Internal.Structure$StructureSettings>;
        /**
         * @deprecated
        */
        getLowestYIn5by5BoxOffset7Blocks(arg0: Internal.Structure$GenerationContext_, arg1: Internal.Rotation_): BlockPos;
        wait(): void;
        wait(arg0: number): void;
        afterPlace(arg0: Internal.WorldGenLevel_, arg1: Internal.StructureManager_, arg2: Internal.ChunkGenerator_, arg3: Internal.RandomSource_, arg4: Internal.BoundingBox_, arg5: Internal.ChunkPos_, arg6: Internal.PiecesContainer_): void;
        equals(arg0: any): boolean;
        getModifiedStructureSettings(): Internal.Structure$StructureSettings;
        get class(): typeof any
        set tingsCodec(arg0: Internal.RecordCodecBuilder$Instance_<S>)
        get modifiedStructureSettings(): Internal.Structure$StructureSettings
        static readonly CODEC: Internal.Codec<Internal.WaySignStructure>;
    }
    type WaySignStructure_ = WaySignStructure;
    class BlockTwilightGrass extends Internal.BushBlock implements Internal.IForgeShearable, Internal.IPlantable {
        constructor(arg0: Internal.Supplier_<Internal.Block>, arg1: Internal.MapColor_)
        isShearable(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getSettings(): Internal.BlockBehaviour$Properties;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        getTypeData(): Internal.CompoundTag;
        setFriction(arg0: number): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getSpeedFactor(): number;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        playerDestroy(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Player_): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Internal.Player_): Internal.ItemStack;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        getRenderPropertiesInternal(): any;
        needsDynamicNodeTypeCheck(): boolean;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        setRequiresTool(v: boolean): void;
        asBlock(): Internal.Block;
        getPlant(arg0: Internal.BlockGetter_, arg1: BlockPos_): Internal.BlockState;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        puzzleslib$setItem(arg0: Internal.Item_): void;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        /**
         * @deprecated
        */
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        /**
         * @deprecated
        */
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        lychee$isTickable(): boolean;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        /**
         * @deprecated
        */
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        mayPlaceOn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        spawnDestroyParticles(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_): void;
        wait(): void;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Internal.Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(shape: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        setIsRandomlyTicking(arg0: boolean): void;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        registerDefaultState(arg0: Internal.BlockState_): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        /**
         * @deprecated
        */
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        isAir(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        needsDynamicBurningCheck(): boolean;
        getDescriptionId(): string;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        handler$bob000$radium$postConstruct(p_i241196_1_: Internal.BlockBehaviour$Properties_, ci: Internal.CallbackInfo_): void;
        tryDropExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: Internal.ItemStack_, arg3: Internal.IntProvider_): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        handler$eok000$particular$spawnParticles(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, random: Internal.RandomSource_, ci: Internal.CallbackInfo_): void;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        onSheared(arg0: Internal.Player_, arg1: Internal.ItemStack_, arg2: Internal.Level_, arg3: BlockPos_, arg4: number): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        setDrops(arg0: ResourceLocation_): void;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        getBlockProperties(): Internal.BlockBehaviour$Properties;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getShapeForEachState(arg0: Internal.Function_<Internal.BlockState, Internal.VoxelShape>): Internal.ImmutableMap<Internal.BlockState, Internal.VoxelShape>;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        getFriction(): number;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        createBlockStateDefinition(arg0: Internal.StateDefinition$Builder_<Internal.Block, Internal.BlockState>): void;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        notify(): void;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        handler$dji000$spectrum$afterBreak(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        setDestroySpeed(v: number): void;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        handler$zbh000$additionalentityattributes$additionalEntityAttributes$saveBreakingPlayer(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        arch$holder(): Internal.Holder<Internal.Block>;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        getPlantType(arg0: Internal.BlockGetter_, arg1: BlockPos_): Internal.PlantType;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): void;
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        lychee$setTickable(arg0: boolean): void;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        get settings(): Internal.BlockBehaviour$Properties
        /**
         * @deprecated
        */
        get explosionResistance(): number
        get typeData(): Internal.CompoundTag
        set friction(arg0: number)
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get descriptionId(): string
        get jumpFactor(): number
        set drops(arg0: ResourceLocation_)
        set speedFactor(arg0: number)
        get blockProperties(): Internal.BlockBehaviour$Properties
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get mod(): string
        set hasCollision(arg0: boolean)
    }
    type BlockTwilightGrass_ = BlockTwilightGrass;
    interface FabricIngredient {
        getCustomIngredient(): Internal.CustomIngredient;
        requiresTesting(): boolean;
        get customIngredient(): Internal.CustomIngredient
    }
    type FabricIngredient_ = FabricIngredient;
    class TooltipFlag$Default extends Internal.Record implements Internal.TooltipFlag {
        constructor(arg0: boolean, arg1: boolean)
        getClass(): typeof any;
        toString(): string;
        asCreative(): this;
        isAdvanced(): boolean;
        notifyAll(): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        advanced(): boolean;
        hashCode(): number;
        creative(): boolean;
        isCreative(): boolean;
        wait(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        get class(): typeof any
        get advanced(): boolean
        get creative(): boolean
    }
    type TooltipFlag$Default_ = TooltipFlag$Default;
    class LaserPipeBlock extends com.gregtechceu.gtceu.api.block.PipeBlock<Internal.LaserPipeType, Internal.LaserPipeProperties, Internal.LevelLaserPipeNet> {
        constructor(properties: Internal.BlockBehaviour$Properties_, type: Internal.LaserPipeType_)
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getSettings(): Internal.BlockBehaviour$Properties;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        getTypeData(): Internal.CompoundTag;
        setFriction(arg0: number): void;
        updateActiveNodeStatus(worldIn: Internal.Level_, pos: BlockPos_, pipeTile: Internal.IPipeNode_<Internal.LaserPipeType, Internal.LaserPipeProperties>): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getSpeedFactor(): number;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        playerDestroy(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Player_): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Internal.Player_): Internal.ItemStack;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        newBlockEntity(arg0: BlockPos_, arg1: Internal.BlockState_): Internal.BlockEntity;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        getRenderPropertiesInternal(): any;
        needsDynamicNodeTypeCheck(): boolean;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        getDrops(state: Internal.BlockState_, builder: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        entityInside(state: Internal.BlockState_, level: Internal.Level_, pos: BlockPos_, entity: Internal.Entity_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        setRequiresTool(v: boolean): void;
        asBlock(): Internal.Block;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        puzzleslib$setItem(arg0: Internal.Item_): void;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        canPipesConnect(selfTile: Internal.IPipeNode_<Internal.LaserPipeType, Internal.LaserPipeProperties>, side: Internal.Direction_, sideTile: Internal.IPipeNode_<Internal.LaserPipeType, Internal.LaserPipeProperties>): boolean;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        /**
         * @deprecated
        */
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        tick(state: Internal.BlockState_, level: Internal.ServerLevel_, pos: BlockPos_, random: Internal.RandomSource_): void;
        lychee$isTickable(): boolean;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        neighborChanged(state: Internal.BlockState_, level: Internal.Level_, pos: BlockPos_, block: Internal.Block_, fromPos: BlockPos_, isMoving: boolean): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isCollisionShapeFullBlock(state: Internal.BlockState_, level: Internal.BlockGetter_, pos: BlockPos_): boolean;
        getTicker<T extends Internal.BlockEntity>(level: Internal.Level_, state: Internal.BlockState_, blockEntityType: Internal.BlockEntityType_<T>): Internal.BlockEntityTicker<T>;
        /**
         * @deprecated
        */
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(level: Internal.LevelAccessor_, pos: BlockPos_, state: Internal.BlockState_): void;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        use(state: Internal.BlockState_, level: Internal.Level_, pos: BlockPos_, player: Internal.Player_, hand: Internal.InteractionHand_, hit: Internal.BlockHitResult_): InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        createRawData(pState: Internal.BlockState_, pStack: Internal.ItemStack_): Internal.LaserPipeProperties;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        getCollisionShape(state: Internal.BlockState_, level: Internal.BlockGetter_, pos: BlockPos_, context: Internal.CollisionContext_): Internal.VoxelShape;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        createProperties(pipeTile: Internal.IPipeNode_<Internal.LaserPipeType, Internal.LaserPipeProperties>): Internal.LaserPipeProperties;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        spawnDestroyParticles(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_): void;
        wait(): void;
        getRenderer(state: Internal.BlockState_): Internal.PipeBlockRenderer;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Internal.Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(shape: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        setIsRandomlyTicking(arg0: boolean): void;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        registerDefaultState(arg0: Internal.BlockState_): void;
        "newBlockEntity(net.minecraft.core.BlockPos,net.minecraft.world.level.block.state.BlockState)"(pos: BlockPos_, state: Internal.BlockState_): Internal.PipeBlockEntity<Internal.LaserPipeType, Internal.LaserPipeProperties>;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        /**
         * @deprecated
        */
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        onRemove(pState: Internal.BlockState_, pLevel: Internal.Level_, pPos: BlockPos_, pNewState: Internal.BlockState_, pIsMoving: boolean): void;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        isAir(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        needsDynamicBurningCheck(): boolean;
        getDescriptionId(): string;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        handler$bob000$radium$postConstruct(p_i241196_1_: Internal.BlockBehaviour$Properties_, ci: Internal.CallbackInfo_): void;
        tryDropExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: Internal.ItemStack_, arg3: Internal.IntProvider_): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        handler$eok000$particular$spawnParticles(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, random: Internal.RandomSource_, ci: Internal.CallbackInfo_): void;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getWorldPipeNet(world: Internal.ServerLevel_): Internal.LevelLaserPipeNet;
        getLightMap(world: Internal.BlockAndTintGetter_, state: Internal.BlockState_, pos: BlockPos_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        createProperties(state: Internal.BlockState_, stack: Internal.ItemStack_): Internal.LaserPipeProperties;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        setDrops(arg0: ResourceLocation_): void;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        newBlockEntity(pos: BlockPos_, state: Internal.BlockState_): Internal.PipeBlockEntity<Internal.LaserPipeType, Internal.LaserPipeProperties>;
        getBlockAppearance(state: Internal.BlockState_, level: Internal.BlockAndTintGetter_, pos: BlockPos_, side: Internal.Direction_, sourceState: Internal.BlockState_, sourcePos: BlockPos_): Internal.BlockState;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        "newBlockEntity(net.minecraft.core.BlockPos,net.minecraft.world.level.block.state.BlockState)"(arg0: BlockPos_, arg1: Internal.BlockState_): Internal.BlockEntity;
        getBlockProperties(): Internal.BlockBehaviour$Properties;
        setExplosionResistance(arg0: number): void;
        getFallbackType(): any;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getShapeForEachState(arg0: Internal.Function_<Internal.BlockState, Internal.VoxelShape>): Internal.ImmutableMap<Internal.BlockState, Internal.VoxelShape>;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        setPlacedBy(level: Internal.Level_, pos: BlockPos_, state: Internal.BlockState_, placer: Internal.LivingEntity_, stack: Internal.ItemStack_): void;
        onPlace(state: Internal.BlockState_, level: Internal.Level_, pos: BlockPos_, oldState: Internal.BlockState_, isMoving: boolean): void;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        getFriction(): number;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        createBlockStateDefinition(arg0: Internal.StateDefinition$Builder_<Internal.Block, Internal.BlockState>): void;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        notify(): void;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        handler$dji000$spectrum$afterBreak(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(state: Internal.BlockState_, level: Internal.BlockAndTintGetter_, pos: BlockPos_, side: Internal.Direction_, queryState: Internal.BlockState_, queryPos: BlockPos_): Internal.BlockState;
        setDestroySpeed(v: number): void;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        getBlockEntityType(): Internal.BlockEntityType<Internal.PipeBlockEntity<Internal.LaserPipeType, Internal.LaserPipeProperties>>;
        handler$zbh000$additionalentityattributes$additionalEntityAttributes$saveBreakingPlayer(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getListener<T extends Internal.BlockEntity>(arg0: Internal.ServerLevel_, arg1: T): Internal.GameEventListener;
        arch$holder(): Internal.Holder<Internal.Block>;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        onNeighborChange(state: Internal.BlockState_, level: Internal.LevelReader_, pos: BlockPos_, neighbor: BlockPos_): void;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        getPipeTile(level: Internal.BlockGetter_, pos: BlockPos_): Internal.IPipeNode<Internal.LaserPipeType, Internal.LaserPipeProperties>;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static tintedColor(): Internal.BlockColor;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): void;
        getShape(pState: Internal.BlockState_, pLevel: Internal.BlockGetter_, pPos: BlockPos_, context: Internal.CollisionContext_): Internal.VoxelShape;
        lychee$setTickable(arg0: boolean): void;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        canPipeConnectToBlock(selfTile: Internal.IPipeNode_<Internal.LaserPipeType, Internal.LaserPipeProperties>, side: Internal.Direction_, tile: Internal.BlockEntity_): boolean;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        canConnect(selfTile: Internal.IPipeNode_<Internal.LaserPipeType, Internal.LaserPipeProperties>, facing: Internal.Direction_): boolean;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        get settings(): Internal.BlockBehaviour$Properties
        /**
         * @deprecated
        */
        get explosionResistance(): number
        get typeData(): Internal.CompoundTag
        set friction(arg0: number)
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get descriptionId(): string
        get jumpFactor(): number
        set drops(arg0: ResourceLocation_)
        set speedFactor(arg0: number)
        get blockProperties(): Internal.BlockBehaviour$Properties
        set explosionResistance(arg0: number)
        get fallbackType(): any
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get blockEntityType(): Internal.BlockEntityType<Internal.PipeBlockEntity<Internal.LaserPipeType, Internal.LaserPipeProperties>>
        get name(): Internal.MutableComponent
        get mod(): string
        set hasCollision(arg0: boolean)
        readonly renderer: Internal.PipeBlockRenderer;
        readonly model: Internal.PipeModel;
    }
    type LaserPipeBlock_ = LaserPipeBlock;
    interface IFocus <V> {
        abstract getTypedValue(): Internal.ITypedIngredient<V>;
        abstract checkedCast<T>(arg0: Internal.IIngredientType_<T>): Internal.Optional<Internal.IFocus<T>>;
        abstract getRole(): Internal.RecipeIngredientRole;
        get typedValue(): Internal.ITypedIngredient<V>
        get role(): Internal.RecipeIngredientRole
    }
    type IFocus_<V> = IFocus<V>;
    interface Drawable {
        draw3D(graphics: Internal.GuiGraphics_): void;
        drawStatic(graphics: Internal.GuiGraphics_, x: number, y: number, w: number, h: number): void;
        abstract draw(arg0: Internal.GuiGraphics_, arg1: number, arg2: number, arg3: number, arg4: number): void;
        (arg0: Internal.GuiGraphics, arg1: number, arg2: number, arg3: number, arg4: number): void;
    }
    type Drawable_ = Drawable | ((arg0: Internal.GuiGraphics, arg1: number, arg2: number, arg3: number, arg4: number)=> void);
    class ItemMeriksMissile extends Internal.ItemMod {
        constructor()
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        allowContinuingBlockBreaking(player: Internal.Player_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        moonlight$addAdditionalBehavior(placementOverride: Internal.AdditionalItemPlacement_): void;
        isFireResistant(): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        moonlight$getClientAnimationExtension(): any;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        fabric_setCustomDamageHandler(handler: Internal.CustomDamageHandler_): void;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getBarColor(arg0: Internal.ItemStack_): number;
        getOrCreateDescriptionId(): string;
        getItem(): Internal.Item;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): InteractionResult;
        moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        moonlight$setClientAnimationExtension(obj: any): void;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        handler$dfl000$revelationary$getCloakedName(stack: Internal.ItemStack_, callbackInfoReturnable: Internal.CallbackInfoReturnable_<any>): void;
        isEdible(): boolean;
        getAttributeModifiers(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        cardinal_createComponents(stack: Internal.ItemStack_): Internal.ComponentContainer;
        isFoil(arg0: Internal.ItemStack_): boolean;
        "getAttributeModifiers(net.minecraft.world.entity.EquipmentSlot,net.minecraft.world.item.ItemStack)"(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        fabric_getEquipmentSlotProvider(): Internal.EquipmentSlotProvider;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        owo$tab(): number;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vector3f;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        "getAttributeModifiers(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.EquipmentSlot)"(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        allowNbtUpdateAnimation(player: Internal.Player_, hand: Internal.InteractionHand_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        fabric_getCachedItemVariant(): Internal.ItemVariant;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        fabric_getCustomDamageHandler(): Internal.CustomDamageHandler;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        static getPlayerPOVHitResult(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.ClipContext$Fluid_): Internal.BlockHitResult;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        equals(arg0: any): boolean;
        setRarity(arg0: Internal.Rarity_): void;
        getRecipeRemainder(stack: Internal.ItemStack_): Internal.ItemStack;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        /**
         * @deprecated
        */
        onDestroyed(arg0: Internal.ItemEntity_): void;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        canBeHurtBy(arg0: DamageSource_): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        fabric_setEquipmentSlotProvider(equipmentSlotProvider: Internal.EquipmentSlotProvider_): void;
        getDescriptionId(): string;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        zeta$setHumanoidArmorModel(arg0: Internal.HumanoidArmorModelGetter_): void;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: DamageSource_): void;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        getDescription(): net.minecraft.network.chat.Component;
        owo$stackGenerator(): Internal.BiConsumer<any, any>;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        useOn(arg0: Internal.UseOnContext_): InteractionResult;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        handler$ebb000$connectormod$redirectIsPiglinCurrency(arg0: Internal.ItemStack_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        setAttackDamage(attackDamage: number): void;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        toString(): string;
        /**
         * @deprecated
        */
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        modifyReturnValue$ffm000$quark$overrideOtherStackedOnMe(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_, arg3: Internal.Slot_, arg4: Internal.ClickAction_, arg5: Internal.Player_, arg6: Internal.SlotAccess_): boolean;
        getId(): string;
        handler$fbm000$moonlight$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        isSuitableFor(stack: Internal.ItemStack_, state: Internal.BlockState_): boolean;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        puzzleslib$setRenderProperties(arg0: any): void;
        notify(): void;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        zeta$setBlockEntityWithoutLevelRenderer(arg0: Internal.BlockEntityWithoutLevelRenderer_): void;
        handler$cog000$croptopia$overrideConstructor(arg0: Internal.Item$Properties_, arg1: Internal.CallbackInfo_): void;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        getEatingSound(): Internal.SoundEvent;
        owo$setGroup(group: Internal.CreativeModeTab_): void;
        puzzleslib$getRenderProperties(): any;
        canBeDepleted(): boolean;
        getDamage(arg0: Internal.ItemStack_): number;
        wait(arg0: number, arg1: number): void;
        getMod(): string;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        owo$group(): Internal.CreativeModeTab;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        modifyReturnValue$ffm000$quark$overrideStackedOnOther(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_): boolean;
        get drinkingSound(): Internal.SoundEvent
        get fireResistant(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set maxDamage(arg0: number)
        get orCreateDescriptionId(): string
        get item(): Internal.Item
        get class(): typeof any
        get renderPropertiesInternal(): any
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        get edible(): boolean
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        set nameKey(arg0: string)
        get idLocation(): ResourceLocation
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
        set rarity(arg0: Internal.Rarity_)
        get complex(): boolean
        get descriptionId(): string
        get creativeTab(): string
        set burnTime(i: number)
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        set itemBuilder(b: Internal.ItemBuilder_)
        set attackDamage(attackDamage: number)
        /**
         * @deprecated
        */
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        /**
         * @deprecated
        */
        get maxStackSize(): number
        get eatingSound(): Internal.SoundEvent
        get mod(): string
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
        static readonly MAX_USE_DURATION: (72000) & (number);
    }
    type ItemMeriksMissile_ = ItemMeriksMissile;
    class RecipeBookSettings {
        constructor()
        getClass(): typeof any;
        write(arg0: Internal.FriendlyByteBuf_): void;
        replaceFrom(arg0: Internal.RecipeBookSettings_): void;
        toString(): string;
        isOpen(arg0: Internal.RecipeBookType_): boolean;
        notifyAll(): void;
        copy(): this;
        write(arg0: Internal.CompoundTag_): void;
        "write(net.minecraft.network.FriendlyByteBuf)"(arg0: Internal.FriendlyByteBuf_): void;
        notify(): void;
        static read(arg0: Internal.FriendlyByteBuf_): Internal.RecipeBookSettings;
        setOpen(arg0: Internal.RecipeBookType_, arg1: boolean): void;
        wait(arg0: number, arg1: number): void;
        static addTagsForType(arg0: Internal.RecipeBookType_, arg1: string, arg2: string): void;
        hashCode(): number;
        "write(net.minecraft.nbt.CompoundTag)"(arg0: Internal.CompoundTag_): void;
        static "read(net.minecraft.network.FriendlyByteBuf)"(arg0: Internal.FriendlyByteBuf_): Internal.RecipeBookSettings;
        static "read(net.minecraft.nbt.CompoundTag)"(arg0: Internal.CompoundTag_): Internal.RecipeBookSettings;
        isFiltering(arg0: Internal.RecipeBookType_): boolean;
        wait(): void;
        static read(arg0: Internal.CompoundTag_): Internal.RecipeBookSettings;
        setFiltering(arg0: Internal.RecipeBookType_, arg1: boolean): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        get class(): typeof any
    }
    type RecipeBookSettings_ = RecipeBookSettings;
    interface DataInput {
        abstract readByte(): number;
        abstract readFully(arg0: number[], arg1: number, arg2: number): void;
        abstract readUnsignedByte(): number;
        abstract readUnsignedShort(): number;
        abstract readLong(): number;
        abstract readFully(arg0: number[]): void;
        abstract readDouble(): number;
        abstract readInt(): number;
        abstract readFloat(): number;
        abstract readBoolean(): boolean;
        abstract skipBytes(arg0: number): number;
        abstract readLine(): string;
        abstract readShort(): number;
        abstract readUTF(): string;
        abstract readChar(): string;
    }
    type DataInput_ = DataInput;
    class LoreInscriber extends Internal.ItemBase implements Internal.Vanishable {
        constructor()
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        allowContinuingBlockBreaking(player: Internal.Player_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        moonlight$addAdditionalBehavior(placementOverride: Internal.AdditionalItemPlacement_): void;
        isFireResistant(): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        "getCreativeTab()"(): string;
        moonlight$getClientAnimationExtension(): any;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        fabric_setCustomDamageHandler(handler: Internal.CustomDamageHandler_): void;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getBarColor(arg0: Internal.ItemStack_): number;
        getOrCreateDescriptionId(): string;
        getItem(): Internal.Item;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): InteractionResult;
        moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        moonlight$setClientAnimationExtension(obj: any): void;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        handler$dfl000$revelationary$getCloakedName(stack: Internal.ItemStack_, callbackInfoReturnable: Internal.CallbackInfoReturnable_<any>): void;
        isEdible(): boolean;
        getAttributeModifiers(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        cardinal_createComponents(stack: Internal.ItemStack_): Internal.ComponentContainer;
        isFoil(arg0: Internal.ItemStack_): boolean;
        "getAttributeModifiers(net.minecraft.world.entity.EquipmentSlot,net.minecraft.world.item.ItemStack)"(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        fabric_getEquipmentSlotProvider(): Internal.EquipmentSlotProvider;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        owo$tab(): number;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vector3f;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        isPlaceholder(): boolean;
        /**
         * @deprecated
        */
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        "getCreativeTab()"(): Internal.CreativeModeTab;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        "getAttributeModifiers(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.EquipmentSlot)"(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        allowNbtUpdateAnimation(player: Internal.Player_, hand: Internal.InteractionHand_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        fabric_getCachedItemVariant(): Internal.ItemVariant;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        fabric_getCustomDamageHandler(): Internal.CustomDamageHandler;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        static getPlayerPOVHitResult(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.ClipContext$Fluid_): Internal.BlockHitResult;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        equals(arg0: any): boolean;
        setRarity(arg0: Internal.Rarity_): void;
        getRecipeRemainder(stack: Internal.ItemStack_): Internal.ItemStack;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        /**
         * @deprecated
        */
        onDestroyed(arg0: Internal.ItemEntity_): void;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        canBeHurtBy(arg0: DamageSource_): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        fabric_setEquipmentSlotProvider(equipmentSlotProvider: Internal.EquipmentSlotProvider_): void;
        getDescriptionId(): string;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        zeta$setHumanoidArmorModel(arg0: Internal.HumanoidArmorModelGetter_): void;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: DamageSource_): void;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        getDescription(): net.minecraft.network.chat.Component;
        owo$stackGenerator(): Internal.BiConsumer<any, any>;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        getCreativeTab(): Internal.CreativeModeTab;
        useOn(arg0: Internal.UseOnContext_): InteractionResult;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        handler$ebb000$connectormod$redirectIsPiglinCurrency(arg0: Internal.ItemStack_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        setAttackDamage(attackDamage: number): void;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        toString(): string;
        /**
         * @deprecated
        */
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        modifyReturnValue$ffm000$quark$overrideOtherStackedOnMe(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_, arg3: Internal.Slot_, arg4: Internal.ClickAction_, arg5: Internal.Player_, arg6: Internal.SlotAccess_): boolean;
        getId(): string;
        handler$fbm000$moonlight$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        isSuitableFor(stack: Internal.ItemStack_, state: Internal.BlockState_): boolean;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        puzzleslib$setRenderProperties(arg0: any): void;
        notify(): void;
        getCreativeTabStacks(): Internal.List<Internal.ItemStack>;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        static rayTrace(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.ClipContext$Fluid_): Internal.BlockHitResult;
        zeta$setBlockEntityWithoutLevelRenderer(arg0: Internal.BlockEntityWithoutLevelRenderer_): void;
        handler$cog000$croptopia$overrideConstructor(arg0: Internal.Item$Properties_, arg1: Internal.CallbackInfo_): void;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        getEatingSound(): Internal.SoundEvent;
        owo$setGroup(group: Internal.CreativeModeTab_): void;
        puzzleslib$getRenderProperties(): any;
        canBeDepleted(): boolean;
        getDamage(arg0: Internal.ItemStack_): number;
        wait(arg0: number, arg1: number): void;
        setPlaceholder(): Internal.Item;
        getMod(): string;
        static getDefaultProperties(): Internal.Item$Properties;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        owo$group(): Internal.CreativeModeTab;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        modifyReturnValue$ffm000$quark$overrideStackedOnOther(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_): boolean;
        get drinkingSound(): Internal.SoundEvent
        get fireResistant(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get "creativeTab()"(): string
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set maxDamage(arg0: number)
        get orCreateDescriptionId(): string
        get item(): Internal.Item
        get class(): typeof any
        get renderPropertiesInternal(): any
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        get edible(): boolean
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        set nameKey(arg0: string)
        get placeholder(): boolean
        get "creativeTab()"(): Internal.CreativeModeTab
        get idLocation(): ResourceLocation
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
        set rarity(arg0: Internal.Rarity_)
        get complex(): boolean
        get descriptionId(): string
        get creativeTab(): string
        set burnTime(i: number)
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        get creativeTab(): Internal.CreativeModeTab
        set itemBuilder(b: Internal.ItemBuilder_)
        set attackDamage(attackDamage: number)
        /**
         * @deprecated
        */
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        get creativeTabStacks(): Internal.List<Internal.ItemStack>
        /**
         * @deprecated
        */
        get maxStackSize(): number
        get eatingSound(): Internal.SoundEvent
        get mod(): string
        get defaultProperties(): Internal.Item$Properties
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
    }
    type LoreInscriber_ = LoreInscriber;
    class ItemConverter extends Internal.Record {
        constructor(conversionMap: Internal.List_<Internal.Map$Entry<Internal.Predicate<Internal.ItemKey>, Internal.Function<Internal.ItemKey, Internal.ItemKey>>>)
        constructor(arg0: Internal.Map_<Internal.ItemKey, Internal.ItemKey>)
        getClass(): typeof any;
        mapToKey(arg0: Internal.ItemStack_): Internal.Map$Entry<Internal.ItemKey, number>;
        toString(): string;
        static defaultConverter(): Internal.ItemConverter;
        static advQuarryConverter(): Internal.ItemConverter;
        notifyAll(): void;
        static deepslateConverter(): Internal.ItemConverter;
        mapToKey(arg0: Internal.ItemKey_, arg1: number): Internal.Map$Entry<Internal.ItemKey, number>;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        combined(arg0: Internal.ItemConverter_): this;
        map(arg0: Internal.ItemStack_): Internal.ItemStack;
        hashCode(): number;
        wait(): void;
        wait(arg0: number): void;
        conversionMap(): Internal.List<Internal.Map$Entry<Internal.Predicate<Internal.ItemKey>, Internal.Function<Internal.ItemKey, Internal.ItemKey>>>;
        static voidConverter(arg0: Internal.List_<Internal.ItemKey>): Internal.ItemConverter;
        equals(arg0: any): boolean;
        get class(): typeof any
    }
    type ItemConverter_ = ItemConverter;
    abstract class AbstractFish extends Internal.WaterAnimal implements Internal.Bucketable {
        constructor(arg0: Internal.EntityType_<Internal.AbstractFish>, arg1: Internal.Level_)
        getUpVector(arg0: number): Vec3d;
        gameEvent(arg0: Internal.GameEvent_, arg1: Internal.Entity_): void;
        static checkMobSpawnRules(arg0: Internal.EntityType_<Internal.Mob>, arg1: Internal.LevelAccessor_, arg2: Internal.MobSpawnType_, arg3: BlockPos_, arg4: Internal.RandomSource_): boolean;
        setDefaultMovementSpeedMultiplier(speed: number): void;
        isSuppressingBounce(): boolean;
        handler$ejj000$retrodamageindicators$retroDamageIndicators_onSyncedDataUpdated(arg0: Internal.EntityDataAccessor_<any>, arg1: Internal.CallbackInfo_): void;
        setTarget(arg0: Internal.LivingEntity_): void;
        isOnFire(): boolean;
        getDeathSound(): Internal.SoundEvent;
        onLeashDistance(arg0: number): void;
        getPositionCodec(): Internal.VecDeltaCodec;
        getPickedResult(arg0: Internal.HitResult_): Internal.ItemStack;
        setMaxUpStep(arg0: number): void;
        /**
         * @deprecated
        */
        updateFluidHeightAndDoFluidPushing(arg0: Internal.TagKey_<Internal.Fluid>, arg1: number): boolean;
        shouldPassengersInheritMalus(): boolean;
        convertTo<T extends Internal.Mob>(arg0: Internal.EntityType_<T>, arg1: boolean): T;
        getFallFlyingTicks(): number;
        runCommandSilent(command: string): number;
        setPosition(x: number, y: number, z: number): void;
        chunkPosition(): Internal.ChunkPos;
        dropLeash(arg0: boolean, arg1: boolean): void;
        gameEvent(arg0: Internal.GameEvent_): void;
        accessoriesCapability(): Internal.AccessoriesCapability;
        setXxa(arg0: number): void;
        updateWalkAnimation(arg0: number): void;
        setDelayedLeashHolderId(arg0: number): void;
        isShiftKeyDown(): boolean;
        isInFluidType(arg0: Internal.FluidState_): boolean;
        setUUID(arg0: Internal.UUID_): void;
        checkBelowWorld(): void;
        onEffectUpdated(arg0: Internal.MobEffectInstance_, arg1: boolean, arg2: Internal.Entity_): void;
        updateSwingTime(): void;
        setMotionZ(z: number): void;
        constant$zbj000$additionalentityattributes$additionalEntityAttributes$modifyUpwardSwimming(original: number, fluid: Internal.TagKey_<any>): number;
        "deserializeNBT(net.minecraft.nbt.Tag)"(arg0: Internal.Tag_): void;
        handler$zza000$step_height_entity_attribute$getStepHeight(cir: Internal.CallbackInfoReturnable_<any>): void;
        canFreeze(): boolean;
        ignoreExplosion(): boolean;
        getBlockY(): number;
        isSpectator(): boolean;
        isAlwaysExperienceDropper(): boolean;
        setMainHandItem(item: Internal.ItemStack_): void;
        removeEffectNoUpdate(arg0: Internal.MobEffect_): Internal.MobEffectInstance;
        spawnAtLocation(arg0: Internal.ItemLike_, arg1: number): Internal.ItemEntity;
        getPersistentData(): Internal.CompoundTag;
        getHealth(): number;
        getMaxHealth(): number;
        setPathfindingMalus(arg0: Internal.BlockPathTypes_, arg1: number): void;
        isRegisteredToWorld(): boolean;
        getRandomZ(arg0: number): number;
        setAggressive(arg0: boolean): void;
        constant$zbn000$additionalentityattributes$additionalEntityAttributes$knockDownwards(original: number): number;
        setRemoved(arg0: Internal.Entity$RemovalReason_): void;
        getAttachedOrCreate<A>(type: Internal.AttachmentType_<A>, initializer: Internal.Supplier_<A>): A;
        isInWaterRainOrBubble(): boolean;
        getDistanceSq(arg0: number, arg1: number, arg2: number): number;
        getRemovalReason(): Internal.Entity$RemovalReason;
        onFlap(): void;
        actuallyHurt(arg0: DamageSource_, arg1: number): void;
        resetFallDistance(): void;
        canSprint(): boolean;
        blockPosition(): BlockPos;
        setLevel(arg0: Internal.Level_): void;
        setBoundingBox(arg0: Internal.AABB_): void;
        isAmbientCreature(): boolean;
        setZza(arg0: number): void;
        getBlock(): Internal.BlockContainerJS;
        setEquipment(slot: Internal.EquipmentSlot_, item: Internal.ItemStack_): void;
        randomTeleport(arg0: number, arg1: number, arg2: number, arg3: boolean): boolean;
        invalidateCaps(): void;
        getName(): net.minecraft.network.chat.Component;
        playAmbientSound(): void;
        onGround(): boolean;
        getControlledVehicle(): Internal.Entity;
        isOnSameTeam(arg0: Internal.Entity_): boolean;
        getArmorValue(): number;
        isInFluidType(arg0: Internal.BiPredicate_<Internal.FluidType, number>): boolean;
        tick(): void;
        getKillCredit(): Internal.LivingEntity;
        redirect$dlf000$spectrum$isWet(livingEntity: Internal.LivingEntity_): boolean;
        isPushedByFluid(arg0: Internal.FluidType_): boolean;
        getComponentContainer(): Internal.ComponentContainer;
        sinkInFluid(arg0: Internal.FluidType_): void;
        tryCheckInsideBlocks(): void;
        hasPermissions(arg0: number): boolean;
        accessoriesHolder(): Internal.AccessoriesHolder;
        teleportTo(dimension: ResourceLocation_, x: number, y: number, z: number, yaw: number, pitch: number): void;
        onInsideBlock(arg0: Internal.BlockState_): void;
        static createMobAttributes(): Internal.AttributeSupplier$Builder;
        getDefaultLootTable(): ResourceLocation;
        isAutoSpinAttack(): boolean;
        getRemainingFireTicks(): number;
        handleAirSupply(arg0: number): void;
        limitPistonMovement(arg0: Vec3d_): Vec3d;
        onlyOpCanSetNbt(): boolean;
        addMotion(arg0: number, arg1: number, arg2: number): void;
        fireImmune(): boolean;
        getMaxFallDistance(): number;
        dsurround_getEffectInfo(): Internal.EntityEffectInfo;
        isHolding(arg0: Internal.Item_): boolean;
        getZ(arg0: number): number;
        hasCustomOutlineRendering(arg0: Internal.Player_): boolean;
        static areAllEffectsAmbient(arg0: Internal.Collection_<Internal.MobEffectInstance>): boolean;
        doHurtTarget(arg0: Internal.Entity_): boolean;
        getTicksFrozen(): number;
        tickRidden(arg0: Internal.Player_, arg1: Vec3d_): void;
        getRandomX(arg0: number): number;
        spawnAtLocation(arg0: Internal.ItemStack_, arg1: number): Internal.ItemEntity;
        pick(arg0: number, arg1: number, arg2: boolean): Internal.HitResult;
        getVoicePitch(): number;
        setStatusMessage(message: net.minecraft.network.chat.Component_): void;
        setSleepingPos(arg0: BlockPos_): void;
        isDescending(): boolean;
        getAttributeBaseValue(arg0: Internal.Attribute_): number;
        sendEffectToPassengers(arg0: Internal.MobEffectInstance_): void;
        getHeadRotSpeed(): number;
        getYHeadRot(): number;
        handler$dlf000$spectrum$applyBonusDamage(source: DamageSource_, amount: number, cir: Internal.CallbackInfoReturnable_<any>): void;
        verifyEquippedItem(arg0: Internal.ItemStack_): void;
        getProjectile(arg0: Internal.ItemStack_): Internal.ItemStack;
        damageEquipment(slot: Internal.EquipmentSlot_, amount: number, onBroken: Internal.Consumer_<Internal.ItemStack>): void;
        syncPacketPositionCodec(arg0: number, arg1: number, arg2: number): void;
        setAbsorptionAmount(arg0: number): void;
        isSunBurnTick(): boolean;
        makeBrain(arg0: Internal.Dynamic_<any>): Internal.Brain<any>;
        handler$dlf000$spectrum$mitigateFallDamageWithPuffCirclet(heightDifference: number, onGround: boolean, landedState: Internal.BlockState_, landedPosition: BlockPos_, ci: Internal.CallbackInfo_): void;
        isAffectedByFluids(): boolean;
        canAddPassenger(arg0: Internal.Entity_): boolean;
        shouldRenderAtSqrDistance(arg0: number): boolean;
        getAttachedOrSet<A>(type: Internal.AttachmentType_<A>, defaultValue: A): A;
        damageSources(): Internal.DamageSources;
        removeAttached<A>(type: Internal.AttachmentType_<A>): A;
        removeAllGoals(arg0: Internal.Predicate_<Internal.Goal>): void;
        swing(): void;
        getAmbientSound(): Internal.SoundEvent;
        recreateFromPacket(arg0: Internal.ClientboundAddEntityPacket_): void;
        canStartSwimming(): boolean;
        setDeltaMovement(arg0: Vec3d_): void;
        getLeashOffset(arg0: number): Vec3d;
        isBaby(): boolean;
        damageEquipment(slot: Internal.EquipmentSlot_): void;
        isGlowing(): boolean;
        "isInFluidType(net.minecraft.world.level.material.FluidState)"(arg0: Internal.FluidState_): boolean;
        canBreatheUnderwater(): boolean;
        getWalkTargetValue(arg0: BlockPos_): number;
        die(arg0: DamageSource_): void;
        removeAllEffects(): boolean;
        getLeashOffset(): Vec3d;
        hasLineOfSight(arg0: Internal.Entity_): boolean;
        onClimbable(): boolean;
        isAttackable(): boolean;
        getRiddenSpeed(arg0: Internal.Player_): number;
        processPortalCooldown(): void;
        getSlot(arg0: number): Internal.SlotAccess;
        "deserializeNBT(net.minecraft.nbt.CompoundTag)"(arg0: Internal.CompoundTag_): void;
        stopSeenByPlayer(arg0: Internal.ServerPlayer_): void;
        isUnderWater(): boolean;
        stopRiding(): void;
        getSwimHighSpeedSplashSound(): Internal.SoundEvent;
        getLeashHolder(): Internal.Entity;
        createWitherRose(arg0: Internal.LivingEntity_): void;
        getX(arg0: number): number;
        getSensing(): Internal.Sensing;
        getLegsArmorItem(): Internal.ItemStack;
        captureDrops(arg0: Internal.Collection_<Internal.ItemEntity>): Internal.Collection<Internal.ItemEntity>;
        getSelfAndPassengers(): Internal.Stream<any>;
        rayTrace(distance: number): Internal.RayTraceResultJS;
        getDeltaMovement(): Vec3d;
        canTakeItem(arg0: Internal.ItemStack_): boolean;
        removeSoulSpeed(): void;
        shouldDropExperience(): boolean;
        getEquipmentDropChance(arg0: Internal.EquipmentSlot_): number;
        hasPassenger(arg0: Internal.Entity_): boolean;
        syncComponent(key: Internal.ComponentKey_<any>, packetWriter: Internal.ComponentPacketWriter_, predicate: Internal.PlayerSyncPredicate_): void;
        setSecondsOnFire(arg0: number): void;
        moveTo(arg0: number, arg1: number, arg2: number): void;
        "getDisplayName()"(): net.minecraft.network.chat.Component;
        getLootTable(): ResourceLocation;
        getTicksUsingItem(): number;
        tickHeadTurn(arg0: number, arg1: number): number;
        getArrowCount(): number;
        calculateViewVector(arg0: number, arg1: number): Vec3d;
        getMoveControl(): Internal.MoveControl;
        setMotion(arg0: number, arg1: number, arg2: number): void;
        playSound(arg0: Internal.SoundEvent_): void;
        makeBoundingBox(): Internal.AABB;
        handler$deo000$eidolon$eidolonrepraised$getMobType(arg0: Internal.CallbackInfoReturnable_<any>): void;
        getDefaultMovementSpeed(): number;
        restoreFrom(arg0: Internal.Entity_): void;
        redirect$bkg000$fabric_entity_events_v1$beforeEntityKilled(livingEntity: Internal.LivingEntity_, source: DamageSource_, amount: number): boolean;
        isPeacefulCreature(): boolean;
        setOnGround(arg0: boolean): void;
        addEffect(arg0: Internal.MobEffectInstance_, arg1: Internal.Entity_): boolean;
        ate(): void;
        setPos(arg0: number, arg1: number, arg2: number): void;
        notify(): void;
        getFirstTick(): boolean;
        setPersistenceRequired(): void;
        getLastHurtByMobTimestamp(): number;
        getVehicle(): Internal.Entity;
        isEffectiveAi(): boolean;
        startRiding(arg0: Internal.Entity_, arg1: boolean): boolean;
        setSpawnCancelled(arg0: boolean): void;
        getStringUuid(): string;
        setSwimming(arg0: boolean): void;
        canHydrateInFluidType(arg0: Internal.FluidType_): boolean;
        getMainArm(): Internal.HumanoidArm;
        checkSpawnRules(arg0: Internal.LevelAccessor_, arg1: Internal.MobSpawnType_): boolean;
        getRotationVector(): Internal.Vec2;
        getHurtDir(): number;
        isSprinting(): boolean;
        isMaxGroupSizeReached(arg0: number): boolean;
        getMotionY(): number;
        getOffhandItem(): Internal.ItemStack;
        canCollideWith(arg0: Internal.Entity_): boolean;
        getBlockExplosionResistance(arg0: Internal.Explosion_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.FluidState_, arg5: number): number;
        getFluidFallDistanceModifier(arg0: Internal.FluidType_): number;
        clearSleepingPos(): void;
        canSpawnSprintParticle(): boolean;
        canRide(arg0: Internal.Entity_): boolean;
        "moveTo(net.minecraft.core.BlockPos,float,float)"(arg0: BlockPos_, arg1: number, arg2: number): void;
        getLastHurtMob(): Internal.LivingEntity;
        moveRelative(arg0: number, arg1: Vec3d_): void;
        getOnPos(arg0: number): BlockPos;
        isAddedToWorld(): boolean;
        saveAsPassenger(arg0: Internal.CompoundTag_): boolean;
        gtceu$setFireImmune(isImmune: boolean): void;
        getDrinkingSound(arg0: Internal.ItemStack_): Internal.SoundEvent;
        getLastDamageSource(): DamageSource;
        getSoundSource(): Internal.SoundSource;
        removeAfterChangingDimensions(): void;
        setNoActionTime(arg0: number): void;
        setMovementSpeedAddition(speed: number): void;
        equipmentHasChanged(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getPose(): Internal.Pose;
        getSharedFlag(arg0: number): boolean;
        getAttribute(arg0: Internal.Attribute_): Internal.AttributeInstance;
        setPositionAndRotation(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        canBeAffected(arg0: Internal.MobEffectInstance_): boolean;
        tryAddFrost(): void;
        checkFallDamage(arg0: number, arg1: boolean, arg2: Internal.BlockState_, arg3: BlockPos_): void;
        quark$lastHurtByPlayer(): Internal.Player;
        getRestrictCenter(): BlockPos;
        isLeftHanded(): boolean;
        removeVehicle(): void;
        defineSynchedData(): void;
        checkInsideBlocks(): void;
        setZ(z: number): void;
        getY(): number;
        hashCode(): number;
        deserializeNBT(arg0: Internal.CompoundTag_): void;
        eat(arg0: Internal.Level_, arg1: Internal.ItemStack_): Internal.ItemStack;
        createHoverEvent(): Internal.HoverEvent;
        getPickupSound(): Internal.SoundEvent;
        isWithinMeleeAttackRange(arg0: Internal.LivingEntity_): boolean;
        serverAiStep(): void;
        broadcastBreakEvent(arg0: Internal.EquipmentSlot_): void;
        getExitPortal(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: boolean, arg3: Internal.WorldBorder_): Internal.Optional<Internal.BlockUtil$FoundRectangle>;
        handler$bkm000$fabric_entity_events_v1$injectElytraTick(info: Internal.CallbackInfo_): void;
        setItemSlotAndDropWhenKilled(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): void;
        sendDebugPackets(): void;
        showVehicleHealth(): boolean;
        getDistance(pos: BlockPos_): number;
        isBlocking(): boolean;
        damageHeldItem(hand: Internal.InteractionHand_, amount: number): void;
        removeAttribute(attribute: Internal.Attribute_, identifier: string): void;
        playMuffledStepSound(arg0: Internal.BlockState_, arg1: BlockPos_): void;
        canRandomSwim(): boolean;
        isPushedByFluid(): boolean;
        dropFromLootTable(arg0: DamageSource_, arg1: boolean): void;
        getArmorCoverPercentage(): number;
        handleRelativeFrictionAndCalculateMovement(arg0: Vec3d_, arg1: number): Vec3d;
        turn(arg0: number, arg1: number): void;
        getAirSupply(): number;
        waterSwimSound(): void;
        moveTo(arg0: BlockPos_, arg1: number, arg2: number): void;
        isPlayer(): boolean;
        isAnimal(): boolean;
        readAdditionalSaveData(arg0: Internal.CompoundTag_): void;
        canBeCollidedWith(): boolean;
        getMotionDirection(): Internal.Direction;
        asComponentProvider(): Internal.ComponentProvider;
        lavaHurt(): void;
        handleDamageEvent(arg0: DamageSource_): void;
        updateUsingItem(arg0: Internal.ItemStack_): void;
        getFabricBalmData(): Internal.CompoundTag;
        canChangeDimensions(): boolean;
        jumpInFluid(arg0: Internal.FluidType_): void;
        getCommandSenderWorld(): Internal.Level;
        quark$lastHurtByPlayerTime(): number;
        getTotalMovementSpeed(): number;
        changeDimension(arg0: Internal.ServerLevel_): Internal.Entity;
        moveInFluid(arg0: Internal.FluidState_, arg1: Vec3d_, arg2: number): boolean;
        fromBucket(): boolean;
        updatingUsingItem(): void;
        blockedByShield(arg0: Internal.LivingEntity_): void;
        attack(hp: number): void;
        canSwimInFluidType(arg0: Internal.FluidType_): boolean;
        getFireImmuneTicks(): number;
        getAttributes(): Internal.AttributeMap;
        isSpawnCancelled(): boolean;
        "hasPassenger(java.util.function.Predicate)"(arg0: Internal.Predicate_<Internal.Entity>): boolean;
        getDimensions(arg0: Internal.Pose_): Internal.EntityDimensions;
        isSwimming(): boolean;
        setSprinting(arg0: boolean): void;
        mayInteract(arg0: Internal.Level_, arg1: BlockPos_): boolean;
        setRot(arg0: number, arg1: number): void;
        setPortalCooldown(): void;
        getAttackAnim(arg0: number): number;
        setX(x: number): void;
        getPortalWaitTime(): number;
        getBlockStateOn(): Internal.BlockState;
        wantsToPickUp(arg0: Internal.ItemStack_): boolean;
        getItemBySlot(arg0: Internal.EquipmentSlot_): Internal.ItemStack;
        getFluidJumpThreshold(): number;
        enchantSpawnedArmor(arg0: Internal.RandomSource_, arg1: number, arg2: Internal.EquipmentSlot_): void;
        "setPositionAndRotation(double,double,double,float,float)"(x: number, y: number, z: number, yaw: number, pitch: number): void;
        isInvisibleTo(arg0: Internal.Player_): boolean;
        stopSleeping(): void;
        spectrum$setActuallyTouchingWater(actuallyTouchingWater: boolean): void;
        setAirSupply(arg0: number): void;
        getOnPos(): BlockPos;
        isUndead(): boolean;
        repositionEntityAfterLoad(): boolean;
        static createLivingAttributes(): Internal.AttributeSupplier$Builder;
        getBlockPosBelowThatAffectsMyMovement(): BlockPos;
        moveTowardsClosestSpace(arg0: number, arg1: number, arg2: number): void;
        getStepHeight(): number;
        static getCollisionHorizontalEscapeVector(arg0: number, arg1: number, arg2: number): Vec3d;
        setRegisteredToWorld(navigation: Internal.PathNavigation_): void;
        isSleeping(): boolean;
        stopUsingItem(): void;
        acceptsFailure(): boolean;
        playCombinationStepSounds(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: BlockPos_): void;
        setOnGroundWithKnownMovement(arg0: boolean, arg1: Vec3d_): void;
        getFluidFallingAdjustedMovement(arg0: number, arg1: boolean, arg2: Vec3d_): Vec3d;
        setOldPosAndRot(): void;
        isFree(arg0: number, arg1: number, arg2: number): boolean;
        getDismountPoses(): Internal.ImmutableList<Internal.Pose>;
        getLastHurtMobTimestamp(): number;
        playBlockFallSound(): void;
        lithiumOnEquipmentChanged(): void;
        "moveTo(double,double,double)"(arg0: number, arg1: number, arg2: number): void;
        setRemainingFireTicks(arg0: number): void;
        updateControlFlags(): void;
        createBodyControl(): Internal.BodyRotationControl;
        /**
         * @deprecated
        */
        getOnPosLegacy(): BlockPos;
        setPos(arg0: Vec3d_): void;
        findDimensionEntryPoint(arg0: Internal.ServerLevel_): Internal.PortalInfo;
        enchantSpawnedWeapon(arg0: Internal.RandomSource_, arg1: number): void;
        populateDefaultEquipmentEnchantments(arg0: Internal.RandomSource_, arg1: Internal.DifficultyInstance_): void;
        damageHeldItem(hand: Internal.InteractionHand_, amount: number, onBroken: Internal.Consumer_<Internal.ItemStack>): void;
        getStandingEyeHeight(arg0: Internal.Pose_, arg1: Internal.EntityDimensions_): number;
        setCanPickUpLoot(arg0: boolean): void;
        getMainHandItem(): Internal.ItemStack;
        areCapsCompatible(arg0: Internal.CapabilityDispatcher_): boolean;
        setSilent(arg0: boolean): void;
        doPush(arg0: Internal.Entity_): void;
        captureDrops(): Internal.Collection<Internal.ItemEntity>;
        hasExactlyOnePlayerPassenger(): boolean;
        canBeSeenAsEnemy(): boolean;
        handler$dlf000$spectrum$drop(source: DamageSource_, ci: Internal.CallbackInfo_): void;
        setLeftHanded(arg0: boolean): void;
        getSwimSplashSound(): Internal.SoundEvent;
        getActiveEffects(): Internal.Collection<Internal.MobEffectInstance>;
        isOnPortalCooldown(): boolean;
        hurtArmor(arg0: DamageSource_, arg1: number): void;
        canAttack(arg0: Internal.LivingEntity_, arg1: Internal.TargetingConditions_): boolean;
        increaseAirSupply(arg0: number): number;
        getAttributeValue(arg0: Internal.Holder_<Internal.Attribute>): number;
        /**
         * @deprecated
        */
        static saveDefaultDataToBucketTag(arg0: Internal.Mob_, arg1: Internal.ItemStack_): void;
        setPitch(arg0: number): void;
        isMultipartEntity(): boolean;
        setPosRaw(arg0: number, arg1: number, arg2: number): void;
        handleEntityEvent(arg0: number): void;
        getParts(): Internal.PartEntity<any>[];
        isUsingItem(): boolean;
        spawnSoulSpeedParticle(): void;
        removeFrost(): void;
        isAlwaysTicking(): boolean;
        interactAt(arg0: Internal.Player_, arg1: Vec3d_, arg2: Internal.InteractionHand_): InteractionResult;
        lerpTo(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): void;
        onPassengerTurned(arg0: Internal.Entity_): void;
        spawnAtLocation(arg0: Internal.ItemLike_): Internal.ItemEntity;
        setAttached(type: Internal.AttachmentType_<any>, value: any): any;
        /**
         * @deprecated
        */
        couldAcceptPassenger(): boolean;
        getForgePersistentData(): Internal.CompoundTag;
        lithiumOnBlockCacheDeleted(): void;
        "spawnAtLocation(net.minecraft.world.level.ItemLike,int)"(arg0: Internal.ItemLike_, arg1: number): Internal.ItemEntity;
        setInvulnerable(arg0: boolean): void;
        push(arg0: Internal.Entity_): void;
        isInFluidType(): boolean;
        jumpFromGround(): void;
        canReplaceCurrentItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getDamageAfterArmorAbsorb(arg0: DamageSource_, arg1: number): number;
        handler$chi000$cofh_core$shield(arg0: DamageSource_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        maxUpStep(): number;
        setGlowing(arg0: boolean): void;
        load(arg0: Internal.CompoundTag_): void;
        "broadcastBreakEvent(net.minecraft.world.entity.EquipmentSlot)"(arg0: Internal.EquipmentSlot_): void;
        setLeashedTo(arg0: Internal.Entity_, arg1: boolean): void;
        onChangedBlock(arg0: BlockPos_): void;
        isAlive(): boolean;
        startSleeping(arg0: BlockPos_): void;
        dsurround_getPotionSwirlColor(): number;
        pickUpItem(arg0: Internal.ItemEntity_): void;
        getBbHeight(): number;
        getMeleeAttackRangeSqr(arg0: Internal.LivingEntity_): number;
        getViewVector(arg0: number): Vec3d;
        getTags(): Internal.Set<string>;
        calculateFallDamage(arg0: number, arg1: number): number;
        getLastAttacker(): Internal.LivingEntity;
        hasControllingPassenger(): boolean;
        closerThan(arg0: Internal.Entity_, arg1: number, arg2: number): boolean;
        absMoveTo(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        updateEffectVisibility(): void;
        onPathfindingStart(): void;
        getPercentFrozen(): number;
        setPortalCooldown(arg0: number): void;
        hasGlowingTag(): boolean;
        shouldBlockExplode(arg0: Internal.Explosion_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: number): boolean;
        setPosition(block: Internal.BlockContainerJS_): void;
        handler$den000$eidolon$eidolonrepraised$isAlliedTo(arg0: Internal.Entity_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        isLeashed(): boolean;
        localvar$dlf000$spectrum$modifyDamage(amount: number, source: DamageSource_): number;
        getSoundVolume(): number;
        addEffect(arg0: Internal.MobEffectInstance_): boolean;
        getViewXRot(arg0: number): number;
        canRiderInteract(): boolean;
        fabric_getAttachments(): Internal.Map<any, any>;
        setPose(arg0: Internal.Pose_): void;
        getReachDistance(): number;
        getEntityType(): Internal.EntityType<any>;
        isWaterCreature(): boolean;
        toString(): string;
        updateInvisibilityStatus(): void;
        saveToBucketTag(arg0: Internal.ItemStack_): void;
        setLastHurtByPlayer(arg0: Internal.Player_): void;
        "getServer()"(): Internal.MinecraftServer;
        mobInteract(arg0: Internal.Player_, arg1: Internal.InteractionHand_): InteractionResult;
        wasExperienceConsumed(): boolean;
        isPushable(): boolean;
        setYBodyRot(arg0: number): void;
        foodEaten(is: Internal.ItemStack_): void;
        onClientRemoval(): void;
        handler$dlf000$spectrum$eat(stack: Internal.ItemStack_, world: Internal.Level_, targetEntity: Internal.LivingEntity_, ci: Internal.CallbackInfo_): void;
        self(): Internal.LivingEntity;
        shouldDropLoot(): boolean;
        reviveCaps(): void;
        getDistance(x: number, y: number, z: number): number;
        setMotionY(y: number): void;
        static createAttributes(): Internal.AttributeSupplier$Builder;
        getAttached(type: Internal.AttachmentType_<any>): any;
        setRotation(yaw: number, pitch: number): void;
        static checkSurfaceWaterAnimalSpawnRules(arg0: Internal.EntityType_<Internal.WaterAnimal>, arg1: Internal.LevelAccessor_, arg2: Internal.MobSpawnType_, arg3: BlockPos_, arg4: Internal.RandomSource_): boolean;
        handler$cam000$radium$tryShortcutFluidPushing(ci: Internal.CallbackInfo_, box: Internal.AABB_, x1: number, x2: number, y1: number, y2: number, z1: number, z2: number, zero: number): void;
        calculateEntityAnimation(arg0: boolean): void;
        forceAddEffect(arg0: Internal.MobEffectInstance_, arg1: Internal.Entity_): void;
        setChestArmorItem(item: Internal.ItemStack_): void;
        getComponent<C extends dev.onyxstudios.cca.api.v3.component.Component>(key: Internal.ComponentKey_<C>): C;
        checkAutoSpinAttack(arg0: Internal.AABB_, arg1: Internal.AABB_): void;
        onAboveBubbleCol(arg0: boolean): void;
        "playSound(net.minecraft.sounds.SoundEvent,float,float)"(arg0: Internal.SoundEvent_, arg1: number, arg2: number): void;
        toComponentPacket(key: Internal.ComponentKey_<any>, writer: Internal.ComponentPacketWriter_, recipient: Internal.ServerPlayer_): Internal.ClientboundCustomPayloadPacket;
        isPassenger(): boolean;
        hasPose(arg0: Internal.Pose_): boolean;
        playStepSound(arg0: BlockPos_, arg1: Internal.BlockState_): void;
        /**
         * @deprecated
        */
        isEyeInFluid(arg0: Internal.TagKey_<Internal.Fluid>): boolean;
        isInvulnerableTo(arg0: DamageSource_): boolean;
        makeStuckInBlock(arg0: Internal.BlockState_, arg1: Vec3d_): void;
        getAttachedOrGet<A>(type: Internal.AttachmentType_<A>, defaultValue: Internal.Supplier_<A>): A;
        isSensitiveToWater(): boolean;
        skipAttackInteraction(arg0: Internal.Entity_): boolean;
        maybeBackOffFromEdge(arg0: Vec3d_, arg1: Internal.MoverType_): Vec3d;
        newFloatList(...arg0: number[]): Internal.ListTag;
        lerpMotion(arg0: number, arg1: number, arg2: number): void;
        "getAttributeValue(net.minecraft.core.Holder)"(arg0: Internal.Holder_<Internal.Attribute>): number;
        shouldRender(arg0: number, arg1: number, arg2: number): boolean;
        getJumpControl(): Internal.JumpControl;
        isFlapping(): boolean;
        getEyeHeight(arg0: Internal.Pose_, arg1: Internal.EntityDimensions_): number;
        getFeetArmorItem(): Internal.ItemStack;
        static getViewScale(): number;
        getVisualRotationYInDegrees(): number;
        setSpeed(arg0: number): void;
        requiresCustomPersistence(): boolean;
        isDiscrete(): boolean;
        unRide(): void;
        getLevel(): Internal.Level;
        "spawnAtLocation(net.minecraft.world.item.ItemStack)"(arg0: Internal.ItemStack_): Internal.ItemEntity;
        static bucketMobPickup<T extends Internal.LivingEntity & Internal.Bucketable>(arg0: Internal.Player_, arg1: Internal.InteractionHand_, arg2: T): Internal.Optional<InteractionResult>;
        getCombatTracker(): Internal.CombatTracker;
        updateDynamicGameEventListener(arg0: Internal.BiConsumer_<Internal.DynamicGameEventListener<any>, Internal.ServerLevel>): void;
        "onSyncedDataUpdated(net.minecraft.network.syncher.EntityDataAccessor)"(arg0: Internal.EntityDataAccessor_<any>): void;
        isNoAi(): boolean;
        areCapsCompatible(arg0: Internal.CapabilityProvider_<Internal.Entity>): boolean;
        extinguishFire(): void;
        getChestArmorItem(): Internal.ItemStack;
        damageEquipment(slot: Internal.EquipmentSlot_, amount: number): void;
        getBlockJumpFactor(): number;
        tell(message: net.minecraft.network.chat.Component_): void;
        closerThan(arg0: Internal.Entity_, arg1: number): boolean;
        onSoulSpeedBlock(): boolean;
        /**
         * @deprecated
        */
        goDownInWater(): void;
        getDistanceSq(pos: BlockPos_): number;
        indicateDamage(arg0: number, arg1: number): void;
        canBeSeenByAnyone(): boolean;
        playEntityOnFireExtinguishedSound(): void;
        isFullyFrozen(): boolean;
        dropCustomDeathLoot(arg0: DamageSource_, arg1: number, arg2: boolean): void;
        handler$eop000$wizards_reborn$isFallFlying(arg0: Internal.CallbackInfoReturnable_<any>): void;
        isInWall(): boolean;
        getMeleeAttackReferencePosition(): Vec3d;
        getAllSlots(): Internal.Iterable<Internal.ItemStack>;
        remove(arg0: Internal.Entity$RemovalReason_): void;
        getScale(): number;
        handler$dlf000$spectrum$canHaveStatusEffect(statusEffectInstance: Internal.MobEffectInstance_, cir: Internal.CallbackInfoReturnable_<any>): void;
        isSuppressingSlidingDownLadder(): boolean;
        getBlockZ(): number;
        dampensVibrations(): boolean;
        hasAttached(type: Internal.AttachmentType_<any>): boolean;
        isSilent(): boolean;
        "playSound(net.minecraft.sounds.SoundEvent)"(id: Internal.SoundEvent_): void;
        getPitch(): number;
        newDoubleList(...arg0: number[]): Internal.ListTag;
        getPathfindingMalus(arg0: Internal.BlockPathTypes_): number;
        getRandom(): Internal.RandomSource;
        canReplaceEqualItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        rotate(arg0: Internal.Rotation_): number;
        shouldRiderFaceForward(arg0: Internal.Player_): boolean;
        getPassengersAndSelf(): Internal.Stream<any>;
        breakItem(arg0: Internal.ItemStack_): void;
        rayTrace(distance: number, fluids: boolean): Internal.RayTraceResultJS;
        "getAttributeBaseValue(net.minecraft.core.Holder)"(arg0: Internal.Holder_<Internal.Attribute>): number;
        clearRestriction(): void;
        "self()"(): Internal.LivingEntity;
        rayTrace(): Internal.RayTraceResultJS;
        alwaysAccepts(): boolean;
        "isHolding(java.util.function.Predicate)"(arg0: Internal.Predicate_<Internal.ItemStack>): boolean;
        getNoActionTime(): number;
        isVisuallyCrawling(): boolean;
        isAggressive(): boolean;
        setYya(arg0: number): void;
        setDropChance(arg0: Internal.EquipmentSlot_, arg1: number): void;
        "broadcastBreakEvent(net.minecraft.world.InteractionHand)"(arg0: Internal.InteractionHand_): void;
        setFluidTypeHeight(arg0: Internal.FluidType_, arg1: number): void;
        dropExperience(): void;
        teleportRelative(arg0: number, arg1: number, arg2: number): void;
        setBaby(arg0: boolean): void;
        localvar$dkk000$spectrum$applyAdditionalFirstStrikeEnchantmentDamage(amount: number, source: DamageSource_): number;
        getLastHurtByMob(): Internal.LivingEntity;
        isInWaterOrBubble(): boolean;
        decreaseAirSupply(arg0: number): number;
        updateFluidHeightAndDoFluidPushing(): void;
        spawnParticles(arg0: Internal.ItemStack_, arg1: number): void;
        handler$cil001$dsurround$playStepSound(pos: BlockPos_, state: Internal.BlockState_, ci: Internal.CallbackInfo_): void;
        getPortalCooldown(): number;
        getItem(): Internal.ItemStack;
        causeFallDamage(arg0: number, arg1: number, arg2: DamageSource_): boolean;
        releaseUsingItem(): void;
        getPosition(arg0: number): Vec3d;
        removeFreeWill(): void;
        removeWhenFarAway(arg0: number): boolean;
        wait(arg0: number): void;
        isIgnoringBlockTriggers(): boolean;
        setRecordPlayingNearby(arg0: BlockPos_, arg1: boolean): void;
        isInRain(): boolean;
        getHandHoldingItemAngle(arg0: Internal.Item_): Vec3d;
        hasItemInSlot(arg0: Internal.EquipmentSlot_): boolean;
        canUpdate(arg0: boolean): void;
        getEyeInFluidType(): Internal.FluidType;
        distanceToSqr(arg0: Vec3d_): number;
        syncComponent(key: Internal.ComponentKey_<any>): void;
        modifyAttached<A>(type: Internal.AttachmentType_<A>, modifier: Internal.UnaryOperator_<A>): A;
        isSteppingCarefully(): boolean;
        getSoundFromFluidType(arg0: Internal.FluidType_, arg1: Internal.SoundAction_): Internal.SoundEvent;
        "spawnAtLocation(net.minecraft.world.item.ItemStack,float)"(arg0: Internal.ItemStack_, arg1: number): Internal.ItemEntity;
        addAdditionalSaveData(arg0: Internal.CompoundTag_): void;
        getBlockX(): number;
        /**
         * @deprecated
        */
        getLightLevelDependentMagicValue(): number;
        isFallFlying(): boolean;
        getEncodeId(): string;
        getY(arg0: number): number;
        getMaxHeadXRot(): number;
        getNbt(): Internal.CompoundTag;
        setInvisible(arg0: boolean): void;
        canEnterPose(arg0: Internal.Pose_): boolean;
        getEffect(arg0: Internal.MobEffect_): Internal.MobEffectInstance;
        setTotalMovementSpeedMultiplier(speed: number): void;
        setHealth(arg0: number): void;
        handler$deo000$eidolon$eidolonrepraised$canAttack(arg0: Internal.LivingEntity_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        attack(arg0: DamageSource_, arg1: number): boolean;
        getBlockSpeedFactor(): number;
        modifyExpressionValue$cpi002$mna$elytraOverride(arg0: boolean): boolean;
        onInsideBubbleColumn(arg0: boolean): void;
        getEyePosition(): Vec3d;
        getEyeHeight(): number;
        onOffspringSpawnedFromEgg(arg0: Internal.Player_, arg1: Internal.Mob_): void;
        setDiscardFriction(arg0: boolean): void;
        hasPassenger(arg0: Internal.Predicate_<Internal.Entity>): boolean;
        getYaw(): number;
        swing(arg0: Internal.InteractionHand_, arg1: boolean): void;
        getUsedItemHand(): Internal.InteractionHand;
        setDefaultMovementSpeed(speed: number): void;
        onEffectAdded(arg0: Internal.MobEffectInstance_, arg1: Internal.Entity_): void;
        canAttackType(arg0: Internal.EntityType_<any>): boolean;
        getCapability<T>(arg0: Internal.Capability_<T>, arg1: Internal.Direction_): Internal.LazyOptional<T>;
        canEntityBeSeen(entity: Internal.LivingEntity_): boolean;
        getBrain(): Internal.Brain<any>;
        dsurround_isJumping(): boolean;
        setCustomNameVisible(arg0: boolean): void;
        isAlliedTo(arg0: Internal.Team_): boolean;
        handler$cpk000$mna$playSound(arg0: Internal.SoundEvent_, arg1: number, arg2: number, arg3: Internal.CallbackInfo_): void;
        getAttachedOrCreate<A>(type: Internal.AttachmentType_<A>): A;
        canFireProjectileWeapon(arg0: Internal.ProjectileWeaponItem_): boolean;
        getControllingPassenger(): Internal.LivingEntity;
        getScriptType(): Internal.ScriptType;
        shouldDiscardFriction(): boolean;
        startRiding(arg0: Internal.Entity_): boolean;
        saveWithoutId(arg0: Internal.CompoundTag_): Internal.CompoundTag;
        getForward(): Vec3d;
        serializeNBT(): Internal.Tag;
        getDamageAfterMagicAbsorb(arg0: DamageSource_, arg1: number): number;
        setFeetArmorItem(item: Internal.ItemStack_): void;
        getId(): number;
        canBeHitByProjectile(): boolean;
        getRecipientsForComponentSync(): Internal.Iterable<any>;
        handler$dkf000$spectrum$dropStack(stack: Internal.ItemStack_, cir: Internal.CallbackInfoReturnable_<any>): void;
        getEyeY(): number;
        skipDropExperience(): void;
        fabric_readAttachmentsFromNbt(nbt: Internal.CompoundTag_): void;
        getBoundingBox(): Internal.AABB;
        isInWaterOrRain(): boolean;
        setItemSlot(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): void;
        modify$dlf001$spectrum$applyExuberance(originalXP: number): number;
        handler$dlf000$spectrum$setSprinting(sprinting: boolean, ci: Internal.CallbackInfo_): void;
        tryAddSoulSpeed(): void;
        equals(arg0: any): boolean;
        handler$cpk000$mna$canEnterPose(arg0: Internal.Pose_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        getViewYRot(arg0: number): number;
        getSwimSound(): Internal.SoundEvent;
        getLastArmorItem(arg0: Internal.EquipmentSlot_): Internal.ItemStack;
        dismountsUnderwater(): boolean;
        isAffectedByPotions(): boolean;
        playerTouch(arg0: Internal.Player_): void;
        addTag(arg0: string): boolean;
        getEyeHeight(arg0: Internal.Pose_): number;
        getAddEntityPacket(): Internal.Packet<Internal.ClientGamePacketListener>;
        doWaterSplashEffect(): void;
        static getEquipmentForSlot(arg0: Internal.EquipmentSlot_, arg1: number): Internal.Item;
        isWithinRestriction(arg0: BlockPos_): boolean;
        getTeam(): Internal.Team;
        setTicksFrozen(arg0: number): void;
        getUseItem(): Internal.ItemStack;
        handler$dlf000$spectrum$addStatusEffect(effect: Internal.MobEffectInstance_, source: Internal.Entity_, cir: Internal.CallbackInfoReturnable_<any>): void;
        getMyRidingOffset(): number;
        dismountTo(arg0: number, arg1: number, arg2: number): void;
        getFlyingSpeed(): number;
        hasCustomName(): boolean;
        getSwimAmount(arg0: number): number;
        isLiving(): boolean;
        getX(): number;
        dropAllDeathLoot(arg0: DamageSource_): void;
        isVehicle(): boolean;
        static transfer(original: Internal.AttachmentTarget_, target: Internal.AttachmentTarget_, isDeath: boolean): void;
        /**
         * @deprecated
        */
        static loadDefaultDataFromBucketTag(arg0: Internal.Mob_, arg1: Internal.CompoundTag_): void;
        tickLeash(): void;
        spawnAtLocation(arg0: Internal.ItemStack_): Internal.ItemEntity;
        customServerAiStep(): void;
        mergeNbt(tag: Internal.CompoundTag_): Internal.Entity;
        handler$cpf000$mna$onClimbable(arg0: Internal.CallbackInfoReturnable_<any>): void;
        thunderHit(arg0: Internal.ServerLevel_, arg1: Internal.LightningBolt_): void;
        setIsInPowderSnow(arg0: boolean): void;
        doEnchantDamageEffects(arg0: Internal.LivingEntity_, arg1: Internal.Entity_): void;
        setCustomName(arg0: net.minecraft.network.chat.Component_): void;
        handleNetherPortal(): void;
        getTeamId(): string;
        canBeRiddenUnderFluidType(arg0: Internal.FluidType_, arg1: Internal.Entity_): boolean;
        wthit_getTypeName(): net.minecraft.network.chat.Component;
        setStingerCount(arg0: number): void;
        getMaxHeadYRot(): number;
        getBoundingBoxForPose(arg0: Internal.Pose_): Internal.AABB;
        isCustomNameVisible(): boolean;
        isSupportedBy(arg0: BlockPos_): boolean;
        followLeashSpeed(): number;
        getPistonPushReaction(): Internal.PushReaction;
        shouldRiderSit(): boolean;
        handler$dlf000$spectrum$checkForTotemPendant(source: DamageSource_, cir: Internal.CallbackInfoReturnable_<any>): void;
        lookAt(arg0: Internal.EntityAnchorArgument$Anchor_, arg1: Vec3d_): void;
        hurtCurrentlyUsedShield(arg0: number): void;
        triggerItemUseEffects(arg0: Internal.ItemStack_, arg1: number): void;
        getLootTableSeed(): number;
        isInFluidType(arg0: Internal.FluidType_): boolean;
        getFluidMotionScale(arg0: Internal.FluidType_): number;
        getMotionX(): number;
        "onSyncedDataUpdated(java.util.List)"(arg0: Internal.List_<Internal.SynchedEntityData$DataValue<any>>): void;
        canBeLeashed(arg0: Internal.Player_): boolean;
        hasIndirectPassenger(arg0: Internal.Entity_): boolean;
        getEntityData(): Internal.SynchedEntityData;
        handleInsidePortal(arg0: BlockPos_): void;
        getPotionEffects(): Internal.EntityPotionEffectsJS;
        /**
         * @deprecated
        */
        jumpInLiquid(arg0: Internal.TagKey_<Internal.Fluid>): void;
        absMoveTo(arg0: number, arg1: number, arg2: number): void;
        onBelowWorld(): void;
        isOnRails(): boolean;
        getAttachedOrThrow<A>(type: Internal.AttachmentType_<A>): A;
        getStingerCount(): number;
        getFallSounds(): Internal.LivingEntity$Fallsounds;
        reapplyPosition(): void;
        getAttributeTotalValue(attribute: Internal.Attribute_): number;
        getDimensionChangingDelay(): number;
        setLivingEntityFlag(arg0: number, arg1: boolean): void;
        getWaterSlowDown(): number;
        createNavigation(arg0: Internal.Level_): Internal.PathNavigation;
        setYaw(arg0: number): void;
        getPickRadius(): number;
        isPathFinding(): boolean;
        isRemoved(): boolean;
        teleportToWithTicket(arg0: number, arg1: number, arg2: number): void;
        spawnAnim(): void;
        getJumpBoostPower(): number;
        fillCrashReportCategory(arg0: Internal.CrashReportCategory_): void;
        handler$cpe000$mna$jumpInLiquid(arg0: Internal.TagKey_<any>, arg1: Internal.CallbackInfo_): void;
        self(): Internal.Entity;
        refreshDimensions(): void;
        "spawnAtLocation(net.minecraft.world.level.ItemLike)"(arg0: Internal.ItemLike_): Internal.ItemEntity;
        "getAttributeValue(net.minecraft.world.entity.ai.attributes.Attribute)"(arg0: Internal.Attribute_): number;
        "isHolding(net.minecraft.world.item.Item)"(arg0: Internal.Item_): boolean;
        setShiftKeyDown(arg0: boolean): void;
        getEyePosition(arg0: number): Vec3d;
        getPassengers(): Internal.EntityArrayList;
        getRiddenInput(arg0: Internal.Player_, arg1: Vec3d_): Vec3d;
        calculateUpVector(arg0: number, arg1: number): Vec3d;
        handler$dlf000$spectrum$TriggerArmorWithHitEffect(source: DamageSource_, amount: number, cir: Internal.CallbackInfoReturnable_<any>): void;
        spawnSprintParticle(): void;
        getMaxHeightFluidType(): Internal.FluidType;
        getZ(): number;
        checkSupportingBlock(arg0: boolean, arg1: Vec3d_): void;
        dropEquipment(): void;
        shouldRemoveSoulSpeed(arg0: Internal.BlockState_): boolean;
        teleportTo(arg0: number, arg1: number, arg2: number): void;
        getAttributeBaseValue(arg0: Internal.Holder_<Internal.Attribute>): number;
        getServer(): Internal.MinecraftServer;
        getExperienceReward(): number;
        getFirstPassenger(): Internal.Entity;
        heal(arg0: number): void;
        getSpawnType(): Internal.MobSpawnType;
        setLastHurtMob(arg0: Internal.Entity_): void;
        getRelativePortalPosition(arg0: Internal.Direction$Axis_, arg1: Internal.BlockUtil$FoundRectangle_): Vec3d;
        setLastHurtByMob(arg0: Internal.LivingEntity_): void;
        interact(arg0: Internal.Player_, arg1: Internal.InteractionHand_): InteractionResult;
        removePassenger(arg0: Internal.Entity_): void;
        getDismountLocationForPassenger(arg0: Internal.LivingEntity_): Vec3d;
        invokeSetLevel(arg0: Internal.Level_): void;
        checkSlowFallDistance(): void;
        tickDeath(): void;
        updateInWaterStateAndDoWaterCurrentPushing(): void;
        canStandOnFluid(arg0: Internal.FluidState_): boolean;
        addPassenger(arg0: Internal.Entity_): void;
        setFabricBalmData(arg0: Internal.CompoundTag_): void;
        touchingUnloadedChunk(): boolean;
        modifyAttribute(attribute: Internal.Attribute_, identifier: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        getLookAngle(): Vec3d;
        handler$cpe000$mna$canStandOnFluid(arg0: Internal.FluidState_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        getAmbientSoundInterval(): number;
        setArrowCount(arg0: number): void;
        getPermissionLevel(): number;
        getMotionZ(): number;
        nextStep(): number;
        isPersistenceRequired(): boolean;
        isInvisible(): boolean;
        is(arg0: Internal.Entity_): boolean;
        getBedOrientation(): Internal.Direction;
        /**
         * @deprecated
        */
        getBlockStateOnLegacy(): Internal.BlockState;
        ejectPassengers(): void;
        removeEffect(arg0: Internal.MobEffect_): boolean;
        getProfile(): Internal.GameProfile;
        isDeadOrDying(): boolean;
        setHeadArmorItem(item: Internal.ItemStack_): void;
        static setViewScale(arg0: number): void;
        take(arg0: Internal.Entity_, arg1: number): void;
        setLevelCallback(arg0: Internal.EntityInLevelCallback_): void;
        getLookControl(): Internal.LookControl;
        pushEntities(): void;
        playSound(arg0: Internal.SoundEvent_, arg1: number, arg2: number): void;
        setFromBucket(arg0: boolean): void;
        "areCapsCompatible(net.minecraftforge.common.capabilities.CapabilityDispatcher)"(arg0: Internal.CapabilityDispatcher_): boolean;
        canAttack(arg0: Internal.LivingEntity_): boolean;
        getLastHandItem(arg0: Internal.EquipmentSlot_): Internal.ItemStack;
        getOffHandItem(): Internal.ItemStack;
        startSeenByPlayer(arg0: Internal.ServerPlayer_): void;
        isOnScoreboardTeam(teamId: string): boolean;
        startUsingItem(arg0: Internal.InteractionHand_): void;
        position(): Vec3d;
        static getEquipmentSlotForItem(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getEquipment(slot: Internal.EquipmentSlot_): Internal.ItemStack;
        displayFireAnimation(): boolean;
        handler$deo000$eidolon$eidolonrepraised$isFallFlying(arg0: Internal.CallbackInfoReturnable_<any>): void;
        getRopeHoldPosition(arg0: number): Vec3d;
        copyPosition(arg0: Internal.Entity_): void;
        modifyExpressionValue$cpi000$mna$eytraValidOverride(arg0: boolean): boolean;
        onAddedToWorld(): void;
        "hasPassenger(net.minecraft.world.entity.Entity)"(arg0: Internal.Entity_): boolean;
        isCrouching(): boolean;
        "getAttributeBaseValue(net.minecraft.world.entity.ai.attributes.Attribute)"(attribute: Internal.Attribute_): number;
        onLeaveCombat(): void;
        handler$cpe000$mna$isAffectedByFluids(arg0: Internal.CallbackInfoReturnable_<any>): void;
        setY(y: number): void;
        getAttributeValue(arg0: Internal.Attribute_): number;
        getFeetBlockState(): Internal.BlockState;
        "breakItem(net.minecraft.world.item.ItemStack)"(arg0: Internal.ItemStack_): void;
        isWithinRestriction(): boolean;
        changeDimension(arg0: Internal.ServerLevel_, arg1: Internal.ITeleporter_): Internal.Entity;
        isHorizontalCollisionMinor(arg0: Vec3d_): boolean;
        positionRider(arg0: Internal.Entity_): void;
        baseTick(): void;
        broadcastToPlayer(arg0: Internal.ServerPlayer_): boolean;
        modify$zbj001$additionalentityattributes$additionalEntityAttributes$modifyExperience(originalXP: number): number;
        setSharedFlag(arg0: number, arg1: boolean): void;
        getSleepingPos(): Internal.Optional<BlockPos>;
        getEyeHeightAccess(arg0: Internal.Pose_, arg1: Internal.EntityDimensions_): number;
        damageHeldItem(): void;
        getCustomName(): net.minecraft.network.chat.Component;
        getClass(): typeof any;
        "self()"(): Internal.Entity;
        isVisuallySwimming(): boolean;
        getMaxAirSupply(): number;
        canTrample(arg0: Internal.BlockState_, arg1: BlockPos_, arg2: number): boolean;
        wrapOperation$zoc000$supplementaries$onTravel(instance: Internal.LivingEntity_, state: Internal.FluidState_, original: Internal.Operation_<any>): boolean;
        blockUsingShield(arg0: Internal.LivingEntity_): void;
        processFlappingMovement(): void;
        setItemInHand(arg0: Internal.InteractionHand_, arg1: Internal.ItemStack_): void;
        setMaxHealth(hp: number): void;
        getFacing(): Internal.Direction;
        modify$zbj000$additionalentityattributes$additionalEntityAttributes$waterSpeed(original: number): number;
        isPassengerOfSameVehicle(arg0: Internal.Entity_): boolean;
        getBoundingBoxForCulling(): Internal.AABB;
        getTarget(): Internal.LivingEntity;
        static collideBoundingBox(entity: Internal.Entity_, movement: Vec3d_, entityBoundingBox: Internal.AABB_, world: Internal.Level_, collisions: Internal.List_<any>): Vec3d;
        restrictTo(arg0: BlockPos_, arg1: number): void;
        trackingPosition(): Vec3d;
        getNameTagOffsetY(): number;
        isInvulnerable(): boolean;
        isInLava(): boolean;
        isInWater(): boolean;
        awardKillScore(arg0: Internal.Entity_, arg1: number, arg2: DamageSource_): void;
        /**
         * @deprecated
        */
        finalizeSpawn(arg0: Internal.ServerLevelAccessor_, arg1: Internal.DifficultyInstance_, arg2: Internal.MobSpawnType_, arg3: Internal.SpawnGroupData_, arg4: Internal.CompoundTag_): Internal.SpawnGroupData;
        unsetRemoved(): void;
        getPickupReach(): Vec3i;
        swing(arg0: Internal.InteractionHand_): void;
        hasEffect(arg0: Internal.MobEffect_): boolean;
        getHeldItem(hand: Internal.InteractionHand_): Internal.ItemStack;
        /**
         * @deprecated
        */
        fixupDimensions(): void;
        getRootVehicle(): Internal.Entity;
        onPathfindingDone(): void;
        save(arg0: Internal.CompoundTag_): boolean;
        getLocalBoundsForPose(arg0: Internal.Pose_): Internal.AABB;
        isNoGravity(): boolean;
        curePotionEffects(arg0: Internal.ItemStack_): boolean;
        onItemPickup(arg0: Internal.ItemEntity_): void;
        handler$dhc000$reborncore$onApplyArmorToDamage(source: DamageSource_, amount: number, cir: Internal.CallbackInfoReturnable_<any>): void;
        populateDefaultEquipmentSlots(arg0: Internal.RandomSource_, arg1: Internal.DifficultyInstance_): void;
        completeUsingItem(): void;
        isImmobile(): boolean;
        updateSwimming(): void;
        isHolding(arg0: Internal.Predicate_<Internal.ItemStack>): boolean;
        getSpeed(): number;
        abstract getCachedFeetBlockState(): Internal.BlockState;
        shouldInformAdmins(): boolean;
        canFluidExtinguish(arg0: Internal.FluidType_): boolean;
        rideTick(): void;
        wait(): void;
        dsurround_setPotionSwirlColor(color: number): void;
        getUuid(): Internal.UUID;
        setOffHandItem(item: Internal.ItemStack_): void;
        spawn(): void;
        setNoAi(arg0: boolean): void;
        handler$dke000$spectrum$isSubmergedIn(fluidTag: Internal.TagKey_<any>, cir: Internal.CallbackInfoReturnable_<any>): void;
        teleportTo(arg0: Internal.ServerLevel_, arg1: number, arg2: number, arg3: number, arg4: Internal.Set_<Internal.RelativeMovement>, arg5: number, arg6: number): boolean;
        fabric_writeAttachmentsToNbt(nbt: Internal.CompoundTag_): void;
        shouldShowName(): boolean;
        markHurt(): void;
        getArmorSlots(): Internal.Iterable<Internal.ItemStack>;
        canPickUpLoot(): boolean;
        kill(): void;
        onEnterCombat(): void;
        updateNavigationRegistration(): void;
        playSwimSound(arg0: number): void;
        animateHurt(arg0: number): void;
        syncComponent(key: Internal.ComponentKey_<any>, packetWriter: Internal.ComponentPacketWriter_): void;
        modifyReturnValue$zbi000$additionalentityattributes$getMaxAir(original: number): number;
        static resetForwardDirectionOfRelativePortalPosition(arg0: Vec3d_): Vec3d;
        brainProvider(): Internal.Brain$Provider<any>;
        getJumpPower(): number;
        registerGoals(): void;
        hasRestriction(): boolean;
        getHeadArmorItem(): Internal.ItemStack;
        deserializeNBT(arg0: Internal.Tag_): void;
        positionRider(arg0: Internal.Entity_, arg1: Internal.Entity$MoveFunction_): void;
        redirect$fab000$moonlight$fixSpawnAnimX(instance: Internal.Mob_, v: number): number;
        removeEffectParticles(): void;
        revive(): void;
        getBbWidth(): number;
        isEyeInFluidType(arg0: Internal.FluidType_): boolean;
        addDeltaMovement(arg0: Vec3d_): void;
        localvar$egc000$zeldamod$inject3(arg0: number): number;
        getHurtSound(arg0: DamageSource_): Internal.SoundEvent;
        canDrownInFluidType(arg0: Internal.FluidType_): boolean;
        "getName()"(): net.minecraft.network.chat.Component;
        mirror(arg0: Internal.Mirror_): number;
        canUpdate(): boolean;
        knockback(arg0: number, arg1: number, arg2: number): void;
        getTypeName(): net.minecraft.network.chat.Component;
        getTicksRequiredToFreeze(): number;
        shouldDespawnInPeaceful(): boolean;
        getVisibilityPercent(arg0: Internal.Entity_): number;
        getMaxSpawnClusterSize(): number;
        doAutoAttackOnTouch(arg0: Internal.LivingEntity_): void;
        abstract getFlopSound(): Internal.SoundEvent;
        getUsername(): string;
        getPrimaryStepSoundBlockPos(arg0: BlockPos_): BlockPos;
        move(arg0: Internal.MoverType_, arg1: Vec3d_): void;
        lithiumOnBlockCacheSet(newState: Internal.BlockState_): void;
        onRemovedFromWorld(): void;
        getCapability<T>(arg0: Internal.Capability_<T>): Internal.LazyOptional<T>;
        isPickable(): boolean;
        handler$dke000$spectrum$isSubmergedInWater(cir: Internal.CallbackInfoReturnable_<any>): void;
        isInFluidType(predicate: Internal.BiPredicate_<any, any>, forAllTypes: boolean): boolean;
        setYHeadRot(arg0: number): void;
        setJumping(arg0: boolean): void;
        getPickResult(): Internal.ItemStack;
        "getMainHandItem()"(): Internal.ItemStack;
        getAbsorptionAmount(): number;
        getRandomY(): number;
        onEffectRemoved(arg0: Internal.MobEffectInstance_): void;
        getDisplayName(): net.minecraft.network.chat.Component;
        loadFromBucketTag(arg0: Internal.CompoundTag_): void;
        getMobType(): Internal.MobType;
        travel(arg0: Vec3d_): void;
        maxhealthfix$setRestorePoint(arg0: number): void;
        getItemInHand(arg0: Internal.InteractionHand_): Internal.ItemStack;
        spectrum$isActuallyTouchingWater(): boolean;
        shouldBeSaved(): boolean;
        getFluidTypeHeight(arg0: Internal.FluidType_): number;
        fabric_hasPersistentAttachments(): boolean;
        handler$dlf000$spectrum$applyDisarmingEnchantment(source: DamageSource_, amount: number, cir: Internal.CallbackInfoReturnable_<any>): void;
        "areCapsCompatible(net.minecraftforge.common.capabilities.CapabilityProvider)"(arg0: Internal.CapabilityProvider_<Internal.Entity>): boolean;
        hurtHelmet(arg0: DamageSource_, arg1: number): void;
        removeTag(arg0: string): boolean;
        isHoldingInAnyHand(i: Internal.Ingredient_): boolean;
        /**
         * @deprecated
        */
        getFluidHeight(arg0: Internal.TagKey_<Internal.Fluid>): number;
        canSpawnSoulSpeedParticle(): boolean;
        notifyAll(): void;
        aiStep(): void;
        getPassengersRidingOffset(): number;
        setAttributeBaseValue(attribute: Internal.Attribute_, value: number): void;
        "isInFluidType(java.util.function.BiPredicate)"(arg0: Internal.BiPredicate_<Internal.FluidType, number>): boolean;
        distanceToEntitySqr(arg0: Internal.Entity_): number;
        isFrame(): boolean;
        broadcastBreakEvent(arg0: Internal.InteractionHand_): void;
        setLegsArmorItem(item: Internal.ItemStack_): void;
        discard(): void;
        sendSystemMessage(arg0: net.minecraft.network.chat.Component_): void;
        acceptsSuccess(): boolean;
        setNoGravity(arg0: boolean): void;
        getUseItemRemainingTicks(): number;
        getIndirectPassengers(): Internal.Iterable<any>;
        abstract getBucketItemStack(): Internal.ItemStack;
        attackable(): boolean;
        createCommandSourceStack(): Internal.CommandSourceStack;
        getNavigation(): Internal.PathNavigation;
        isControlledByLocalInstance(): boolean;
        isMonster(): boolean;
        getLastClimbablePos(): Internal.Optional<BlockPos>;
        getEatingSound(arg0: Internal.ItemStack_): Internal.SoundEvent;
        getPerceivedTargetDistanceSquareForMeleeAttack(arg0: Internal.LivingEntity_): number;
        getHorizontalFacing(): Internal.Direction;
        setId(arg0: number): void;
        onSyncedDataUpdated(arg0: Internal.List_<Internal.SynchedEntityData$DataValue<any>>): void;
        getType(): string;
        isDamageSourceBlocked(arg0: DamageSource_): boolean;
        getLightProbePosition(arg0: number): Vec3d;
        getActiveEffectsMap(): Internal.Map<Internal.MobEffect, Internal.MobEffectInstance>;
        onEquipItem(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_): void;
        checkDespawn(): void;
        getWalkTargetValue(arg0: BlockPos_, arg1: Internal.LevelReader_): number;
        lookAt(arg0: Internal.Entity_, arg1: number, arg2: number): void;
        setHeldItem(hand: Internal.InteractionHand_, item: Internal.ItemStack_): void;
        equipItemIfPossible(arg0: Internal.ItemStack_): Internal.ItemStack;
        playHurtSound(arg0: DamageSource_): void;
        onSyncedDataUpdated(arg0: Internal.EntityDataAccessor_<any>): void;
        isActuallyReallyBlocking(): boolean;
        lerpHeadTo(arg0: number, arg1: number): void;
        canDisableShield(): boolean;
        doesEmitEquipEvent(arg0: Internal.EquipmentSlot_): boolean;
        setMotionX(x: number): void;
        shouldStayCloseToLeashHolder(): boolean;
        getHandSlots(): Internal.Iterable<Internal.ItemStack>;
        getMovementEmission(): Internal.Entity$MovementEmission;
        distanceToEntity(arg0: Internal.Entity_): number;
        wait(arg0: number, arg1: number): void;
        getTeamColor(): number;
        lithiumSetClimbingMobCachingSectionUpdateBehavior(listenForCachedBlockChanges: boolean): void;
        setNbt(nbt: Internal.CompoundTag_): void;
        "isInFluidType(net.minecraftforge.fluids.FluidType)"(arg0: Internal.FluidType_): boolean;
        checkSpawnObstruction(arg0: Internal.LevelReader_): boolean;
        extinguish(): void;
        getRestrictRadius(): number;
        moveTo(arg0: Vec3d_): void;
        isColliding(arg0: BlockPos_, arg1: Internal.BlockState_): boolean;
        updateInWaterStateAndDoFluidPushing(): boolean;
        "swing(net.minecraft.world.InteractionHand)"(hand: Internal.InteractionHand_): void;
        dsurround_setEffectInfo(info: Internal.EntityEffectInfo_): void;
        getRegisteredNavigation(): Internal.PathNavigation;
        tickEffects(): void;
        isInvertedHealAndHarm(): boolean;
        canHoldItem(arg0: Internal.ItemStack_): boolean;
        killedEntity(arg0: Internal.ServerLevel_, arg1: Internal.LivingEntity_): boolean;
        getAttachedOrElse<A>(type: Internal.AttachmentType_<A>, defaultValue: A): A;
        handler$dlf000$spectrum$applyInexorableEffects(ci: Internal.CallbackInfo_): void;
        getClassification(arg0: boolean): Internal.MobCategory;
        isFreezing(): boolean;
        runCommand(command: string): number;
        setGuaranteedDrop(arg0: Internal.EquipmentSlot_): void;
        setSharedFlagOnFire(arg0: boolean): void;
        set defaultMovementSpeedMultiplier(speed: number)
        get suppressingBounce(): boolean
        set target(arg0: Internal.LivingEntity_)
        get onFire(): boolean
        get deathSound(): Internal.SoundEvent
        get positionCodec(): Internal.VecDeltaCodec
        set maxUpStep(arg0: number)
        get fallFlyingTicks(): number
        set xxa(arg0: number)
        set delayedLeashHolderId(arg0: number)
        get shiftKeyDown(): boolean
        set UUID(arg0: Internal.UUID_)
        set motionZ(z: number)
        get blockY(): number
        get spectator(): boolean
        get alwaysExperienceDropper(): boolean
        set mainHandItem(item: Internal.ItemStack_)
        get persistentData(): Internal.CompoundTag
        get health(): number
        get maxHealth(): number
        get registeredToWorld(): boolean
        set aggressive(arg0: boolean)
        set removed(arg0: Internal.Entity$RemovalReason_)
        get inWaterRainOrBubble(): boolean
        get removalReason(): Internal.Entity$RemovalReason
        set level(arg0: Internal.Level_)
        set boundingBox(arg0: Internal.AABB_)
        get ambientCreature(): boolean
        set zza(arg0: number)
        get block(): Internal.BlockContainerJS
        get name(): net.minecraft.network.chat.Component
        get controlledVehicle(): Internal.Entity
        get armorValue(): number
        get killCredit(): Internal.LivingEntity
        get componentContainer(): Internal.ComponentContainer
        get defaultLootTable(): ResourceLocation
        get autoSpinAttack(): boolean
        get remainingFireTicks(): number
        get maxFallDistance(): number
        get ticksFrozen(): number
        get voicePitch(): number
        set statusMessage(message: net.minecraft.network.chat.Component_)
        set sleepingPos(arg0: BlockPos_)
        get descending(): boolean
        get headRotSpeed(): number
        get YHeadRot(): number
        set absorptionAmount(arg0: number)
        get sunBurnTick(): boolean
        get affectedByFluids(): boolean
        get ambientSound(): Internal.SoundEvent
        set deltaMovement(arg0: Vec3d_)
        get baby(): boolean
        get glowing(): boolean
        get leashOffset(): Vec3d
        get attackable(): boolean
        get underWater(): boolean
        get swimHighSpeedSplashSound(): Internal.SoundEvent
        get leashHolder(): Internal.Entity
        get sensing(): Internal.Sensing
        get legsArmorItem(): Internal.ItemStack
        get selfAndPassengers(): Internal.Stream<any>
        get deltaMovement(): Vec3d
        set secondsOnFire(arg0: number)
        get "displayName()"(): net.minecraft.network.chat.Component
        get lootTable(): ResourceLocation
        get ticksUsingItem(): number
        get arrowCount(): number
        get moveControl(): Internal.MoveControl
        get defaultMovementSpeed(): number
        get peacefulCreature(): boolean
        set onGround(arg0: boolean)
        get firstTick(): boolean
        get lastHurtByMobTimestamp(): number
        get vehicle(): Internal.Entity
        get effectiveAi(): boolean
        set spawnCancelled(arg0: boolean)
        get stringUuid(): string
        set swimming(arg0: boolean)
        get mainArm(): Internal.HumanoidArm
        get rotationVector(): Internal.Vec2
        get hurtDir(): number
        get sprinting(): boolean
        get motionY(): number
        get offhandItem(): Internal.ItemStack
        get lastHurtMob(): Internal.LivingEntity
        get addedToWorld(): boolean
        get lastDamageSource(): DamageSource
        get soundSource(): Internal.SoundSource
        set noActionTime(arg0: number)
        set movementSpeedAddition(speed: number)
        get pose(): Internal.Pose
        get restrictCenter(): BlockPos
        get leftHanded(): boolean
        set z(z: number)
        get y(): number
        get pickupSound(): Internal.SoundEvent
        get blocking(): boolean
        get pushedByFluid(): boolean
        get armorCoverPercentage(): number
        get airSupply(): number
        get player(): boolean
        get animal(): boolean
        get motionDirection(): Internal.Direction
        get fabricBalmData(): Internal.CompoundTag
        get commandSenderWorld(): Internal.Level
        get totalMovementSpeed(): number
        get fireImmuneTicks(): number
        get attributes(): Internal.AttributeMap
        get spawnCancelled(): boolean
        get swimming(): boolean
        set sprinting(arg0: boolean)
        set x(x: number)
        get portalWaitTime(): number
        get blockStateOn(): Internal.BlockState
        get fluidJumpThreshold(): number
        set airSupply(arg0: number)
        get onPos(): BlockPos
        get undead(): boolean
        get blockPosBelowThatAffectsMyMovement(): BlockPos
        get stepHeight(): number
        set registeredToWorld(navigation: Internal.PathNavigation_)
        get sleeping(): boolean
        get dismountPoses(): Internal.ImmutableList<Internal.Pose>
        get lastHurtMobTimestamp(): number
        set remainingFireTicks(arg0: number)
        /**
         * @deprecated
        */
        get onPosLegacy(): BlockPos
        set pos(arg0: Vec3d_)
        set canPickUpLoot(arg0: boolean)
        get mainHandItem(): Internal.ItemStack
        set silent(arg0: boolean)
        set leftHanded(arg0: boolean)
        get swimSplashSound(): Internal.SoundEvent
        get activeEffects(): Internal.Collection<Internal.MobEffectInstance>
        get onPortalCooldown(): boolean
        set pitch(arg0: number)
        get multipartEntity(): boolean
        get parts(): Internal.PartEntity<any>[]
        get usingItem(): boolean
        get alwaysTicking(): boolean
        get forgePersistentData(): Internal.CompoundTag
        set invulnerable(arg0: boolean)
        get inFluidType(): boolean
        set glowing(arg0: boolean)
        get alive(): boolean
        get bbHeight(): number
        get tags(): Internal.Set<string>
        get lastAttacker(): Internal.LivingEntity
        get percentFrozen(): number
        set portalCooldown(arg0: number)
        set position(block: Internal.BlockContainerJS_)
        get leashed(): boolean
        get soundVolume(): number
        set pose(arg0: Internal.Pose_)
        get reachDistance(): number
        get entityType(): Internal.EntityType<any>
        get waterCreature(): boolean
        set lastHurtByPlayer(arg0: Internal.Player_)
        get "server()"(): Internal.MinecraftServer
        get pushable(): boolean
        set YBodyRot(arg0: number)
        set motionY(y: number)
        set chestArmorItem(item: Internal.ItemStack_)
        get passenger(): boolean
        get sensitiveToWater(): boolean
        get jumpControl(): Internal.JumpControl
        get flapping(): boolean
        get feetArmorItem(): Internal.ItemStack
        get viewScale(): number
        get visualRotationYInDegrees(): number
        set speed(arg0: number)
        get discrete(): boolean
        get level(): Internal.Level
        get combatTracker(): Internal.CombatTracker
        get noAi(): boolean
        get chestArmorItem(): Internal.ItemStack
        get blockJumpFactor(): number
        get fullyFrozen(): boolean
        get inWall(): boolean
        get meleeAttackReferencePosition(): Vec3d
        get allSlots(): Internal.Iterable<Internal.ItemStack>
        get scale(): number
        get suppressingSlidingDownLadder(): boolean
        get blockZ(): number
        get silent(): boolean
        get pitch(): number
        get random(): Internal.RandomSource
        get passengersAndSelf(): Internal.Stream<any>
        get noActionTime(): number
        get visuallyCrawling(): boolean
        get aggressive(): boolean
        set yya(arg0: number)
        set baby(arg0: boolean)
        get lastHurtByMob(): Internal.LivingEntity
        get inWaterOrBubble(): boolean
        get portalCooldown(): number
        get item(): Internal.ItemStack
        get ignoringBlockTriggers(): boolean
        get inRain(): boolean
        get eyeInFluidType(): Internal.FluidType
        get steppingCarefully(): boolean
        get blockX(): number
        /**
         * @deprecated
        */
        get lightLevelDependentMagicValue(): number
        get fallFlying(): boolean
        get encodeId(): string
        get maxHeadXRot(): number
        get nbt(): Internal.CompoundTag
        set invisible(arg0: boolean)
        set totalMovementSpeedMultiplier(speed: number)
        set health(arg0: number)
        get blockSpeedFactor(): number
        get eyePosition(): Vec3d
        get eyeHeight(): number
        set discardFriction(arg0: boolean)
        get yaw(): number
        get usedItemHand(): Internal.InteractionHand
        set defaultMovementSpeed(speed: number)
        get brain(): Internal.Brain<any>
        set customNameVisible(arg0: boolean)
        get controllingPassenger(): Internal.LivingEntity
        get scriptType(): Internal.ScriptType
        get forward(): Vec3d
        set feetArmorItem(item: Internal.ItemStack_)
        get id(): number
        get recipientsForComponentSync(): Internal.Iterable<any>
        get eyeY(): number
        get boundingBox(): Internal.AABB
        get inWaterOrRain(): boolean
        get swimSound(): Internal.SoundEvent
        get affectedByPotions(): boolean
        get addEntityPacket(): Internal.Packet<Internal.ClientGamePacketListener>
        get team(): Internal.Team
        set ticksFrozen(arg0: number)
        get useItem(): Internal.ItemStack
        get myRidingOffset(): number
        get flyingSpeed(): number
        get living(): boolean
        get x(): number
        get vehicle(): boolean
        set isInPowderSnow(arg0: boolean)
        set customName(arg0: net.minecraft.network.chat.Component_)
        get teamId(): string
        set stingerCount(arg0: number)
        get maxHeadYRot(): number
        get customNameVisible(): boolean
        get pistonPushReaction(): Internal.PushReaction
        get lootTableSeed(): number
        get motionX(): number
        get entityData(): Internal.SynchedEntityData
        get potionEffects(): Internal.EntityPotionEffectsJS
        get onRails(): boolean
        get stingerCount(): number
        get fallSounds(): Internal.LivingEntity$Fallsounds
        get dimensionChangingDelay(): number
        get waterSlowDown(): number
        set yaw(arg0: number)
        get pickRadius(): number
        get pathFinding(): boolean
        get removed(): boolean
        get jumpBoostPower(): number
        set shiftKeyDown(arg0: boolean)
        get passengers(): Internal.EntityArrayList
        get maxHeightFluidType(): Internal.FluidType
        get z(): number
        get server(): Internal.MinecraftServer
        get experienceReward(): number
        get firstPassenger(): Internal.Entity
        get spawnType(): Internal.MobSpawnType
        set lastHurtMob(arg0: Internal.Entity_)
        set lastHurtByMob(arg0: Internal.LivingEntity_)
        set fabricBalmData(arg0: Internal.CompoundTag_)
        get lookAngle(): Vec3d
        get ambientSoundInterval(): number
        set arrowCount(arg0: number)
        get permissionLevel(): number
        get motionZ(): number
        get persistenceRequired(): boolean
        get invisible(): boolean
        get bedOrientation(): Internal.Direction
        /**
         * @deprecated
        */
        get blockStateOnLegacy(): Internal.BlockState
        get profile(): Internal.GameProfile
        get deadOrDying(): boolean
        set headArmorItem(item: Internal.ItemStack_)
        set viewScale(arg0: number)
        set levelCallback(arg0: Internal.EntityInLevelCallback_)
        get lookControl(): Internal.LookControl
        set fromBucket(arg0: boolean)
        get offHandItem(): Internal.ItemStack
        get crouching(): boolean
        set y(y: number)
        get feetBlockState(): Internal.BlockState
        get withinRestriction(): boolean
        get sleepingPos(): Internal.Optional<BlockPos>
        get customName(): net.minecraft.network.chat.Component
        get class(): typeof any
        get visuallySwimming(): boolean
        get maxAirSupply(): number
        set maxHealth(hp: number)
        get facing(): Internal.Direction
        get boundingBoxForCulling(): Internal.AABB
        get target(): Internal.LivingEntity
        get nameTagOffsetY(): number
        get invulnerable(): boolean
        get inLava(): boolean
        get inWater(): boolean
        get pickupReach(): Vec3i
        get rootVehicle(): Internal.Entity
        get noGravity(): boolean
        get immobile(): boolean
        get speed(): number
        get cachedFeetBlockState(): Internal.BlockState
        get uuid(): Internal.UUID
        set offHandItem(item: Internal.ItemStack_)
        set noAi(arg0: boolean)
        get armorSlots(): Internal.Iterable<Internal.ItemStack>
        get jumpPower(): number
        get headArmorItem(): Internal.ItemStack
        get bbWidth(): number
        get "name()"(): net.minecraft.network.chat.Component
        get typeName(): net.minecraft.network.chat.Component
        get ticksRequiredToFreeze(): number
        get maxSpawnClusterSize(): number
        get flopSound(): Internal.SoundEvent
        get username(): string
        get pickable(): boolean
        set YHeadRot(arg0: number)
        set jumping(arg0: boolean)
        get pickResult(): Internal.ItemStack
        get "mainHandItem()"(): Internal.ItemStack
        get absorptionAmount(): number
        get randomY(): number
        get displayName(): net.minecraft.network.chat.Component
        get mobType(): Internal.MobType
        get passengersRidingOffset(): number
        get frame(): boolean
        set legsArmorItem(item: Internal.ItemStack_)
        set noGravity(arg0: boolean)
        get useItemRemainingTicks(): number
        get indirectPassengers(): Internal.Iterable<any>
        get bucketItemStack(): Internal.ItemStack
        get navigation(): Internal.PathNavigation
        get controlledByLocalInstance(): boolean
        get monster(): boolean
        get lastClimbablePos(): Internal.Optional<BlockPos>
        get horizontalFacing(): Internal.Direction
        set id(arg0: number)
        get type(): string
        get activeEffectsMap(): Internal.Map<Internal.MobEffect, Internal.MobEffectInstance>
        get actuallyReallyBlocking(): boolean
        set motionX(x: number)
        get handSlots(): Internal.Iterable<Internal.ItemStack>
        get movementEmission(): Internal.Entity$MovementEmission
        get teamColor(): number
        set nbt(nbt: Internal.CompoundTag_)
        get restrictRadius(): number
        get registeredNavigation(): Internal.PathNavigation
        get invertedHealAndHarm(): boolean
        get freezing(): boolean
        set guaranteedDrop(arg0: Internal.EquipmentSlot_)
        set sharedFlagOnFire(arg0: boolean)
    }
    type AbstractFish_ = AbstractFish;
    class MultiManagedStorage implements Internal.IManagedStorage {
        constructor()
        getClass(): typeof any;
        addSyncUpdateListener<T>(key: Internal.ManagedKey_, listener: Internal.IFieldUpdateListener_<T>): Internal.ISubscription;
        hasDirtySyncFields(): boolean;
        detach(storage: Internal.IManagedStorage_): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        clearCache(): void;
        getSyncFields(): Internal.IRef[];
        markAllDirty(): void;
        markDirty(key: Internal.ManagedKey_): void;
        getFieldByKey(key: Internal.ManagedKey_): Internal.IRef;
        getNonLazyFields(): Internal.IRef[];
        attach(storage: Internal.IManagedStorage_): void;
        toString(): string;
        init(): void;
        removeAllSyncUpdateListener(key: Internal.ManagedKey_): void;
        notifyAll(): void;
        notifyFieldUpdate<T>(key: Internal.ManagedKey_, newVal: T, oldVal: T): void;
        hashCode(): number;
        hasSyncListener(key: Internal.ManagedKey_): boolean;
        hasDirtyPersistedFields(): boolean;
        wait(): void;
        wait(arg0: number): void;
        getPersistedFields(): Internal.IRef[];
        getManaged(): Internal.IManaged[];
        equals(arg0: any): boolean;
        get class(): typeof any
        get syncFields(): Internal.IRef[]
        get nonLazyFields(): Internal.IRef[]
        get persistedFields(): Internal.IRef[]
        get managed(): Internal.IManaged[]
    }
    type MultiManagedStorage_ = MultiManagedStorage;
    class MinecraftServer$ServerResourcePackInfo extends Internal.Record {
        constructor(url: string, hash: string, isRequired: boolean, prompt: net.minecraft.network.chat.Component_)
        getClass(): typeof any;
        toString(): string;
        notifyAll(): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        hashCode(): number;
        hash(): string;
        url(): string;
        isRequired(): boolean;
        wait(): void;
        wait(arg0: number): void;
        prompt(): net.minecraft.network.chat.Component;
        equals(arg0: any): boolean;
        get class(): typeof any
        get required(): boolean
    }
    type MinecraftServer$ServerResourcePackInfo_ = MinecraftServer$ServerResourcePackInfo;
    class PolarBear extends Internal.Animal implements Internal.NeutralMob {
        constructor(arg0: Internal.EntityType_<Internal.PolarBear>, arg1: Internal.Level_)
        getUpVector(arg0: number): Vec3d;
        gameEvent(arg0: Internal.GameEvent_, arg1: Internal.Entity_): void;
        static checkMobSpawnRules(arg0: Internal.EntityType_<Internal.Mob>, arg1: Internal.LevelAccessor_, arg2: Internal.MobSpawnType_, arg3: BlockPos_, arg4: Internal.RandomSource_): boolean;
        setDefaultMovementSpeedMultiplier(speed: number): void;
        isSuppressingBounce(): boolean;
        handler$ejj000$retrodamageindicators$retroDamageIndicators_onSyncedDataUpdated(arg0: Internal.EntityDataAccessor_<any>, arg1: Internal.CallbackInfo_): void;
        abstract setTarget(arg0: Internal.LivingEntity_): void;
        isOnFire(): boolean;
        getDeathSound(): Internal.SoundEvent;
        onLeashDistance(arg0: number): void;
        getPositionCodec(): Internal.VecDeltaCodec;
        getPickedResult(arg0: Internal.HitResult_): Internal.ItemStack;
        setMaxUpStep(arg0: number): void;
        /**
         * @deprecated
        */
        updateFluidHeightAndDoFluidPushing(arg0: Internal.TagKey_<Internal.Fluid>, arg1: number): boolean;
        shouldPassengersInheritMalus(): boolean;
        convertTo<T extends Internal.Mob>(arg0: Internal.EntityType_<T>, arg1: boolean): T;
        getFallFlyingTicks(): number;
        runCommandSilent(command: string): number;
        setPosition(x: number, y: number, z: number): void;
        chunkPosition(): Internal.ChunkPos;
        dropLeash(arg0: boolean, arg1: boolean): void;
        gameEvent(arg0: Internal.GameEvent_): void;
        accessoriesCapability(): Internal.AccessoriesCapability;
        setXxa(arg0: number): void;
        updateWalkAnimation(arg0: number): void;
        setDelayedLeashHolderId(arg0: number): void;
        isShiftKeyDown(): boolean;
        isInFluidType(arg0: Internal.FluidState_): boolean;
        setUUID(arg0: Internal.UUID_): void;
        checkBelowWorld(): void;
        onEffectUpdated(arg0: Internal.MobEffectInstance_, arg1: boolean, arg2: Internal.Entity_): void;
        updateSwingTime(): void;
        setMotionZ(z: number): void;
        constant$zbj000$additionalentityattributes$additionalEntityAttributes$modifyUpwardSwimming(original: number, fluid: Internal.TagKey_<any>): number;
        "deserializeNBT(net.minecraft.nbt.Tag)"(arg0: Internal.Tag_): void;
        forgetCurrentTargetAndRefreshUniversalAnger(): void;
        handler$zza000$step_height_entity_attribute$getStepHeight(cir: Internal.CallbackInfoReturnable_<any>): void;
        canFreeze(): boolean;
        ignoreExplosion(): boolean;
        getBlockY(): number;
        addPersistentAngerSaveData(arg0: Internal.CompoundTag_): void;
        isSpectator(): boolean;
        isAlwaysExperienceDropper(): boolean;
        setMainHandItem(item: Internal.ItemStack_): void;
        removeEffectNoUpdate(arg0: Internal.MobEffect_): Internal.MobEffectInstance;
        spawnAtLocation(arg0: Internal.ItemLike_, arg1: number): Internal.ItemEntity;
        getPersistentData(): Internal.CompoundTag;
        getHealth(): number;
        getMaxHealth(): number;
        setPathfindingMalus(arg0: Internal.BlockPathTypes_, arg1: number): void;
        isRegisteredToWorld(): boolean;
        getRandomZ(arg0: number): number;
        setAggressive(arg0: boolean): void;
        constant$zbn000$additionalentityattributes$additionalEntityAttributes$knockDownwards(original: number): number;
        setRemoved(arg0: Internal.Entity$RemovalReason_): void;
        getAttachedOrCreate<A>(type: Internal.AttachmentType_<A>, initializer: Internal.Supplier_<A>): A;
        isInWaterRainOrBubble(): boolean;
        getDistanceSq(arg0: number, arg1: number, arg2: number): number;
        getRemovalReason(): Internal.Entity$RemovalReason;
        onFlap(): void;
        actuallyHurt(arg0: DamageSource_, arg1: number): void;
        resetFallDistance(): void;
        canSprint(): boolean;
        blockPosition(): BlockPos;
        setLevel(arg0: Internal.Level_): void;
        setBoundingBox(arg0: Internal.AABB_): void;
        isAmbientCreature(): boolean;
        setZza(arg0: number): void;
        getBlock(): Internal.BlockContainerJS;
        setEquipment(slot: Internal.EquipmentSlot_, item: Internal.ItemStack_): void;
        randomTeleport(arg0: number, arg1: number, arg2: number, arg3: boolean): boolean;
        invalidateCaps(): void;
        getName(): net.minecraft.network.chat.Component;
        playAmbientSound(): void;
        onGround(): boolean;
        getControlledVehicle(): Internal.Entity;
        isOnSameTeam(arg0: Internal.Entity_): boolean;
        getArmorValue(): number;
        isInFluidType(arg0: Internal.BiPredicate_<Internal.FluidType, number>): boolean;
        tick(): void;
        getKillCredit(): Internal.LivingEntity;
        redirect$dlf000$spectrum$isWet(livingEntity: Internal.LivingEntity_): boolean;
        isPushedByFluid(arg0: Internal.FluidType_): boolean;
        getComponentContainer(): Internal.ComponentContainer;
        sinkInFluid(arg0: Internal.FluidType_): void;
        tryCheckInsideBlocks(): void;
        hasPermissions(arg0: number): boolean;
        accessoriesHolder(): Internal.AccessoriesHolder;
        teleportTo(dimension: ResourceLocation_, x: number, y: number, z: number, yaw: number, pitch: number): void;
        onInsideBlock(arg0: Internal.BlockState_): void;
        static createMobAttributes(): Internal.AttributeSupplier$Builder;
        getDefaultLootTable(): ResourceLocation;
        isAutoSpinAttack(): boolean;
        getRemainingFireTicks(): number;
        limitPistonMovement(arg0: Vec3d_): Vec3d;
        onlyOpCanSetNbt(): boolean;
        addMotion(arg0: number, arg1: number, arg2: number): void;
        fireImmune(): boolean;
        getMaxFallDistance(): number;
        dsurround_getEffectInfo(): Internal.EntityEffectInfo;
        isHolding(arg0: Internal.Item_): boolean;
        getZ(arg0: number): number;
        hasCustomOutlineRendering(arg0: Internal.Player_): boolean;
        static areAllEffectsAmbient(arg0: Internal.Collection_<Internal.MobEffectInstance>): boolean;
        doHurtTarget(arg0: Internal.Entity_): boolean;
        getTicksFrozen(): number;
        tickRidden(arg0: Internal.Player_, arg1: Vec3d_): void;
        getRandomX(arg0: number): number;
        spawnAtLocation(arg0: Internal.ItemStack_, arg1: number): Internal.ItemEntity;
        pick(arg0: number, arg1: number, arg2: boolean): Internal.HitResult;
        getVoicePitch(): number;
        setStatusMessage(message: net.minecraft.network.chat.Component_): void;
        setSleepingPos(arg0: BlockPos_): void;
        isDescending(): boolean;
        getAttributeBaseValue(arg0: Internal.Attribute_): number;
        sendEffectToPassengers(arg0: Internal.MobEffectInstance_): void;
        getHeadRotSpeed(): number;
        getYHeadRot(): number;
        handler$dlf000$spectrum$applyBonusDamage(source: DamageSource_, amount: number, cir: Internal.CallbackInfoReturnable_<any>): void;
        verifyEquippedItem(arg0: Internal.ItemStack_): void;
        getProjectile(arg0: Internal.ItemStack_): Internal.ItemStack;
        damageEquipment(slot: Internal.EquipmentSlot_, amount: number, onBroken: Internal.Consumer_<Internal.ItemStack>): void;
        syncPacketPositionCodec(arg0: number, arg1: number, arg2: number): void;
        setAbsorptionAmount(arg0: number): void;
        isSunBurnTick(): boolean;
        makeBrain(arg0: Internal.Dynamic_<any>): Internal.Brain<any>;
        handler$dlf000$spectrum$mitigateFallDamageWithPuffCirclet(heightDifference: number, onGround: boolean, landedState: Internal.BlockState_, landedPosition: BlockPos_, ci: Internal.CallbackInfo_): void;
        isAffectedByFluids(): boolean;
        canAddPassenger(arg0: Internal.Entity_): boolean;
        shouldRenderAtSqrDistance(arg0: number): boolean;
        getAttachedOrSet<A>(type: Internal.AttachmentType_<A>, defaultValue: A): A;
        damageSources(): Internal.DamageSources;
        removeAttached<A>(type: Internal.AttachmentType_<A>): A;
        removeAllGoals(arg0: Internal.Predicate_<Internal.Goal>): void;
        swing(): void;
        getAmbientSound(): Internal.SoundEvent;
        recreateFromPacket(arg0: Internal.ClientboundAddEntityPacket_): void;
        canStartSwimming(): boolean;
        setDeltaMovement(arg0: Vec3d_): void;
        getLeashOffset(arg0: number): Vec3d;
        isBaby(): boolean;
        damageEquipment(slot: Internal.EquipmentSlot_): void;
        isGlowing(): boolean;
        "isInFluidType(net.minecraft.world.level.material.FluidState)"(arg0: Internal.FluidState_): boolean;
        getWalkTargetValue(arg0: BlockPos_): number;
        /**
         * @deprecated
        */
        canBreatheUnderwater(): boolean;
        die(arg0: DamageSource_): void;
        removeAllEffects(): boolean;
        getLeashOffset(): Vec3d;
        hasLineOfSight(arg0: Internal.Entity_): boolean;
        onClimbable(): boolean;
        isAttackable(): boolean;
        getRiddenSpeed(arg0: Internal.Player_): number;
        processPortalCooldown(): void;
        getSlot(arg0: number): Internal.SlotAccess;
        "deserializeNBT(net.minecraft.nbt.CompoundTag)"(arg0: Internal.CompoundTag_): void;
        stopSeenByPlayer(arg0: Internal.ServerPlayer_): void;
        isUnderWater(): boolean;
        stopRiding(): void;
        getSwimHighSpeedSplashSound(): Internal.SoundEvent;
        getLeashHolder(): Internal.Entity;
        createWitherRose(arg0: Internal.LivingEntity_): void;
        getX(arg0: number): number;
        getSensing(): Internal.Sensing;
        getLegsArmorItem(): Internal.ItemStack;
        captureDrops(arg0: Internal.Collection_<Internal.ItemEntity>): Internal.Collection<Internal.ItemEntity>;
        getSelfAndPassengers(): Internal.Stream<any>;
        rayTrace(distance: number): Internal.RayTraceResultJS;
        getDeltaMovement(): Vec3d;
        canTakeItem(arg0: Internal.ItemStack_): boolean;
        removeSoulSpeed(): void;
        shouldDropExperience(): boolean;
        getEquipmentDropChance(arg0: Internal.EquipmentSlot_): number;
        hasPassenger(arg0: Internal.Entity_): boolean;
        syncComponent(key: Internal.ComponentKey_<any>, packetWriter: Internal.ComponentPacketWriter_, predicate: Internal.PlayerSyncPredicate_): void;
        setSecondsOnFire(arg0: number): void;
        moveTo(arg0: number, arg1: number, arg2: number): void;
        "getDisplayName()"(): net.minecraft.network.chat.Component;
        getLootTable(): ResourceLocation;
        getTicksUsingItem(): number;
        tickHeadTurn(arg0: number, arg1: number): number;
        getArrowCount(): number;
        calculateViewVector(arg0: number, arg1: number): Vec3d;
        getMoveControl(): Internal.MoveControl;
        setMotion(arg0: number, arg1: number, arg2: number): void;
        setStanding(arg0: boolean): void;
        playSound(arg0: Internal.SoundEvent_): void;
        makeBoundingBox(): Internal.AABB;
        handler$deo000$eidolon$eidolonrepraised$getMobType(arg0: Internal.CallbackInfoReturnable_<any>): void;
        getDefaultMovementSpeed(): number;
        restoreFrom(arg0: Internal.Entity_): void;
        redirect$bkg000$fabric_entity_events_v1$beforeEntityKilled(livingEntity: Internal.LivingEntity_, source: DamageSource_, amount: number): boolean;
        isPeacefulCreature(): boolean;
        setOnGround(arg0: boolean): void;
        addEffect(arg0: Internal.MobEffectInstance_, arg1: Internal.Entity_): boolean;
        ate(): void;
        setPos(arg0: number, arg1: number, arg2: number): void;
        notify(): void;
        getFirstTick(): boolean;
        setPersistenceRequired(): void;
        getLastHurtByMobTimestamp(): number;
        getVehicle(): Internal.Entity;
        canFallInLove(): boolean;
        isEffectiveAi(): boolean;
        startRiding(arg0: Internal.Entity_, arg1: boolean): boolean;
        setSpawnCancelled(arg0: boolean): void;
        getStringUuid(): string;
        setSwimming(arg0: boolean): void;
        canHydrateInFluidType(arg0: Internal.FluidType_): boolean;
        getMainArm(): Internal.HumanoidArm;
        checkSpawnRules(arg0: Internal.LevelAccessor_, arg1: Internal.MobSpawnType_): boolean;
        getRotationVector(): Internal.Vec2;
        getHurtDir(): number;
        isSprinting(): boolean;
        isMaxGroupSizeReached(arg0: number): boolean;
        getMotionY(): number;
        getOffhandItem(): Internal.ItemStack;
        canCollideWith(arg0: Internal.Entity_): boolean;
        getBlockExplosionResistance(arg0: Internal.Explosion_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.FluidState_, arg5: number): number;
        getFluidFallDistanceModifier(arg0: Internal.FluidType_): number;
        clearSleepingPos(): void;
        canSpawnSprintParticle(): boolean;
        canRide(arg0: Internal.Entity_): boolean;
        "moveTo(net.minecraft.core.BlockPos,float,float)"(arg0: BlockPos_, arg1: number, arg2: number): void;
        getStandingAnimationScale(arg0: number): number;
        getLastHurtMob(): Internal.LivingEntity;
        moveRelative(arg0: number, arg1: Vec3d_): void;
        getOnPos(arg0: number): BlockPos;
        isAddedToWorld(): boolean;
        saveAsPassenger(arg0: Internal.CompoundTag_): boolean;
        gtceu$setFireImmune(isImmune: boolean): void;
        getDrinkingSound(arg0: Internal.ItemStack_): Internal.SoundEvent;
        getLastDamageSource(): DamageSource;
        getSoundSource(): Internal.SoundSource;
        removeAfterChangingDimensions(): void;
        setNoActionTime(arg0: number): void;
        setMovementSpeedAddition(speed: number): void;
        equipmentHasChanged(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getPose(): Internal.Pose;
        getSharedFlag(arg0: number): boolean;
        getAttribute(arg0: Internal.Attribute_): Internal.AttributeInstance;
        getRemainingPersistentAngerTime(): number;
        setPositionAndRotation(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        canBeAffected(arg0: Internal.MobEffectInstance_): boolean;
        tryAddFrost(): void;
        checkFallDamage(arg0: number, arg1: boolean, arg2: Internal.BlockState_, arg3: BlockPos_): void;
        ageUp(arg0: number): void;
        quark$lastHurtByPlayer(): Internal.Player;
        getRestrictCenter(): BlockPos;
        isLeftHanded(): boolean;
        removeVehicle(): void;
        defineSynchedData(): void;
        checkInsideBlocks(): void;
        setZ(z: number): void;
        getY(): number;
        hashCode(): number;
        deserializeNBT(arg0: Internal.CompoundTag_): void;
        finalizeSpawnChildFromBreeding(arg0: Internal.ServerLevel_, arg1: Internal.Animal_, arg2: Internal.AgeableMob_): void;
        eat(arg0: Internal.Level_, arg1: Internal.ItemStack_): Internal.ItemStack;
        createHoverEvent(): Internal.HoverEvent;
        isWithinMeleeAttackRange(arg0: Internal.LivingEntity_): boolean;
        serverAiStep(): void;
        broadcastBreakEvent(arg0: Internal.EquipmentSlot_): void;
        getExitPortal(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: boolean, arg3: Internal.WorldBorder_): Internal.Optional<Internal.BlockUtil$FoundRectangle>;
        handler$bkm000$fabric_entity_events_v1$injectElytraTick(info: Internal.CallbackInfo_): void;
        setItemSlotAndDropWhenKilled(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): void;
        sendDebugPackets(): void;
        showVehicleHealth(): boolean;
        getDistance(pos: BlockPos_): number;
        isBlocking(): boolean;
        damageHeldItem(hand: Internal.InteractionHand_, amount: number): void;
        removeAttribute(attribute: Internal.Attribute_, identifier: string): void;
        playMuffledStepSound(arg0: Internal.BlockState_, arg1: BlockPos_): void;
        /**
         * @deprecated
        */
        isPushedByFluid(): boolean;
        dropFromLootTable(arg0: DamageSource_, arg1: boolean): void;
        getArmorCoverPercentage(): number;
        handleRelativeFrictionAndCalculateMovement(arg0: Vec3d_, arg1: number): Vec3d;
        turn(arg0: number, arg1: number): void;
        getAirSupply(): number;
        waterSwimSound(): void;
        moveTo(arg0: BlockPos_, arg1: number, arg2: number): void;
        isPlayer(): boolean;
        isAnimal(): boolean;
        readAdditionalSaveData(arg0: Internal.CompoundTag_): void;
        canBeCollidedWith(): boolean;
        getMotionDirection(): Internal.Direction;
        asComponentProvider(): Internal.ComponentProvider;
        lavaHurt(): void;
        handleDamageEvent(arg0: DamageSource_): void;
        updateUsingItem(arg0: Internal.ItemStack_): void;
        getFabricBalmData(): Internal.CompoundTag;
        canChangeDimensions(): boolean;
        jumpInFluid(arg0: Internal.FluidType_): void;
        getCommandSenderWorld(): Internal.Level;
        quark$lastHurtByPlayerTime(): number;
        getTotalMovementSpeed(): number;
        changeDimension(arg0: Internal.ServerLevel_): Internal.Entity;
        moveInFluid(arg0: Internal.FluidState_, arg1: Vec3d_, arg2: number): boolean;
        updatingUsingItem(): void;
        blockedByShield(arg0: Internal.LivingEntity_): void;
        attack(hp: number): void;
        canSwimInFluidType(arg0: Internal.FluidType_): boolean;
        getFireImmuneTicks(): number;
        getAttributes(): Internal.AttributeMap;
        isSpawnCancelled(): boolean;
        "hasPassenger(java.util.function.Predicate)"(arg0: Internal.Predicate_<Internal.Entity>): boolean;
        getDimensions(arg0: Internal.Pose_): Internal.EntityDimensions;
        spawnChildFromBreeding(arg0: Internal.ServerLevel_, arg1: Internal.Animal_): void;
        setInLoveTime(arg0: number): void;
        isSwimming(): boolean;
        setSprinting(arg0: boolean): void;
        mayInteract(arg0: Internal.Level_, arg1: BlockPos_): boolean;
        setRot(arg0: number, arg1: number): void;
        setPortalCooldown(): void;
        getAttackAnim(arg0: number): number;
        setX(x: number): void;
        getPortalWaitTime(): number;
        getBlockStateOn(): Internal.BlockState;
        wantsToPickUp(arg0: Internal.ItemStack_): boolean;
        getItemBySlot(arg0: Internal.EquipmentSlot_): Internal.ItemStack;
        getFluidJumpThreshold(): number;
        enchantSpawnedArmor(arg0: Internal.RandomSource_, arg1: number, arg2: Internal.EquipmentSlot_): void;
        "setPositionAndRotation(double,double,double,float,float)"(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        isInvisibleTo(arg0: Internal.Player_): boolean;
        stopSleeping(): void;
        spectrum$setActuallyTouchingWater(actuallyTouchingWater: boolean): void;
        setAirSupply(arg0: number): void;
        getOnPos(): BlockPos;
        isUndead(): boolean;
        repositionEntityAfterLoad(): boolean;
        static createLivingAttributes(): Internal.AttributeSupplier$Builder;
        getBlockPosBelowThatAffectsMyMovement(): BlockPos;
        moveTowardsClosestSpace(arg0: number, arg1: number, arg2: number): void;
        getStepHeight(): number;
        static getCollisionHorizontalEscapeVector(arg0: number, arg1: number, arg2: number): Vec3d;
        setRegisteredToWorld(navigation: Internal.PathNavigation_): void;
        isSleeping(): boolean;
        stopUsingItem(): void;
        acceptsFailure(): boolean;
        playCombinationStepSounds(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: BlockPos_): void;
        setOnGroundWithKnownMovement(arg0: boolean, arg1: Vec3d_): void;
        ageBoundaryReached(): void;
        getFluidFallingAdjustedMovement(arg0: number, arg1: boolean, arg2: Vec3d_): Vec3d;
        setOldPosAndRot(): void;
        isFree(arg0: number, arg1: number, arg2: number): boolean;
        getDismountPoses(): Internal.ImmutableList<Internal.Pose>;
        getLastHurtMobTimestamp(): number;
        playBlockFallSound(): void;
        lithiumOnEquipmentChanged(): void;
        "moveTo(double,double,double)"(arg0: number, arg1: number, arg2: number): void;
        setRemainingFireTicks(arg0: number): void;
        updateControlFlags(): void;
        createBodyControl(): Internal.BodyRotationControl;
        /**
         * @deprecated
        */
        getOnPosLegacy(): BlockPos;
        setPos(arg0: Vec3d_): void;
        findDimensionEntryPoint(arg0: Internal.ServerLevel_): Internal.PortalInfo;
        enchantSpawnedWeapon(arg0: Internal.RandomSource_, arg1: number): void;
        populateDefaultEquipmentEnchantments(arg0: Internal.RandomSource_, arg1: Internal.DifficultyInstance_): void;
        damageHeldItem(hand: Internal.InteractionHand_, amount: number, onBroken: Internal.Consumer_<Internal.ItemStack>): void;
        setCanPickUpLoot(arg0: boolean): void;
        getStandingEyeHeight(arg0: Internal.Pose_, arg1: Internal.EntityDimensions_): number;
        getMainHandItem(): Internal.ItemStack;
        areCapsCompatible(arg0: Internal.CapabilityDispatcher_): boolean;
        setSilent(arg0: boolean): void;
        doPush(arg0: Internal.Entity_): void;
        captureDrops(): Internal.Collection<Internal.ItemEntity>;
        hasExactlyOnePlayerPassenger(): boolean;
        canBeSeenAsEnemy(): boolean;
        handler$dlf000$spectrum$drop(source: DamageSource_, ci: Internal.CallbackInfo_): void;
        setLeftHanded(arg0: boolean): void;
        getSwimSplashSound(): Internal.SoundEvent;
        getActiveEffects(): Internal.Collection<Internal.MobEffectInstance>;
        isOnPortalCooldown(): boolean;
        hurtArmor(arg0: DamageSource_, arg1: number): void;
        canAttack(arg0: Internal.LivingEntity_, arg1: Internal.TargetingConditions_): boolean;
        increaseAirSupply(arg0: number): number;
        getAttributeValue(arg0: Internal.Holder_<Internal.Attribute>): number;
        setPitch(arg0: number): void;
        isMultipartEntity(): boolean;
        setPosRaw(arg0: number, arg1: number, arg2: number): void;
        handleEntityEvent(arg0: number): void;
        getParts(): Internal.PartEntity<any>[];
        isUsingItem(): boolean;
        spawnSoulSpeedParticle(): void;
        removeFrost(): void;
        isAlwaysTicking(): boolean;
        interactAt(arg0: Internal.Player_, arg1: Vec3d_, arg2: Internal.InteractionHand_): InteractionResult;
        lerpTo(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): void;
        onPassengerTurned(arg0: Internal.Entity_): void;
        spawnAtLocation(arg0: Internal.ItemLike_): Internal.ItemEntity;
        setAttached(type: Internal.AttachmentType_<any>, value: any): any;
        /**
         * @deprecated
        */
        couldAcceptPassenger(): boolean;
        getForgePersistentData(): Internal.CompoundTag;
        lithiumOnBlockCacheDeleted(): void;
        "spawnAtLocation(net.minecraft.world.level.ItemLike,int)"(arg0: Internal.ItemLike_, arg1: number): Internal.ItemEntity;
        setInvulnerable(arg0: boolean): void;
        push(arg0: Internal.Entity_): void;
        isInFluidType(): boolean;
        jumpFromGround(): void;
        canMate(arg0: Internal.Animal_): boolean;
        canReplaceCurrentItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getDamageAfterArmorAbsorb(arg0: DamageSource_, arg1: number): number;
        handler$chi000$cofh_core$shield(arg0: DamageSource_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        maxUpStep(): number;
        handler$fdm000$quark$onEatGoldenCarrot(arg0: Internal.Player_, arg1: Internal.InteractionHand_, arg2: Internal.ItemStack_, arg3: Internal.CallbackInfo_): void;
        setGlowing(arg0: boolean): void;
        load(arg0: Internal.CompoundTag_): void;
        "broadcastBreakEvent(net.minecraft.world.entity.EquipmentSlot)"(arg0: Internal.EquipmentSlot_): void;
        setLeashedTo(arg0: Internal.Entity_, arg1: boolean): void;
        onChangedBlock(arg0: BlockPos_): void;
        isAlive(): boolean;
        usePlayerItem(arg0: Internal.Player_, arg1: Internal.InteractionHand_, arg2: Internal.ItemStack_): void;
        startSleeping(arg0: BlockPos_): void;
        dsurround_getPotionSwirlColor(): number;
        pickUpItem(arg0: Internal.ItemEntity_): void;
        getBbHeight(): number;
        getMeleeAttackRangeSqr(arg0: Internal.LivingEntity_): number;
        getViewVector(arg0: number): Vec3d;
        getTags(): Internal.Set<string>;
        calculateFallDamage(arg0: number, arg1: number): number;
        readPersistentAngerSaveData(arg0: Internal.Level_, arg1: Internal.CompoundTag_): void;
        getLastAttacker(): Internal.LivingEntity;
        hasControllingPassenger(): boolean;
        closerThan(arg0: Internal.Entity_, arg1: number, arg2: number): boolean;
        absMoveTo(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        updateEffectVisibility(): void;
        onPathfindingStart(): void;
        getPercentFrozen(): number;
        setPortalCooldown(arg0: number): void;
        hasGlowingTag(): boolean;
        shouldBlockExplode(arg0: Internal.Explosion_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: number): boolean;
        setPosition(block: Internal.BlockContainerJS_): void;
        handler$den000$eidolon$eidolonrepraised$isAlliedTo(arg0: Internal.Entity_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        isLeashed(): boolean;
        localvar$dlf000$spectrum$modifyDamage(amount: number, source: DamageSource_): number;
        getSoundVolume(): number;
        addEffect(arg0: Internal.MobEffectInstance_): boolean;
        ageUp(arg0: number, arg1: boolean): void;
        getViewXRot(arg0: number): number;
        canRiderInteract(): boolean;
        fabric_getAttachments(): Internal.Map<any, any>;
        setPose(arg0: Internal.Pose_): void;
        getReachDistance(): number;
        getEntityType(): Internal.EntityType<any>;
        isWaterCreature(): boolean;
        toString(): string;
        updateInvisibilityStatus(): void;
        getBreedOffspring(arg0: Internal.ServerLevel_, arg1: Internal.AgeableMob_): Internal.AgeableMob;
        abstract setLastHurtByPlayer(arg0: Internal.Player_): void;
        "getServer()"(): Internal.MinecraftServer;
        mobInteract(arg0: Internal.Player_, arg1: Internal.InteractionHand_): InteractionResult;
        wasExperienceConsumed(): boolean;
        isPushable(): boolean;
        setYBodyRot(arg0: number): void;
        foodEaten(is: Internal.ItemStack_): void;
        onClientRemoval(): void;
        handler$dlf000$spectrum$eat(stack: Internal.ItemStack_, world: Internal.Level_, targetEntity: Internal.LivingEntity_, ci: Internal.CallbackInfo_): void;
        self(): Internal.LivingEntity;
        shouldDropLoot(): boolean;
        reviveCaps(): void;
        playWarningSound(): void;
        getDistance(x: number, y: number, z: number): number;
        setMotionY(y: number): void;
        static createAttributes(): Internal.AttributeSupplier$Builder;
        getAttached(type: Internal.AttachmentType_<any>): any;
        isAngry(): boolean;
        setRotation(yaw: number, pitch: number): void;
        handler$cam000$radium$tryShortcutFluidPushing(ci: Internal.CallbackInfo_, box: Internal.AABB_, x1: number, x2: number, y1: number, y2: number, z1: number, z2: number, zero: number): void;
        calculateEntityAnimation(arg0: boolean): void;
        forceAddEffect(arg0: Internal.MobEffectInstance_, arg1: Internal.Entity_): void;
        setChestArmorItem(item: Internal.ItemStack_): void;
        getComponent<C extends dev.onyxstudios.cca.api.v3.component.Component>(key: Internal.ComponentKey_<C>): C;
        checkAutoSpinAttack(arg0: Internal.AABB_, arg1: Internal.AABB_): void;
        onAboveBubbleCol(arg0: boolean): void;
        "playSound(net.minecraft.sounds.SoundEvent,float,float)"(id: Internal.SoundEvent_, volume: number, pitch: number): void;
        toComponentPacket(key: Internal.ComponentKey_<any>, writer: Internal.ComponentPacketWriter_, recipient: Internal.ServerPlayer_): Internal.ClientboundCustomPayloadPacket;
        isPassenger(): boolean;
        hasPose(arg0: Internal.Pose_): boolean;
        playStepSound(arg0: BlockPos_, arg1: Internal.BlockState_): void;
        /**
         * @deprecated
        */
        isEyeInFluid(arg0: Internal.TagKey_<Internal.Fluid>): boolean;
        isInvulnerableTo(arg0: DamageSource_): boolean;
        makeStuckInBlock(arg0: Internal.BlockState_, arg1: Vec3d_): void;
        getAttachedOrGet<A>(type: Internal.AttachmentType_<A>, defaultValue: Internal.Supplier_<A>): A;
        isSensitiveToWater(): boolean;
        skipAttackInteraction(arg0: Internal.Entity_): boolean;
        maybeBackOffFromEdge(arg0: Vec3d_, arg1: Internal.MoverType_): Vec3d;
        newFloatList(...arg0: number[]): Internal.ListTag;
        lerpMotion(arg0: number, arg1: number, arg2: number): void;
        "getAttributeValue(net.minecraft.core.Holder)"(arg0: Internal.Holder_<Internal.Attribute>): number;
        shouldRender(arg0: number, arg1: number, arg2: number): boolean;
        getJumpControl(): Internal.JumpControl;
        isFlapping(): boolean;
        getEyeHeight(arg0: Internal.Pose_, arg1: Internal.EntityDimensions_): number;
        getFeetArmorItem(): Internal.ItemStack;
        static getViewScale(): number;
        getVisualRotationYInDegrees(): number;
        setSpeed(arg0: number): void;
        requiresCustomPersistence(): boolean;
        isDiscrete(): boolean;
        unRide(): void;
        getLevel(): Internal.Level;
        "spawnAtLocation(net.minecraft.world.item.ItemStack)"(arg0: Internal.ItemStack_): Internal.ItemEntity;
        getCombatTracker(): Internal.CombatTracker;
        isAngryAt(arg0: Internal.LivingEntity_): boolean;
        updateDynamicGameEventListener(arg0: Internal.BiConsumer_<Internal.DynamicGameEventListener<any>, Internal.ServerLevel>): void;
        canBreed(): boolean;
        "onSyncedDataUpdated(net.minecraft.network.syncher.EntityDataAccessor)"(arg0: Internal.EntityDataAccessor_<any>): void;
        isNoAi(): boolean;
        areCapsCompatible(arg0: Internal.CapabilityProvider_<Internal.Entity>): boolean;
        extinguishFire(): void;
        getChestArmorItem(): Internal.ItemStack;
        damageEquipment(slot: Internal.EquipmentSlot_, amount: number): void;
        getBlockJumpFactor(): number;
        tell(message: net.minecraft.network.chat.Component_): void;
        closerThan(arg0: Internal.Entity_, arg1: number): boolean;
        onSoulSpeedBlock(): boolean;
        /**
         * @deprecated
        */
        goDownInWater(): void;
        getDistanceSq(pos: BlockPos_): number;
        indicateDamage(arg0: number, arg1: number): void;
        canBeSeenByAnyone(): boolean;
        playEntityOnFireExtinguishedSound(): void;
        updatePersistentAnger(arg0: Internal.ServerLevel_, arg1: boolean): void;
        isFullyFrozen(): boolean;
        dropCustomDeathLoot(arg0: DamageSource_, arg1: number, arg2: boolean): void;
        handler$eop000$wizards_reborn$isFallFlying(arg0: Internal.CallbackInfoReturnable_<any>): void;
        isInWall(): boolean;
        getMeleeAttackReferencePosition(): Vec3d;
        getAllSlots(): Internal.Iterable<Internal.ItemStack>;
        remove(arg0: Internal.Entity$RemovalReason_): void;
        getScale(): number;
        handler$dlf000$spectrum$canHaveStatusEffect(statusEffectInstance: Internal.MobEffectInstance_, cir: Internal.CallbackInfoReturnable_<any>): void;
        isSuppressingSlidingDownLadder(): boolean;
        getBlockZ(): number;
        dampensVibrations(): boolean;
        hasAttached(type: Internal.AttachmentType_<any>): boolean;
        isSilent(): boolean;
        "playSound(net.minecraft.sounds.SoundEvent)"(id: Internal.SoundEvent_): void;
        getPitch(): number;
        newDoubleList(...arg0: number[]): Internal.ListTag;
        getPathfindingMalus(arg0: Internal.BlockPathTypes_): number;
        getRandom(): Internal.RandomSource;
        canReplaceEqualItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        rotate(arg0: Internal.Rotation_): number;
        shouldRiderFaceForward(arg0: Internal.Player_): boolean;
        getPassengersAndSelf(): Internal.Stream<any>;
        breakItem(arg0: Internal.ItemStack_): void;
        rayTrace(distance: number, fluids: boolean): Internal.RayTraceResultJS;
        "getAttributeBaseValue(net.minecraft.core.Holder)"(arg0: Internal.Holder_<Internal.Attribute>): number;
        clearRestriction(): void;
        "self()"(): Internal.LivingEntity;
        getAge(): number;
        rayTrace(): Internal.RayTraceResultJS;
        alwaysAccepts(): boolean;
        "isHolding(java.util.function.Predicate)"(arg0: Internal.Predicate_<Internal.ItemStack>): boolean;
        getNoActionTime(): number;
        isVisuallyCrawling(): boolean;
        isAggressive(): boolean;
        setYya(arg0: number): void;
        setDropChance(arg0: Internal.EquipmentSlot_, arg1: number): void;
        "broadcastBreakEvent(net.minecraft.world.InteractionHand)"(arg0: Internal.InteractionHand_): void;
        setFluidTypeHeight(arg0: Internal.FluidType_, arg1: number): void;
        dropExperience(): void;
        teleportRelative(arg0: number, arg1: number, arg2: number): void;
        isFood(arg0: Internal.ItemStack_): boolean;
        setBaby(arg0: boolean): void;
        localvar$dkk000$spectrum$applyAdditionalFirstStrikeEnchantmentDamage(amount: number, source: DamageSource_): number;
        abstract getLastHurtByMob(): Internal.LivingEntity;
        isInWaterOrBubble(): boolean;
        decreaseAirSupply(arg0: number): number;
        updateFluidHeightAndDoFluidPushing(): void;
        spawnParticles(arg0: Internal.ItemStack_, arg1: number): void;
        handler$cil001$dsurround$playStepSound(pos: BlockPos_, state: Internal.BlockState_, ci: Internal.CallbackInfo_): void;
        getPortalCooldown(): number;
        getItem(): Internal.ItemStack;
        causeFallDamage(arg0: number, arg1: number, arg2: DamageSource_): boolean;
        releaseUsingItem(): void;
        getPosition(arg0: number): Vec3d;
        removeFreeWill(): void;
        removeWhenFarAway(arg0: number): boolean;
        wait(arg0: number): void;
        isIgnoringBlockTriggers(): boolean;
        setRecordPlayingNearby(arg0: BlockPos_, arg1: boolean): void;
        isInRain(): boolean;
        getHandHoldingItemAngle(arg0: Internal.Item_): Vec3d;
        hasItemInSlot(arg0: Internal.EquipmentSlot_): boolean;
        canUpdate(arg0: boolean): void;
        getEyeInFluidType(): Internal.FluidType;
        distanceToSqr(arg0: Vec3d_): number;
        syncComponent(key: Internal.ComponentKey_<any>): void;
        modifyAttached<A>(type: Internal.AttachmentType_<A>, modifier: Internal.UnaryOperator_<A>): A;
        isSteppingCarefully(): boolean;
        getSoundFromFluidType(arg0: Internal.FluidType_, arg1: Internal.SoundAction_): Internal.SoundEvent;
        "spawnAtLocation(net.minecraft.world.item.ItemStack,float)"(arg0: Internal.ItemStack_, arg1: number): Internal.ItemEntity;
        addAdditionalSaveData(arg0: Internal.CompoundTag_): void;
        getBlockX(): number;
        /**
         * @deprecated
        */
        getLightLevelDependentMagicValue(): number;
        isFallFlying(): boolean;
        getEncodeId(): string;
        setRemainingPersistentAngerTime(arg0: number): void;
        getY(arg0: number): number;
        getMaxHeadXRot(): number;
        getNbt(): Internal.CompoundTag;
        setInvisible(arg0: boolean): void;
        static checkPolarBearSpawnRules(arg0: Internal.EntityType_<Internal.PolarBear>, arg1: Internal.LevelAccessor_, arg2: Internal.MobSpawnType_, arg3: BlockPos_, arg4: Internal.RandomSource_): boolean;
        canEnterPose(arg0: Internal.Pose_): boolean;
        getEffect(arg0: Internal.MobEffect_): Internal.MobEffectInstance;
        setTotalMovementSpeedMultiplier(speed: number): void;
        setHealth(arg0: number): void;
        handler$deo000$eidolon$eidolonrepraised$canAttack(arg0: Internal.LivingEntity_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        attack(arg0: DamageSource_, arg1: number): boolean;
        getBlockSpeedFactor(): number;
        modifyExpressionValue$cpi002$mna$elytraOverride(arg0: boolean): boolean;
        onInsideBubbleColumn(arg0: boolean): void;
        getEyePosition(): Vec3d;
        getEyeHeight(): number;
        onOffspringSpawnedFromEgg(arg0: Internal.Player_, arg1: Internal.Mob_): void;
        setDiscardFriction(arg0: boolean): void;
        hasPassenger(arg0: Internal.Predicate_<Internal.Entity>): boolean;
        getYaw(): number;
        swing(arg0: Internal.InteractionHand_, arg1: boolean): void;
        getUsedItemHand(): Internal.InteractionHand;
        setDefaultMovementSpeed(speed: number): void;
        onEffectAdded(arg0: Internal.MobEffectInstance_, arg1: Internal.Entity_): void;
        canAttackType(arg0: Internal.EntityType_<any>): boolean;
        getCapability<T>(arg0: Internal.Capability_<T>, arg1: Internal.Direction_): Internal.LazyOptional<T>;
        canEntityBeSeen(entity: Internal.LivingEntity_): boolean;
        getBrain(): Internal.Brain<any>;
        dsurround_isJumping(): boolean;
        setCustomNameVisible(arg0: boolean): void;
        isAlliedTo(arg0: Internal.Team_): boolean;
        handler$cpk000$mna$playSound(arg0: Internal.SoundEvent_, arg1: number, arg2: number, arg3: Internal.CallbackInfo_): void;
        getAttachedOrCreate<A>(type: Internal.AttachmentType_<A>): A;
        canFireProjectileWeapon(arg0: Internal.ProjectileWeaponItem_): boolean;
        getControllingPassenger(): Internal.LivingEntity;
        getScriptType(): Internal.ScriptType;
        shouldDiscardFriction(): boolean;
        startRiding(arg0: Internal.Entity_): boolean;
        saveWithoutId(arg0: Internal.CompoundTag_): Internal.CompoundTag;
        getForward(): Vec3d;
        serializeNBT(): Internal.Tag;
        getDamageAfterMagicAbsorb(arg0: DamageSource_, arg1: number): number;
        setFeetArmorItem(item: Internal.ItemStack_): void;
        getId(): number;
        canBeHitByProjectile(): boolean;
        getRecipientsForComponentSync(): Internal.Iterable<any>;
        handler$dkf000$spectrum$dropStack(stack: Internal.ItemStack_, cir: Internal.CallbackInfoReturnable_<any>): void;
        getEyeY(): number;
        skipDropExperience(): void;
        fabric_readAttachmentsFromNbt(nbt: Internal.CompoundTag_): void;
        getBoundingBox(): Internal.AABB;
        isInWaterOrRain(): boolean;
        setItemSlot(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): void;
        modify$dlf001$spectrum$applyExuberance(originalXP: number): number;
        handler$dlf000$spectrum$setSprinting(sprinting: boolean, ci: Internal.CallbackInfo_): void;
        tryAddSoulSpeed(): void;
        equals(arg0: any): boolean;
        handler$cpk000$mna$canEnterPose(arg0: Internal.Pose_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        getViewYRot(arg0: number): number;
        getSwimSound(): Internal.SoundEvent;
        getLastArmorItem(arg0: Internal.EquipmentSlot_): Internal.ItemStack;
        dismountsUnderwater(): boolean;
        isAffectedByPotions(): boolean;
        playerTouch(arg0: Internal.Player_): void;
        addTag(arg0: string): boolean;
        getEyeHeight(arg0: Internal.Pose_): number;
        getAddEntityPacket(): Internal.Packet<Internal.ClientGamePacketListener>;
        doWaterSplashEffect(): void;
        static getEquipmentForSlot(arg0: Internal.EquipmentSlot_, arg1: number): Internal.Item;
        isWithinRestriction(arg0: BlockPos_): boolean;
        getTeam(): Internal.Team;
        setTicksFrozen(arg0: number): void;
        getUseItem(): Internal.ItemStack;
        getMyRidingOffset(): number;
        handler$dlf000$spectrum$addStatusEffect(effect: Internal.MobEffectInstance_, source: Internal.Entity_, cir: Internal.CallbackInfoReturnable_<any>): void;
        dismountTo(arg0: number, arg1: number, arg2: number): void;
        getFlyingSpeed(): number;
        hasCustomName(): boolean;
        getSwimAmount(arg0: number): number;
        isLiving(): boolean;
        getX(): number;
        dropAllDeathLoot(arg0: DamageSource_): void;
        isVehicle(): boolean;
        static transfer(original: Internal.AttachmentTarget_, target: Internal.AttachmentTarget_, isDeath: boolean): void;
        tickLeash(): void;
        spawnAtLocation(arg0: Internal.ItemStack_): Internal.ItemEntity;
        customServerAiStep(): void;
        mergeNbt(tag: Internal.CompoundTag_): Internal.Entity;
        handler$cpf000$mna$onClimbable(arg0: Internal.CallbackInfoReturnable_<any>): void;
        thunderHit(arg0: Internal.ServerLevel_, arg1: Internal.LightningBolt_): void;
        setIsInPowderSnow(arg0: boolean): void;
        doEnchantDamageEffects(arg0: Internal.LivingEntity_, arg1: Internal.Entity_): void;
        setCustomName(arg0: net.minecraft.network.chat.Component_): void;
        handleNetherPortal(): void;
        getTeamId(): string;
        canBeRiddenUnderFluidType(arg0: Internal.FluidType_, arg1: Internal.Entity_): boolean;
        wthit_getTypeName(): net.minecraft.network.chat.Component;
        setStingerCount(arg0: number): void;
        getMaxHeadYRot(): number;
        getBoundingBoxForPose(arg0: Internal.Pose_): Internal.AABB;
        isCustomNameVisible(): boolean;
        isSupportedBy(arg0: BlockPos_): boolean;
        followLeashSpeed(): number;
        getPistonPushReaction(): Internal.PushReaction;
        shouldRiderSit(): boolean;
        handler$dlf000$spectrum$checkForTotemPendant(source: DamageSource_, cir: Internal.CallbackInfoReturnable_<any>): void;
        lookAt(arg0: Internal.EntityAnchorArgument$Anchor_, arg1: Vec3d_): void;
        hurtCurrentlyUsedShield(arg0: number): void;
        triggerItemUseEffects(arg0: Internal.ItemStack_, arg1: number): void;
        getLootTableSeed(): number;
        isInFluidType(arg0: Internal.FluidType_): boolean;
        getFluidMotionScale(arg0: Internal.FluidType_): number;
        getMotionX(): number;
        "onSyncedDataUpdated(java.util.List)"(arg0: Internal.List_<Internal.SynchedEntityData$DataValue<any>>): void;
        canBeLeashed(arg0: Internal.Player_): boolean;
        hasIndirectPassenger(arg0: Internal.Entity_): boolean;
        getEntityData(): Internal.SynchedEntityData;
        handleInsidePortal(arg0: BlockPos_): void;
        getPotionEffects(): Internal.EntityPotionEffectsJS;
        /**
         * @deprecated
        */
        jumpInLiquid(arg0: Internal.TagKey_<Internal.Fluid>): void;
        isAngryAtAllPlayers(arg0: Internal.Level_): boolean;
        absMoveTo(arg0: number, arg1: number, arg2: number): void;
        onBelowWorld(): void;
        isOnRails(): boolean;
        getAttachedOrThrow<A>(type: Internal.AttachmentType_<A>): A;
        getStingerCount(): number;
        playerDied(arg0: Internal.Player_): void;
        getFallSounds(): Internal.LivingEntity$Fallsounds;
        reapplyPosition(): void;
        getAttributeTotalValue(attribute: Internal.Attribute_): number;
        getDimensionChangingDelay(): number;
        setLivingEntityFlag(arg0: number, arg1: boolean): void;
        getWaterSlowDown(): number;
        static isBrightEnoughToSpawn(arg0: Internal.BlockAndTintGetter_, arg1: BlockPos_): boolean;
        createNavigation(arg0: Internal.Level_): Internal.PathNavigation;
        setYaw(arg0: number): void;
        getPickRadius(): number;
        isPathFinding(): boolean;
        isRemoved(): boolean;
        teleportToWithTicket(arg0: number, arg1: number, arg2: number): void;
        spawnAnim(): void;
        getJumpBoostPower(): number;
        fillCrashReportCategory(arg0: Internal.CrashReportCategory_): void;
        handler$cpe000$mna$jumpInLiquid(arg0: Internal.TagKey_<any>, arg1: Internal.CallbackInfo_): void;
        self(): Internal.Entity;
        refreshDimensions(): void;
        "spawnAtLocation(net.minecraft.world.level.ItemLike)"(arg0: Internal.ItemLike_): Internal.ItemEntity;
        "getAttributeValue(net.minecraft.world.entity.ai.attributes.Attribute)"(arg0: Internal.Attribute_): number;
        "isHolding(net.minecraft.world.item.Item)"(arg0: Internal.Item_): boolean;
        setShiftKeyDown(arg0: boolean): void;
        getEyePosition(arg0: number): Vec3d;
        getPassengers(): Internal.EntityArrayList;
        getRiddenInput(arg0: Internal.Player_, arg1: Vec3d_): Vec3d;
        calculateUpVector(arg0: number, arg1: number): Vec3d;
        handler$dlf000$spectrum$TriggerArmorWithHitEffect(source: DamageSource_, amount: number, cir: Internal.CallbackInfoReturnable_<any>): void;
        spawnSprintParticle(): void;
        getMaxHeightFluidType(): Internal.FluidType;
        getZ(): number;
        checkSupportingBlock(arg0: boolean, arg1: Vec3d_): void;
        dropEquipment(): void;
        shouldRemoveSoulSpeed(arg0: Internal.BlockState_): boolean;
        teleportTo(arg0: number, arg1: number, arg2: number): void;
        getAttributeBaseValue(arg0: Internal.Holder_<Internal.Attribute>): number;
        getServer(): Internal.MinecraftServer;
        getExperienceReward(): number;
        getFirstPassenger(): Internal.Entity;
        heal(arg0: number): void;
        getSpawnType(): Internal.MobSpawnType;
        setLastHurtMob(arg0: Internal.Entity_): void;
        getRelativePortalPosition(arg0: Internal.Direction$Axis_, arg1: Internal.BlockUtil$FoundRectangle_): Vec3d;
        abstract setLastHurtByMob(arg0: Internal.LivingEntity_): void;
        interact(arg0: Internal.Player_, arg1: Internal.InteractionHand_): InteractionResult;
        removePassenger(arg0: Internal.Entity_): void;
        getDismountLocationForPassenger(arg0: Internal.LivingEntity_): Vec3d;
        invokeSetLevel(arg0: Internal.Level_): void;
        checkSlowFallDistance(): void;
        tickDeath(): void;
        updateInWaterStateAndDoWaterCurrentPushing(): void;
        canStandOnFluid(arg0: Internal.FluidState_): boolean;
        addPassenger(arg0: Internal.Entity_): void;
        setFabricBalmData(arg0: Internal.CompoundTag_): void;
        touchingUnloadedChunk(): boolean;
        modifyAttribute(attribute: Internal.Attribute_, identifier: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        getLookAngle(): Vec3d;
        handler$cpe000$mna$canStandOnFluid(arg0: Internal.FluidState_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        getAmbientSoundInterval(): number;
        setArrowCount(arg0: number): void;
        getPermissionLevel(): number;
        getMotionZ(): number;
        nextStep(): number;
        isPersistenceRequired(): boolean;
        isInvisible(): boolean;
        is(arg0: Internal.Entity_): boolean;
        getBedOrientation(): Internal.Direction;
        /**
         * @deprecated
        */
        getBlockStateOnLegacy(): Internal.BlockState;
        ejectPassengers(): void;
        removeEffect(arg0: Internal.MobEffect_): boolean;
        getProfile(): Internal.GameProfile;
        setInLove(arg0: Internal.Player_): void;
        isDeadOrDying(): boolean;
        setHeadArmorItem(item: Internal.ItemStack_): void;
        static setViewScale(arg0: number): void;
        take(arg0: Internal.Entity_, arg1: number): void;
        setLevelCallback(arg0: Internal.EntityInLevelCallback_): void;
        getLookControl(): Internal.LookControl;
        pushEntities(): void;
        playSound(arg0: Internal.SoundEvent_, arg1: number, arg2: number): void;
        "areCapsCompatible(net.minecraftforge.common.capabilities.CapabilityDispatcher)"(arg0: Internal.CapabilityDispatcher_): boolean;
        abstract canAttack(arg0: Internal.LivingEntity_): boolean;
        static getSpeedUpSecondsWhenFeeding(arg0: number): number;
        getLastHandItem(arg0: Internal.EquipmentSlot_): Internal.ItemStack;
        getOffHandItem(): Internal.ItemStack;
        startSeenByPlayer(arg0: Internal.ServerPlayer_): void;
        isOnScoreboardTeam(teamId: string): boolean;
        startUsingItem(arg0: Internal.InteractionHand_): void;
        position(): Vec3d;
        static getEquipmentSlotForItem(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getEquipment(slot: Internal.EquipmentSlot_): Internal.ItemStack;
        displayFireAnimation(): boolean;
        handler$deo000$eidolon$eidolonrepraised$isFallFlying(arg0: Internal.CallbackInfoReturnable_<any>): void;
        getRopeHoldPosition(arg0: number): Vec3d;
        copyPosition(arg0: Internal.Entity_): void;
        modifyExpressionValue$cpi000$mna$eytraValidOverride(arg0: boolean): boolean;
        onAddedToWorld(): void;
        "hasPassenger(net.minecraft.world.entity.Entity)"(arg0: Internal.Entity_): boolean;
        isCrouching(): boolean;
        "getAttributeBaseValue(net.minecraft.world.entity.ai.attributes.Attribute)"(attribute: Internal.Attribute_): number;
        onLeaveCombat(): void;
        handler$cpe000$mna$isAffectedByFluids(arg0: Internal.CallbackInfoReturnable_<any>): void;
        setY(y: number): void;
        getAttributeValue(arg0: Internal.Attribute_): number;
        getFeetBlockState(): Internal.BlockState;
        "breakItem(net.minecraft.world.item.ItemStack)"(arg0: Internal.ItemStack_): void;
        isWithinRestriction(): boolean;
        changeDimension(arg0: Internal.ServerLevel_, arg1: Internal.ITeleporter_): Internal.Entity;
        isHorizontalCollisionMinor(arg0: Vec3d_): boolean;
        positionRider(arg0: Internal.Entity_): void;
        baseTick(): void;
        broadcastToPlayer(arg0: Internal.ServerPlayer_): boolean;
        modify$zbj001$additionalentityattributes$additionalEntityAttributes$modifyExperience(originalXP: number): number;
        setSharedFlag(arg0: number, arg1: boolean): void;
        getSleepingPos(): Internal.Optional<BlockPos>;
        getEyeHeightAccess(arg0: Internal.Pose_, arg1: Internal.EntityDimensions_): number;
        damageHeldItem(): void;
        getCustomName(): net.minecraft.network.chat.Component;
        getClass(): typeof any;
        "self()"(): Internal.Entity;
        isVisuallySwimming(): boolean;
        getMaxAirSupply(): number;
        canTrample(arg0: Internal.BlockState_, arg1: BlockPos_, arg2: number): boolean;
        wrapOperation$zoc000$supplementaries$onTravel(instance: Internal.LivingEntity_, state: Internal.FluidState_, original: Internal.Operation_<any>): boolean;
        blockUsingShield(arg0: Internal.LivingEntity_): void;
        processFlappingMovement(): void;
        setItemInHand(arg0: Internal.InteractionHand_, arg1: Internal.ItemStack_): void;
        setMaxHealth(hp: number): void;
        getFacing(): Internal.Direction;
        modify$zbj000$additionalentityattributes$additionalEntityAttributes$waterSpeed(original: number): number;
        isPassengerOfSameVehicle(arg0: Internal.Entity_): boolean;
        getBoundingBoxForCulling(): Internal.AABB;
        setAge(arg0: number): void;
        abstract getTarget(): Internal.LivingEntity;
        static collideBoundingBox(entity: Internal.Entity_, movement: Vec3d_, entityBoundingBox: Internal.AABB_, world: Internal.Level_, collisions: Internal.List_<any>): Vec3d;
        restrictTo(arg0: BlockPos_, arg1: number): void;
        isInLove(): boolean;
        trackingPosition(): Vec3d;
        getNameTagOffsetY(): number;
        isInvulnerable(): boolean;
        isInLava(): boolean;
        isInWater(): boolean;
        awardKillScore(arg0: Internal.Entity_, arg1: number, arg2: DamageSource_): void;
        finalizeSpawn(arg0: Internal.ServerLevelAccessor_, arg1: Internal.DifficultyInstance_, arg2: Internal.MobSpawnType_, arg3: Internal.SpawnGroupData_, arg4: Internal.CompoundTag_): Internal.SpawnGroupData;
        unsetRemoved(): void;
        getPickupReach(): Vec3i;
        swing(arg0: Internal.InteractionHand_): void;
        hasEffect(arg0: Internal.MobEffect_): boolean;
        getHeldItem(hand: Internal.InteractionHand_): Internal.ItemStack;
        /**
         * @deprecated
        */
        fixupDimensions(): void;
        getRootVehicle(): Internal.Entity;
        onPathfindingDone(): void;
        save(arg0: Internal.CompoundTag_): boolean;
        getLocalBoundsForPose(arg0: Internal.Pose_): Internal.AABB;
        isNoGravity(): boolean;
        curePotionEffects(arg0: Internal.ItemStack_): boolean;
        startPersistentAngerTimer(): void;
        onItemPickup(arg0: Internal.ItemEntity_): void;
        handler$dhc000$reborncore$onApplyArmorToDamage(source: DamageSource_, amount: number, cir: Internal.CallbackInfoReturnable_<any>): void;
        populateDefaultEquipmentSlots(arg0: Internal.RandomSource_, arg1: Internal.DifficultyInstance_): void;
        completeUsingItem(): void;
        resetLove(): void;
        isImmobile(): boolean;
        updateSwimming(): void;
        isHolding(arg0: Internal.Predicate_<Internal.ItemStack>): boolean;
        getSpeed(): number;
        abstract getCachedFeetBlockState(): Internal.BlockState;
        shouldInformAdmins(): boolean;
        canFluidExtinguish(arg0: Internal.FluidType_): boolean;
        rideTick(): void;
        wait(): void;
        dsurround_setPotionSwirlColor(color: number): void;
        getUuid(): Internal.UUID;
        setOffHandItem(item: Internal.ItemStack_): void;
        spawn(): void;
        setNoAi(arg0: boolean): void;
        handler$dke000$spectrum$isSubmergedIn(fluidTag: Internal.TagKey_<any>, cir: Internal.CallbackInfoReturnable_<any>): void;
        teleportTo(arg0: Internal.ServerLevel_, arg1: number, arg2: number, arg3: number, arg4: Internal.Set_<Internal.RelativeMovement>, arg5: number, arg6: number): boolean;
        fabric_writeAttachmentsToNbt(nbt: Internal.CompoundTag_): void;
        shouldShowName(): boolean;
        markHurt(): void;
        getArmorSlots(): Internal.Iterable<Internal.ItemStack>;
        canPickUpLoot(): boolean;
        kill(): void;
        onEnterCombat(): void;
        updateNavigationRegistration(): void;
        playSwimSound(arg0: number): void;
        animateHurt(arg0: number): void;
        syncComponent(key: Internal.ComponentKey_<any>, packetWriter: Internal.ComponentPacketWriter_): void;
        modifyReturnValue$zbi000$additionalentityattributes$getMaxAir(original: number): number;
        static resetForwardDirectionOfRelativePortalPosition(arg0: Vec3d_): Vec3d;
        brainProvider(): Internal.Brain$Provider<any>;
        getJumpPower(): number;
        registerGoals(): void;
        hasRestriction(): boolean;
        getHeadArmorItem(): Internal.ItemStack;
        deserializeNBT(arg0: Internal.Tag_): void;
        positionRider(arg0: Internal.Entity_, arg1: Internal.Entity$MoveFunction_): void;
        redirect$fab000$moonlight$fixSpawnAnimX(instance: Internal.Mob_, v: number): number;
        removeEffectParticles(): void;
        revive(): void;
        getBbWidth(): number;
        isEyeInFluidType(arg0: Internal.FluidType_): boolean;
        addDeltaMovement(arg0: Vec3d_): void;
        localvar$egc000$zeldamod$inject3(arg0: number): number;
        getHurtSound(arg0: DamageSource_): Internal.SoundEvent;
        canDrownInFluidType(arg0: Internal.FluidType_): boolean;
        "getName()"(): net.minecraft.network.chat.Component;
        mirror(arg0: Internal.Mirror_): number;
        canUpdate(): boolean;
        knockback(arg0: number, arg1: number, arg2: number): void;
        getTypeName(): net.minecraft.network.chat.Component;
        getTicksRequiredToFreeze(): number;
        shouldDespawnInPeaceful(): boolean;
        getVisibilityPercent(arg0: Internal.Entity_): number;
        getMaxSpawnClusterSize(): number;
        doAutoAttackOnTouch(arg0: Internal.LivingEntity_): void;
        getUsername(): string;
        getInLoveTime(): number;
        getPrimaryStepSoundBlockPos(arg0: BlockPos_): BlockPos;
        move(arg0: Internal.MoverType_, arg1: Vec3d_): void;
        lithiumOnBlockCacheSet(newState: Internal.BlockState_): void;
        onRemovedFromWorld(): void;
        getCapability<T>(arg0: Internal.Capability_<T>): Internal.LazyOptional<T>;
        isPickable(): boolean;
        handler$dke000$spectrum$isSubmergedInWater(cir: Internal.CallbackInfoReturnable_<any>): void;
        isInFluidType(predicate: Internal.BiPredicate_<any, any>, forAllTypes: boolean): boolean;
        stopBeingAngry(): void;
        setYHeadRot(arg0: number): void;
        setJumping(arg0: boolean): void;
        getPickResult(): Internal.ItemStack;
        "getMainHandItem()"(): Internal.ItemStack;
        getAbsorptionAmount(): number;
        getRandomY(): number;
        onEffectRemoved(arg0: Internal.MobEffectInstance_): void;
        getDisplayName(): net.minecraft.network.chat.Component;
        getMobType(): Internal.MobType;
        travel(arg0: Vec3d_): void;
        maxhealthfix$setRestorePoint(arg0: number): void;
        getItemInHand(arg0: Internal.InteractionHand_): Internal.ItemStack;
        spectrum$isActuallyTouchingWater(): boolean;
        shouldBeSaved(): boolean;
        getFluidTypeHeight(arg0: Internal.FluidType_): number;
        fabric_hasPersistentAttachments(): boolean;
        handler$dlf000$spectrum$applyDisarmingEnchantment(source: DamageSource_, amount: number, cir: Internal.CallbackInfoReturnable_<any>): void;
        "areCapsCompatible(net.minecraftforge.common.capabilities.CapabilityProvider)"(arg0: Internal.CapabilityProvider_<Internal.Entity>): boolean;
        hurtHelmet(arg0: DamageSource_, arg1: number): void;
        removeTag(arg0: string): boolean;
        isHoldingInAnyHand(i: Internal.Ingredient_): boolean;
        /**
         * @deprecated
        */
        getFluidHeight(arg0: Internal.TagKey_<Internal.Fluid>): number;
        canSpawnSoulSpeedParticle(): boolean;
        getPersistentAngerTarget(): Internal.UUID;
        notifyAll(): void;
        aiStep(): void;
        getPassengersRidingOffset(): number;
        setAttributeBaseValue(attribute: Internal.Attribute_, value: number): void;
        "isInFluidType(java.util.function.BiPredicate)"(arg0: Internal.BiPredicate_<Internal.FluidType, number>): boolean;
        distanceToEntitySqr(arg0: Internal.Entity_): number;
        isFrame(): boolean;
        broadcastBreakEvent(arg0: Internal.InteractionHand_): void;
        setLegsArmorItem(item: Internal.ItemStack_): void;
        discard(): void;
        sendSystemMessage(arg0: net.minecraft.network.chat.Component_): void;
        acceptsSuccess(): boolean;
        setNoGravity(arg0: boolean): void;
        getUseItemRemainingTicks(): number;
        getIndirectPassengers(): Internal.Iterable<any>;
        attackable(): boolean;
        createCommandSourceStack(): Internal.CommandSourceStack;
        getNavigation(): Internal.PathNavigation;
        isControlledByLocalInstance(): boolean;
        isMonster(): boolean;
        getLoveCause(): Internal.ServerPlayer;
        getLastClimbablePos(): Internal.Optional<BlockPos>;
        getEatingSound(arg0: Internal.ItemStack_): Internal.SoundEvent;
        getPerceivedTargetDistanceSquareForMeleeAttack(arg0: Internal.LivingEntity_): number;
        getHorizontalFacing(): Internal.Direction;
        setId(arg0: number): void;
        onSyncedDataUpdated(arg0: Internal.List_<Internal.SynchedEntityData$DataValue<any>>): void;
        getType(): string;
        static checkAnimalSpawnRules(arg0: Internal.EntityType_<Internal.Animal>, arg1: Internal.LevelAccessor_, arg2: Internal.MobSpawnType_, arg3: BlockPos_, arg4: Internal.RandomSource_): boolean;
        isDamageSourceBlocked(arg0: DamageSource_): boolean;
        getLightProbePosition(arg0: number): Vec3d;
        getActiveEffectsMap(): Internal.Map<Internal.MobEffect, Internal.MobEffectInstance>;
        onEquipItem(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_): void;
        checkDespawn(): void;
        getWalkTargetValue(arg0: BlockPos_, arg1: Internal.LevelReader_): number;
        lookAt(arg0: Internal.Entity_, arg1: number, arg2: number): void;
        setHeldItem(hand: Internal.InteractionHand_, item: Internal.ItemStack_): void;
        equipItemIfPossible(arg0: Internal.ItemStack_): Internal.ItemStack;
        playHurtSound(arg0: DamageSource_): void;
        onSyncedDataUpdated(arg0: Internal.EntityDataAccessor_<any>): void;
        isActuallyReallyBlocking(): boolean;
        setPersistentAngerTarget(arg0: Internal.UUID_): void;
        lerpHeadTo(arg0: number, arg1: number): void;
        canDisableShield(): boolean;
        doesEmitEquipEvent(arg0: Internal.EquipmentSlot_): boolean;
        setMotionX(x: number): void;
        shouldStayCloseToLeashHolder(): boolean;
        getHandSlots(): Internal.Iterable<Internal.ItemStack>;
        getMovementEmission(): Internal.Entity$MovementEmission;
        distanceToEntity(arg0: Internal.Entity_): number;
        wait(arg0: number, arg1: number): void;
        getTeamColor(): number;
        lithiumSetClimbingMobCachingSectionUpdateBehavior(listenForCachedBlockChanges: boolean): void;
        setNbt(nbt: Internal.CompoundTag_): void;
        "isInFluidType(net.minecraftforge.fluids.FluidType)"(arg0: Internal.FluidType_): boolean;
        checkSpawnObstruction(arg0: Internal.LevelReader_): boolean;
        extinguish(): void;
        getRestrictRadius(): number;
        moveTo(arg0: Vec3d_): void;
        isColliding(arg0: BlockPos_, arg1: Internal.BlockState_): boolean;
        updateInWaterStateAndDoFluidPushing(): boolean;
        "swing(net.minecraft.world.InteractionHand)"(arg0: Internal.InteractionHand_): void;
        dsurround_setEffectInfo(info: Internal.EntityEffectInfo_): void;
        getRegisteredNavigation(): Internal.PathNavigation;
        tickEffects(): void;
        isInvertedHealAndHarm(): boolean;
        canHoldItem(arg0: Internal.ItemStack_): boolean;
        killedEntity(arg0: Internal.ServerLevel_, arg1: Internal.LivingEntity_): boolean;
        getAttachedOrElse<A>(type: Internal.AttachmentType_<A>, defaultValue: A): A;
        handler$dlf000$spectrum$applyInexorableEffects(ci: Internal.CallbackInfo_): void;
        getClassification(arg0: boolean): Internal.MobCategory;
        isFreezing(): boolean;
        runCommand(command: string): number;
        isStanding(): boolean;
        setGuaranteedDrop(arg0: Internal.EquipmentSlot_): void;
        setSharedFlagOnFire(arg0: boolean): void;
        set defaultMovementSpeedMultiplier(speed: number)
        get suppressingBounce(): boolean
        set target(arg0: Internal.LivingEntity_)
        get onFire(): boolean
        get deathSound(): Internal.SoundEvent
        get positionCodec(): Internal.VecDeltaCodec
        set maxUpStep(arg0: number)
        get fallFlyingTicks(): number
        set xxa(arg0: number)
        set delayedLeashHolderId(arg0: number)
        get shiftKeyDown(): boolean
        set UUID(arg0: Internal.UUID_)
        set motionZ(z: number)
        get blockY(): number
        get spectator(): boolean
        get alwaysExperienceDropper(): boolean
        set mainHandItem(item: Internal.ItemStack_)
        get persistentData(): Internal.CompoundTag
        get health(): number
        get maxHealth(): number
        get registeredToWorld(): boolean
        set aggressive(arg0: boolean)
        set removed(arg0: Internal.Entity$RemovalReason_)
        get inWaterRainOrBubble(): boolean
        get removalReason(): Internal.Entity$RemovalReason
        set level(arg0: Internal.Level_)
        set boundingBox(arg0: Internal.AABB_)
        get ambientCreature(): boolean
        set zza(arg0: number)
        get block(): Internal.BlockContainerJS
        get name(): net.minecraft.network.chat.Component
        get controlledVehicle(): Internal.Entity
        get armorValue(): number
        get killCredit(): Internal.LivingEntity
        get componentContainer(): Internal.ComponentContainer
        get defaultLootTable(): ResourceLocation
        get autoSpinAttack(): boolean
        get remainingFireTicks(): number
        get maxFallDistance(): number
        get ticksFrozen(): number
        get voicePitch(): number
        set statusMessage(message: net.minecraft.network.chat.Component_)
        set sleepingPos(arg0: BlockPos_)
        get descending(): boolean
        get headRotSpeed(): number
        get YHeadRot(): number
        set absorptionAmount(arg0: number)
        get sunBurnTick(): boolean
        get affectedByFluids(): boolean
        get ambientSound(): Internal.SoundEvent
        set deltaMovement(arg0: Vec3d_)
        get baby(): boolean
        get glowing(): boolean
        get leashOffset(): Vec3d
        get attackable(): boolean
        get underWater(): boolean
        get swimHighSpeedSplashSound(): Internal.SoundEvent
        get leashHolder(): Internal.Entity
        get sensing(): Internal.Sensing
        get legsArmorItem(): Internal.ItemStack
        get selfAndPassengers(): Internal.Stream<any>
        get deltaMovement(): Vec3d
        set secondsOnFire(arg0: number)
        get "displayName()"(): net.minecraft.network.chat.Component
        get lootTable(): ResourceLocation
        get ticksUsingItem(): number
        get arrowCount(): number
        get moveControl(): Internal.MoveControl
        set standing(arg0: boolean)
        get defaultMovementSpeed(): number
        get peacefulCreature(): boolean
        set onGround(arg0: boolean)
        get firstTick(): boolean
        get lastHurtByMobTimestamp(): number
        get vehicle(): Internal.Entity
        get effectiveAi(): boolean
        set spawnCancelled(arg0: boolean)
        get stringUuid(): string
        set swimming(arg0: boolean)
        get mainArm(): Internal.HumanoidArm
        get rotationVector(): Internal.Vec2
        get hurtDir(): number
        get sprinting(): boolean
        get motionY(): number
        get offhandItem(): Internal.ItemStack
        get lastHurtMob(): Internal.LivingEntity
        get addedToWorld(): boolean
        get lastDamageSource(): DamageSource
        get soundSource(): Internal.SoundSource
        set noActionTime(arg0: number)
        set movementSpeedAddition(speed: number)
        get pose(): Internal.Pose
        get remainingPersistentAngerTime(): number
        get restrictCenter(): BlockPos
        get leftHanded(): boolean
        set z(z: number)
        get y(): number
        get blocking(): boolean
        /**
         * @deprecated
        */
        get pushedByFluid(): boolean
        get armorCoverPercentage(): number
        get airSupply(): number
        get player(): boolean
        get animal(): boolean
        get motionDirection(): Internal.Direction
        get fabricBalmData(): Internal.CompoundTag
        get commandSenderWorld(): Internal.Level
        get totalMovementSpeed(): number
        get fireImmuneTicks(): number
        get attributes(): Internal.AttributeMap
        get spawnCancelled(): boolean
        set inLoveTime(arg0: number)
        get swimming(): boolean
        set sprinting(arg0: boolean)
        set x(x: number)
        get portalWaitTime(): number
        get blockStateOn(): Internal.BlockState
        get fluidJumpThreshold(): number
        set airSupply(arg0: number)
        get onPos(): BlockPos
        get undead(): boolean
        get blockPosBelowThatAffectsMyMovement(): BlockPos
        get stepHeight(): number
        set registeredToWorld(navigation: Internal.PathNavigation_)
        get sleeping(): boolean
        get dismountPoses(): Internal.ImmutableList<Internal.Pose>
        get lastHurtMobTimestamp(): number
        set remainingFireTicks(arg0: number)
        /**
         * @deprecated
        */
        get onPosLegacy(): BlockPos
        set pos(arg0: Vec3d_)
        set canPickUpLoot(arg0: boolean)
        get mainHandItem(): Internal.ItemStack
        set silent(arg0: boolean)
        set leftHanded(arg0: boolean)
        get swimSplashSound(): Internal.SoundEvent
        get activeEffects(): Internal.Collection<Internal.MobEffectInstance>
        get onPortalCooldown(): boolean
        set pitch(arg0: number)
        get multipartEntity(): boolean
        get parts(): Internal.PartEntity<any>[]
        get usingItem(): boolean
        get alwaysTicking(): boolean
        get forgePersistentData(): Internal.CompoundTag
        set invulnerable(arg0: boolean)
        get inFluidType(): boolean
        set glowing(arg0: boolean)
        get alive(): boolean
        get bbHeight(): number
        get tags(): Internal.Set<string>
        get lastAttacker(): Internal.LivingEntity
        get percentFrozen(): number
        set portalCooldown(arg0: number)
        set position(block: Internal.BlockContainerJS_)
        get leashed(): boolean
        get soundVolume(): number
        set pose(arg0: Internal.Pose_)
        get reachDistance(): number
        get entityType(): Internal.EntityType<any>
        get waterCreature(): boolean
        set lastHurtByPlayer(arg0: Internal.Player_)
        get "server()"(): Internal.MinecraftServer
        get pushable(): boolean
        set YBodyRot(arg0: number)
        set motionY(y: number)
        get angry(): boolean
        set chestArmorItem(item: Internal.ItemStack_)
        get passenger(): boolean
        get sensitiveToWater(): boolean
        get jumpControl(): Internal.JumpControl
        get flapping(): boolean
        get feetArmorItem(): Internal.ItemStack
        get viewScale(): number
        get visualRotationYInDegrees(): number
        set speed(arg0: number)
        get discrete(): boolean
        get level(): Internal.Level
        get combatTracker(): Internal.CombatTracker
        get noAi(): boolean
        get chestArmorItem(): Internal.ItemStack
        get blockJumpFactor(): number
        get fullyFrozen(): boolean
        get inWall(): boolean
        get meleeAttackReferencePosition(): Vec3d
        get allSlots(): Internal.Iterable<Internal.ItemStack>
        get scale(): number
        get suppressingSlidingDownLadder(): boolean
        get blockZ(): number
        get silent(): boolean
        get pitch(): number
        get random(): Internal.RandomSource
        get passengersAndSelf(): Internal.Stream<any>
        get age(): number
        get noActionTime(): number
        get visuallyCrawling(): boolean
        get aggressive(): boolean
        set yya(arg0: number)
        set baby(arg0: boolean)
        get lastHurtByMob(): Internal.LivingEntity
        get inWaterOrBubble(): boolean
        get portalCooldown(): number
        get item(): Internal.ItemStack
        get ignoringBlockTriggers(): boolean
        get inRain(): boolean
        get eyeInFluidType(): Internal.FluidType
        get steppingCarefully(): boolean
        get blockX(): number
        /**
         * @deprecated
        */
        get lightLevelDependentMagicValue(): number
        get fallFlying(): boolean
        get encodeId(): string
        set remainingPersistentAngerTime(arg0: number)
        get maxHeadXRot(): number
        get nbt(): Internal.CompoundTag
        set invisible(arg0: boolean)
        set totalMovementSpeedMultiplier(speed: number)
        set health(arg0: number)
        get blockSpeedFactor(): number
        get eyePosition(): Vec3d
        get eyeHeight(): number
        set discardFriction(arg0: boolean)
        get yaw(): number
        get usedItemHand(): Internal.InteractionHand
        set defaultMovementSpeed(speed: number)
        get brain(): Internal.Brain<any>
        set customNameVisible(arg0: boolean)
        get controllingPassenger(): Internal.LivingEntity
        get scriptType(): Internal.ScriptType
        get forward(): Vec3d
        set feetArmorItem(item: Internal.ItemStack_)
        get id(): number
        get recipientsForComponentSync(): Internal.Iterable<any>
        get eyeY(): number
        get boundingBox(): Internal.AABB
        get inWaterOrRain(): boolean
        get swimSound(): Internal.SoundEvent
        get affectedByPotions(): boolean
        get addEntityPacket(): Internal.Packet<Internal.ClientGamePacketListener>
        get team(): Internal.Team
        set ticksFrozen(arg0: number)
        get useItem(): Internal.ItemStack
        get myRidingOffset(): number
        get flyingSpeed(): number
        get living(): boolean
        get x(): number
        get vehicle(): boolean
        set isInPowderSnow(arg0: boolean)
        set customName(arg0: net.minecraft.network.chat.Component_)
        get teamId(): string
        set stingerCount(arg0: number)
        get maxHeadYRot(): number
        get customNameVisible(): boolean
        get pistonPushReaction(): Internal.PushReaction
        get lootTableSeed(): number
        get motionX(): number
        get entityData(): Internal.SynchedEntityData
        get potionEffects(): Internal.EntityPotionEffectsJS
        get onRails(): boolean
        get stingerCount(): number
        get fallSounds(): Internal.LivingEntity$Fallsounds
        get dimensionChangingDelay(): number
        get waterSlowDown(): number
        set yaw(arg0: number)
        get pickRadius(): number
        get pathFinding(): boolean
        get removed(): boolean
        get jumpBoostPower(): number
        set shiftKeyDown(arg0: boolean)
        get passengers(): Internal.EntityArrayList
        get maxHeightFluidType(): Internal.FluidType
        get z(): number
        get server(): Internal.MinecraftServer
        get experienceReward(): number
        get firstPassenger(): Internal.Entity
        get spawnType(): Internal.MobSpawnType
        set lastHurtMob(arg0: Internal.Entity_)
        set lastHurtByMob(arg0: Internal.LivingEntity_)
        set fabricBalmData(arg0: Internal.CompoundTag_)
        get lookAngle(): Vec3d
        get ambientSoundInterval(): number
        set arrowCount(arg0: number)
        get permissionLevel(): number
        get motionZ(): number
        get persistenceRequired(): boolean
        get invisible(): boolean
        get bedOrientation(): Internal.Direction
        /**
         * @deprecated
        */
        get blockStateOnLegacy(): Internal.BlockState
        get profile(): Internal.GameProfile
        set inLove(arg0: Internal.Player_)
        get deadOrDying(): boolean
        set headArmorItem(item: Internal.ItemStack_)
        set viewScale(arg0: number)
        set levelCallback(arg0: Internal.EntityInLevelCallback_)
        get lookControl(): Internal.LookControl
        get offHandItem(): Internal.ItemStack
        get crouching(): boolean
        set y(y: number)
        get feetBlockState(): Internal.BlockState
        get withinRestriction(): boolean
        get sleepingPos(): Internal.Optional<BlockPos>
        get customName(): net.minecraft.network.chat.Component
        get class(): typeof any
        get visuallySwimming(): boolean
        get maxAirSupply(): number
        set maxHealth(hp: number)
        get facing(): Internal.Direction
        get boundingBoxForCulling(): Internal.AABB
        set age(arg0: number)
        get target(): Internal.LivingEntity
        get inLove(): boolean
        get nameTagOffsetY(): number
        get invulnerable(): boolean
        get inLava(): boolean
        get inWater(): boolean
        get pickupReach(): Vec3i
        get rootVehicle(): Internal.Entity
        get noGravity(): boolean
        get immobile(): boolean
        get speed(): number
        get cachedFeetBlockState(): Internal.BlockState
        get uuid(): Internal.UUID
        set offHandItem(item: Internal.ItemStack_)
        set noAi(arg0: boolean)
        get armorSlots(): Internal.Iterable<Internal.ItemStack>
        get jumpPower(): number
        get headArmorItem(): Internal.ItemStack
        get bbWidth(): number
        get "name()"(): net.minecraft.network.chat.Component
        get typeName(): net.minecraft.network.chat.Component
        get ticksRequiredToFreeze(): number
        get maxSpawnClusterSize(): number
        get username(): string
        get inLoveTime(): number
        get pickable(): boolean
        set YHeadRot(arg0: number)
        set jumping(arg0: boolean)
        get pickResult(): Internal.ItemStack
        get "mainHandItem()"(): Internal.ItemStack
        get absorptionAmount(): number
        get randomY(): number
        get displayName(): net.minecraft.network.chat.Component
        get mobType(): Internal.MobType
        get persistentAngerTarget(): Internal.UUID
        get passengersRidingOffset(): number
        get frame(): boolean
        set legsArmorItem(item: Internal.ItemStack_)
        set noGravity(arg0: boolean)
        get useItemRemainingTicks(): number
        get indirectPassengers(): Internal.Iterable<any>
        get navigation(): Internal.PathNavigation
        get controlledByLocalInstance(): boolean
        get monster(): boolean
        get loveCause(): Internal.ServerPlayer
        get lastClimbablePos(): Internal.Optional<BlockPos>
        get horizontalFacing(): Internal.Direction
        set id(arg0: number)
        get type(): string
        get activeEffectsMap(): Internal.Map<Internal.MobEffect, Internal.MobEffectInstance>
        get actuallyReallyBlocking(): boolean
        set persistentAngerTarget(arg0: Internal.UUID_)
        set motionX(x: number)
        get handSlots(): Internal.Iterable<Internal.ItemStack>
        get movementEmission(): Internal.Entity$MovementEmission
        get teamColor(): number
        set nbt(nbt: Internal.CompoundTag_)
        get restrictRadius(): number
        get registeredNavigation(): Internal.PathNavigation
        get invertedHealAndHarm(): boolean
        get freezing(): boolean
        get standing(): boolean
        set guaranteedDrop(arg0: Internal.EquipmentSlot_)
        set sharedFlagOnFire(arg0: boolean)
    }
    type PolarBear_ = PolarBear;
    interface BlendingData$BiomeConsumer {
        abstract consume(arg0: number, arg1: number, arg2: Internal.Holder_<Internal.Biome>): void;
        (arg0: number, arg1: number, arg2: Internal.Holder<Internal.Biome>): void;
    }
    type BlendingData$BiomeConsumer_ = BlendingData$BiomeConsumer | ((arg0: number, arg1: number, arg2: Internal.Holder<Internal.Biome>)=> void);
    interface ProcessingInstruction extends org.w3c.dom.Node {
        abstract getFirstChild(): org.w3c.dom.Node;
        abstract getPrefix(): string;
        abstract setData(arg0: string): void;
        abstract getLastChild(): org.w3c.dom.Node;
        abstract compareDocumentPosition(arg0: org.w3c.dom.Node_): number;
        abstract cloneNode(arg0: boolean): org.w3c.dom.Node;
        abstract getTarget(): string;
        abstract getOwnerDocument(): Internal.Document;
        abstract normalize(): void;
        abstract getFeature(arg0: string, arg1: string): any;
        abstract hasChildNodes(): boolean;
        abstract getNodeName(): string;
        abstract isDefaultNamespace(arg0: string): boolean;
        abstract hasAttributes(): boolean;
        abstract setTextContent(arg0: string): void;
        abstract removeChild(arg0: org.w3c.dom.Node_): org.w3c.dom.Node;
        abstract getNodeValue(): string;
        abstract appendChild(arg0: org.w3c.dom.Node_): org.w3c.dom.Node;
        abstract isEqualNode(arg0: org.w3c.dom.Node_): boolean;
        abstract getLocalName(): string;
        abstract getNamespaceURI(): string;
        abstract insertBefore(arg0: org.w3c.dom.Node_, arg1: org.w3c.dom.Node_): org.w3c.dom.Node;
        abstract getPreviousSibling(): org.w3c.dom.Node;
        abstract isSupported(arg0: string, arg1: string): boolean;
        abstract lookupPrefix(arg0: string): string;
        abstract setPrefix(arg0: string): void;
        abstract isSameNode(arg0: org.w3c.dom.Node_): boolean;
        abstract getTextContent(): string;
        abstract getChildNodes(): Internal.NodeList;
        abstract getData(): string;
        abstract getAttributes(): Internal.NamedNodeMap;
        abstract lookupNamespaceURI(arg0: string): string;
        abstract getNodeType(): number;
        abstract setNodeValue(arg0: string): void;
        abstract getBaseURI(): string;
        abstract setUserData(arg0: string, arg1: any, arg2: Internal.UserDataHandler_): any;
        abstract getNextSibling(): org.w3c.dom.Node;
        abstract getUserData(arg0: string): any;
        abstract getParentNode(): org.w3c.dom.Node;
        abstract replaceChild(arg0: org.w3c.dom.Node_, arg1: org.w3c.dom.Node_): org.w3c.dom.Node;
        get firstChild(): org.w3c.dom.Node
        get prefix(): string
        set data(arg0: string)
        get lastChild(): org.w3c.dom.Node
        get target(): string
        get ownerDocument(): Internal.Document
        get nodeName(): string
        set textContent(arg0: string)
        get nodeValue(): string
        get localName(): string
        get namespaceURI(): string
        get previousSibling(): org.w3c.dom.Node
        set prefix(arg0: string)
        get textContent(): string
        get childNodes(): Internal.NodeList
        get data(): string
        get attributes(): Internal.NamedNodeMap
        get nodeType(): number
        set nodeValue(arg0: string)
        get baseURI(): string
        get nextSibling(): org.w3c.dom.Node
        get parentNode(): org.w3c.dom.Node
    }
    type ProcessingInstruction_ = ProcessingInstruction;
    class CustomBossEvents {
        constructor()
        getClass(): typeof any;
        save(): Internal.CompoundTag;
        toString(): string;
        notifyAll(): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        onPlayerDisconnect(arg0: Internal.ServerPlayer_): void;
        onPlayerConnect(arg0: Internal.ServerPlayer_): void;
        getIds(): Internal.Collection<ResourceLocation>;
        hashCode(): number;
        load(arg0: Internal.CompoundTag_): void;
        getEvents(): Internal.Collection<Internal.CustomBossEvent>;
        wait(): void;
        get(arg0: ResourceLocation_): Internal.CustomBossEvent;
        wait(arg0: number): void;
        remove(arg0: Internal.CustomBossEvent_): void;
        create(arg0: ResourceLocation_, arg1: net.minecraft.network.chat.Component_): Internal.CustomBossEvent;
        equals(arg0: any): boolean;
        get class(): typeof any
        get ids(): Internal.Collection<ResourceLocation>
        get events(): Internal.Collection<Internal.CustomBossEvent>
    }
    type CustomBossEvents_ = CustomBossEvents;
    class OminousSaplingBlock extends Internal.BushBlock implements Internal.EntityBlock {
        constructor(settings: Internal.BlockBehaviour$Properties_)
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getSettings(): Internal.BlockBehaviour$Properties;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        getTypeData(): Internal.CompoundTag;
        setFriction(arg0: number): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getSpeedFactor(): number;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        playerDestroy(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Player_): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Internal.Player_): Internal.ItemStack;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        newBlockEntity(pos: BlockPos_, state: Internal.BlockState_): Internal.BlockEntity;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        getRenderPropertiesInternal(): any;
        needsDynamicNodeTypeCheck(): boolean;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        setRequiresTool(v: boolean): void;
        asBlock(): Internal.Block;
        getPlant(arg0: Internal.BlockGetter_, arg1: BlockPos_): Internal.BlockState;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        puzzleslib$setItem(arg0: Internal.Item_): void;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        /**
         * @deprecated
        */
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        /**
         * @deprecated
        */
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        lychee$isTickable(): boolean;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        getTicker<T extends Internal.BlockEntity>(world: Internal.Level_, state: Internal.BlockState_, type: Internal.BlockEntityType_<T>): Internal.BlockEntityTicker<T>;
        /**
         * @deprecated
        */
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        use(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, player: Internal.Player_, hand: Internal.InteractionHand_, hit: Internal.BlockHitResult_): InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        mayPlaceOn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        spawnDestroyParticles(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_): void;
        wait(): void;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Internal.Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(shape: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        setIsRandomlyTicking(arg0: boolean): void;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        registerDefaultState(arg0: Internal.BlockState_): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        /**
         * @deprecated
        */
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        isAir(arg0: Internal.BlockState_): boolean;
        randomTick(state: Internal.BlockState_, world: Internal.ServerLevel_, pos: BlockPos_, random: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        needsDynamicBurningCheck(): boolean;
        getDescriptionId(): string;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        handler$bob000$radium$postConstruct(p_i241196_1_: Internal.BlockBehaviour$Properties_, ci: Internal.CallbackInfo_): void;
        tryDropExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: Internal.ItemStack_, arg3: Internal.IntProvider_): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        handler$eok000$particular$spawnParticles(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, random: Internal.RandomSource_, ci: Internal.CallbackInfo_): void;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        setDrops(arg0: ResourceLocation_): void;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        getBlockProperties(): Internal.BlockBehaviour$Properties;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getShapeForEachState(arg0: Internal.Function_<Internal.BlockState, Internal.VoxelShape>): Internal.ImmutableMap<Internal.BlockState, Internal.VoxelShape>;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        getFriction(): number;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        createBlockStateDefinition(arg0: Internal.StateDefinition$Builder_<Internal.Block, Internal.BlockState>): void;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        notify(): void;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        handler$dji000$spectrum$afterBreak(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        setDestroySpeed(v: number): void;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        handler$zbh000$additionalentityattributes$additionalEntityAttributes$saveBreakingPlayer(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getListener<T extends Internal.BlockEntity>(arg0: Internal.ServerLevel_, arg1: T): Internal.GameEventListener;
        arch$holder(): Internal.Holder<Internal.Block>;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        getPlantType(arg0: Internal.BlockGetter_, arg1: BlockPos_): Internal.PlantType;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): void;
        lychee$setTickable(arg0: boolean): void;
        /**
         * @deprecated
        */
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        get settings(): Internal.BlockBehaviour$Properties
        /**
         * @deprecated
        */
        get explosionResistance(): number
        get typeData(): Internal.CompoundTag
        set friction(arg0: number)
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get descriptionId(): string
        get jumpFactor(): number
        set drops(arg0: ResourceLocation_)
        set speedFactor(arg0: number)
        get blockProperties(): Internal.BlockBehaviour$Properties
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get mod(): string
        set hasCollision(arg0: boolean)
    }
    type OminousSaplingBlock_ = OminousSaplingBlock;
    abstract class Overlay implements Internal.Renderable {
        constructor()
        getClass(): typeof any;
        hashCode(): number;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        abstract render(arg0: Internal.GuiGraphics_, arg1: number, arg2: number, arg3: number): void;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        isPauseScreen(): boolean;
        get class(): typeof any
        get pauseScreen(): boolean
    }
    type Overlay_ = Overlay;
    class MineshaftStructure extends Internal.Structure {
        constructor(arg0: Internal.Structure$StructureSettings_, arg1: any_)
        static simpleCodec<S extends Internal.Structure>(arg0: Internal.Function_<Internal.Structure$StructureSettings, S>): Internal.Codec<S>;
        getClass(): typeof any;
        findGenerationPoint(arg0: Internal.Structure$GenerationContext_): Internal.Optional<Internal.Structure$GenerationStub>;
        generate(arg0: Internal.RegistryAccess_, arg1: Internal.ChunkGenerator_, arg2: Internal.BiomeSource_, arg3: Internal.RandomState_, arg4: Internal.StructureTemplateManager_, arg5: number, arg6: Internal.ChunkPos_, arg7: number, arg8: Internal.LevelHeightAccessor_, arg9: Internal.Predicate_<Internal.Holder<Internal.Biome>>): Internal.StructureStart;
        biomes(): Internal.HolderSet<Internal.Biome>;
        findValidGenerationPoint(arg0: Internal.Structure$GenerationContext_): Internal.Optional<Internal.Structure$GenerationStub>;
        step(): Internal.GenerationStep$Decoration;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        type(): Internal.StructureType<any>;
        modifiableStructureInfo(): Internal.ModifiableStructureInfo;
        static getLowestY(arg0: Internal.Structure$GenerationContext_, arg1: number, arg2: number, arg3: number, arg4: number): number;
        toString(): string;
        spawnOverrides(): Internal.Map<Internal.MobCategory, Internal.StructureSpawnOverride>;
        notifyAll(): void;
        terrainAdaptation(): Internal.TerrainAdjustment;
        static getLowestY(arg0: Internal.Structure$GenerationContext_, arg1: number, arg2: number): number;
        adjustBoundingBox(arg0: Internal.BoundingBox_): Internal.BoundingBox;
        static onTopOfChunkCenter(arg0: Internal.Structure$GenerationContext_, arg1: Internal.Heightmap$Types_, arg2: Internal.Consumer_<Internal.StructurePiecesBuilder>): Internal.Optional<Internal.Structure$GenerationStub>;
        hashCode(): number;
        static settingsCodec<S extends Internal.Structure>(arg0: Internal.RecordCodecBuilder$Instance_<S>): Internal.RecordCodecBuilder<S, Internal.Structure$StructureSettings>;
        /**
         * @deprecated
        */
        getLowestYIn5by5BoxOffset7Blocks(arg0: Internal.Structure$GenerationContext_, arg1: Internal.Rotation_): BlockPos;
        wait(): void;
        wait(arg0: number): void;
        afterPlace(arg0: Internal.WorldGenLevel_, arg1: Internal.StructureManager_, arg2: Internal.ChunkGenerator_, arg3: Internal.RandomSource_, arg4: Internal.BoundingBox_, arg5: Internal.ChunkPos_, arg6: Internal.PiecesContainer_): void;
        equals(arg0: any): boolean;
        getModifiedStructureSettings(): Internal.Structure$StructureSettings;
        get class(): typeof any
        set tingsCodec(arg0: Internal.RecordCodecBuilder$Instance_<S>)
        get modifiedStructureSettings(): Internal.Structure$StructureSettings
        static readonly CODEC: Internal.Codec<Internal.MineshaftStructure>;
    }
    type MineshaftStructure_ = MineshaftStructure;
    interface ItemFluidInfo {
        abstract getFluid(arg0: Internal.ItemStack_): Internal.Fluid;
        abstract getEmpty(): Internal.ItemStack;
        abstract getFull(arg0: Internal.Fluid_): Internal.ItemStack;
        get empty(): Internal.ItemStack
    }
    type ItemFluidInfo_ = ItemFluidInfo;
    interface Function <T, R> {
        andThen<V>(arg0: Internal.Function_<R, V>): Internal.Function<T, V>;
        abstract apply(arg0: T): R;
        compose<V>(arg0: Internal.Function_<V, T>): Internal.Function<V, R>;
        identity<T>(): Internal.Function<T, T>;
        (arg0: T): R;
    }
    type Function_<T, R> = ((arg0: T)=> R) | Function<T, R>;
    interface BiPredicate <T, U> {
        abstract test(arg0: T, arg1: U): boolean;
        or(arg0: Internal.BiPredicate_<T, U>): this;
        and(arg0: Internal.BiPredicate_<T, U>): this;
        negate(): this;
        (arg0: T, arg1: U): boolean;
    }
    type BiPredicate_<T, U> = BiPredicate<T, U> | ((arg0: T, arg1: U)=> boolean);
    class petMagmaCube extends Internal.Item {
        constructor(arg0: Internal.Item$Properties_)
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        allowContinuingBlockBreaking(player: Internal.Player_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        moonlight$addAdditionalBehavior(placementOverride: Internal.AdditionalItemPlacement_): void;
        isFireResistant(): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        moonlight$getClientAnimationExtension(): any;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        fabric_setCustomDamageHandler(handler: Internal.CustomDamageHandler_): void;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getBarColor(arg0: Internal.ItemStack_): number;
        getOrCreateDescriptionId(): string;
        getItem(): Internal.Item;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): InteractionResult;
        moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        moonlight$setClientAnimationExtension(obj: any): void;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        handler$dfl000$revelationary$getCloakedName(stack: Internal.ItemStack_, callbackInfoReturnable: Internal.CallbackInfoReturnable_<any>): void;
        isEdible(): boolean;
        getAttributeModifiers(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        cardinal_createComponents(stack: Internal.ItemStack_): Internal.ComponentContainer;
        isFoil(arg0: Internal.ItemStack_): boolean;
        "getAttributeModifiers(net.minecraft.world.entity.EquipmentSlot,net.minecraft.world.item.ItemStack)"(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        fabric_getEquipmentSlotProvider(): Internal.EquipmentSlotProvider;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        petNamer(arg0: Internal.Player_): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        owo$tab(): number;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        removeItem(arg0: Internal.Player_, arg1: Internal.ItemStack_): void;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vector3f;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        "getAttributeModifiers(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.EquipmentSlot)"(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        allowNbtUpdateAnimation(player: Internal.Player_, hand: Internal.InteractionHand_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        fabric_getCachedItemVariant(): Internal.ItemVariant;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        fabric_getCustomDamageHandler(): Internal.CustomDamageHandler;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        static getPlayerPOVHitResult(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.ClipContext$Fluid_): Internal.BlockHitResult;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        equals(arg0: any): boolean;
        setRarity(arg0: Internal.Rarity_): void;
        getRecipeRemainder(stack: Internal.ItemStack_): Internal.ItemStack;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        /**
         * @deprecated
        */
        onDestroyed(arg0: Internal.ItemEntity_): void;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        canBeHurtBy(arg0: DamageSource_): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        fabric_setEquipmentSlotProvider(equipmentSlotProvider: Internal.EquipmentSlotProvider_): void;
        getDescriptionId(): string;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        zeta$setHumanoidArmorModel(arg0: Internal.HumanoidArmorModelGetter_): void;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: DamageSource_): void;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        getDescription(): net.minecraft.network.chat.Component;
        owo$stackGenerator(): Internal.BiConsumer<any, any>;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        useOn(arg0: Internal.UseOnContext_): InteractionResult;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        handler$ebb000$connectormod$redirectIsPiglinCurrency(arg0: Internal.ItemStack_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        setAttackDamage(attackDamage: number): void;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        toString(): string;
        /**
         * @deprecated
        */
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        modifyReturnValue$ffm000$quark$overrideOtherStackedOnMe(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_, arg3: Internal.Slot_, arg4: Internal.ClickAction_, arg5: Internal.Player_, arg6: Internal.SlotAccess_): boolean;
        getId(): string;
        handler$fbm000$moonlight$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        isSuitableFor(stack: Internal.ItemStack_, state: Internal.BlockState_): boolean;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        puzzleslib$setRenderProperties(arg0: any): void;
        notify(): void;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        zeta$setBlockEntityWithoutLevelRenderer(arg0: Internal.BlockEntityWithoutLevelRenderer_): void;
        handler$cog000$croptopia$overrideConstructor(arg0: Internal.Item$Properties_, arg1: Internal.CallbackInfo_): void;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        getEatingSound(): Internal.SoundEvent;
        owo$setGroup(group: Internal.CreativeModeTab_): void;
        puzzleslib$getRenderProperties(): any;
        canBeDepleted(): boolean;
        getDamage(arg0: Internal.ItemStack_): number;
        wait(arg0: number, arg1: number): void;
        getMod(): string;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        owo$group(): Internal.CreativeModeTab;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        modifyReturnValue$ffm000$quark$overrideStackedOnOther(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_): boolean;
        get drinkingSound(): Internal.SoundEvent
        get fireResistant(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set maxDamage(arg0: number)
        get orCreateDescriptionId(): string
        get item(): Internal.Item
        get class(): typeof any
        get renderPropertiesInternal(): any
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        get edible(): boolean
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        set nameKey(arg0: string)
        get idLocation(): ResourceLocation
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
        set rarity(arg0: Internal.Rarity_)
        get complex(): boolean
        get descriptionId(): string
        get creativeTab(): string
        set burnTime(i: number)
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        set itemBuilder(b: Internal.ItemBuilder_)
        set attackDamage(attackDamage: number)
        /**
         * @deprecated
        */
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        /**
         * @deprecated
        */
        get maxStackSize(): number
        get eatingSound(): Internal.SoundEvent
        get mod(): string
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
    }
    type petMagmaCube_ = petMagmaCube;
    class CornerSlopePanelShape extends Internal.Enum<Internal.CornerSlopePanelShape> {
        compareTo(arg0: Internal.CornerSlopePanelShape_): number;
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        getClass(): typeof any;
        toString(): string;
        static values(): Internal.CornerSlopePanelShape[];
        notifyAll(): void;
        static valueOf(arg0: string): Internal.CornerSlopePanelShape;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        compareTo(arg0: any): number;
        name(): string;
        hashCode(): number;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.CornerSlopePanelShape>>;
        ordinal(): number;
        wait(): void;
        wait(arg0: number): void;
        "compareTo(xfacthd.framedblocks.common.data.CornerSlopePanelShape)"(arg0: Internal.CornerSlopePanelShape_): number;
        "compareTo(java.lang.Object)"(arg0: any): number;
        equals(arg0: any): boolean;
        getDeclaringClass(): typeof Internal.CornerSlopePanelShape;
        get class(): typeof any
        get declaringClass(): typeof Internal.CornerSlopePanelShape
        static readonly SMALL_INNER_TOP: (Internal.CornerSlopePanelShape) & (Internal.CornerSlopePanelShape);
        static readonly LARGE_INNER_TOP: (Internal.CornerSlopePanelShape) & (Internal.CornerSlopePanelShape);
        static readonly SMALL_TOP: (Internal.CornerSlopePanelShape) & (Internal.CornerSlopePanelShape);
        static readonly SMALL_INNER_BOTTOM: (Internal.CornerSlopePanelShape) & (Internal.CornerSlopePanelShape);
        static readonly LARGE_BOTTOM: (Internal.CornerSlopePanelShape) & (Internal.CornerSlopePanelShape);
        static readonly LARGE_INNER_BOTTOM: (Internal.CornerSlopePanelShape) & (Internal.CornerSlopePanelShape);
        static readonly SMALL_BOTTOM: (Internal.CornerSlopePanelShape) & (Internal.CornerSlopePanelShape);
        static readonly LARGE_TOP: (Internal.CornerSlopePanelShape) & (Internal.CornerSlopePanelShape);
    }
    type CornerSlopePanelShape_ = "large_inner_bottom" | "large_bottom" | "small_bottom" | "small_top" | "large_top" | "small_inner_top" | CornerSlopePanelShape | "small_inner_bottom" | "large_inner_top";
    interface IBatteryData {
        abstract getTier(): number;
        abstract getBatteryName(): string;
        abstract getCapacity(): number;
        get tier(): number
        get batteryName(): string
        get capacity(): number
    }
    type IBatteryData_ = IBatteryData;
    interface IngredientAccessor {
        abstract getValues(): Internal.Ingredient$Value[];
        create(values: Internal.Stream_<Internal.Ingredient$Value>): Internal.Ingredient;
        get values(): Internal.Ingredient$Value[]
        (): Internal.Ingredient$Value_[];
    }
    type IngredientAccessor_ = (()=> Internal.Ingredient$Value_[]) | IngredientAccessor;
    class IOPortBlock extends Internal.AEBaseEntityBlock<Internal.IOPortBlockEntity> {
        constructor()
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        addToMainCreativeTab(arg0: Internal.CreativeModeTab$Output_): void;
        static fixtureProps(): Internal.BlockBehaviour$Properties;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getBlockEntity(arg0: Internal.BlockGetter_, arg1: number, arg2: number, arg3: number): Internal.IOPortBlockEntity;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getSettings(): Internal.BlockBehaviour$Properties;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        getTypeData(): Internal.CompoundTag;
        setFriction(arg0: number): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getSpeedFactor(): number;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        playerDestroy(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Player_): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Internal.Player_): Internal.ItemStack;
        getOrientation(arg0: Internal.BlockState_): Internal.BlockOrientation;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        newBlockEntity(arg0: BlockPos_, arg1: Internal.BlockState_): Internal.BlockEntity;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        getRenderPropertiesInternal(): any;
        needsDynamicNodeTypeCheck(): boolean;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        setRequiresTool(v: boolean): void;
        asBlock(): Internal.Block;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        puzzleslib$setItem(arg0: Internal.Item_): void;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        /**
         * @deprecated
        */
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        getOrientationStrategy(): Internal.IOrientationStrategy;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        /**
         * @deprecated
        */
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        lychee$isTickable(): boolean;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        getTicker<T extends Internal.BlockEntity>(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockEntityType_<T>): Internal.BlockEntityTicker<T>;
        /**
         * @deprecated
        */
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        getBlockEntityBlockState(arg0: Internal.BlockState_, arg1: Internal.BlockEntity_): Internal.BlockState;
        spawnDestroyParticles(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_): void;
        wait(): void;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Internal.Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(shape: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        setIsRandomlyTicking(arg0: boolean): void;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        defaultMapColor(): Internal.MapColor;
        onActivated(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Player_, arg3: Internal.InteractionHand_, arg4: Internal.ItemStack_, arg5: Internal.BlockHitResult_): InteractionResult;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        registerDefaultState(arg0: Internal.BlockState_): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        setBlockEntity(arg0: typeof Internal.IOPortBlockEntity, arg1: Internal.BlockEntityType_<Internal.IOPortBlockEntity>, arg2: Internal.BlockEntityTicker_<Internal.IOPortBlockEntity>, arg3: Internal.BlockEntityTicker_<Internal.IOPortBlockEntity>): void;
        static metalProps(): Internal.BlockBehaviour$Properties;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        /**
         * @deprecated
        */
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        isAir(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        needsDynamicBurningCheck(): boolean;
        getDescriptionId(): string;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        handler$bob000$radium$postConstruct(p_i241196_1_: Internal.BlockBehaviour$Properties_, ci: Internal.CallbackInfo_): void;
        tryDropExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: Internal.ItemStack_, arg3: Internal.IntProvider_): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        handler$eok000$particular$spawnParticles(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, random: Internal.RandomSource_, ci: Internal.CallbackInfo_): void;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        setDrops(arg0: ResourceLocation_): void;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        getBlockProperties(): Internal.BlockBehaviour$Properties;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        static defaultProps(arg0: Internal.MapColor_, arg1: SoundType_): Internal.BlockBehaviour$Properties;
        getShapeForEachState(arg0: Internal.Function_<Internal.BlockState, Internal.VoxelShape>): Internal.ImmutableMap<Internal.BlockState, Internal.VoxelShape>;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        getFriction(): number;
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        getBlockEntity(arg0: Internal.BlockGetter_, arg1: BlockPos_): Internal.IOPortBlockEntity;
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        createBlockStateDefinition(arg0: Internal.StateDefinition$Builder_<Internal.Block, Internal.BlockState>): void;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        notify(): void;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        static stoneProps(): Internal.BlockBehaviour$Properties;
        static glassProps(): Internal.BlockBehaviour$Properties;
        handler$dji000$spectrum$afterBreak(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        setDestroySpeed(v: number): void;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        handler$zbh000$additionalentityattributes$additionalEntityAttributes$saveBreakingPlayer(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getListener<T extends Internal.BlockEntity>(arg0: Internal.ServerLevel_, arg1: T): Internal.GameEventListener;
        arch$holder(): Internal.Holder<Internal.Block>;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        getBlockEntityType(): Internal.BlockEntityType<Internal.IOPortBlockEntity>;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): void;
        lychee$setTickable(arg0: boolean): void;
        /**
         * @deprecated
        */
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        getRegistryName(): ResourceLocation;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        get settings(): Internal.BlockBehaviour$Properties
        /**
         * @deprecated
        */
        get explosionResistance(): number
        get typeData(): Internal.CompoundTag
        set friction(arg0: number)
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        get orientationStrategy(): Internal.IOrientationStrategy
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get descriptionId(): string
        get jumpFactor(): number
        set drops(arg0: ResourceLocation_)
        set speedFactor(arg0: number)
        get blockProperties(): Internal.BlockBehaviour$Properties
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get mod(): string
        get blockEntityType(): Internal.BlockEntityType<Internal.IOPortBlockEntity>
        get registryName(): ResourceLocation
        set hasCollision(arg0: boolean)
        static readonly POWERED: (Internal.BooleanProperty) & (Internal.BooleanProperty);
    }
    type IOPortBlock_ = IOPortBlock;
    class ItemHealingFood extends Internal.ItemModFood {
        constructor(arg0: Internal.FoodProperties_)
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        allowContinuingBlockBreaking(player: Internal.Player_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        moonlight$addAdditionalBehavior(placementOverride: Internal.AdditionalItemPlacement_): void;
        isFireResistant(): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        moonlight$getClientAnimationExtension(): any;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        fabric_setCustomDamageHandler(handler: Internal.CustomDamageHandler_): void;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getBarColor(arg0: Internal.ItemStack_): number;
        getOrCreateDescriptionId(): string;
        getItem(): Internal.Item;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): InteractionResult;
        moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        moonlight$setClientAnimationExtension(obj: any): void;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        handler$dfl000$revelationary$getCloakedName(stack: Internal.ItemStack_, callbackInfoReturnable: Internal.CallbackInfoReturnable_<any>): void;
        isEdible(): boolean;
        getAttributeModifiers(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        cardinal_createComponents(stack: Internal.ItemStack_): Internal.ComponentContainer;
        isFoil(arg0: Internal.ItemStack_): boolean;
        "getAttributeModifiers(net.minecraft.world.entity.EquipmentSlot,net.minecraft.world.item.ItemStack)"(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        fabric_getEquipmentSlotProvider(): Internal.EquipmentSlotProvider;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        owo$tab(): number;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vector3f;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        "getAttributeModifiers(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.EquipmentSlot)"(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        allowNbtUpdateAnimation(player: Internal.Player_, hand: Internal.InteractionHand_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        fabric_getCachedItemVariant(): Internal.ItemVariant;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        fabric_getCustomDamageHandler(): Internal.CustomDamageHandler;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        static getPlayerPOVHitResult(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.ClipContext$Fluid_): Internal.BlockHitResult;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        equals(arg0: any): boolean;
        setRarity(arg0: Internal.Rarity_): void;
        getRecipeRemainder(stack: Internal.ItemStack_): Internal.ItemStack;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        /**
         * @deprecated
        */
        onDestroyed(arg0: Internal.ItemEntity_): void;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        canBeHurtBy(arg0: DamageSource_): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        fabric_setEquipmentSlotProvider(equipmentSlotProvider: Internal.EquipmentSlotProvider_): void;
        getDescriptionId(): string;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        zeta$setHumanoidArmorModel(arg0: Internal.HumanoidArmorModelGetter_): void;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: DamageSource_): void;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        getDescription(): net.minecraft.network.chat.Component;
        owo$stackGenerator(): Internal.BiConsumer<any, any>;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        useOn(arg0: Internal.UseOnContext_): InteractionResult;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        handler$ebb000$connectormod$redirectIsPiglinCurrency(arg0: Internal.ItemStack_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        setAttackDamage(attackDamage: number): void;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        toString(): string;
        /**
         * @deprecated
        */
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        modifyReturnValue$ffm000$quark$overrideOtherStackedOnMe(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_, arg3: Internal.Slot_, arg4: Internal.ClickAction_, arg5: Internal.Player_, arg6: Internal.SlotAccess_): boolean;
        getId(): string;
        handler$fbm000$moonlight$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        isSuitableFor(stack: Internal.ItemStack_, state: Internal.BlockState_): boolean;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        puzzleslib$setRenderProperties(arg0: any): void;
        notify(): void;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        zeta$setBlockEntityWithoutLevelRenderer(arg0: Internal.BlockEntityWithoutLevelRenderer_): void;
        handler$cog000$croptopia$overrideConstructor(arg0: Internal.Item$Properties_, arg1: Internal.CallbackInfo_): void;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        getEatingSound(): Internal.SoundEvent;
        owo$setGroup(group: Internal.CreativeModeTab_): void;
        puzzleslib$getRenderProperties(): any;
        canBeDepleted(): boolean;
        getDamage(arg0: Internal.ItemStack_): number;
        wait(arg0: number, arg1: number): void;
        getMod(): string;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        owo$group(): Internal.CreativeModeTab;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        modifyReturnValue$ffm000$quark$overrideStackedOnOther(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_): boolean;
        get drinkingSound(): Internal.SoundEvent
        get fireResistant(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set maxDamage(arg0: number)
        get orCreateDescriptionId(): string
        get item(): Internal.Item
        get class(): typeof any
        get renderPropertiesInternal(): any
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        get edible(): boolean
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        set nameKey(arg0: string)
        get idLocation(): ResourceLocation
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
        set rarity(arg0: Internal.Rarity_)
        get complex(): boolean
        get descriptionId(): string
        get creativeTab(): string
        set burnTime(i: number)
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        set itemBuilder(b: Internal.ItemBuilder_)
        set attackDamage(attackDamage: number)
        /**
         * @deprecated
        */
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        /**
         * @deprecated
        */
        get maxStackSize(): number
        get eatingSound(): Internal.SoundEvent
        get mod(): string
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
    }
    type ItemHealingFood_ = ItemHealingFood;
    class BlockRandomItemDropper extends Internal.BlockMod {
        constructor()
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getSettings(): Internal.BlockBehaviour$Properties;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        getTypeData(): Internal.CompoundTag;
        setFriction(arg0: number): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getSpeedFactor(): number;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        playerDestroy(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Player_): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Internal.Player_): Internal.ItemStack;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        getRenderPropertiesInternal(): any;
        needsDynamicNodeTypeCheck(): boolean;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        setRequiresTool(v: boolean): void;
        asBlock(): Internal.Block;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        puzzleslib$setItem(arg0: Internal.Item_): void;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        /**
         * @deprecated
        */
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        /**
         * @deprecated
        */
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        lychee$isTickable(): boolean;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        /**
         * @deprecated
        */
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        spawnDestroyParticles(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_): void;
        wait(): void;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Internal.Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(shape: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        setIsRandomlyTicking(arg0: boolean): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        registerDefaultState(arg0: Internal.BlockState_): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        /**
         * @deprecated
        */
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        /**
         * @deprecated
        */
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        isAir(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        needsDynamicBurningCheck(): boolean;
        getDescriptionId(): string;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        handler$bob000$radium$postConstruct(p_i241196_1_: Internal.BlockBehaviour$Properties_, ci: Internal.CallbackInfo_): void;
        tryDropExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: Internal.ItemStack_, arg3: Internal.IntProvider_): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        handler$eok000$particular$spawnParticles(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, random: Internal.RandomSource_, ci: Internal.CallbackInfo_): void;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        setDrops(arg0: ResourceLocation_): void;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        getBlockProperties(): Internal.BlockBehaviour$Properties;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getShapeForEachState(arg0: Internal.Function_<Internal.BlockState, Internal.VoxelShape>): Internal.ImmutableMap<Internal.BlockState, Internal.VoxelShape>;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        getFriction(): number;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        createBlockStateDefinition(arg0: Internal.StateDefinition$Builder_<Internal.Block, Internal.BlockState>): void;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        notify(): void;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        handler$dji000$spectrum$afterBreak(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        setDestroySpeed(v: number): void;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        handler$zbh000$additionalentityattributes$additionalEntityAttributes$saveBreakingPlayer(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        arch$holder(): Internal.Holder<Internal.Block>;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): void;
        lychee$setTickable(arg0: boolean): void;
        /**
         * @deprecated
        */
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        get settings(): Internal.BlockBehaviour$Properties
        /**
         * @deprecated
        */
        get explosionResistance(): number
        get typeData(): Internal.CompoundTag
        set friction(arg0: number)
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get descriptionId(): string
        get jumpFactor(): number
        set drops(arg0: ResourceLocation_)
        set speedFactor(arg0: number)
        get blockProperties(): Internal.BlockBehaviour$Properties
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get mod(): string
        set hasCollision(arg0: boolean)
    }
    type BlockRandomItemDropper_ = BlockRandomItemDropper;
    class Component$BaselineResizeBehavior extends Internal.Enum<Internal.Component$BaselineResizeBehavior> {
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        getClass(): typeof any;
        toString(): string;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.Component$BaselineResizeBehavior>>;
        notifyAll(): void;
        static values(): Internal.Component$BaselineResizeBehavior[];
        notify(): void;
        wait(arg0: number, arg1: number): void;
        "compareTo(java.awt.Component$BaselineResizeBehavior)"(arg0: Internal.Component$BaselineResizeBehavior_): number;
        compareTo(arg0: any): number;
        name(): string;
        hashCode(): number;
        ordinal(): number;
        wait(): void;
        wait(arg0: number): void;
        "compareTo(java.lang.Object)"(arg0: any): number;
        equals(arg0: any): boolean;
        getDeclaringClass(): typeof Internal.Component$BaselineResizeBehavior;
        static valueOf(arg0: string): Internal.Component$BaselineResizeBehavior;
        compareTo(arg0: Internal.Component$BaselineResizeBehavior_): number;
        get class(): typeof any
        get declaringClass(): typeof Internal.Component$BaselineResizeBehavior
        static readonly CONSTANT_DESCENT: (Internal.Component$BaselineResizeBehavior) & (Internal.Component$BaselineResizeBehavior);
        static readonly OTHER: (Internal.Component$BaselineResizeBehavior) & (Internal.Component$BaselineResizeBehavior);
        static readonly CENTER_OFFSET: (Internal.Component$BaselineResizeBehavior) & (Internal.Component$BaselineResizeBehavior);
        static readonly CONSTANT_ASCENT: (Internal.Component$BaselineResizeBehavior) & (Internal.Component$BaselineResizeBehavior);
    }
    type Component$BaselineResizeBehavior_ = "other" | "constant_descent" | "constant_ascent" | Component$BaselineResizeBehavior | "center_offset";
    class ItemThaumaturgicCompass extends Internal.CompassItem {
        constructor()
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        allowContinuingBlockBreaking(player: Internal.Player_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        moonlight$addAdditionalBehavior(placementOverride: Internal.AdditionalItemPlacement_): void;
        isFireResistant(): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        moonlight$getClientAnimationExtension(): any;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        fabric_setCustomDamageHandler(handler: Internal.CustomDamageHandler_): void;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getBarColor(arg0: Internal.ItemStack_): number;
        getOrCreateDescriptionId(): string;
        getItem(): Internal.Item;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): InteractionResult;
        moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        moonlight$setClientAnimationExtension(obj: any): void;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        handler$dfl000$revelationary$getCloakedName(stack: Internal.ItemStack_, callbackInfoReturnable: Internal.CallbackInfoReturnable_<any>): void;
        isEdible(): boolean;
        getAttributeModifiers(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        static getTrackMode(arg0: Internal.ItemStack_): boolean;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        cardinal_createComponents(stack: Internal.ItemStack_): Internal.ComponentContainer;
        isFoil(arg0: Internal.ItemStack_): boolean;
        "getAttributeModifiers(net.minecraft.world.entity.EquipmentSlot,net.minecraft.world.item.ItemStack)"(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        fabric_getEquipmentSlotProvider(): Internal.EquipmentSlotProvider;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        static getLodestonePosition(arg0: Internal.CompoundTag_): Internal.GlobalPos;
        owo$tab(): number;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        getTrackedPosition(arg0: Internal.ItemStack_, arg1: Internal.ResourceKey_<Internal.Level>): BlockPos;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vector3f;
        static getTrackedID(arg0: Internal.ItemStack_): ResourceLocation;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        "getAttributeModifiers(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.EquipmentSlot)"(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        allowNbtUpdateAnimation(player: Internal.Player_, hand: Internal.InteractionHand_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        fabric_getCachedItemVariant(): Internal.ItemVariant;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        fabric_getCustomDamageHandler(): Internal.CustomDamageHandler;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        static getPlayerPOVHitResult(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.ClipContext$Fluid_): Internal.BlockHitResult;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        equals(arg0: any): boolean;
        static search_structure(arg0: Internal.ServerPlayer_, arg1: Internal.ItemStack_, arg2: boolean): void;
        setRarity(arg0: Internal.Rarity_): void;
        getRecipeRemainder(stack: Internal.ItemStack_): Internal.ItemStack;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        /**
         * @deprecated
        */
        onDestroyed(arg0: Internal.ItemEntity_): void;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        canBeHurtBy(arg0: DamageSource_): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        fabric_setEquipmentSlotProvider(equipmentSlotProvider: Internal.EquipmentSlotProvider_): void;
        getDescriptionId(): string;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        zeta$setHumanoidArmorModel(arg0: Internal.HumanoidArmorModelGetter_): void;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        static getSpawnPosition(arg0: Internal.Level_): Internal.GlobalPos;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: DamageSource_): void;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        getDescription(): net.minecraft.network.chat.Component;
        owo$stackGenerator(): Internal.BiConsumer<any, any>;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        useOn(arg0: Internal.UseOnContext_): InteractionResult;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        handler$ebb000$connectormod$redirectIsPiglinCurrency(arg0: Internal.ItemStack_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        setAttackDamage(attackDamage: number): void;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        toString(): string;
        /**
         * @deprecated
        */
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        modifyReturnValue$ffm000$quark$overrideOtherStackedOnMe(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_, arg3: Internal.Slot_, arg4: Internal.ClickAction_, arg5: Internal.Player_, arg6: Internal.SlotAccess_): boolean;
        static search_biome(arg0: Internal.ServerPlayer_, arg1: Internal.ItemStack_): void;
        getId(): string;
        handler$fbm000$moonlight$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        isSuitableFor(stack: Internal.ItemStack_, state: Internal.BlockState_): boolean;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        puzzleslib$setRenderProperties(arg0: any): void;
        notify(): void;
        static getLodestoneDimension(arg0: Internal.CompoundTag_): Internal.Optional<Internal.ResourceKey<Internal.Level>>;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        static setTrackedPosition(arg0: Internal.ItemStack_, arg1: Internal.ResourceKey_<Internal.Level>, arg2: BlockPos_, arg3: ResourceLocation_, arg4: Internal.ItemThaumaturgicCompass$TrackType_): void;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        static getTrackType(arg0: Internal.ItemStack_): Internal.ItemThaumaturgicCompass$TrackType;
        zeta$setBlockEntityWithoutLevelRenderer(arg0: Internal.BlockEntityWithoutLevelRenderer_): void;
        handler$cog000$croptopia$overrideConstructor(arg0: Internal.Item$Properties_, arg1: Internal.CallbackInfo_): void;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        static getLocalizedStructureName(arg0: string): string;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        getEatingSound(): Internal.SoundEvent;
        owo$setGroup(group: Internal.CreativeModeTab_): void;
        puzzleslib$getRenderProperties(): any;
        canBeDepleted(): boolean;
        getDamage(arg0: Internal.ItemStack_): number;
        wait(arg0: number, arg1: number): void;
        getMod(): string;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        static isLodestoneCompass(arg0: Internal.ItemStack_): boolean;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        owo$group(): Internal.CreativeModeTab;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        modifyReturnValue$ffm000$quark$overrideStackedOnOther(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_): boolean;
        get drinkingSound(): Internal.SoundEvent
        get fireResistant(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set maxDamage(arg0: number)
        get orCreateDescriptionId(): string
        get item(): Internal.Item
        get class(): typeof any
        get renderPropertiesInternal(): any
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        get edible(): boolean
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        set nameKey(arg0: string)
        get idLocation(): ResourceLocation
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
        set rarity(arg0: Internal.Rarity_)
        get complex(): boolean
        get descriptionId(): string
        get creativeTab(): string
        set burnTime(i: number)
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        set itemBuilder(b: Internal.ItemBuilder_)
        set attackDamage(attackDamage: number)
        /**
         * @deprecated
        */
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        /**
         * @deprecated
        */
        get maxStackSize(): number
        get eatingSound(): Internal.SoundEvent
        get mod(): string
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
        static readonly trackingKey: ("tracking_key") & (string);
        static readonly trackingType: ("tracking_type") & (string);
        static readonly trackingMode: ("tracking_mode") & (string);
        static readonly trackingId: ("tracking_id") & (string);
    }
    type ItemThaumaturgicCompass_ = ItemThaumaturgicCompass;
    class SuspiciousBrewItem extends Internal.BeverageItem {
        constructor(settings: Internal.Item$Properties_)
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        allowContinuingBlockBreaking(player: Internal.Player_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        moonlight$addAdditionalBehavior(placementOverride: Internal.AdditionalItemPlacement_): void;
        isFireResistant(): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        appendHoverText(itemStack: Internal.ItemStack_, world: Internal.Level_, tooltip: Internal.List_<net.minecraft.network.chat.Component>, tooltipContext: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        moonlight$getClientAnimationExtension(): any;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        static setPreviewStack(stack: Internal.ItemStack_): void;
        fabric_setCustomDamageHandler(handler: Internal.CustomDamageHandler_): void;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getBarColor(arg0: Internal.ItemStack_): number;
        getOrCreateDescriptionId(): string;
        getItem(): Internal.Item;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): InteractionResult;
        moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        moonlight$setClientAnimationExtension(obj: any): void;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        handler$dfl000$revelationary$getCloakedName(stack: Internal.ItemStack_, callbackInfoReturnable: Internal.CallbackInfoReturnable_<any>): void;
        isEdible(): boolean;
        getAttributeModifiers(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(world: Internal.Level_, user: Internal.Player_, hand: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        cardinal_createComponents(stack: Internal.ItemStack_): Internal.ComponentContainer;
        isFoil(arg0: Internal.ItemStack_): boolean;
        "getAttributeModifiers(net.minecraft.world.entity.EquipmentSlot,net.minecraft.world.item.ItemStack)"(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        static isPreviewStack(stack: Internal.ItemStack_): boolean;
        fabric_getEquipmentSlotProvider(): Internal.EquipmentSlotProvider;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        getUseDuration(stack: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        owo$tab(): number;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vector3f;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        "getAttributeModifiers(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.EquipmentSlot)"(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        allowNbtUpdateAnimation(player: Internal.Player_, hand: Internal.InteractionHand_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        fabric_getCachedItemVariant(): Internal.ItemVariant;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        fabric_getCustomDamageHandler(): Internal.CustomDamageHandler;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        static getPlayerPOVHitResult(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.ClipContext$Fluid_): Internal.BlockHitResult;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        equals(arg0: any): boolean;
        setRarity(arg0: Internal.Rarity_): void;
        getRecipeRemainder(stack: Internal.ItemStack_): Internal.ItemStack;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        /**
         * @deprecated
        */
        onDestroyed(arg0: Internal.ItemEntity_): void;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        canBeHurtBy(arg0: DamageSource_): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        fabric_setEquipmentSlotProvider(equipmentSlotProvider: Internal.EquipmentSlotProvider_): void;
        getUseAnimation(stack: Internal.ItemStack_): Internal.UseAnim;
        getDescriptionId(): string;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        zeta$setHumanoidArmorModel(arg0: Internal.HumanoidArmorModelGetter_): void;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: DamageSource_): void;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        getDescription(): net.minecraft.network.chat.Component;
        owo$stackGenerator(): Internal.BiConsumer<any, any>;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        useOn(arg0: Internal.UseOnContext_): InteractionResult;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        handler$ebb000$connectormod$redirectIsPiglinCurrency(arg0: Internal.ItemStack_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        setAttackDamage(attackDamage: number): void;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        toString(): string;
        /**
         * @deprecated
        */
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        modifyReturnValue$ffm000$quark$overrideOtherStackedOnMe(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_, arg3: Internal.Slot_, arg4: Internal.ClickAction_, arg5: Internal.Player_, arg6: Internal.SlotAccess_): boolean;
        getId(): string;
        handler$fbm000$moonlight$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        isSuitableFor(stack: Internal.ItemStack_, state: Internal.BlockState_): boolean;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        puzzleslib$setRenderProperties(arg0: any): void;
        notify(): void;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        zeta$setBlockEntityWithoutLevelRenderer(arg0: Internal.BlockEntityWithoutLevelRenderer_): void;
        handler$cog000$croptopia$overrideConstructor(arg0: Internal.Item$Properties_, arg1: Internal.CallbackInfo_): void;
        getBeverageProperties(itemStack: Internal.ItemStack_): Internal.BeverageProperties;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        finishUsingItem(stack: Internal.ItemStack_, world: Internal.Level_, user: Internal.LivingEntity_): Internal.ItemStack;
        getEatingSound(): Internal.SoundEvent;
        owo$setGroup(group: Internal.CreativeModeTab_): void;
        puzzleslib$getRenderProperties(): any;
        canBeDepleted(): boolean;
        getDamage(arg0: Internal.ItemStack_): number;
        wait(arg0: number, arg1: number): void;
        getMod(): string;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        owo$group(): Internal.CreativeModeTab;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        modifyReturnValue$ffm000$quark$overrideStackedOnOther(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_): boolean;
        get drinkingSound(): Internal.SoundEvent
        get fireResistant(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set previewStack(stack: Internal.ItemStack_)
        set maxStackSize(arg0: number)
        set maxDamage(arg0: number)
        get orCreateDescriptionId(): string
        get item(): Internal.Item
        get class(): typeof any
        get renderPropertiesInternal(): any
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        get edible(): boolean
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        set nameKey(arg0: string)
        get idLocation(): ResourceLocation
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
        set rarity(arg0: Internal.Rarity_)
        get complex(): boolean
        get descriptionId(): string
        get creativeTab(): string
        set burnTime(i: number)
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        set itemBuilder(b: Internal.ItemBuilder_)
        set attackDamage(attackDamage: number)
        /**
         * @deprecated
        */
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        /**
         * @deprecated
        */
        get maxStackSize(): number
        get eatingSound(): Internal.SoundEvent
        get mod(): string
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
    }
    type SuspiciousBrewItem_ = SuspiciousBrewItem;
    interface UserDataHandler {
        abstract handle(arg0: number, arg1: string, arg2: any, arg3: org.w3c.dom.Node_, arg4: org.w3c.dom.Node_): void;
        (arg0: number, arg1: string, arg2: any, arg3: org.w3c.dom.Node, arg4: org.w3c.dom.Node): void;
        readonly NODE_CLONED: (1) & (number);
        readonly NODE_DELETED: (3) & (number);
        readonly NODE_RENAMED: (4) & (number);
        readonly NODE_IMPORTED: (2) & (number);
        readonly NODE_ADOPTED: (5) & (number);
    }
    type UserDataHandler_ = UserDataHandler | ((arg0: number, arg1: string, arg2: any, arg3: org.w3c.dom.Node, arg4: org.w3c.dom.Node)=> void);
    class FramedStackedSlopeEdgeBlock extends Internal.AbstractFramedDoubleBlock implements Internal.IComplexSlopeSource {
        constructor()
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        getCamoOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        getCamoShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: number): number;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getSettings(): Internal.BlockBehaviour$Properties;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        /**
         * @deprecated
        */
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        getTypeData(): Internal.CompoundTag;
        setFriction(arg0: number): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        rotate(arg0: Internal.BlockState_, arg1: Internal.BlockHitResult_, arg2: Internal.Rotation_): Internal.BlockState;
        getSolidityCheck(arg0: Internal.BlockState_, arg1: Internal.Direction_): Internal.SolidityCheck;
        getSpeedFactor(): number;
        getComponentBySkipPredicate(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): Internal.BlockState;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        playerDestroy(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Player_): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Internal.Player_): Internal.ItemStack;
        getClass(): typeof any;
        abstract getBlockType(): Internal.IBlockType;
        getMaxVerticalOffset(): number;
        newBlockEntity(arg0: BlockPos_, arg1: Internal.BlockState_): Internal.BlockEntity;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        getRenderPropertiesInternal(): any;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        needsDynamicNodeTypeCheck(): boolean;
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        getBlockPair(arg0: Internal.BlockState_): Internal.Tuple<Internal.BlockState, Internal.BlockState>;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        "rotate(net.minecraft.world.level.block.state.BlockState,net.minecraft.core.Direction,net.minecraft.world.level.block.Rotation)"(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        calculateTopInteractionMode(arg0: Internal.BlockState_): Internal.DoubleBlockTopInteractionMode;
        setRequiresTool(v: boolean): void;
        asBlock(): Internal.Block;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        puzzleslib$setItem(arg0: Internal.Item_): void;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        doesBlockOccludeBeaconBeam(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        useCamoOcclusionShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        /**
         * @deprecated
        */
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        lychee$isTickable(): boolean;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static testComponent(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        isSuffocating(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        isHorizontalSlope(arg0: Internal.BlockState_): boolean;
        getTicker<T extends Internal.BlockEntity>(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockEntityType_<T>): Internal.BlockEntityTicker<T>;
        /**
         * @deprecated
        */
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        updateShapeLockable(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Supplier_<Internal.BlockState>): Internal.BlockState;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        lockState(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Player_, arg3: Internal.ItemStack_): boolean;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        placeLiquid(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.FluidState_): boolean;
        getCamoVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        spawnDestroyParticles(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_): void;
        wait(): void;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Internal.Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(shape: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        setIsRandomlyTicking(arg0: boolean): void;
        getPickupSound(arg0: Internal.BlockState_): Internal.Optional<Internal.SoundEvent>;
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        registerDefaultState(arg0: Internal.BlockState_): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        createBlockItem(): Internal.BlockItem;
        printCamoBlock(arg0: Internal.CompoundTag_): Internal.Optional<Internal.MutableComponent>;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        needCullingUpdateAfterStateChange(arg0: Internal.LevelReader_, arg1: Internal.BlockState_, arg2: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        shouldPreventNeighborCulling(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.BlockState_): boolean;
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        getPickupSound(): Internal.Optional<Internal.SoundEvent>;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        isAir(arg0: Internal.BlockState_): boolean;
        static createProperties(arg0: Internal.IBlockType_): Internal.BlockBehaviour$Properties;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getCamoDrops(arg0: Internal.List_<Internal.ItemStack>, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        "rotate(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.phys.BlockHitResult,net.minecraft.world.level.block.Rotation)"(arg0: Internal.BlockState_, arg1: Internal.BlockHitResult_, arg2: Internal.Rotation_): Internal.BlockState;
        static getStatePair(arg0: Internal.BlockState_): Internal.Tuple<Internal.BlockState, Internal.BlockState>;
        needsDynamicBurningCheck(): boolean;
        getDescriptionId(): string;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        handler$bob000$radium$postConstruct(p_i241196_1_: Internal.BlockBehaviour$Properties_, ci: Internal.CallbackInfo_): void;
        tryDropExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: Internal.ItemStack_, arg3: Internal.IntProvider_): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        handler$eok000$particular$spawnParticles(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, random: Internal.RandomSource_, ci: Internal.CallbackInfo_): void;
        getJumpFactor(): number;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        setDrops(arg0: ResourceLocation_): void;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        pickupBlock(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        static playCamoBreakSound(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        getBlockProperties(): Internal.BlockBehaviour$Properties;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        runOcclusionTestAndGetLookupState(arg0: Internal.SideSkipPredicate_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockState_, arg5: Internal.Direction_): Internal.BlockState;
        notifyAll(): void;
        getShapeForEachState(arg0: Internal.Function_<Internal.BlockState, Internal.VoxelShape>): Internal.ImmutableMap<Internal.BlockState, Internal.VoxelShape>;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        getFriction(): number;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        createBlockStateDefinition(arg0: Internal.StateDefinition$Builder_<Internal.Block, Internal.BlockState>): void;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        calculateBlockPair(arg0: Internal.BlockState_): Internal.Tuple<Internal.BlockState, Internal.BlockState>;
        notify(): void;
        getTopInteractionMode(arg0: Internal.BlockState_): Internal.DoubleBlockTopInteractionMode;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        canCamoSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        handler$dji000$spectrum$afterBreak(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        static toggleYSlope(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        /**
         * @deprecated
        */
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        handleUse(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): InteractionResult;
        setDestroySpeed(v: number): void;
        tryApplyCamoImmediately(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.LivingEntity_, arg3: Internal.ItemStack_): void;
        isIntangible(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): boolean;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        handler$zbh000$additionalentityattributes$additionalEntityAttributes$saveBreakingPlayer(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        updateCulling(arg0: Internal.LevelReader_, arg1: BlockPos_): void;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getListener<T extends Internal.BlockEntity>(arg0: Internal.ServerLevel_, arg1: T): Internal.GameEventListener;
        arch$holder(): Internal.Holder<Internal.Block>;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        handleBlockLeftClick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        playBreakSound(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): boolean;
        canPlaceLiquid(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Fluid_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        calculateSolidityCheck(arg0: Internal.BlockState_, arg1: Internal.Direction_): Internal.SolidityCheck;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        calculateCamoGetter(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.Direction_): Internal.CamoGetter;
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        initCache(arg0: Internal.BlockState_): Internal.StateCache;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        getCamoGetter(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.Direction_): Internal.CamoGetter;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): void;
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        lychee$setTickable(arg0: boolean): void;
        getComponentAtEdge(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Direction_, arg4: Internal.Direction_): Internal.BlockState;
        static itemModelSource(): Internal.BlockState;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        getCache(arg0: Internal.BlockState_): Internal.StateCache;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        rotate(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        unpackNestedModelData(arg0: Internal.ModelData_, arg1: Internal.BlockState_, arg2: Internal.BlockState_): Internal.ModelData;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        get settings(): Internal.BlockBehaviour$Properties
        /**
         * @deprecated
        */
        get explosionResistance(): number
        get typeData(): Internal.CompoundTag
        set friction(arg0: number)
        get speedFactor(): number
        get class(): typeof any
        get blockType(): Internal.IBlockType
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get pickupSound(): Internal.Optional<Internal.SoundEvent>
        get descriptionId(): string
        get jumpFactor(): number
        set drops(arg0: ResourceLocation_)
        set speedFactor(arg0: number)
        get blockProperties(): Internal.BlockBehaviour$Properties
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get mod(): string
        set hasCollision(arg0: boolean)
    }
    type FramedStackedSlopeEdgeBlock_ = FramedStackedSlopeEdgeBlock;
    interface PublicKey extends Internal.Key {
        abstract getAlgorithm(): string;
        abstract getFormat(): string;
        abstract getEncoded(): number[];
        get algorithm(): string
        get format(): string
        get encoded(): number[]
        /**
         * @deprecated
        */
        readonly serialVersionUID: (7187392471159151072) & (number);
    }
    type PublicKey_ = PublicKey;
    class AlgorithmParameters {
        getClass(): typeof any;
        static "getInstance(java.lang.String,java.lang.String)"(arg0: string, arg1: string): Internal.AlgorithmParameters;
        toString(): string;
        notifyAll(): void;
        init(arg0: number[], arg1: string): void;
        static getInstance(arg0: string, arg1: string): Internal.AlgorithmParameters;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        "init(java.security.spec.AlgorithmParameterSpec)"(arg0: Internal.AlgorithmParameterSpec_): void;
        static "getInstance(java.lang.String,java.security.Provider)"(arg0: string, arg1: Internal.Provider_): Internal.AlgorithmParameters;
        getProvider(): Internal.Provider;
        getAlgorithm(): string;
        getEncoded(arg0: string): number[];
        getParameterSpec<T extends Internal.AlgorithmParameterSpec>(arg0: T): T;
        hashCode(): number;
        init(arg0: Internal.AlgorithmParameterSpec_): void;
        wait(): void;
        wait(arg0: number): void;
        static getInstance(arg0: string, arg1: Internal.Provider_): Internal.AlgorithmParameters;
        static getInstance(arg0: string): Internal.AlgorithmParameters;
        getEncoded(): number[];
        equals(arg0: any): boolean;
        "init(byte[])"(arg0: number[]): void;
        init(arg0: number[]): void;
        get class(): typeof any
        get provider(): Internal.Provider
        get algorithm(): string
        get encoded(): number[]
    }
    type AlgorithmParameters_ = AlgorithmParameters;
    interface ImplementedInventory extends net.minecraft.world.Container {
        stopOpen(arg0: Internal.Player_): void;
        tryClear(arg0: any): void;
        abstract getItems(): Internal.NonNullList<Internal.ItemStack>;
        setStackInSlot(slot: number, stack: Internal.ItemStack_): void;
        clear(ingredient: Internal.Ingredient_): void;
        find(): number;
        hasAnyOf(arg0: Internal.Set_<Internal.Item>): boolean;
        removeItem(slot: number, count: number): Internal.ItemStack;
        getSlots(): number;
        setChanged(): void;
        getContainerSize(): number;
        setItem(slot: number, stack: Internal.ItemStack_): void;
        "setChanged()"(): void;
        hasAnyMatching(arg0: Internal.Predicate_<Internal.ItemStack>): boolean;
        inventoryChanged(): void;
        kjs$self(): net.minecraft.world.Container;
        of(items: Internal.NonNullList_<Internal.ItemStack>): this;
        getWidth(): number;
        getSlotLimit(slot: number): number;
        getMaxStackSize(): number;
        "isEmpty()"(): boolean;
        removeItemNoUpdate(slot: number): Internal.ItemStack;
        stillValidBlockEntity(arg0: Internal.BlockEntity_, arg1: Internal.Player_): boolean;
        getItem(slot: number): Internal.ItemStack;
        isItemValid(slot: number, stack: Internal.ItemStack_): boolean;
        count(ingredient: Internal.Ingredient_): number;
        count(): number;
        countItem(arg0: Internal.Item_): number;
        isEmpty(): boolean;
        startOpen(arg0: Internal.Player_): void;
        canPlaceItem(arg0: number, arg1: Internal.ItemStack_): boolean;
        extractItem(slot: number, amount: number, simulate: boolean): Internal.ItemStack;
        getBlock(level: Internal.Level_): Internal.BlockContainerJS;
        stillValidBlockEntity(arg0: Internal.BlockEntity_, arg1: Internal.Player_, arg2: number): boolean;
        getStackInSlot(slot: number): Internal.ItemStack;
        getHeight(): number;
        countNonEmpty(): number;
        asContainer(): net.minecraft.world.Container;
        getAllItems(): Internal.List<Internal.ItemStack>;
        ofSize(size: number): this;
        canTakeItem(arg0: net.minecraft.world.Container_, arg1: number, arg2: Internal.ItemStack_): boolean;
        insertItem(stack: Internal.ItemStack_, simulate: boolean): Internal.ItemStack;
        stillValid(player: Internal.Player_): boolean;
        insertItem(slot: number, stack: Internal.ItemStack_, simulate: boolean): Internal.ItemStack;
        isMutable(): boolean;
        clear(): void;
        find(ingredient: Internal.Ingredient_): number;
        clearContent(): void;
        countNonEmpty(ingredient: Internal.Ingredient_): number;
        get items(): Internal.NonNullList<Internal.ItemStack>
        get slots(): number
        get containerSize(): number
        get width(): number
        get maxStackSize(): number
        get "empty()"(): boolean
        get empty(): boolean
        get height(): number
        get allItems(): Internal.List<Internal.ItemStack>
        get mutable(): boolean
        (): Internal.NonNullList_<Internal.ItemStack>;
    }
    type ImplementedInventory_ = ImplementedInventory | (()=> Internal.NonNullList_<Internal.ItemStack>);
    class CinderhearthBlockEntity$CinderHearthStructureType extends Internal.Enum<Internal.CinderhearthBlockEntity$CinderHearthStructureType> {
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        getClass(): typeof any;
        toString(): string;
        getDeclaringClass(): typeof Internal.CinderhearthBlockEntity$CinderHearthStructureType;
        notifyAll(): void;
        notify(): void;
        "compareTo(de.dafuqs.spectrum.blocks.cinderhearth.CinderhearthBlockEntity$CinderHearthStructureType)"(arg0: Internal.CinderhearthBlockEntity$CinderHearthStructureType_): number;
        wait(arg0: number, arg1: number): void;
        compareTo(arg0: any): number;
        name(): string;
        hashCode(): number;
        static valueOf(name: string): Internal.CinderhearthBlockEntity$CinderHearthStructureType;
        ordinal(): number;
        wait(): void;
        wait(arg0: number): void;
        compareTo(arg0: Internal.CinderhearthBlockEntity$CinderHearthStructureType_): number;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.CinderhearthBlockEntity$CinderHearthStructureType>>;
        "compareTo(java.lang.Object)"(arg0: any): number;
        equals(arg0: any): boolean;
        static values(): Internal.CinderhearthBlockEntity$CinderHearthStructureType[];
        get class(): typeof any
        get declaringClass(): typeof Internal.CinderhearthBlockEntity$CinderHearthStructureType
        static readonly WITH_LAVA: Internal.CinderhearthBlockEntity$CinderHearthStructureType;
        static readonly WITHOUT_LAVA: Internal.CinderhearthBlockEntity$CinderHearthStructureType;
        static readonly NONE: Internal.CinderhearthBlockEntity$CinderHearthStructureType;
    }
    type CinderhearthBlockEntity$CinderHearthStructureType_ = CinderhearthBlockEntity$CinderHearthStructureType | "with_lava" | "without_lava" | "none";
    class DragonDeathPhase extends Internal.AbstractDragonPhaseInstance {
        constructor(arg0: Internal.EnderDragon_)
        doClientTick(): void;
        getClass(): typeof any;
        onHurt(arg0: DamageSource_, arg1: number): number;
        toString(): string;
        getFlyTargetLocation(): Vec3d;
        getFlySpeed(): number;
        notifyAll(): void;
        begin(): void;
        getPhase(): Internal.EnderDragonPhase<Internal.DragonDeathPhase>;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        hashCode(): number;
        isSitting(): boolean;
        end(): void;
        wait(): void;
        getTurnSpeed(): number;
        wait(arg0: number): void;
        onCrystalDestroyed(arg0: Internal.EndCrystal_, arg1: BlockPos_, arg2: DamageSource_, arg3: Internal.Player_): void;
        doServerTick(): void;
        equals(arg0: any): boolean;
        get class(): typeof any
        get flyTargetLocation(): Vec3d
        get flySpeed(): number
        get phase(): Internal.EnderDragonPhase<Internal.DragonDeathPhase>
        get sitting(): boolean
        get turnSpeed(): number
    }
    type DragonDeathPhase_ = DragonDeathPhase;
    interface IBrokenArmorReplaceable <I extends Internal.ArmorItem> {
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
    }
    type IBrokenArmorReplaceable_<I extends Internal.ArmorItem> = IBrokenArmorReplaceable<I>;
    abstract class ForwardingMultimap <K, V> extends Internal.ForwardingObject implements Internal.Multimap<K, V> {
        getClass(): typeof any;
        replaceValues(arg0: K, arg1: Internal.Iterable_<V>): Internal.Collection<V>;
        removeAll(arg0: any): Internal.Collection<V>;
        entries(): Internal.Collection<Internal.Map$Entry<K, V>>;
        containsValue(arg0: any): boolean;
        isEmpty(): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        containsKey(arg0: any): boolean;
        putAll(arg0: K, arg1: Internal.Iterable_<V>): boolean;
        keys(): Internal.Multiset<K>;
        keySet(): Internal.Set<K>;
        forEach(arg0: Internal.BiConsumer_<K, V>): void;
        get(arg0: K): Internal.Collection<V>;
        toString(): string;
        values(): Internal.Collection<V>;
        notifyAll(): void;
        remove(arg0: any, arg1: any): boolean;
        containsEntry(arg0: any, arg1: any): boolean;
        hashCode(): number;
        size(): number;
        putAll(arg0: Internal.Multimap_<K, V>): boolean;
        put(arg0: K, arg1: V): boolean;
        wait(): void;
        clear(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        asMap(): Internal.Map<K, Internal.Collection<V>>;
        get class(): typeof any
        get empty(): boolean
    }
    type ForwardingMultimap_<K, V> = ForwardingMultimap<K, V>;
    interface Pack$ResourcesSupplier {
        abstract open(arg0: string): Internal.PackResources;
        (arg0: string): Internal.PackResources_;
    }
    type Pack$ResourcesSupplier_ = ((arg0: string)=> Internal.PackResources_) | Pack$ResourcesSupplier;
    class Axolotl extends Internal.Animal implements Internal.Bucketable, Internal.VariantHolder<Internal.Axolotl$Variant>, Internal.LerpingModel {
        constructor(arg0: Internal.EntityType_<Internal.Axolotl>, arg1: Internal.Level_)
        getUpVector(arg0: number): Vec3d;
        gameEvent(arg0: Internal.GameEvent_, arg1: Internal.Entity_): void;
        static checkMobSpawnRules(arg0: Internal.EntityType_<Internal.Mob>, arg1: Internal.LevelAccessor_, arg2: Internal.MobSpawnType_, arg3: BlockPos_, arg4: Internal.RandomSource_): boolean;
        setDefaultMovementSpeedMultiplier(speed: number): void;
        isSuppressingBounce(): boolean;
        static onStopAttacking(arg0: Internal.Axolotl_, arg1: Internal.LivingEntity_): void;
        handler$ejj000$retrodamageindicators$retroDamageIndicators_onSyncedDataUpdated(arg0: Internal.EntityDataAccessor_<any>, arg1: Internal.CallbackInfo_): void;
        setTarget(arg0: Internal.LivingEntity_): void;
        isOnFire(): boolean;
        getDeathSound(): Internal.SoundEvent;
        onLeashDistance(arg0: number): void;
        getPositionCodec(): Internal.VecDeltaCodec;
        getPickedResult(arg0: Internal.HitResult_): Internal.ItemStack;
        setMaxUpStep(arg0: number): void;
        /**
         * @deprecated
        */
        updateFluidHeightAndDoFluidPushing(arg0: Internal.TagKey_<Internal.Fluid>, arg1: number): boolean;
        shouldPassengersInheritMalus(): boolean;
        convertTo<T extends Internal.Mob>(arg0: Internal.EntityType_<T>, arg1: boolean): T;
        getFallFlyingTicks(): number;
        runCommandSilent(command: string): number;
        setPosition(x: number, y: number, z: number): void;
        chunkPosition(): Internal.ChunkPos;
        dropLeash(arg0: boolean, arg1: boolean): void;
        gameEvent(arg0: Internal.GameEvent_): void;
        accessoriesCapability(): Internal.AccessoriesCapability;
        setXxa(arg0: number): void;
        updateWalkAnimation(arg0: number): void;
        setDelayedLeashHolderId(arg0: number): void;
        isShiftKeyDown(): boolean;
        isInFluidType(arg0: Internal.FluidState_): boolean;
        setUUID(arg0: Internal.UUID_): void;
        checkBelowWorld(): void;
        onEffectUpdated(arg0: Internal.MobEffectInstance_, arg1: boolean, arg2: Internal.Entity_): void;
        updateSwingTime(): void;
        setMotionZ(z: number): void;
        constant$zbj000$additionalentityattributes$additionalEntityAttributes$modifyUpwardSwimming(original: number, fluid: Internal.TagKey_<any>): number;
        "deserializeNBT(net.minecraft.nbt.Tag)"(arg0: Internal.Tag_): void;
        handler$zza000$step_height_entity_attribute$getStepHeight(cir: Internal.CallbackInfoReturnable_<any>): void;
        canFreeze(): boolean;
        ignoreExplosion(): boolean;
        getBlockY(): number;
        isSpectator(): boolean;
        isAlwaysExperienceDropper(): boolean;
        setMainHandItem(item: Internal.ItemStack_): void;
        removeEffectNoUpdate(arg0: Internal.MobEffect_): Internal.MobEffectInstance;
        spawnAtLocation(arg0: Internal.ItemLike_, arg1: number): Internal.ItemEntity;
        getPersistentData(): Internal.CompoundTag;
        getHealth(): number;
        getMaxHealth(): number;
        setPathfindingMalus(arg0: Internal.BlockPathTypes_, arg1: number): void;
        brainProvider(): Internal.Brain$Provider<Internal.Axolotl>;
        isRegisteredToWorld(): boolean;
        getRandomZ(arg0: number): number;
        setAggressive(arg0: boolean): void;
        constant$zbn000$additionalentityattributes$additionalEntityAttributes$knockDownwards(original: number): number;
        setRemoved(arg0: Internal.Entity$RemovalReason_): void;
        getAttachedOrCreate<A>(type: Internal.AttachmentType_<A>, initializer: Internal.Supplier_<A>): A;
        isInWaterRainOrBubble(): boolean;
        getDistanceSq(arg0: number, arg1: number, arg2: number): number;
        getRemovalReason(): Internal.Entity$RemovalReason;
        onFlap(): void;
        actuallyHurt(arg0: DamageSource_, arg1: number): void;
        resetFallDistance(): void;
        canSprint(): boolean;
        blockPosition(): BlockPos;
        setLevel(arg0: Internal.Level_): void;
        setBoundingBox(arg0: Internal.AABB_): void;
        isAmbientCreature(): boolean;
        setZza(arg0: number): void;
        getBlock(): Internal.BlockContainerJS;
        setEquipment(slot: Internal.EquipmentSlot_, item: Internal.ItemStack_): void;
        randomTeleport(arg0: number, arg1: number, arg2: number, arg3: boolean): boolean;
        invalidateCaps(): void;
        getName(): net.minecraft.network.chat.Component;
        playAmbientSound(): void;
        onGround(): boolean;
        getControlledVehicle(): Internal.Entity;
        isOnSameTeam(arg0: Internal.Entity_): boolean;
        getArmorValue(): number;
        isInFluidType(arg0: Internal.BiPredicate_<Internal.FluidType, number>): boolean;
        tick(): void;
        "setVariant(net.minecraft.world.entity.animal.axolotl.Axolotl$Variant)"(arg0: Internal.Axolotl$Variant_): void;
        getKillCredit(): Internal.LivingEntity;
        redirect$dlf000$spectrum$isWet(livingEntity: Internal.LivingEntity_): boolean;
        isPushedByFluid(arg0: Internal.FluidType_): boolean;
        getComponentContainer(): Internal.ComponentContainer;
        sinkInFluid(arg0: Internal.FluidType_): void;
        tryCheckInsideBlocks(): void;
        hasPermissions(arg0: number): boolean;
        accessoriesHolder(): Internal.AccessoriesHolder;
        teleportTo(dimension: ResourceLocation_, x: number, y: number, z: number, yaw: number, pitch: number): void;
        onInsideBlock(arg0: Internal.BlockState_): void;
        static createMobAttributes(): Internal.AttributeSupplier$Builder;
        getDefaultLootTable(): ResourceLocation;
        isAutoSpinAttack(): boolean;
        getRemainingFireTicks(): number;
        handleAirSupply(arg0: number): void;
        limitPistonMovement(arg0: Vec3d_): Vec3d;
        onlyOpCanSetNbt(): boolean;
        addMotion(arg0: number, arg1: number, arg2: number): void;
        fireImmune(): boolean;
        getMaxFallDistance(): number;
        dsurround_getEffectInfo(): Internal.EntityEffectInfo;
        isHolding(arg0: Internal.Item_): boolean;
        getZ(arg0: number): number;
        hasCustomOutlineRendering(arg0: Internal.Player_): boolean;
        static areAllEffectsAmbient(arg0: Internal.Collection_<Internal.MobEffectInstance>): boolean;
        doHurtTarget(arg0: Internal.Entity_): boolean;
        getTicksFrozen(): number;
        tickRidden(arg0: Internal.Player_, arg1: Vec3d_): void;
        getRandomX(arg0: number): number;
        spawnAtLocation(arg0: Internal.ItemStack_, arg1: number): Internal.ItemEntity;
        pick(arg0: number, arg1: number, arg2: boolean): Internal.HitResult;
        getVoicePitch(): number;
        setStatusMessage(message: net.minecraft.network.chat.Component_): void;
        setSleepingPos(arg0: BlockPos_): void;
        isDescending(): boolean;
        getAttributeBaseValue(arg0: Internal.Attribute_): number;
        sendEffectToPassengers(arg0: Internal.MobEffectInstance_): void;
        getHeadRotSpeed(): number;
        getYHeadRot(): number;
        handler$dlf000$spectrum$applyBonusDamage(source: DamageSource_, amount: number, cir: Internal.CallbackInfoReturnable_<any>): void;
        verifyEquippedItem(arg0: Internal.ItemStack_): void;
        getProjectile(arg0: Internal.ItemStack_): Internal.ItemStack;
        damageEquipment(slot: Internal.EquipmentSlot_, amount: number, onBroken: Internal.Consumer_<Internal.ItemStack>): void;
        syncPacketPositionCodec(arg0: number, arg1: number, arg2: number): void;
        setAbsorptionAmount(arg0: number): void;
        isSunBurnTick(): boolean;
        makeBrain(arg0: Internal.Dynamic_<any>): Internal.Brain<any>;
        handler$dlf000$spectrum$mitigateFallDamageWithPuffCirclet(heightDifference: number, onGround: boolean, landedState: Internal.BlockState_, landedPosition: BlockPos_, ci: Internal.CallbackInfo_): void;
        isAffectedByFluids(): boolean;
        canAddPassenger(arg0: Internal.Entity_): boolean;
        shouldRenderAtSqrDistance(arg0: number): boolean;
        getAttachedOrSet<A>(type: Internal.AttachmentType_<A>, defaultValue: A): A;
        damageSources(): Internal.DamageSources;
        removeAttached<A>(type: Internal.AttachmentType_<A>): A;
        removeAllGoals(arg0: Internal.Predicate_<Internal.Goal>): void;
        swing(): void;
        getAmbientSound(): Internal.SoundEvent;
        recreateFromPacket(arg0: Internal.ClientboundAddEntityPacket_): void;
        canStartSwimming(): boolean;
        setDeltaMovement(arg0: Vec3d_): void;
        getLeashOffset(arg0: number): Vec3d;
        isBaby(): boolean;
        damageEquipment(slot: Internal.EquipmentSlot_): void;
        isGlowing(): boolean;
        "isInFluidType(net.minecraft.world.level.material.FluidState)"(arg0: Internal.FluidState_): boolean;
        canBreatheUnderwater(): boolean;
        getWalkTargetValue(arg0: BlockPos_): number;
        die(arg0: DamageSource_): void;
        removeAllEffects(): boolean;
        getLeashOffset(): Vec3d;
        hasLineOfSight(arg0: Internal.Entity_): boolean;
        onClimbable(): boolean;
        isAttackable(): boolean;
        getRiddenSpeed(arg0: Internal.Player_): number;
        processPortalCooldown(): void;
        getSlot(arg0: number): Internal.SlotAccess;
        "deserializeNBT(net.minecraft.nbt.CompoundTag)"(arg0: Internal.CompoundTag_): void;
        stopSeenByPlayer(arg0: Internal.ServerPlayer_): void;
        isUnderWater(): boolean;
        stopRiding(): void;
        getSwimHighSpeedSplashSound(): Internal.SoundEvent;
        getLeashHolder(): Internal.Entity;
        createWitherRose(arg0: Internal.LivingEntity_): void;
        getX(arg0: number): number;
        getSensing(): Internal.Sensing;
        getLegsArmorItem(): Internal.ItemStack;
        captureDrops(arg0: Internal.Collection_<Internal.ItemEntity>): Internal.Collection<Internal.ItemEntity>;
        getSelfAndPassengers(): Internal.Stream<any>;
        rayTrace(distance: number): Internal.RayTraceResultJS;
        getDeltaMovement(): Vec3d;
        canTakeItem(arg0: Internal.ItemStack_): boolean;
        removeSoulSpeed(): void;
        shouldDropExperience(): boolean;
        getEquipmentDropChance(arg0: Internal.EquipmentSlot_): number;
        hasPassenger(arg0: Internal.Entity_): boolean;
        syncComponent(key: Internal.ComponentKey_<any>, packetWriter: Internal.ComponentPacketWriter_, predicate: Internal.PlayerSyncPredicate_): void;
        setSecondsOnFire(arg0: number): void;
        moveTo(arg0: number, arg1: number, arg2: number): void;
        "getDisplayName()"(): net.minecraft.network.chat.Component;
        getLootTable(): ResourceLocation;
        getTicksUsingItem(): number;
        tickHeadTurn(arg0: number, arg1: number): number;
        getArrowCount(): number;
        calculateViewVector(arg0: number, arg1: number): Vec3d;
        getMoveControl(): Internal.MoveControl;
        setMotion(arg0: number, arg1: number, arg2: number): void;
        playSound(arg0: Internal.SoundEvent_): void;
        getBrain(): Internal.Brain<Internal.Axolotl>;
        makeBoundingBox(): Internal.AABB;
        handler$deo000$eidolon$eidolonrepraised$getMobType(arg0: Internal.CallbackInfoReturnable_<any>): void;
        getDefaultMovementSpeed(): number;
        restoreFrom(arg0: Internal.Entity_): void;
        redirect$bkg000$fabric_entity_events_v1$beforeEntityKilled(livingEntity: Internal.LivingEntity_, source: DamageSource_, amount: number): boolean;
        isPeacefulCreature(): boolean;
        setOnGround(arg0: boolean): void;
        addEffect(arg0: Internal.MobEffectInstance_, arg1: Internal.Entity_): boolean;
        ate(): void;
        setPos(arg0: number, arg1: number, arg2: number): void;
        notify(): void;
        getFirstTick(): boolean;
        setPersistenceRequired(): void;
        getLastHurtByMobTimestamp(): number;
        getVehicle(): Internal.Entity;
        canFallInLove(): boolean;
        isEffectiveAi(): boolean;
        startRiding(arg0: Internal.Entity_, arg1: boolean): boolean;
        setSpawnCancelled(arg0: boolean): void;
        getStringUuid(): string;
        setSwimming(arg0: boolean): void;
        canHydrateInFluidType(arg0: Internal.FluidType_): boolean;
        getMainArm(): Internal.HumanoidArm;
        checkSpawnRules(arg0: Internal.LevelAccessor_, arg1: Internal.MobSpawnType_): boolean;
        getRotationVector(): Internal.Vec2;
        getHurtDir(): number;
        isSprinting(): boolean;
        isMaxGroupSizeReached(arg0: number): boolean;
        getMotionY(): number;
        getOffhandItem(): Internal.ItemStack;
        canCollideWith(arg0: Internal.Entity_): boolean;
        getBlockExplosionResistance(arg0: Internal.Explosion_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.FluidState_, arg5: number): number;
        getFluidFallDistanceModifier(arg0: Internal.FluidType_): number;
        clearSleepingPos(): void;
        canSpawnSprintParticle(): boolean;
        canRide(arg0: Internal.Entity_): boolean;
        "moveTo(net.minecraft.core.BlockPos,float,float)"(arg0: BlockPos_, arg1: number, arg2: number): void;
        getLastHurtMob(): Internal.LivingEntity;
        moveRelative(arg0: number, arg1: Vec3d_): void;
        getOnPos(arg0: number): BlockPos;
        isAddedToWorld(): boolean;
        saveAsPassenger(arg0: Internal.CompoundTag_): boolean;
        gtceu$setFireImmune(isImmune: boolean): void;
        getDrinkingSound(arg0: Internal.ItemStack_): Internal.SoundEvent;
        getLastDamageSource(): DamageSource;
        getSoundSource(): Internal.SoundSource;
        removeAfterChangingDimensions(): void;
        setNoActionTime(arg0: number): void;
        setMovementSpeedAddition(speed: number): void;
        equipmentHasChanged(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getPose(): Internal.Pose;
        getSharedFlag(arg0: number): boolean;
        getAttribute(arg0: Internal.Attribute_): Internal.AttributeInstance;
        setPositionAndRotation(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        canBeAffected(arg0: Internal.MobEffectInstance_): boolean;
        tryAddFrost(): void;
        checkFallDamage(arg0: number, arg1: boolean, arg2: Internal.BlockState_, arg3: BlockPos_): void;
        ageUp(arg0: number): void;
        quark$lastHurtByPlayer(): Internal.Player;
        getRestrictCenter(): BlockPos;
        isLeftHanded(): boolean;
        removeVehicle(): void;
        defineSynchedData(): void;
        checkInsideBlocks(): void;
        setZ(z: number): void;
        getY(): number;
        hashCode(): number;
        deserializeNBT(arg0: Internal.CompoundTag_): void;
        finalizeSpawnChildFromBreeding(arg0: Internal.ServerLevel_, arg1: Internal.Animal_, arg2: Internal.AgeableMob_): void;
        eat(arg0: Internal.Level_, arg1: Internal.ItemStack_): Internal.ItemStack;
        createHoverEvent(): Internal.HoverEvent;
        getPickupSound(): Internal.SoundEvent;
        isWithinMeleeAttackRange(arg0: Internal.LivingEntity_): boolean;
        serverAiStep(): void;
        broadcastBreakEvent(arg0: Internal.EquipmentSlot_): void;
        getExitPortal(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: boolean, arg3: Internal.WorldBorder_): Internal.Optional<Internal.BlockUtil$FoundRectangle>;
        handler$bkm000$fabric_entity_events_v1$injectElytraTick(info: Internal.CallbackInfo_): void;
        sendDebugPackets(): void;
        setItemSlotAndDropWhenKilled(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): void;
        showVehicleHealth(): boolean;
        getDistance(pos: BlockPos_): number;
        isBlocking(): boolean;
        damageHeldItem(hand: Internal.InteractionHand_, amount: number): void;
        removeAttribute(attribute: Internal.Attribute_, identifier: string): void;
        playMuffledStepSound(arg0: Internal.BlockState_, arg1: BlockPos_): void;
        isPushedByFluid(): boolean;
        dropFromLootTable(arg0: DamageSource_, arg1: boolean): void;
        getArmorCoverPercentage(): number;
        handleRelativeFrictionAndCalculateMovement(arg0: Vec3d_, arg1: number): Vec3d;
        turn(arg0: number, arg1: number): void;
        applySupportingEffects(arg0: Internal.Player_): void;
        getAirSupply(): number;
        waterSwimSound(): void;
        moveTo(arg0: BlockPos_, arg1: number, arg2: number): void;
        isPlayer(): boolean;
        isAnimal(): boolean;
        readAdditionalSaveData(arg0: Internal.CompoundTag_): void;
        canBeCollidedWith(): boolean;
        getMotionDirection(): Internal.Direction;
        asComponentProvider(): Internal.ComponentProvider;
        lavaHurt(): void;
        handleDamageEvent(arg0: DamageSource_): void;
        updateUsingItem(arg0: Internal.ItemStack_): void;
        getFabricBalmData(): Internal.CompoundTag;
        canChangeDimensions(): boolean;
        jumpInFluid(arg0: Internal.FluidType_): void;
        getCommandSenderWorld(): Internal.Level;
        quark$lastHurtByPlayerTime(): number;
        getTotalMovementSpeed(): number;
        changeDimension(arg0: Internal.ServerLevel_): Internal.Entity;
        moveInFluid(arg0: Internal.FluidState_, arg1: Vec3d_, arg2: number): boolean;
        fromBucket(): boolean;
        updatingUsingItem(): void;
        blockedByShield(arg0: Internal.LivingEntity_): void;
        attack(hp: number): void;
        canSwimInFluidType(arg0: Internal.FluidType_): boolean;
        getFireImmuneTicks(): number;
        getAttributes(): Internal.AttributeMap;
        isSpawnCancelled(): boolean;
        "hasPassenger(java.util.function.Predicate)"(arg0: Internal.Predicate_<Internal.Entity>): boolean;
        getDimensions(arg0: Internal.Pose_): Internal.EntityDimensions;
        spawnChildFromBreeding(arg0: Internal.ServerLevel_, arg1: Internal.Animal_): void;
        setInLoveTime(arg0: number): void;
        isSwimming(): boolean;
        setSprinting(arg0: boolean): void;
        mayInteract(arg0: Internal.Level_, arg1: BlockPos_): boolean;
        setRot(arg0: number, arg1: number): void;
        static checkAxolotlSpawnRules(arg0: Internal.EntityType_<Internal.LivingEntity>, arg1: Internal.ServerLevelAccessor_, arg2: Internal.MobSpawnType_, arg3: BlockPos_, arg4: Internal.RandomSource_): boolean;
        setPortalCooldown(): void;
        getAttackAnim(arg0: number): number;
        setX(x: number): void;
        getPortalWaitTime(): number;
        getBlockStateOn(): Internal.BlockState;
        wantsToPickUp(arg0: Internal.ItemStack_): boolean;
        getItemBySlot(arg0: Internal.EquipmentSlot_): Internal.ItemStack;
        getFluidJumpThreshold(): number;
        enchantSpawnedArmor(arg0: Internal.RandomSource_, arg1: number, arg2: Internal.EquipmentSlot_): void;
        "setPositionAndRotation(double,double,double,float,float)"(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        isInvisibleTo(arg0: Internal.Player_): boolean;
        stopSleeping(): void;
        spectrum$setActuallyTouchingWater(actuallyTouchingWater: boolean): void;
        setAirSupply(arg0: number): void;
        getOnPos(): BlockPos;
        isUndead(): boolean;
        repositionEntityAfterLoad(): boolean;
        static createLivingAttributes(): Internal.AttributeSupplier$Builder;
        getBlockPosBelowThatAffectsMyMovement(): BlockPos;
        moveTowardsClosestSpace(arg0: number, arg1: number, arg2: number): void;
        getStepHeight(): number;
        static getCollisionHorizontalEscapeVector(arg0: number, arg1: number, arg2: number): Vec3d;
        setRegisteredToWorld(navigation: Internal.PathNavigation_): void;
        isSleeping(): boolean;
        stopUsingItem(): void;
        acceptsFailure(): boolean;
        playCombinationStepSounds(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: BlockPos_): void;
        setOnGroundWithKnownMovement(arg0: boolean, arg1: Vec3d_): void;
        ageBoundaryReached(): void;
        getFluidFallingAdjustedMovement(arg0: number, arg1: boolean, arg2: Vec3d_): Vec3d;
        setOldPosAndRot(): void;
        isFree(arg0: number, arg1: number, arg2: number): boolean;
        getDismountPoses(): Internal.ImmutableList<Internal.Pose>;
        getLastHurtMobTimestamp(): number;
        playBlockFallSound(): void;
        lithiumOnEquipmentChanged(): void;
        "moveTo(double,double,double)"(arg0: number, arg1: number, arg2: number): void;
        setRemainingFireTicks(arg0: number): void;
        updateControlFlags(): void;
        createBodyControl(): Internal.BodyRotationControl;
        /**
         * @deprecated
        */
        getOnPosLegacy(): BlockPos;
        setPos(arg0: Vec3d_): void;
        findDimensionEntryPoint(arg0: Internal.ServerLevel_): Internal.PortalInfo;
        enchantSpawnedWeapon(arg0: Internal.RandomSource_, arg1: number): void;
        populateDefaultEquipmentEnchantments(arg0: Internal.RandomSource_, arg1: Internal.DifficultyInstance_): void;
        damageHeldItem(hand: Internal.InteractionHand_, amount: number, onBroken: Internal.Consumer_<Internal.ItemStack>): void;
        getStandingEyeHeight(arg0: Internal.Pose_, arg1: Internal.EntityDimensions_): number;
        setCanPickUpLoot(arg0: boolean): void;
        getMainHandItem(): Internal.ItemStack;
        areCapsCompatible(arg0: Internal.CapabilityDispatcher_): boolean;
        setSilent(arg0: boolean): void;
        doPush(arg0: Internal.Entity_): void;
        captureDrops(): Internal.Collection<Internal.ItemEntity>;
        hasExactlyOnePlayerPassenger(): boolean;
        canBeSeenAsEnemy(): boolean;
        handler$dlf000$spectrum$drop(source: DamageSource_, ci: Internal.CallbackInfo_): void;
        getSwimSplashSound(): Internal.SoundEvent;
        setLeftHanded(arg0: boolean): void;
        getActiveEffects(): Internal.Collection<Internal.MobEffectInstance>;
        isOnPortalCooldown(): boolean;
        hurtArmor(arg0: DamageSource_, arg1: number): void;
        canAttack(arg0: Internal.LivingEntity_, arg1: Internal.TargetingConditions_): boolean;
        increaseAirSupply(arg0: number): number;
        getAttributeValue(arg0: Internal.Holder_<Internal.Attribute>): number;
        /**
         * @deprecated
        */
        static saveDefaultDataToBucketTag(arg0: Internal.Mob_, arg1: Internal.ItemStack_): void;
        setPitch(arg0: number): void;
        isMultipartEntity(): boolean;
        setPosRaw(arg0: number, arg1: number, arg2: number): void;
        handleEntityEvent(arg0: number): void;
        getParts(): Internal.PartEntity<any>[];
        isUsingItem(): boolean;
        spawnSoulSpeedParticle(): void;
        removeFrost(): void;
        isAlwaysTicking(): boolean;
        interactAt(arg0: Internal.Player_, arg1: Vec3d_, arg2: Internal.InteractionHand_): InteractionResult;
        lerpTo(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): void;
        onPassengerTurned(arg0: Internal.Entity_): void;
        spawnAtLocation(arg0: Internal.ItemLike_): Internal.ItemEntity;
        setAttached(type: Internal.AttachmentType_<any>, value: any): any;
        /**
         * @deprecated
        */
        couldAcceptPassenger(): boolean;
        getForgePersistentData(): Internal.CompoundTag;
        lithiumOnBlockCacheDeleted(): void;
        "spawnAtLocation(net.minecraft.world.level.ItemLike,int)"(arg0: Internal.ItemLike_, arg1: number): Internal.ItemEntity;
        setInvulnerable(arg0: boolean): void;
        push(arg0: Internal.Entity_): void;
        isInFluidType(): boolean;
        jumpFromGround(): void;
        canMate(arg0: Internal.Animal_): boolean;
        canReplaceCurrentItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getDamageAfterArmorAbsorb(arg0: DamageSource_, arg1: number): number;
        handler$chi000$cofh_core$shield(arg0: DamageSource_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        maxUpStep(): number;
        handler$fdm000$quark$onEatGoldenCarrot(arg0: Internal.Player_, arg1: Internal.InteractionHand_, arg2: Internal.ItemStack_, arg3: Internal.CallbackInfo_): void;
        setGlowing(arg0: boolean): void;
        load(arg0: Internal.CompoundTag_): void;
        "broadcastBreakEvent(net.minecraft.world.entity.EquipmentSlot)"(arg0: Internal.EquipmentSlot_): void;
        setLeashedTo(arg0: Internal.Entity_, arg1: boolean): void;
        onChangedBlock(arg0: BlockPos_): void;
        isAlive(): boolean;
        usePlayerItem(arg0: Internal.Player_, arg1: Internal.InteractionHand_, arg2: Internal.ItemStack_): void;
        startSleeping(arg0: BlockPos_): void;
        dsurround_getPotionSwirlColor(): number;
        pickUpItem(arg0: Internal.ItemEntity_): void;
        getBbHeight(): number;
        getMeleeAttackRangeSqr(arg0: Internal.LivingEntity_): number;
        getViewVector(arg0: number): Vec3d;
        getTags(): Internal.Set<string>;
        calculateFallDamage(arg0: number, arg1: number): number;
        getLastAttacker(): Internal.LivingEntity;
        hasControllingPassenger(): boolean;
        closerThan(arg0: Internal.Entity_, arg1: number, arg2: number): boolean;
        absMoveTo(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        updateEffectVisibility(): void;
        onPathfindingStart(): void;
        getPercentFrozen(): number;
        setPortalCooldown(arg0: number): void;
        hasGlowingTag(): boolean;
        shouldBlockExplode(arg0: Internal.Explosion_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: number): boolean;
        setPosition(block: Internal.BlockContainerJS_): void;
        handler$den000$eidolon$eidolonrepraised$isAlliedTo(arg0: Internal.Entity_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        isLeashed(): boolean;
        localvar$dlf000$spectrum$modifyDamage(amount: number, source: DamageSource_): number;
        getSoundVolume(): number;
        addEffect(arg0: Internal.MobEffectInstance_): boolean;
        getVariant(): any;
        ageUp(arg0: number, arg1: boolean): void;
        getViewXRot(arg0: number): number;
        canRiderInteract(): boolean;
        fabric_getAttachments(): Internal.Map<any, any>;
        setPose(arg0: Internal.Pose_): void;
        getReachDistance(): number;
        getEntityType(): Internal.EntityType<any>;
        isWaterCreature(): boolean;
        toString(): string;
        updateInvisibilityStatus(): void;
        getBreedOffspring(arg0: Internal.ServerLevel_, arg1: Internal.AgeableMob_): Internal.AgeableMob;
        saveToBucketTag(arg0: Internal.ItemStack_): void;
        setLastHurtByPlayer(arg0: Internal.Player_): void;
        "getServer()"(): Internal.MinecraftServer;
        mobInteract(arg0: Internal.Player_, arg1: Internal.InteractionHand_): InteractionResult;
        wasExperienceConsumed(): boolean;
        isPushable(): boolean;
        setYBodyRot(arg0: number): void;
        foodEaten(is: Internal.ItemStack_): void;
        onClientRemoval(): void;
        handler$dlf000$spectrum$eat(stack: Internal.ItemStack_, world: Internal.Level_, targetEntity: Internal.LivingEntity_, ci: Internal.CallbackInfo_): void;
        self(): Internal.LivingEntity;
        shouldDropLoot(): boolean;
        reviveCaps(): void;
        getDistance(x: number, y: number, z: number): number;
        setMotionY(y: number): void;
        static createAttributes(): Internal.AttributeSupplier$Builder;
        getAttached(type: Internal.AttachmentType_<any>): any;
        setRotation(yaw: number, pitch: number): void;
        handler$cam000$radium$tryShortcutFluidPushing(ci: Internal.CallbackInfo_, box: Internal.AABB_, x1: number, x2: number, y1: number, y2: number, z1: number, z2: number, zero: number): void;
        calculateEntityAnimation(arg0: boolean): void;
        forceAddEffect(arg0: Internal.MobEffectInstance_, arg1: Internal.Entity_): void;
        setChestArmorItem(item: Internal.ItemStack_): void;
        getComponent<C extends dev.onyxstudios.cca.api.v3.component.Component>(key: Internal.ComponentKey_<C>): C;
        checkAutoSpinAttack(arg0: Internal.AABB_, arg1: Internal.AABB_): void;
        onAboveBubbleCol(arg0: boolean): void;
        "playSound(net.minecraft.sounds.SoundEvent,float,float)"(id: Internal.SoundEvent_, volume: number, pitch: number): void;
        toComponentPacket(key: Internal.ComponentKey_<any>, writer: Internal.ComponentPacketWriter_, recipient: Internal.ServerPlayer_): Internal.ClientboundCustomPayloadPacket;
        isPassenger(): boolean;
        hasPose(arg0: Internal.Pose_): boolean;
        playStepSound(arg0: BlockPos_, arg1: Internal.BlockState_): void;
        /**
         * @deprecated
        */
        isEyeInFluid(arg0: Internal.TagKey_<Internal.Fluid>): boolean;
        isInvulnerableTo(arg0: DamageSource_): boolean;
        makeStuckInBlock(arg0: Internal.BlockState_, arg1: Vec3d_): void;
        getAttachedOrGet<A>(type: Internal.AttachmentType_<A>, defaultValue: Internal.Supplier_<A>): A;
        isSensitiveToWater(): boolean;
        skipAttackInteraction(arg0: Internal.Entity_): boolean;
        maybeBackOffFromEdge(arg0: Vec3d_, arg1: Internal.MoverType_): Vec3d;
        newFloatList(...arg0: number[]): Internal.ListTag;
        lerpMotion(arg0: number, arg1: number, arg2: number): void;
        "getAttributeValue(net.minecraft.core.Holder)"(arg0: Internal.Holder_<Internal.Attribute>): number;
        shouldRender(arg0: number, arg1: number, arg2: number): boolean;
        getJumpControl(): Internal.JumpControl;
        isFlapping(): boolean;
        getEyeHeight(arg0: Internal.Pose_, arg1: Internal.EntityDimensions_): number;
        getFeetArmorItem(): Internal.ItemStack;
        static getViewScale(): number;
        getVisualRotationYInDegrees(): number;
        setSpeed(arg0: number): void;
        requiresCustomPersistence(): boolean;
        isDiscrete(): boolean;
        unRide(): void;
        getLevel(): Internal.Level;
        "spawnAtLocation(net.minecraft.world.item.ItemStack)"(arg0: Internal.ItemStack_): Internal.ItemEntity;
        static bucketMobPickup<T extends Internal.LivingEntity & Internal.Bucketable>(arg0: Internal.Player_, arg1: Internal.InteractionHand_, arg2: T): Internal.Optional<InteractionResult>;
        getCombatTracker(): Internal.CombatTracker;
        updateDynamicGameEventListener(arg0: Internal.BiConsumer_<Internal.DynamicGameEventListener<any>, Internal.ServerLevel>): void;
        canBreed(): boolean;
        "onSyncedDataUpdated(net.minecraft.network.syncher.EntityDataAccessor)"(arg0: Internal.EntityDataAccessor_<any>): void;
        isNoAi(): boolean;
        areCapsCompatible(arg0: Internal.CapabilityProvider_<Internal.Entity>): boolean;
        extinguishFire(): void;
        getChestArmorItem(): Internal.ItemStack;
        damageEquipment(slot: Internal.EquipmentSlot_, amount: number): void;
        getBlockJumpFactor(): number;
        tell(message: net.minecraft.network.chat.Component_): void;
        closerThan(arg0: Internal.Entity_, arg1: number): boolean;
        onSoulSpeedBlock(): boolean;
        /**
         * @deprecated
        */
        goDownInWater(): void;
        getDistanceSq(pos: BlockPos_): number;
        indicateDamage(arg0: number, arg1: number): void;
        canBeSeenByAnyone(): boolean;
        playEntityOnFireExtinguishedSound(): void;
        setVariant(arg0: any): void;
        isFullyFrozen(): boolean;
        dropCustomDeathLoot(arg0: DamageSource_, arg1: number, arg2: boolean): void;
        handler$eop000$wizards_reborn$isFallFlying(arg0: Internal.CallbackInfoReturnable_<any>): void;
        isInWall(): boolean;
        getMeleeAttackReferencePosition(): Vec3d;
        getAllSlots(): Internal.Iterable<Internal.ItemStack>;
        remove(arg0: Internal.Entity$RemovalReason_): void;
        getScale(): number;
        handler$dlf000$spectrum$canHaveStatusEffect(statusEffectInstance: Internal.MobEffectInstance_, cir: Internal.CallbackInfoReturnable_<any>): void;
        isSuppressingSlidingDownLadder(): boolean;
        getBlockZ(): number;
        dampensVibrations(): boolean;
        hasAttached(type: Internal.AttachmentType_<any>): boolean;
        isSilent(): boolean;
        "playSound(net.minecraft.sounds.SoundEvent)"(id: Internal.SoundEvent_): void;
        getPitch(): number;
        newDoubleList(...arg0: number[]): Internal.ListTag;
        getPathfindingMalus(arg0: Internal.BlockPathTypes_): number;
        getRandom(): Internal.RandomSource;
        canReplaceEqualItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        rotate(arg0: Internal.Rotation_): number;
        shouldRiderFaceForward(arg0: Internal.Player_): boolean;
        getPassengersAndSelf(): Internal.Stream<any>;
        breakItem(arg0: Internal.ItemStack_): void;
        rayTrace(distance: number, fluids: boolean): Internal.RayTraceResultJS;
        "getAttributeBaseValue(net.minecraft.core.Holder)"(arg0: Internal.Holder_<Internal.Attribute>): number;
        clearRestriction(): void;
        "self()"(): Internal.LivingEntity;
        getModelRotationValues(): Internal.Map<string, Vector3f>;
        getAge(): number;
        rayTrace(): Internal.RayTraceResultJS;
        alwaysAccepts(): boolean;
        "isHolding(java.util.function.Predicate)"(arg0: Internal.Predicate_<Internal.ItemStack>): boolean;
        getNoActionTime(): number;
        isVisuallyCrawling(): boolean;
        isAggressive(): boolean;
        setYya(arg0: number): void;
        setDropChance(arg0: Internal.EquipmentSlot_, arg1: number): void;
        "broadcastBreakEvent(net.minecraft.world.InteractionHand)"(arg0: Internal.InteractionHand_): void;
        setFluidTypeHeight(arg0: Internal.FluidType_, arg1: number): void;
        dropExperience(): void;
        teleportRelative(arg0: number, arg1: number, arg2: number): void;
        isFood(arg0: Internal.ItemStack_): boolean;
        setBaby(arg0: boolean): void;
        localvar$dkk000$spectrum$applyAdditionalFirstStrikeEnchantmentDamage(amount: number, source: DamageSource_): number;
        getLastHurtByMob(): Internal.LivingEntity;
        isInWaterOrBubble(): boolean;
        decreaseAirSupply(arg0: number): number;
        updateFluidHeightAndDoFluidPushing(): void;
        spawnParticles(arg0: Internal.ItemStack_, arg1: number): void;
        handler$cil001$dsurround$playStepSound(pos: BlockPos_, state: Internal.BlockState_, ci: Internal.CallbackInfo_): void;
        getPortalCooldown(): number;
        getItem(): Internal.ItemStack;
        causeFallDamage(arg0: number, arg1: number, arg2: DamageSource_): boolean;
        releaseUsingItem(): void;
        getPosition(arg0: number): Vec3d;
        removeFreeWill(): void;
        removeWhenFarAway(arg0: number): boolean;
        wait(arg0: number): void;
        isIgnoringBlockTriggers(): boolean;
        setRecordPlayingNearby(arg0: BlockPos_, arg1: boolean): void;
        isInRain(): boolean;
        getHandHoldingItemAngle(arg0: Internal.Item_): Vec3d;
        hasItemInSlot(arg0: Internal.EquipmentSlot_): boolean;
        canUpdate(arg0: boolean): void;
        getEyeInFluidType(): Internal.FluidType;
        distanceToSqr(arg0: Vec3d_): number;
        syncComponent(key: Internal.ComponentKey_<any>): void;
        modifyAttached<A>(type: Internal.AttachmentType_<A>, modifier: Internal.UnaryOperator_<A>): A;
        isSteppingCarefully(): boolean;
        getSoundFromFluidType(arg0: Internal.FluidType_, arg1: Internal.SoundAction_): Internal.SoundEvent;
        "spawnAtLocation(net.minecraft.world.item.ItemStack,float)"(arg0: Internal.ItemStack_, arg1: number): Internal.ItemEntity;
        addAdditionalSaveData(arg0: Internal.CompoundTag_): void;
        getBlockX(): number;
        /**
         * @deprecated
        */
        getLightLevelDependentMagicValue(): number;
        isFallFlying(): boolean;
        getEncodeId(): string;
        getY(arg0: number): number;
        getMaxHeadXRot(): number;
        getNbt(): Internal.CompoundTag;
        setInvisible(arg0: boolean): void;
        canEnterPose(arg0: Internal.Pose_): boolean;
        getEffect(arg0: Internal.MobEffect_): Internal.MobEffectInstance;
        setTotalMovementSpeedMultiplier(speed: number): void;
        setHealth(arg0: number): void;
        handler$deo000$eidolon$eidolonrepraised$canAttack(arg0: Internal.LivingEntity_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        attack(arg0: DamageSource_, arg1: number): boolean;
        getBlockSpeedFactor(): number;
        modifyExpressionValue$cpi002$mna$elytraOverride(arg0: boolean): boolean;
        onInsideBubbleColumn(arg0: boolean): void;
        getEyePosition(): Vec3d;
        getEyeHeight(): number;
        onOffspringSpawnedFromEgg(arg0: Internal.Player_, arg1: Internal.Mob_): void;
        setDiscardFriction(arg0: boolean): void;
        hasPassenger(arg0: Internal.Predicate_<Internal.Entity>): boolean;
        getYaw(): number;
        swing(arg0: Internal.InteractionHand_, arg1: boolean): void;
        getUsedItemHand(): Internal.InteractionHand;
        setDefaultMovementSpeed(speed: number): void;
        onEffectAdded(arg0: Internal.MobEffectInstance_, arg1: Internal.Entity_): void;
        canAttackType(arg0: Internal.EntityType_<any>): boolean;
        setPlayingDead(arg0: boolean): void;
        getCapability<T>(arg0: Internal.Capability_<T>, arg1: Internal.Direction_): Internal.LazyOptional<T>;
        canEntityBeSeen(entity: Internal.LivingEntity_): boolean;
        dsurround_isJumping(): boolean;
        setCustomNameVisible(arg0: boolean): void;
        isAlliedTo(arg0: Internal.Team_): boolean;
        handler$cpk000$mna$playSound(arg0: Internal.SoundEvent_, arg1: number, arg2: number, arg3: Internal.CallbackInfo_): void;
        getAttachedOrCreate<A>(type: Internal.AttachmentType_<A>): A;
        canFireProjectileWeapon(arg0: Internal.ProjectileWeaponItem_): boolean;
        getControllingPassenger(): Internal.LivingEntity;
        getScriptType(): Internal.ScriptType;
        shouldDiscardFriction(): boolean;
        startRiding(arg0: Internal.Entity_): boolean;
        saveWithoutId(arg0: Internal.CompoundTag_): Internal.CompoundTag;
        getForward(): Vec3d;
        serializeNBT(): Internal.Tag;
        getDamageAfterMagicAbsorb(arg0: DamageSource_, arg1: number): number;
        setFeetArmorItem(item: Internal.ItemStack_): void;
        getId(): number;
        canBeHitByProjectile(): boolean;
        getRecipientsForComponentSync(): Internal.Iterable<any>;
        handler$dkf000$spectrum$dropStack(stack: Internal.ItemStack_, cir: Internal.CallbackInfoReturnable_<any>): void;
        getEyeY(): number;
        skipDropExperience(): void;
        fabric_readAttachmentsFromNbt(nbt: Internal.CompoundTag_): void;
        getBoundingBox(): Internal.AABB;
        isInWaterOrRain(): boolean;
        setItemSlot(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): void;
        modify$dlf001$spectrum$applyExuberance(originalXP: number): number;
        handler$dlf000$spectrum$setSprinting(sprinting: boolean, ci: Internal.CallbackInfo_): void;
        tryAddSoulSpeed(): void;
        equals(arg0: any): boolean;
        handler$cpk000$mna$canEnterPose(arg0: Internal.Pose_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        getViewYRot(arg0: number): number;
        getSwimSound(): Internal.SoundEvent;
        getLastArmorItem(arg0: Internal.EquipmentSlot_): Internal.ItemStack;
        dismountsUnderwater(): boolean;
        isAffectedByPotions(): boolean;
        playerTouch(arg0: Internal.Player_): void;
        addTag(arg0: string): boolean;
        getEyeHeight(arg0: Internal.Pose_): number;
        getAddEntityPacket(): Internal.Packet<Internal.ClientGamePacketListener>;
        doWaterSplashEffect(): void;
        static getEquipmentForSlot(arg0: Internal.EquipmentSlot_, arg1: number): Internal.Item;
        isWithinRestriction(arg0: BlockPos_): boolean;
        getTeam(): Internal.Team;
        setTicksFrozen(arg0: number): void;
        getUseItem(): Internal.ItemStack;
        getMyRidingOffset(): number;
        handler$dlf000$spectrum$addStatusEffect(effect: Internal.MobEffectInstance_, source: Internal.Entity_, cir: Internal.CallbackInfoReturnable_<any>): void;
        dismountTo(arg0: number, arg1: number, arg2: number): void;
        getFlyingSpeed(): number;
        hasCustomName(): boolean;
        getSwimAmount(arg0: number): number;
        isLiving(): boolean;
        getX(): number;
        dropAllDeathLoot(arg0: DamageSource_): void;
        isVehicle(): boolean;
        static transfer(original: Internal.AttachmentTarget_, target: Internal.AttachmentTarget_, isDeath: boolean): void;
        /**
         * @deprecated
        */
        static loadDefaultDataFromBucketTag(arg0: Internal.Mob_, arg1: Internal.CompoundTag_): void;
        tickLeash(): void;
        spawnAtLocation(arg0: Internal.ItemStack_): Internal.ItemEntity;
        customServerAiStep(): void;
        mergeNbt(tag: Internal.CompoundTag_): Internal.Entity;
        handler$cpf000$mna$onClimbable(arg0: Internal.CallbackInfoReturnable_<any>): void;
        thunderHit(arg0: Internal.ServerLevel_, arg1: Internal.LightningBolt_): void;
        setIsInPowderSnow(arg0: boolean): void;
        doEnchantDamageEffects(arg0: Internal.LivingEntity_, arg1: Internal.Entity_): void;
        setCustomName(arg0: net.minecraft.network.chat.Component_): void;
        handleNetherPortal(): void;
        getTeamId(): string;
        canBeRiddenUnderFluidType(arg0: Internal.FluidType_, arg1: Internal.Entity_): boolean;
        wthit_getTypeName(): net.minecraft.network.chat.Component;
        setStingerCount(arg0: number): void;
        getMaxHeadYRot(): number;
        getBoundingBoxForPose(arg0: Internal.Pose_): Internal.AABB;
        isCustomNameVisible(): boolean;
        isSupportedBy(arg0: BlockPos_): boolean;
        followLeashSpeed(): number;
        getPistonPushReaction(): Internal.PushReaction;
        shouldRiderSit(): boolean;
        handler$dlf000$spectrum$checkForTotemPendant(source: DamageSource_, cir: Internal.CallbackInfoReturnable_<any>): void;
        lookAt(arg0: Internal.EntityAnchorArgument$Anchor_, arg1: Vec3d_): void;
        hurtCurrentlyUsedShield(arg0: number): void;
        triggerItemUseEffects(arg0: Internal.ItemStack_, arg1: number): void;
        getLootTableSeed(): number;
        isInFluidType(arg0: Internal.FluidType_): boolean;
        getFluidMotionScale(arg0: Internal.FluidType_): number;
        getMotionX(): number;
        "onSyncedDataUpdated(java.util.List)"(arg0: Internal.List_<Internal.SynchedEntityData$DataValue<any>>): void;
        canBeLeashed(arg0: Internal.Player_): boolean;
        hasIndirectPassenger(arg0: Internal.Entity_): boolean;
        getEntityData(): Internal.SynchedEntityData;
        handleInsidePortal(arg0: BlockPos_): void;
        getPotionEffects(): Internal.EntityPotionEffectsJS;
        /**
         * @deprecated
        */
        jumpInLiquid(arg0: Internal.TagKey_<Internal.Fluid>): void;
        absMoveTo(arg0: number, arg1: number, arg2: number): void;
        onBelowWorld(): void;
        isOnRails(): boolean;
        getAttachedOrThrow<A>(type: Internal.AttachmentType_<A>): A;
        getStingerCount(): number;
        getFallSounds(): Internal.LivingEntity$Fallsounds;
        reapplyPosition(): void;
        getAttributeTotalValue(attribute: Internal.Attribute_): number;
        getDimensionChangingDelay(): number;
        setLivingEntityFlag(arg0: number, arg1: boolean): void;
        static isBrightEnoughToSpawn(arg0: Internal.BlockAndTintGetter_, arg1: BlockPos_): boolean;
        getWaterSlowDown(): number;
        createNavigation(arg0: Internal.Level_): Internal.PathNavigation;
        setYaw(arg0: number): void;
        getPickRadius(): number;
        isPathFinding(): boolean;
        isRemoved(): boolean;
        teleportToWithTicket(arg0: number, arg1: number, arg2: number): void;
        spawnAnim(): void;
        getJumpBoostPower(): number;
        fillCrashReportCategory(arg0: Internal.CrashReportCategory_): void;
        handler$cpe000$mna$jumpInLiquid(arg0: Internal.TagKey_<any>, arg1: Internal.CallbackInfo_): void;
        self(): Internal.Entity;
        refreshDimensions(): void;
        "getAttributeValue(net.minecraft.world.entity.ai.attributes.Attribute)"(arg0: Internal.Attribute_): number;
        "spawnAtLocation(net.minecraft.world.level.ItemLike)"(arg0: Internal.ItemLike_): Internal.ItemEntity;
        "isHolding(net.minecraft.world.item.Item)"(arg0: Internal.Item_): boolean;
        setShiftKeyDown(arg0: boolean): void;
        getEyePosition(arg0: number): Vec3d;
        getPassengers(): Internal.EntityArrayList;
        getRiddenInput(arg0: Internal.Player_, arg1: Vec3d_): Vec3d;
        calculateUpVector(arg0: number, arg1: number): Vec3d;
        handler$dlf000$spectrum$TriggerArmorWithHitEffect(source: DamageSource_, amount: number, cir: Internal.CallbackInfoReturnable_<any>): void;
        spawnSprintParticle(): void;
        getMaxHeightFluidType(): Internal.FluidType;
        getZ(): number;
        checkSupportingBlock(arg0: boolean, arg1: Vec3d_): void;
        dropEquipment(): void;
        shouldRemoveSoulSpeed(arg0: Internal.BlockState_): boolean;
        teleportTo(arg0: number, arg1: number, arg2: number): void;
        getAttributeBaseValue(arg0: Internal.Holder_<Internal.Attribute>): number;
        getServer(): Internal.MinecraftServer;
        getExperienceReward(): number;
        getFirstPassenger(): Internal.Entity;
        heal(arg0: number): void;
        getSpawnType(): Internal.MobSpawnType;
        setLastHurtMob(arg0: Internal.Entity_): void;
        getRelativePortalPosition(arg0: Internal.Direction$Axis_, arg1: Internal.BlockUtil$FoundRectangle_): Vec3d;
        setLastHurtByMob(arg0: Internal.LivingEntity_): void;
        interact(arg0: Internal.Player_, arg1: Internal.InteractionHand_): InteractionResult;
        removePassenger(arg0: Internal.Entity_): void;
        getDismountLocationForPassenger(arg0: Internal.LivingEntity_): Vec3d;
        invokeSetLevel(arg0: Internal.Level_): void;
        checkSlowFallDistance(): void;
        tickDeath(): void;
        updateInWaterStateAndDoWaterCurrentPushing(): void;
        canStandOnFluid(arg0: Internal.FluidState_): boolean;
        addPassenger(arg0: Internal.Entity_): void;
        setFabricBalmData(arg0: Internal.CompoundTag_): void;
        touchingUnloadedChunk(): boolean;
        modifyAttribute(attribute: Internal.Attribute_, identifier: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        getLookAngle(): Vec3d;
        handler$cpe000$mna$canStandOnFluid(arg0: Internal.FluidState_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        getAmbientSoundInterval(): number;
        setArrowCount(arg0: number): void;
        getPermissionLevel(): number;
        getMotionZ(): number;
        nextStep(): number;
        isPersistenceRequired(): boolean;
        isInvisible(): boolean;
        is(arg0: Internal.Entity_): boolean;
        getBedOrientation(): Internal.Direction;
        /**
         * @deprecated
        */
        getBlockStateOnLegacy(): Internal.BlockState;
        ejectPassengers(): void;
        removeEffect(arg0: Internal.MobEffect_): boolean;
        getProfile(): Internal.GameProfile;
        setInLove(arg0: Internal.Player_): void;
        isDeadOrDying(): boolean;
        setHeadArmorItem(item: Internal.ItemStack_): void;
        static setViewScale(arg0: number): void;
        take(arg0: Internal.Entity_, arg1: number): void;
        setLevelCallback(arg0: Internal.EntityInLevelCallback_): void;
        getLookControl(): Internal.LookControl;
        pushEntities(): void;
        playSound(arg0: Internal.SoundEvent_, arg1: number, arg2: number): void;
        setFromBucket(arg0: boolean): void;
        "areCapsCompatible(net.minecraftforge.common.capabilities.CapabilityDispatcher)"(arg0: Internal.CapabilityDispatcher_): boolean;
        canAttack(arg0: Internal.LivingEntity_): boolean;
        static getSpeedUpSecondsWhenFeeding(arg0: number): number;
        getLastHandItem(arg0: Internal.EquipmentSlot_): Internal.ItemStack;
        getOffHandItem(): Internal.ItemStack;
        startSeenByPlayer(arg0: Internal.ServerPlayer_): void;
        isOnScoreboardTeam(teamId: string): boolean;
        startUsingItem(arg0: Internal.InteractionHand_): void;
        position(): Vec3d;
        static getEquipmentSlotForItem(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getEquipment(slot: Internal.EquipmentSlot_): Internal.ItemStack;
        displayFireAnimation(): boolean;
        handler$deo000$eidolon$eidolonrepraised$isFallFlying(arg0: Internal.CallbackInfoReturnable_<any>): void;
        getRopeHoldPosition(arg0: number): Vec3d;
        copyPosition(arg0: Internal.Entity_): void;
        modifyExpressionValue$cpi000$mna$eytraValidOverride(arg0: boolean): boolean;
        onAddedToWorld(): void;
        "hasPassenger(net.minecraft.world.entity.Entity)"(arg0: Internal.Entity_): boolean;
        isCrouching(): boolean;
        "getAttributeBaseValue(net.minecraft.world.entity.ai.attributes.Attribute)"(attribute: Internal.Attribute_): number;
        onLeaveCombat(): void;
        handler$cpe000$mna$isAffectedByFluids(arg0: Internal.CallbackInfoReturnable_<any>): void;
        setY(y: number): void;
        getAttributeValue(arg0: Internal.Attribute_): number;
        getFeetBlockState(): Internal.BlockState;
        "breakItem(net.minecraft.world.item.ItemStack)"(arg0: Internal.ItemStack_): void;
        isWithinRestriction(): boolean;
        changeDimension(arg0: Internal.ServerLevel_, arg1: Internal.ITeleporter_): Internal.Entity;
        isHorizontalCollisionMinor(arg0: Vec3d_): boolean;
        positionRider(arg0: Internal.Entity_): void;
        baseTick(): void;
        broadcastToPlayer(arg0: Internal.ServerPlayer_): boolean;
        modify$zbj001$additionalentityattributes$additionalEntityAttributes$modifyExperience(originalXP: number): number;
        setSharedFlag(arg0: number, arg1: boolean): void;
        getSleepingPos(): Internal.Optional<BlockPos>;
        getEyeHeightAccess(arg0: Internal.Pose_, arg1: Internal.EntityDimensions_): number;
        damageHeldItem(): void;
        getCustomName(): net.minecraft.network.chat.Component;
        getClass(): typeof any;
        "self()"(): Internal.Entity;
        getMaxAirSupply(): number;
        isVisuallySwimming(): boolean;
        canTrample(arg0: Internal.BlockState_, arg1: BlockPos_, arg2: number): boolean;
        wrapOperation$zoc000$supplementaries$onTravel(instance: Internal.LivingEntity_, state: Internal.FluidState_, original: Internal.Operation_<any>): boolean;
        blockUsingShield(arg0: Internal.LivingEntity_): void;
        processFlappingMovement(): void;
        setItemInHand(arg0: Internal.InteractionHand_, arg1: Internal.ItemStack_): void;
        setMaxHealth(hp: number): void;
        getFacing(): Internal.Direction;
        modify$zbj000$additionalentityattributes$additionalEntityAttributes$waterSpeed(original: number): number;
        isPassengerOfSameVehicle(arg0: Internal.Entity_): boolean;
        getBoundingBoxForCulling(): Internal.AABB;
        setAge(arg0: number): void;
        getTarget(): Internal.LivingEntity;
        static collideBoundingBox(entity: Internal.Entity_, movement: Vec3d_, entityBoundingBox: Internal.AABB_, world: Internal.Level_, collisions: Internal.List_<any>): Vec3d;
        restrictTo(arg0: BlockPos_, arg1: number): void;
        isInLove(): boolean;
        trackingPosition(): Vec3d;
        getNameTagOffsetY(): number;
        isInvulnerable(): boolean;
        isInLava(): boolean;
        isInWater(): boolean;
        awardKillScore(arg0: Internal.Entity_, arg1: number, arg2: DamageSource_): void;
        finalizeSpawn(arg0: Internal.ServerLevelAccessor_, arg1: Internal.DifficultyInstance_, arg2: Internal.MobSpawnType_, arg3: Internal.SpawnGroupData_, arg4: Internal.CompoundTag_): Internal.SpawnGroupData;
        unsetRemoved(): void;
        getPickupReach(): Vec3i;
        swing(arg0: Internal.InteractionHand_): void;
        hasEffect(arg0: Internal.MobEffect_): boolean;
        getHeldItem(hand: Internal.InteractionHand_): Internal.ItemStack;
        /**
         * @deprecated
        */
        fixupDimensions(): void;
        getRootVehicle(): Internal.Entity;
        onPathfindingDone(): void;
        save(arg0: Internal.CompoundTag_): boolean;
        getLocalBoundsForPose(arg0: Internal.Pose_): Internal.AABB;
        isNoGravity(): boolean;
        curePotionEffects(arg0: Internal.ItemStack_): boolean;
        onItemPickup(arg0: Internal.ItemEntity_): void;
        handler$dhc000$reborncore$onApplyArmorToDamage(source: DamageSource_, amount: number, cir: Internal.CallbackInfoReturnable_<any>): void;
        populateDefaultEquipmentSlots(arg0: Internal.RandomSource_, arg1: Internal.DifficultyInstance_): void;
        completeUsingItem(): void;
        resetLove(): void;
        isImmobile(): boolean;
        updateSwimming(): void;
        isHolding(arg0: Internal.Predicate_<Internal.ItemStack>): boolean;
        getSpeed(): number;
        abstract getCachedFeetBlockState(): Internal.BlockState;
        shouldInformAdmins(): boolean;
        canFluidExtinguish(arg0: Internal.FluidType_): boolean;
        rideTick(): void;
        wait(): void;
        dsurround_setPotionSwirlColor(color: number): void;
        getUuid(): Internal.UUID;
        setOffHandItem(item: Internal.ItemStack_): void;
        spawn(): void;
        setNoAi(arg0: boolean): void;
        handler$dke000$spectrum$isSubmergedIn(fluidTag: Internal.TagKey_<any>, cir: Internal.CallbackInfoReturnable_<any>): void;
        teleportTo(arg0: Internal.ServerLevel_, arg1: number, arg2: number, arg3: number, arg4: Internal.Set_<Internal.RelativeMovement>, arg5: number, arg6: number): boolean;
        fabric_writeAttachmentsToNbt(nbt: Internal.CompoundTag_): void;
        shouldShowName(): boolean;
        markHurt(): void;
        getArmorSlots(): Internal.Iterable<Internal.ItemStack>;
        canPickUpLoot(): boolean;
        kill(): void;
        onEnterCombat(): void;
        updateNavigationRegistration(): void;
        playSwimSound(arg0: number): void;
        animateHurt(arg0: number): void;
        syncComponent(key: Internal.ComponentKey_<any>, packetWriter: Internal.ComponentPacketWriter_): void;
        modifyReturnValue$zbi000$additionalentityattributes$getMaxAir(original: number): number;
        static resetForwardDirectionOfRelativePortalPosition(arg0: Vec3d_): Vec3d;
        getJumpPower(): number;
        registerGoals(): void;
        hasRestriction(): boolean;
        getHeadArmorItem(): Internal.ItemStack;
        deserializeNBT(arg0: Internal.Tag_): void;
        setVariant(arg0: Internal.Axolotl$Variant_): void;
        positionRider(arg0: Internal.Entity_, arg1: Internal.Entity$MoveFunction_): void;
        redirect$fab000$moonlight$fixSpawnAnimX(instance: Internal.Mob_, v: number): number;
        removeEffectParticles(): void;
        revive(): void;
        getBbWidth(): number;
        isEyeInFluidType(arg0: Internal.FluidType_): boolean;
        addDeltaMovement(arg0: Vec3d_): void;
        localvar$egc000$zeldamod$inject3(arg0: number): number;
        getHurtSound(arg0: DamageSource_): Internal.SoundEvent;
        canDrownInFluidType(arg0: Internal.FluidType_): boolean;
        "getName()"(): net.minecraft.network.chat.Component;
        mirror(arg0: Internal.Mirror_): number;
        canUpdate(): boolean;
        knockback(arg0: number, arg1: number, arg2: number): void;
        getTypeName(): net.minecraft.network.chat.Component;
        getTicksRequiredToFreeze(): number;
        shouldDespawnInPeaceful(): boolean;
        getVisibilityPercent(arg0: Internal.Entity_): number;
        isPlayingDead(): boolean;
        getMaxSpawnClusterSize(): number;
        doAutoAttackOnTouch(arg0: Internal.LivingEntity_): void;
        getUsername(): string;
        getInLoveTime(): number;
        getPrimaryStepSoundBlockPos(arg0: BlockPos_): BlockPos;
        move(arg0: Internal.MoverType_, arg1: Vec3d_): void;
        "setVariant(java.lang.Object)"(arg0: any): void;
        lithiumOnBlockCacheSet(newState: Internal.BlockState_): void;
        onRemovedFromWorld(): void;
        getCapability<T>(arg0: Internal.Capability_<T>): Internal.LazyOptional<T>;
        isPickable(): boolean;
        handler$dke000$spectrum$isSubmergedInWater(cir: Internal.CallbackInfoReturnable_<any>): void;
        isInFluidType(predicate: Internal.BiPredicate_<any, any>, forAllTypes: boolean): boolean;
        setYHeadRot(arg0: number): void;
        setJumping(arg0: boolean): void;
        rehydrate(): void;
        getPickResult(): Internal.ItemStack;
        "getMainHandItem()"(): Internal.ItemStack;
        getAbsorptionAmount(): number;
        getRandomY(): number;
        onEffectRemoved(arg0: Internal.MobEffectInstance_): void;
        getDisplayName(): net.minecraft.network.chat.Component;
        loadFromBucketTag(arg0: Internal.CompoundTag_): void;
        getMobType(): Internal.MobType;
        travel(arg0: Vec3d_): void;
        maxhealthfix$setRestorePoint(arg0: number): void;
        getItemInHand(arg0: Internal.InteractionHand_): Internal.ItemStack;
        spectrum$isActuallyTouchingWater(): boolean;
        shouldBeSaved(): boolean;
        getFluidTypeHeight(arg0: Internal.FluidType_): number;
        fabric_hasPersistentAttachments(): boolean;
        handler$dlf000$spectrum$applyDisarmingEnchantment(source: DamageSource_, amount: number, cir: Internal.CallbackInfoReturnable_<any>): void;
        "areCapsCompatible(net.minecraftforge.common.capabilities.CapabilityProvider)"(arg0: Internal.CapabilityProvider_<Internal.Entity>): boolean;
        hurtHelmet(arg0: DamageSource_, arg1: number): void;
        removeTag(arg0: string): boolean;
        isHoldingInAnyHand(i: Internal.Ingredient_): boolean;
        /**
         * @deprecated
        */
        getFluidHeight(arg0: Internal.TagKey_<Internal.Fluid>): number;
        canSpawnSoulSpeedParticle(): boolean;
        notifyAll(): void;
        aiStep(): void;
        getPassengersRidingOffset(): number;
        setAttributeBaseValue(attribute: Internal.Attribute_, value: number): void;
        "isInFluidType(java.util.function.BiPredicate)"(arg0: Internal.BiPredicate_<Internal.FluidType, number>): boolean;
        distanceToEntitySqr(arg0: Internal.Entity_): number;
        isFrame(): boolean;
        broadcastBreakEvent(arg0: Internal.InteractionHand_): void;
        setLegsArmorItem(item: Internal.ItemStack_): void;
        discard(): void;
        sendSystemMessage(arg0: net.minecraft.network.chat.Component_): void;
        acceptsSuccess(): boolean;
        setNoGravity(arg0: boolean): void;
        getUseItemRemainingTicks(): number;
        getIndirectPassengers(): Internal.Iterable<any>;
        getBucketItemStack(): Internal.ItemStack;
        attackable(): boolean;
        createCommandSourceStack(): Internal.CommandSourceStack;
        getNavigation(): Internal.PathNavigation;
        isControlledByLocalInstance(): boolean;
        isMonster(): boolean;
        getLoveCause(): Internal.ServerPlayer;
        getLastClimbablePos(): Internal.Optional<BlockPos>;
        getEatingSound(arg0: Internal.ItemStack_): Internal.SoundEvent;
        getPerceivedTargetDistanceSquareForMeleeAttack(arg0: Internal.LivingEntity_): number;
        getHorizontalFacing(): Internal.Direction;
        setId(arg0: number): void;
        onSyncedDataUpdated(arg0: Internal.List_<Internal.SynchedEntityData$DataValue<any>>): void;
        getType(): string;
        static checkAnimalSpawnRules(arg0: Internal.EntityType_<Internal.Animal>, arg1: Internal.LevelAccessor_, arg2: Internal.MobSpawnType_, arg3: BlockPos_, arg4: Internal.RandomSource_): boolean;
        isDamageSourceBlocked(arg0: DamageSource_): boolean;
        getLightProbePosition(arg0: number): Vec3d;
        getActiveEffectsMap(): Internal.Map<Internal.MobEffect, Internal.MobEffectInstance>;
        onEquipItem(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_): void;
        checkDespawn(): void;
        getWalkTargetValue(arg0: BlockPos_, arg1: Internal.LevelReader_): number;
        lookAt(arg0: Internal.Entity_, arg1: number, arg2: number): void;
        setHeldItem(hand: Internal.InteractionHand_, item: Internal.ItemStack_): void;
        equipItemIfPossible(arg0: Internal.ItemStack_): Internal.ItemStack;
        playHurtSound(arg0: DamageSource_): void;
        onSyncedDataUpdated(arg0: Internal.EntityDataAccessor_<any>): void;
        isActuallyReallyBlocking(): boolean;
        lerpHeadTo(arg0: number, arg1: number): void;
        canDisableShield(): boolean;
        doesEmitEquipEvent(arg0: Internal.EquipmentSlot_): boolean;
        setMotionX(x: number): void;
        shouldStayCloseToLeashHolder(): boolean;
        getHandSlots(): Internal.Iterable<Internal.ItemStack>;
        getMovementEmission(): Internal.Entity$MovementEmission;
        distanceToEntity(arg0: Internal.Entity_): number;
        wait(arg0: number, arg1: number): void;
        getTeamColor(): number;
        lithiumSetClimbingMobCachingSectionUpdateBehavior(listenForCachedBlockChanges: boolean): void;
        setNbt(nbt: Internal.CompoundTag_): void;
        "isInFluidType(net.minecraftforge.fluids.FluidType)"(arg0: Internal.FluidType_): boolean;
        checkSpawnObstruction(arg0: Internal.LevelReader_): boolean;
        extinguish(): void;
        getRestrictRadius(): number;
        moveTo(arg0: Vec3d_): void;
        isColliding(arg0: BlockPos_, arg1: Internal.BlockState_): boolean;
        updateInWaterStateAndDoFluidPushing(): boolean;
        "swing(net.minecraft.world.InteractionHand)"(arg0: Internal.InteractionHand_): void;
        dsurround_setEffectInfo(info: Internal.EntityEffectInfo_): void;
        getRegisteredNavigation(): Internal.PathNavigation;
        tickEffects(): void;
        isInvertedHealAndHarm(): boolean;
        canHoldItem(arg0: Internal.ItemStack_): boolean;
        killedEntity(arg0: Internal.ServerLevel_, arg1: Internal.LivingEntity_): boolean;
        getAttachedOrElse<A>(type: Internal.AttachmentType_<A>, defaultValue: A): A;
        handler$dlf000$spectrum$applyInexorableEffects(ci: Internal.CallbackInfo_): void;
        getClassification(arg0: boolean): Internal.MobCategory;
        isFreezing(): boolean;
        runCommand(command: string): number;
        setGuaranteedDrop(arg0: Internal.EquipmentSlot_): void;
        setSharedFlagOnFire(arg0: boolean): void;
        set defaultMovementSpeedMultiplier(speed: number)
        get suppressingBounce(): boolean
        set target(arg0: Internal.LivingEntity_)
        get onFire(): boolean
        get deathSound(): Internal.SoundEvent
        get positionCodec(): Internal.VecDeltaCodec
        set maxUpStep(arg0: number)
        get fallFlyingTicks(): number
        set xxa(arg0: number)
        set delayedLeashHolderId(arg0: number)
        get shiftKeyDown(): boolean
        set UUID(arg0: Internal.UUID_)
        set motionZ(z: number)
        get blockY(): number
        get spectator(): boolean
        get alwaysExperienceDropper(): boolean
        set mainHandItem(item: Internal.ItemStack_)
        get persistentData(): Internal.CompoundTag
        get health(): number
        get maxHealth(): number
        get registeredToWorld(): boolean
        set aggressive(arg0: boolean)
        set removed(arg0: Internal.Entity$RemovalReason_)
        get inWaterRainOrBubble(): boolean
        get removalReason(): Internal.Entity$RemovalReason
        set level(arg0: Internal.Level_)
        set boundingBox(arg0: Internal.AABB_)
        get ambientCreature(): boolean
        set zza(arg0: number)
        get block(): Internal.BlockContainerJS
        get name(): net.minecraft.network.chat.Component
        get controlledVehicle(): Internal.Entity
        get armorValue(): number
        set "variant(net.minecraft.world.entity.animal.axolotl.Axolotl$Variant)"(arg0: Internal.Axolotl$Variant_)
        get killCredit(): Internal.LivingEntity
        get componentContainer(): Internal.ComponentContainer
        get defaultLootTable(): ResourceLocation
        get autoSpinAttack(): boolean
        get remainingFireTicks(): number
        get maxFallDistance(): number
        get ticksFrozen(): number
        get voicePitch(): number
        set statusMessage(message: net.minecraft.network.chat.Component_)
        set sleepingPos(arg0: BlockPos_)
        get descending(): boolean
        get headRotSpeed(): number
        get YHeadRot(): number
        set absorptionAmount(arg0: number)
        get sunBurnTick(): boolean
        get affectedByFluids(): boolean
        get ambientSound(): Internal.SoundEvent
        set deltaMovement(arg0: Vec3d_)
        get baby(): boolean
        get glowing(): boolean
        get leashOffset(): Vec3d
        get attackable(): boolean
        get underWater(): boolean
        get swimHighSpeedSplashSound(): Internal.SoundEvent
        get leashHolder(): Internal.Entity
        get sensing(): Internal.Sensing
        get legsArmorItem(): Internal.ItemStack
        get selfAndPassengers(): Internal.Stream<any>
        get deltaMovement(): Vec3d
        set secondsOnFire(arg0: number)
        get "displayName()"(): net.minecraft.network.chat.Component
        get lootTable(): ResourceLocation
        get ticksUsingItem(): number
        get arrowCount(): number
        get moveControl(): Internal.MoveControl
        get brain(): Internal.Brain<Internal.Axolotl>
        get defaultMovementSpeed(): number
        get peacefulCreature(): boolean
        set onGround(arg0: boolean)
        get firstTick(): boolean
        get lastHurtByMobTimestamp(): number
        get vehicle(): Internal.Entity
        get effectiveAi(): boolean
        set spawnCancelled(arg0: boolean)
        get stringUuid(): string
        set swimming(arg0: boolean)
        get mainArm(): Internal.HumanoidArm
        get rotationVector(): Internal.Vec2
        get hurtDir(): number
        get sprinting(): boolean
        get motionY(): number
        get offhandItem(): Internal.ItemStack
        get lastHurtMob(): Internal.LivingEntity
        get addedToWorld(): boolean
        get lastDamageSource(): DamageSource
        get soundSource(): Internal.SoundSource
        set noActionTime(arg0: number)
        set movementSpeedAddition(speed: number)
        get pose(): Internal.Pose
        get restrictCenter(): BlockPos
        get leftHanded(): boolean
        set z(z: number)
        get y(): number
        get pickupSound(): Internal.SoundEvent
        get blocking(): boolean
        get pushedByFluid(): boolean
        get armorCoverPercentage(): number
        get airSupply(): number
        get player(): boolean
        get animal(): boolean
        get motionDirection(): Internal.Direction
        get fabricBalmData(): Internal.CompoundTag
        get commandSenderWorld(): Internal.Level
        get totalMovementSpeed(): number
        get fireImmuneTicks(): number
        get attributes(): Internal.AttributeMap
        get spawnCancelled(): boolean
        set inLoveTime(arg0: number)
        get swimming(): boolean
        set sprinting(arg0: boolean)
        set x(x: number)
        get portalWaitTime(): number
        get blockStateOn(): Internal.BlockState
        get fluidJumpThreshold(): number
        set airSupply(arg0: number)
        get onPos(): BlockPos
        get undead(): boolean
        get blockPosBelowThatAffectsMyMovement(): BlockPos
        get stepHeight(): number
        set registeredToWorld(navigation: Internal.PathNavigation_)
        get sleeping(): boolean
        get dismountPoses(): Internal.ImmutableList<Internal.Pose>
        get lastHurtMobTimestamp(): number
        set remainingFireTicks(arg0: number)
        /**
         * @deprecated
        */
        get onPosLegacy(): BlockPos
        set pos(arg0: Vec3d_)
        set canPickUpLoot(arg0: boolean)
        get mainHandItem(): Internal.ItemStack
        set silent(arg0: boolean)
        get swimSplashSound(): Internal.SoundEvent
        set leftHanded(arg0: boolean)
        get activeEffects(): Internal.Collection<Internal.MobEffectInstance>
        get onPortalCooldown(): boolean
        set pitch(arg0: number)
        get multipartEntity(): boolean
        get parts(): Internal.PartEntity<any>[]
        get usingItem(): boolean
        get alwaysTicking(): boolean
        get forgePersistentData(): Internal.CompoundTag
        set invulnerable(arg0: boolean)
        get inFluidType(): boolean
        set glowing(arg0: boolean)
        get alive(): boolean
        get bbHeight(): number
        get tags(): Internal.Set<string>
        get lastAttacker(): Internal.LivingEntity
        get percentFrozen(): number
        set portalCooldown(arg0: number)
        set position(block: Internal.BlockContainerJS_)
        get leashed(): boolean
        get soundVolume(): number
        get variant(): any
        set pose(arg0: Internal.Pose_)
        get reachDistance(): number
        get entityType(): Internal.EntityType<any>
        get waterCreature(): boolean
        set lastHurtByPlayer(arg0: Internal.Player_)
        get "server()"(): Internal.MinecraftServer
        get pushable(): boolean
        set YBodyRot(arg0: number)
        set motionY(y: number)
        set chestArmorItem(item: Internal.ItemStack_)
        get passenger(): boolean
        get sensitiveToWater(): boolean
        get jumpControl(): Internal.JumpControl
        get flapping(): boolean
        get feetArmorItem(): Internal.ItemStack
        get viewScale(): number
        get visualRotationYInDegrees(): number
        set speed(arg0: number)
        get discrete(): boolean
        get level(): Internal.Level
        get combatTracker(): Internal.CombatTracker
        get noAi(): boolean
        get chestArmorItem(): Internal.ItemStack
        get blockJumpFactor(): number
        set variant(arg0: any)
        get fullyFrozen(): boolean
        get inWall(): boolean
        get meleeAttackReferencePosition(): Vec3d
        get allSlots(): Internal.Iterable<Internal.ItemStack>
        get scale(): number
        get suppressingSlidingDownLadder(): boolean
        get blockZ(): number
        get silent(): boolean
        get pitch(): number
        get random(): Internal.RandomSource
        get passengersAndSelf(): Internal.Stream<any>
        get modelRotationValues(): Internal.Map<string, Vector3f>
        get age(): number
        get noActionTime(): number
        get visuallyCrawling(): boolean
        get aggressive(): boolean
        set yya(arg0: number)
        set baby(arg0: boolean)
        get lastHurtByMob(): Internal.LivingEntity
        get inWaterOrBubble(): boolean
        get portalCooldown(): number
        get item(): Internal.ItemStack
        get ignoringBlockTriggers(): boolean
        get inRain(): boolean
        get eyeInFluidType(): Internal.FluidType
        get steppingCarefully(): boolean
        get blockX(): number
        /**
         * @deprecated
        */
        get lightLevelDependentMagicValue(): number
        get fallFlying(): boolean
        get encodeId(): string
        get maxHeadXRot(): number
        get nbt(): Internal.CompoundTag
        set invisible(arg0: boolean)
        set totalMovementSpeedMultiplier(speed: number)
        set health(arg0: number)
        get blockSpeedFactor(): number
        get eyePosition(): Vec3d
        get eyeHeight(): number
        set discardFriction(arg0: boolean)
        get yaw(): number
        get usedItemHand(): Internal.InteractionHand
        set defaultMovementSpeed(speed: number)
        set playingDead(arg0: boolean)
        set customNameVisible(arg0: boolean)
        get controllingPassenger(): Internal.LivingEntity
        get scriptType(): Internal.ScriptType
        get forward(): Vec3d
        set feetArmorItem(item: Internal.ItemStack_)
        get id(): number
        get recipientsForComponentSync(): Internal.Iterable<any>
        get eyeY(): number
        get boundingBox(): Internal.AABB
        get inWaterOrRain(): boolean
        get swimSound(): Internal.SoundEvent
        get affectedByPotions(): boolean
        get addEntityPacket(): Internal.Packet<Internal.ClientGamePacketListener>
        get team(): Internal.Team
        set ticksFrozen(arg0: number)
        get useItem(): Internal.ItemStack
        get myRidingOffset(): number
        get flyingSpeed(): number
        get living(): boolean
        get x(): number
        get vehicle(): boolean
        set isInPowderSnow(arg0: boolean)
        set customName(arg0: net.minecraft.network.chat.Component_)
        get teamId(): string
        set stingerCount(arg0: number)
        get maxHeadYRot(): number
        get customNameVisible(): boolean
        get pistonPushReaction(): Internal.PushReaction
        get lootTableSeed(): number
        get motionX(): number
        get entityData(): Internal.SynchedEntityData
        get potionEffects(): Internal.EntityPotionEffectsJS
        get onRails(): boolean
        get stingerCount(): number
        get fallSounds(): Internal.LivingEntity$Fallsounds
        get dimensionChangingDelay(): number
        get waterSlowDown(): number
        set yaw(arg0: number)
        get pickRadius(): number
        get pathFinding(): boolean
        get removed(): boolean
        get jumpBoostPower(): number
        set shiftKeyDown(arg0: boolean)
        get passengers(): Internal.EntityArrayList
        get maxHeightFluidType(): Internal.FluidType
        get z(): number
        get server(): Internal.MinecraftServer
        get experienceReward(): number
        get firstPassenger(): Internal.Entity
        get spawnType(): Internal.MobSpawnType
        set lastHurtMob(arg0: Internal.Entity_)
        set lastHurtByMob(arg0: Internal.LivingEntity_)
        set fabricBalmData(arg0: Internal.CompoundTag_)
        get lookAngle(): Vec3d
        get ambientSoundInterval(): number
        set arrowCount(arg0: number)
        get permissionLevel(): number
        get motionZ(): number
        get persistenceRequired(): boolean
        get invisible(): boolean
        get bedOrientation(): Internal.Direction
        /**
         * @deprecated
        */
        get blockStateOnLegacy(): Internal.BlockState
        get profile(): Internal.GameProfile
        set inLove(arg0: Internal.Player_)
        get deadOrDying(): boolean
        set headArmorItem(item: Internal.ItemStack_)
        set viewScale(arg0: number)
        set levelCallback(arg0: Internal.EntityInLevelCallback_)
        get lookControl(): Internal.LookControl
        set fromBucket(arg0: boolean)
        get offHandItem(): Internal.ItemStack
        get crouching(): boolean
        set y(y: number)
        get feetBlockState(): Internal.BlockState
        get withinRestriction(): boolean
        get sleepingPos(): Internal.Optional<BlockPos>
        get customName(): net.minecraft.network.chat.Component
        get class(): typeof any
        get maxAirSupply(): number
        get visuallySwimming(): boolean
        set maxHealth(hp: number)
        get facing(): Internal.Direction
        get boundingBoxForCulling(): Internal.AABB
        set age(arg0: number)
        get target(): Internal.LivingEntity
        get inLove(): boolean
        get nameTagOffsetY(): number
        get invulnerable(): boolean
        get inLava(): boolean
        get inWater(): boolean
        get pickupReach(): Vec3i
        get rootVehicle(): Internal.Entity
        get noGravity(): boolean
        get immobile(): boolean
        get speed(): number
        get cachedFeetBlockState(): Internal.BlockState
        get uuid(): Internal.UUID
        set offHandItem(item: Internal.ItemStack_)
        set noAi(arg0: boolean)
        get armorSlots(): Internal.Iterable<Internal.ItemStack>
        get jumpPower(): number
        get headArmorItem(): Internal.ItemStack
        set variant(arg0: Internal.Axolotl$Variant_)
        get bbWidth(): number
        get "name()"(): net.minecraft.network.chat.Component
        get typeName(): net.minecraft.network.chat.Component
        get ticksRequiredToFreeze(): number
        get playingDead(): boolean
        get maxSpawnClusterSize(): number
        get username(): string
        get inLoveTime(): number
        set "variant(java.lang.Object)"(arg0: any)
        get pickable(): boolean
        set YHeadRot(arg0: number)
        set jumping(arg0: boolean)
        get pickResult(): Internal.ItemStack
        get "mainHandItem()"(): Internal.ItemStack
        get absorptionAmount(): number
        get randomY(): number
        get displayName(): net.minecraft.network.chat.Component
        get mobType(): Internal.MobType
        get passengersRidingOffset(): number
        get frame(): boolean
        set legsArmorItem(item: Internal.ItemStack_)
        set noGravity(arg0: boolean)
        get useItemRemainingTicks(): number
        get indirectPassengers(): Internal.Iterable<any>
        get bucketItemStack(): Internal.ItemStack
        get navigation(): Internal.PathNavigation
        get controlledByLocalInstance(): boolean
        get monster(): boolean
        get loveCause(): Internal.ServerPlayer
        get lastClimbablePos(): Internal.Optional<BlockPos>
        get horizontalFacing(): Internal.Direction
        set id(arg0: number)
        get type(): string
        get activeEffectsMap(): Internal.Map<Internal.MobEffect, Internal.MobEffectInstance>
        get actuallyReallyBlocking(): boolean
        set motionX(x: number)
        get handSlots(): Internal.Iterable<Internal.ItemStack>
        get movementEmission(): Internal.Entity$MovementEmission
        get teamColor(): number
        set nbt(nbt: Internal.CompoundTag_)
        get restrictRadius(): number
        get registeredNavigation(): Internal.PathNavigation
        get invertedHealAndHarm(): boolean
        get freezing(): boolean
        set guaranteedDrop(arg0: Internal.EquipmentSlot_)
        set sharedFlagOnFire(arg0: boolean)
        static readonly SENSOR_TYPES: ([Internal.SensorType<any>, Internal.SensorType<any>, Internal.SensorType<any>, Internal.SensorType<any>, Internal.SensorType<any>]) & (Internal.ImmutableList<Internal.SensorType<Internal.Sensor<Internal.Axolotl>>>);
        static readonly TOTAL_PLAYDEAD_TIME: (200) & (number);
        static readonly PLAYER_REGEN_DETECTION_RANGE: (20.0) & (number);
        static readonly RARE_VARIANT_CHANCE: (1200) & (number);
        static readonly VARIANT_TAG: ("Variant") & (string);
        static readonly MEMORY_TYPES: ([Internal.MemoryModuleType<any>, Internal.MemoryModuleType<any>, Internal.MemoryModuleType<any>, Internal.MemoryModuleType<any>, Internal.MemoryModuleType<any>, Internal.MemoryModuleType<any>, Internal.MemoryModuleType<any>, Internal.MemoryModuleType<any>, Internal.MemoryModuleType<any>, Internal.MemoryModuleType<any>, Internal.MemoryModuleType<any>, Internal.MemoryModuleType<any>, Internal.MemoryModuleType<any>, Internal.MemoryModuleType<any>, Internal.MemoryModuleType<any>, Internal.MemoryModuleType<any>, Internal.MemoryModuleType<any>, Internal.MemoryModuleType<any>, Internal.MemoryModuleType<any>, Internal.MemoryModuleType<any>]) & (Internal.ImmutableList<Internal.MemoryModuleType<any>>);
    }
    type Axolotl_ = Axolotl;
    class NearestLivingEntitySensor <T extends Internal.LivingEntity> extends Internal.Sensor<T> {
        constructor()
        tick(arg0: Internal.ServerLevel_, arg1: T): void;
        getClass(): typeof any;
        toString(): string;
        doTick(arg0: Internal.ServerLevel_, arg1: T): void;
        static isEntityTargetable(arg0: Internal.LivingEntity_, arg1: Internal.LivingEntity_): boolean;
        notifyAll(): void;
        static isEntityAttackableIgnoringLineOfSight(arg0: Internal.LivingEntity_, arg1: Internal.LivingEntity_): boolean;
        notify(): void;
        radiusXZ(): number;
        wait(arg0: number, arg1: number): void;
        hashCode(): number;
        wait(): void;
        static isEntityAttackable(arg0: Internal.LivingEntity_, arg1: Internal.LivingEntity_): boolean;
        wait(arg0: number): void;
        radiusY(): number;
        equals(arg0: any): boolean;
        requires(): Internal.Set<Internal.MemoryModuleType<any>>;
        get class(): typeof any
    }
    type NearestLivingEntitySensor_<T extends Internal.LivingEntity> = NearestLivingEntitySensor<T>;
    class PalettedContainer$Data <T> extends Internal.Record {
        constructor(configuration: Internal.PalettedContainer$Configuration_<T>, storage: Internal.BitStorage_, palette: Internal.Palette_<T>)
        getClass(): typeof any;
        configuration(): Internal.PalettedContainer$Configuration<T>;
        write(arg0: Internal.FriendlyByteBuf_): void;
        palette(): Internal.Palette<T>;
        getSerializedSize(): number;
        toString(): string;
        copy(): this;
        copyFrom(arg0: Internal.Palette_<T>, arg1: Internal.BitStorage_): void;
        notifyAll(): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        hashCode(): number;
        wait(): void;
        wait(arg0: number): void;
        storage(): Internal.BitStorage;
        equals(arg0: any): boolean;
        get class(): typeof any
        get serializedSize(): number
    }
    type PalettedContainer$Data_<T> = PalettedContainer$Data<T>;
    class MobSpawnSettingsBuilder extends Internal.MobSpawnSettings$Builder {
        constructor(arg0: Internal.MobSpawnSettings_)
        getClass(): typeof any;
        toString(): string;
        getProbability(): number;
        notifyAll(): void;
        getEntityTypes(): Internal.Set<Internal.EntityType<any>>;
        creatureGenerationProbability(arg0: number): Internal.MobSpawnSettings$Builder;
        puzzleslib$getMobSpawnCosts(): Internal.Map<any, any>;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        addSpawn(arg0: Internal.MobCategory_, arg1: Internal.MobSpawnSettings$SpawnerData_): Internal.MobSpawnSettings$Builder;
        disablePlayerSpawn(): this;
        hashCode(): number;
        wait(): void;
        getSpawnCosts(): Internal.Map<any, any>;
        wait(arg0: number): void;
        getSpawner(arg0: Internal.MobCategory_): Internal.List<Internal.MobSpawnSettings$SpawnerData>;
        build(): Internal.MobSpawnSettings;
        getCost(arg0: Internal.EntityType_<any>): Internal.MobSpawnSettings$MobSpawnCost;
        equals(arg0: any): boolean;
        getSpawnerTypes(): Internal.Set<Internal.MobCategory>;
        addMobCharge(arg0: Internal.EntityType_<any>, arg1: number, arg2: number): Internal.MobSpawnSettings$Builder;
        get class(): typeof any
        get probability(): number
        get entityTypes(): Internal.Set<Internal.EntityType<any>>
        get spawnCosts(): Internal.Map<any, any>
        get spawnerTypes(): Internal.Set<Internal.MobCategory>
    }
    type MobSpawnSettingsBuilder_ = MobSpawnSettingsBuilder;
    abstract class EntityLootSubProvider implements Internal.LootTableSubProvider {
        constructor(arg0: Internal.FeatureFlagSet_)
        constructor(arg0: Internal.FeatureFlagSet_, arg1: Internal.FeatureFlagSet_)
        getClass(): typeof any;
        add(arg0: Internal.EntityType_<any>, arg1: ResourceLocation_, arg2: Internal.LootTable$Builder_): void;
        toString(): string;
        generate(arg0: Internal.BiConsumer_<ResourceLocation, Internal.LootTable$Builder>): void;
        notifyAll(): void;
        add(arg0: Internal.EntityType_<any>, arg1: Internal.LootTable$Builder_): void;
        killedByFrog(): Internal.LootItemCondition$Builder;
        notify(): void;
        getKnownEntityTypes(): Internal.Stream<Internal.EntityType<any>>;
        wait(arg0: number, arg1: number): void;
        static createSheepTable(arg0: Internal.ItemLike_): Internal.LootTable$Builder;
        hashCode(): number;
        killedByFrogVariant(arg0: Internal.FrogVariant_): Internal.LootItemCondition$Builder;
        abstract generate(): void;
        wait(): void;
        wait(arg0: number): void;
        canHaveLootTable(arg0: Internal.EntityType_<any>): boolean;
        equals(arg0: any): boolean;
        get class(): typeof any
        get knownEntityTypes(): Internal.Stream<Internal.EntityType<any>>
        static readonly ENTITY_ON_FIRE: (Internal.EntityPredicate$Builder) & (Internal.EntityPredicate$Builder);
    }
    type EntityLootSubProvider_ = EntityLootSubProvider;
    interface CreativeModeTab$DisplayItemsGenerator {
        abstract accept(arg0: Internal.CreativeModeTab$ItemDisplayParameters_, arg1: Internal.CreativeModeTab$Output_): void;
        (arg0: Internal.CreativeModeTab$ItemDisplayParameters, arg1: Internal.CreativeModeTab$Output): void;
    }
    type CreativeModeTab$DisplayItemsGenerator_ = CreativeModeTab$DisplayItemsGenerator | ((arg0: Internal.CreativeModeTab$ItemDisplayParameters, arg1: Internal.CreativeModeTab$Output)=> void);
    interface RewardType$GuiProvider {
        abstract openCreationGui(arg0: Internal.Panel_, arg1: Internal.Quest_, arg2: Internal.Consumer_<Internal.Reward>): void;
        (arg0: Internal.Panel, arg1: Internal.Quest, arg2: Internal.Consumer<Internal.Reward>): void;
    }
    type RewardType$GuiProvider_ = ((arg0: Internal.Panel, arg1: Internal.Quest, arg2: Internal.Consumer<Internal.Reward>)=> void) | RewardType$GuiProvider;
    class TelemetryEventInstance extends Internal.Record {
        constructor(arg0: Internal.TelemetryEventType_, arg1: Internal.TelemetryPropertyMap_)
        getClass(): typeof any;
        type(): Internal.TelemetryEventType;
        export(arg0: Internal.TelemetrySession_): Internal.TelemetryEvent;
        hashCode(): number;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        properties(): Internal.TelemetryPropertyMap;
        get class(): typeof any
        static readonly CODEC: Internal.Codec<Internal.TelemetryEventInstance>;
    }
    type TelemetryEventInstance_ = TelemetryEventInstance;
    class RedprintItem extends Internal.ItemCoFH implements Internal.IPlacementItem {
        constructor(arg0: Internal.Item$Properties_)
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        allowContinuingBlockBreaking(player: Internal.Player_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        moonlight$addAdditionalBehavior(placementOverride: Internal.AdditionalItemPlacement_): void;
        isFireResistant(): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        setModId(arg0: string): Internal.ICoFHItem;
        moonlight$getClientAnimationExtension(): any;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        fabric_setCustomDamageHandler(handler: Internal.CustomDamageHandler_): void;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getBarColor(arg0: Internal.ItemStack_): number;
        getOrCreateDescriptionId(): string;
        getItem(): Internal.Item;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): InteractionResult;
        moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        moonlight$setClientAnimationExtension(obj: any): void;
        addModeChangeTooltip(arg0: Internal.IMultiModeItem_, arg1: Internal.ItemStack_, arg2: Internal.Level_, arg3: Internal.List_<net.minecraft.network.chat.Component>, arg4: Internal.TooltipFlag_): void;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        handler$dfl000$revelationary$getCloakedName(stack: Internal.ItemStack_, callbackInfoReturnable: Internal.CallbackInfoReturnable_<any>): void;
        isEdible(): boolean;
        getAttributeModifiers(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        "setBurnTime(int)"(arg0: number): Internal.ItemCoFH;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        cardinal_createComponents(stack: Internal.ItemStack_): Internal.ComponentContainer;
        isFoil(arg0: Internal.ItemStack_): boolean;
        onBlockPlacement(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): boolean;
        "getAttributeModifiers(net.minecraft.world.entity.EquipmentSlot,net.minecraft.world.item.ItemStack)"(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        fabric_getEquipmentSlotProvider(): Internal.EquipmentSlotProvider;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        isActive(arg0: Internal.ItemStack_): boolean;
        owo$tab(): number;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vector3f;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        addIncrementModeChangeTooltip(arg0: Internal.IMultiModeItem_, arg1: Internal.ItemStack_, arg2: Internal.Level_, arg3: Internal.List_<net.minecraft.network.chat.Component>, arg4: Internal.TooltipFlag_): void;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        "getAttributeModifiers(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.EquipmentSlot)"(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        allowNbtUpdateAnimation(player: Internal.Player_, hand: Internal.InteractionHand_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        "setActive(net.minecraft.world.item.ItemStack,boolean)"(arg0: Internal.ItemStack_, arg1: boolean): void;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        addEnergyTooltip(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_, arg4: number, arg5: number, arg6: boolean): void;
        fabric_getCachedItemVariant(): Internal.ItemVariant;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        fabric_getCustomDamageHandler(): Internal.CustomDamageHandler;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        static getPlayerPOVHitResult(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.ClipContext$Fluid_): Internal.BlockHitResult;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        equals(arg0: any): boolean;
        setRarity(arg0: Internal.Rarity_): void;
        getRecipeRemainder(stack: Internal.ItemStack_): Internal.ItemStack;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        /**
         * @deprecated
        */
        onDestroyed(arg0: Internal.ItemEntity_): void;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        canBeHurtBy(arg0: DamageSource_): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        fabric_setEquipmentSlotProvider(equipmentSlotProvider: Internal.EquipmentSlotProvider_): void;
        getDescriptionId(): string;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        zeta$setHumanoidArmorModel(arg0: Internal.HumanoidArmorModelGetter_): void;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: DamageSource_): void;
        setActive(arg0: Internal.ItemStack_, arg1: boolean): void;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        getDescription(): net.minecraft.network.chat.Component;
        owo$stackGenerator(): Internal.BiConsumer<any, any>;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        useOn(arg0: Internal.UseOnContext_): InteractionResult;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        handler$ebb000$connectormod$redirectIsPiglinCurrency(arg0: Internal.ItemStack_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        setAttackDamage(attackDamage: number): void;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        "setActive(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.LivingEntity)"(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): void;
        toString(): string;
        /**
         * @deprecated
        */
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        modifyReturnValue$ffm000$quark$overrideOtherStackedOnMe(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_, arg3: Internal.Slot_, arg4: Internal.ClickAction_, arg5: Internal.Player_, arg6: Internal.SlotAccess_): boolean;
        getId(): string;
        handler$fbm000$moonlight$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        isSuitableFor(stack: Internal.ItemStack_, state: Internal.BlockState_): boolean;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        puzzleslib$setRenderProperties(arg0: any): void;
        notify(): void;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        zeta$setBlockEntityWithoutLevelRenderer(arg0: Internal.BlockEntityWithoutLevelRenderer_): void;
        hasActiveTag(arg0: Internal.ItemStack_): boolean;
        handler$cog000$croptopia$overrideConstructor(arg0: Internal.Item$Properties_, arg1: Internal.CallbackInfo_): void;
        "setBurnTime(int)"(i: number): void;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        getEatingSound(): Internal.SoundEvent;
        owo$setGroup(group: Internal.CreativeModeTab_): void;
        puzzleslib$getRenderProperties(): any;
        canBeDepleted(): boolean;
        getDamage(arg0: Internal.ItemStack_): number;
        setEnchantability(arg0: number): Internal.ItemCoFH;
        wait(arg0: number, arg1: number): void;
        setActive(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): void;
        getMod(): string;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        owo$group(): Internal.CreativeModeTab;
        setBurnTime(arg0: number): Internal.ItemCoFH;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        modifyReturnValue$ffm000$quark$overrideStackedOnOther(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_): boolean;
        get drinkingSound(): Internal.SoundEvent
        get fireResistant(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        set modId(arg0: string)
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set maxDamage(arg0: number)
        get orCreateDescriptionId(): string
        get item(): Internal.Item
        get class(): typeof any
        get renderPropertiesInternal(): any
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        get edible(): boolean
        set "burnTime(int)"(arg0: number)
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        set nameKey(arg0: string)
        get idLocation(): ResourceLocation
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
        set rarity(arg0: Internal.Rarity_)
        get complex(): boolean
        get descriptionId(): string
        get creativeTab(): string
        set burnTime(i: number)
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        set itemBuilder(b: Internal.ItemBuilder_)
        set attackDamage(attackDamage: number)
        /**
         * @deprecated
        */
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        /**
         * @deprecated
        */
        get maxStackSize(): number
        set "burnTime(int)"(i: number)
        get eatingSound(): Internal.SoundEvent
        set enchantability(arg0: number)
        get mod(): string
        set armorProtection(armorProtection: number)
        set burnTime(arg0: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
    }
    type RedprintItem_ = RedprintItem;
    abstract class CamoContainer {
        getClass(): typeof any;
        static readFromNetwork(arg0: Internal.CompoundTag_): Internal.CamoContainer;
        static save(arg0: Internal.CamoContainer_): Internal.CompoundTag;
        isEmpty(): boolean;
        abstract getFactory(): Internal.CamoContainer$Factory;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        rotateCamo(): boolean;
        getState(): Internal.BlockState;
        static load(arg0: Internal.CompoundTag_): Internal.CamoContainer;
        toString(): string;
        notifyAll(): void;
        getMapColor(arg0: Internal.BlockGetter_, arg1: BlockPos_): Internal.MapColor;
        static "save(xfacthd.framedblocks.api.camo.CamoContainer)"(arg0: Internal.CamoContainer_): Internal.CompoundTag;
        static writeToNetwork(arg0: Internal.CamoContainer_): Internal.CompoundTag;
        abstract save(arg0: Internal.CompoundTag_): void;
        abstract getType(): xfacthd.framedblocks.api.camo.ContainerType;
        abstract getColor(arg0: Internal.BlockAndTintGetter_, arg1: BlockPos_, arg2: number): number;
        hashCode(): number;
        getSoundType(): SoundType;
        wait(): void;
        wait(arg0: number): void;
        abstract "save(net.minecraft.nbt.CompoundTag)"(arg0: Internal.CompoundTag_): void;
        abstract toNetwork(arg0: Internal.CompoundTag_): void;
        getFluid(): Internal.Fluid;
        getBeaconColorMultiplier(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: BlockPos_): number[];
        isSolid(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        equals(arg0: any): boolean;
        abstract toItemStack(arg0: Internal.ItemStack_): Internal.ItemStack;
        canRotateCamo(): boolean;
        get class(): typeof any
        get empty(): boolean
        get factory(): Internal.CamoContainer$Factory
        get state(): Internal.BlockState
        get type(): xfacthd.framedblocks.api.camo.ContainerType
        get soundType(): SoundType
        get fluid(): Internal.Fluid
    }
    type CamoContainer_ = CamoContainer;
    class MobType {
        constructor()
        getClass(): typeof any;
        hashCode(): number;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
        static readonly ILLAGER: (Internal.MobType) & (Internal.MobType);
        static readonly WATER: (Internal.MobType) & (Internal.MobType);
        static readonly UNDEFINED: (Internal.MobType) & (Internal.MobType);
        static readonly UNDEAD: (Internal.MobType) & (Internal.MobType);
        static readonly ARTHROPOD: (Internal.MobType) & (Internal.MobType);
    }
    type MobType_ = MobType;
    interface IGuiHelper {
        abstract drawableBuilder(arg0: ResourceLocation_, arg1: number, arg2: number, arg3: number, arg4: number): Internal.IDrawableBuilder;
        abstract createAnimatedDrawable(arg0: Internal.IDrawableStatic_, arg1: number, arg2: Internal.IDrawableAnimated$StartDirection_, arg3: boolean): Internal.IDrawableAnimated;
        abstract createCraftingGridHelper(): Internal.ICraftingGridHelper;
        abstract getSlotDrawable(): Internal.IDrawableStatic;
        createDrawable(arg0: ResourceLocation_, arg1: number, arg2: number, arg3: number, arg4: number): Internal.IDrawableStatic;
        abstract createTickTimer(arg0: number, arg1: number, arg2: boolean): Internal.ITickTimer;
        createDrawableItemStack(arg0: Internal.ItemStack_): Internal.IDrawable;
        abstract createBlankDrawable(arg0: number, arg1: number): Internal.IDrawableStatic;
        abstract createDrawableIngredient<V>(arg0: Internal.IIngredientType_<V>, arg1: V): Internal.IDrawable;
        get slotDrawable(): Internal.IDrawableStatic
    }
    type IGuiHelper_ = IGuiHelper;
    class InventoryContainerItem extends Internal.ItemCoFH implements Internal.IInventoryContainerItem {
        constructor(arg0: Internal.Item$Properties_, arg1: number)
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        allowContinuingBlockBreaking(player: Internal.Player_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        moonlight$addAdditionalBehavior(placementOverride: Internal.AdditionalItemPlacement_): void;
        isFireResistant(): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        setModId(arg0: string): Internal.ICoFHItem;
        moonlight$getClientAnimationExtension(): any;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        fabric_setCustomDamageHandler(handler: Internal.CustomDamageHandler_): void;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        onContainerInventoryChanged(arg0: Internal.ItemStack_): void;
        getBarWidth(arg0: Internal.ItemStack_): number;
        getOrCreateInvTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        setMaxDamage(arg0: number): void;
        getBarColor(arg0: Internal.ItemStack_): number;
        getOrCreateDescriptionId(): string;
        getItem(): Internal.Item;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        getStackInSlot(arg0: Internal.ItemStack_, arg1: number): Internal.ItemStack;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        getScaledItemsStored(arg0: Internal.ItemStack_, arg1: number, arg2: number): number;
        asIngredient(): Internal.Ingredient;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): InteractionResult;
        moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        moonlight$setClientAnimationExtension(obj: any): void;
        addModeChangeTooltip(arg0: Internal.IMultiModeItem_, arg1: Internal.ItemStack_, arg2: Internal.Level_, arg3: Internal.List_<net.minecraft.network.chat.Component>, arg4: Internal.TooltipFlag_): void;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        handler$dfl000$revelationary$getCloakedName(stack: Internal.ItemStack_, callbackInfoReturnable: Internal.CallbackInfoReturnable_<any>): void;
        isEdible(): boolean;
        getAttributeModifiers(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        "setBurnTime(int)"(arg0: number): Internal.ItemCoFH;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        getItemAmount(arg0: Internal.ItemStack_, arg1: number): number;
        cardinal_createComponents(stack: Internal.ItemStack_): Internal.ComponentContainer;
        isFoil(arg0: Internal.ItemStack_): boolean;
        "getAttributeModifiers(net.minecraft.world.entity.EquipmentSlot,net.minecraft.world.item.ItemStack)"(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        fabric_getEquipmentSlotProvider(): Internal.EquipmentSlotProvider;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        getSpace(arg0: Internal.ItemStack_, arg1: number): number;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        insertItem(arg0: Internal.ItemStack_, arg1: number, arg2: Internal.ItemStack_, arg3: boolean): Internal.ItemStack;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        isActive(arg0: Internal.ItemStack_): boolean;
        getContainerSlots(arg0: Internal.ItemStack_): number;
        owo$tab(): number;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        isItemValid(arg0: Internal.ItemStack_, arg1: number, arg2: Internal.ItemStack_): boolean;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vector3f;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        addIncrementModeChangeTooltip(arg0: Internal.IMultiModeItem_, arg1: Internal.ItemStack_, arg2: Internal.Level_, arg3: Internal.List_<net.minecraft.network.chat.Component>, arg4: Internal.TooltipFlag_): void;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        "getAttributeModifiers(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.EquipmentSlot)"(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        allowNbtUpdateAnimation(player: Internal.Player_, hand: Internal.InteractionHand_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        "setActive(net.minecraft.world.item.ItemStack,boolean)"(arg0: Internal.ItemStack_, arg1: boolean): void;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        addEnergyTooltip(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_, arg4: number, arg5: number, arg6: boolean): void;
        fabric_getCachedItemVariant(): Internal.ItemVariant;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        fabric_getCustomDamageHandler(): Internal.CustomDamageHandler;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        static getPlayerPOVHitResult(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.ClipContext$Fluid_): Internal.BlockHitResult;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        equals(arg0: any): boolean;
        setRarity(arg0: Internal.Rarity_): void;
        getSlotLimit(arg0: Internal.ItemStack_, arg1: number): number;
        getRecipeRemainder(stack: Internal.ItemStack_): Internal.ItemStack;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        /**
         * @deprecated
        */
        onDestroyed(arg0: Internal.ItemEntity_): void;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        canBeHurtBy(arg0: DamageSource_): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        fabric_setEquipmentSlotProvider(equipmentSlotProvider: Internal.EquipmentSlotProvider_): void;
        getDescriptionId(): string;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        zeta$setHumanoidArmorModel(arg0: Internal.HumanoidArmorModelGetter_): void;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: DamageSource_): void;
        setActive(arg0: Internal.ItemStack_, arg1: boolean): void;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        getDescription(): net.minecraft.network.chat.Component;
        owo$stackGenerator(): Internal.BiConsumer<any, any>;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        useOn(arg0: Internal.UseOnContext_): InteractionResult;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        handler$ebb000$connectormod$redirectIsPiglinCurrency(arg0: Internal.ItemStack_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        setAttackDamage(attackDamage: number): void;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        "setActive(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.LivingEntity)"(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): void;
        toString(): string;
        /**
         * @deprecated
        */
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        modifyReturnValue$ffm000$quark$overrideOtherStackedOnMe(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_, arg3: Internal.Slot_, arg4: Internal.ClickAction_, arg5: Internal.Player_, arg6: Internal.SlotAccess_): boolean;
        getId(): string;
        handler$fbm000$moonlight$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        extractItem(arg0: Internal.ItemStack_, arg1: number, arg2: number, arg3: boolean): Internal.ItemStack;
        isSuitableFor(stack: Internal.ItemStack_, state: Internal.BlockState_): boolean;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        puzzleslib$setRenderProperties(arg0: any): void;
        notify(): void;
        getContainerInventory(arg0: Internal.ItemStack_): Internal.SimpleItemInv;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        zeta$setBlockEntityWithoutLevelRenderer(arg0: Internal.BlockEntityWithoutLevelRenderer_): void;
        hasActiveTag(arg0: Internal.ItemStack_): boolean;
        handler$cog000$croptopia$overrideConstructor(arg0: Internal.Item$Properties_, arg1: Internal.CallbackInfo_): void;
        "setBurnTime(int)"(i: number): void;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        getEatingSound(): Internal.SoundEvent;
        owo$setGroup(group: Internal.CreativeModeTab_): void;
        puzzleslib$getRenderProperties(): any;
        canBeDepleted(): boolean;
        getDamage(arg0: Internal.ItemStack_): number;
        setEnchantability(arg0: number): Internal.ItemCoFH;
        wait(arg0: number, arg1: number): void;
        setActive(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): void;
        getMod(): string;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        owo$group(): Internal.CreativeModeTab;
        setBurnTime(arg0: number): Internal.ItemCoFH;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        modifyReturnValue$ffm000$quark$overrideStackedOnOther(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_): boolean;
        get drinkingSound(): Internal.SoundEvent
        get fireResistant(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        set modId(arg0: string)
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set maxDamage(arg0: number)
        get orCreateDescriptionId(): string
        get item(): Internal.Item
        get class(): typeof any
        get renderPropertiesInternal(): any
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        get edible(): boolean
        set "burnTime(int)"(arg0: number)
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        set nameKey(arg0: string)
        get idLocation(): ResourceLocation
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
        set rarity(arg0: Internal.Rarity_)
        get complex(): boolean
        get descriptionId(): string
        get creativeTab(): string
        set burnTime(i: number)
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        set itemBuilder(b: Internal.ItemBuilder_)
        set attackDamage(attackDamage: number)
        /**
         * @deprecated
        */
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        /**
         * @deprecated
        */
        get maxStackSize(): number
        set "burnTime(int)"(i: number)
        get eatingSound(): Internal.SoundEvent
        set enchantability(arg0: number)
        get mod(): string
        set armorProtection(armorProtection: number)
        set burnTime(arg0: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
    }
    type InventoryContainerItem_ = InventoryContainerItem;
    class Modifier implements Internal.ISpellComponent {
        constructor(arg0: ResourceLocation_, arg1: number, ...arg2: com.mna.api.spells.attributes.Attribute_[])
        getClass(): typeof any;
        onRegistered(): void;
        getFactionRequirement(): Internal.IFaction;
        magnitudeHealthCheck(arg0: Internal.SpellSource_, arg1: Internal.SpellTarget_, arg2: number, arg3: number): boolean;
        getModifiedAttributes(): Internal.ImmutableList<com.mna.api.spells.attributes.Attribute>;
        isUseableByPlayers(): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        requiredXPForRote(): number;
        getAddingModName(): string;
        getTier(arg0: Internal.Level_): number;
        isBaseMna(): boolean;
        canBeOnRandomStaff(): boolean;
        canBeCastAt(arg0: Internal.Level_, arg1: Vec3d_): Internal.SpellBlacklistResult;
        isSilverSpell(): boolean;
        toString(): string;
        initializeConfigs(...arg0: Internal.AttributeValuePair_[]): void;
        notifyAll(): void;
        isTargetFriendlyToCaster(arg0: Internal.SpellSource_, arg1: Internal.Entity_): boolean;
        getUseTag(): Internal.SpellPartTags;
        hashCode(): number;
        wait(): void;
        getRegistryName(): ResourceLocation;
        getDescriptionTooltip(arg0: com.mna.api.spells.attributes.Attribute_): string;
        wait(arg0: number): void;
        getGuiIcon(): ResourceLocation;
        isCraftable(arg0: Internal.SpellCraftingContext_): boolean;
        equals(arg0: any): boolean;
        modifiesType(arg0: com.mna.api.spells.attributes.Attribute_): boolean;
        get class(): typeof any
        get factionRequirement(): Internal.IFaction
        get modifiedAttributes(): Internal.ImmutableList<com.mna.api.spells.attributes.Attribute>
        get useableByPlayers(): boolean
        get addingModName(): string
        get baseMna(): boolean
        get silverSpell(): boolean
        get useTag(): Internal.SpellPartTags
        get registryName(): ResourceLocation
        get guiIcon(): ResourceLocation
    }
    type Modifier_ = Modifier;
    interface ConfigWriter {
        writeToString(arg0: Internal.UnmodifiableConfig_): string;
        write(arg0: Internal.UnmodifiableConfig_, arg1: Internal.File_, arg2: Internal.WritingMode_): void;
        "write(com.electronwill.nightconfig.core.UnmodifiableConfig,java.nio.file.Path,com.electronwill.nightconfig.core.io.WritingMode)"(arg0: Internal.UnmodifiableConfig_, arg1: Internal.Path_, arg2: Internal.WritingMode_): void;
        "write(com.electronwill.nightconfig.core.UnmodifiableConfig,java.nio.file.Path,com.electronwill.nightconfig.core.io.WritingMode,java.nio.charset.Charset)"(arg0: Internal.UnmodifiableConfig_, arg1: Internal.Path_, arg2: Internal.WritingMode_, arg3: Internal.Charset_): void;
        "write(com.electronwill.nightconfig.core.UnmodifiableConfig,java.io.OutputStream,java.nio.charset.Charset)"(arg0: Internal.UnmodifiableConfig_, arg1: Internal.OutputStream_, arg2: Internal.Charset_): void;
        "write(com.electronwill.nightconfig.core.UnmodifiableConfig,java.io.File,com.electronwill.nightconfig.core.io.WritingMode)"(arg0: Internal.UnmodifiableConfig_, arg1: Internal.File_, arg2: Internal.WritingMode_): void;
        abstract "write(com.electronwill.nightconfig.core.UnmodifiableConfig,java.io.Writer)"(arg0: Internal.UnmodifiableConfig_, arg1: Internal.Writer_): void;
        write(arg0: Internal.UnmodifiableConfig_, arg1: Internal.File_, arg2: Internal.WritingMode_, arg3: Internal.Charset_): void;
        "write(com.electronwill.nightconfig.core.UnmodifiableConfig,java.io.OutputStream)"(arg0: Internal.UnmodifiableConfig_, arg1: Internal.OutputStream_): void;
        write(arg0: Internal.UnmodifiableConfig_, arg1: Internal.Path_, arg2: Internal.WritingMode_): void;
        write(arg0: Internal.UnmodifiableConfig_, arg1: Internal.URL_): void;
        abstract write(arg0: Internal.UnmodifiableConfig_, arg1: Internal.Writer_): void;
        write(arg0: Internal.UnmodifiableConfig_, arg1: Internal.OutputStream_): void;
        write(arg0: Internal.UnmodifiableConfig_, arg1: Internal.OutputStream_, arg2: Internal.Charset_): void;
        write(arg0: Internal.UnmodifiableConfig_, arg1: Internal.Path_, arg2: Internal.WritingMode_, arg3: Internal.Charset_): void;
        "write(com.electronwill.nightconfig.core.UnmodifiableConfig,java.io.File,com.electronwill.nightconfig.core.io.WritingMode,java.nio.charset.Charset)"(arg0: Internal.UnmodifiableConfig_, arg1: Internal.File_, arg2: Internal.WritingMode_, arg3: Internal.Charset_): void;
        "write(com.electronwill.nightconfig.core.UnmodifiableConfig,java.net.URL)"(arg0: Internal.UnmodifiableConfig_, arg1: Internal.URL_): void;
    }
    type ConfigWriter_ = ConfigWriter;
    abstract class ChunkSource implements Internal.AutoCloseable, Internal.LightChunkGetter {
        constructor()
        getClass(): typeof any;
        abstract getLoadedChunksCount(): number;
        abstract gatherStats(): string;
        updateChunkForced(arg0: Internal.ChunkPos_, arg1: boolean): void;
        abstract getLevel(): Internal.BlockGetter;
        toString(): string;
        abstract tick(arg0: Internal.BooleanSupplier_, arg1: boolean): void;
        notifyAll(): void;
        abstract getChunk(arg0: number, arg1: number, arg2: Internal.ChunkStatus_, arg3: boolean): Internal.ChunkAccess;
        hasChunk(arg0: number, arg1: number): boolean;
        setSpawnSettings(arg0: boolean, arg1: boolean): void;
        getChunk(arg0: number, arg1: number, arg2: boolean): Internal.LevelChunk;
        notify(): void;
        getChunkNow(arg0: number, arg1: number): Internal.LevelChunk;
        onLightUpdate(arg0: Internal.LightLayer_, arg1: Internal.SectionPos_): void;
        wait(arg0: number, arg1: number): void;
        getChunkForLighting(arg0: number, arg1: number): Internal.LightChunk;
        hashCode(): number;
        wait(): void;
        close(): void;
        wait(arg0: number): void;
        abstract getLightEngine(): Internal.LevelLightEngine;
        equals(arg0: any): boolean;
        get class(): typeof any
        get loadedChunksCount(): number
        get level(): Internal.BlockGetter
        get lightEngine(): Internal.LevelLightEngine
    }
    type ChunkSource_ = ChunkSource;
    abstract class AbstractSkeleton extends Internal.Monster implements Internal.RangedAttackMob {
        constructor(arg0: Internal.EntityType_<Internal.AbstractSkeleton>, arg1: Internal.Level_)
        getUpVector(arg0: number): Vec3d;
        gameEvent(arg0: Internal.GameEvent_, arg1: Internal.Entity_): void;
        static checkMobSpawnRules(arg0: Internal.EntityType_<Internal.Mob>, arg1: Internal.LevelAccessor_, arg2: Internal.MobSpawnType_, arg3: BlockPos_, arg4: Internal.RandomSource_): boolean;
        setDefaultMovementSpeedMultiplier(speed: number): void;
        isSuppressingBounce(): boolean;
        handler$ejj000$retrodamageindicators$retroDamageIndicators_onSyncedDataUpdated(arg0: Internal.EntityDataAccessor_<any>, arg1: Internal.CallbackInfo_): void;
        setTarget(arg0: Internal.LivingEntity_): void;
        isOnFire(): boolean;
        getDeathSound(): Internal.SoundEvent;
        onLeashDistance(arg0: number): void;
        getPositionCodec(): Internal.VecDeltaCodec;
        getPickedResult(arg0: Internal.HitResult_): Internal.ItemStack;
        isShaking(): boolean;
        setMaxUpStep(arg0: number): void;
        /**
         * @deprecated
        */
        updateFluidHeightAndDoFluidPushing(arg0: Internal.TagKey_<Internal.Fluid>, arg1: number): boolean;
        shouldPassengersInheritMalus(): boolean;
        convertTo<T extends Internal.Mob>(arg0: Internal.EntityType_<T>, arg1: boolean): T;
        getFallFlyingTicks(): number;
        runCommandSilent(command: string): number;
        setPosition(x: number, y: number, z: number): void;
        chunkPosition(): Internal.ChunkPos;
        dropLeash(arg0: boolean, arg1: boolean): void;
        gameEvent(arg0: Internal.GameEvent_): void;
        accessoriesCapability(): Internal.AccessoriesCapability;
        setXxa(arg0: number): void;
        updateWalkAnimation(arg0: number): void;
        setDelayedLeashHolderId(arg0: number): void;
        isShiftKeyDown(): boolean;
        isInFluidType(arg0: Internal.FluidState_): boolean;
        setUUID(arg0: Internal.UUID_): void;
        checkBelowWorld(): void;
        onEffectUpdated(arg0: Internal.MobEffectInstance_, arg1: boolean, arg2: Internal.Entity_): void;
        updateSwingTime(): void;
        setMotionZ(z: number): void;
        constant$zbj000$additionalentityattributes$additionalEntityAttributes$modifyUpwardSwimming(original: number, fluid: Internal.TagKey_<any>): number;
        "deserializeNBT(net.minecraft.nbt.Tag)"(arg0: Internal.Tag_): void;
        handler$zza000$step_height_entity_attribute$getStepHeight(cir: Internal.CallbackInfoReturnable_<any>): void;
        canFreeze(): boolean;
        ignoreExplosion(): boolean;
        getBlockY(): number;
        isSpectator(): boolean;
        isAlwaysExperienceDropper(): boolean;
        setMainHandItem(item: Internal.ItemStack_): void;
        removeEffectNoUpdate(arg0: Internal.MobEffect_): Internal.MobEffectInstance;
        spawnAtLocation(arg0: Internal.ItemLike_, arg1: number): Internal.ItemEntity;
        getPersistentData(): Internal.CompoundTag;
        getHealth(): number;
        getMaxHealth(): number;
        setPathfindingMalus(arg0: Internal.BlockPathTypes_, arg1: number): void;
        isRegisteredToWorld(): boolean;
        getRandomZ(arg0: number): number;
        setAggressive(arg0: boolean): void;
        constant$zbn000$additionalentityattributes$additionalEntityAttributes$knockDownwards(original: number): number;
        setRemoved(arg0: Internal.Entity$RemovalReason_): void;
        getAttachedOrCreate<A>(type: Internal.AttachmentType_<A>, initializer: Internal.Supplier_<A>): A;
        isInWaterRainOrBubble(): boolean;
        getDistanceSq(arg0: number, arg1: number, arg2: number): number;
        getRemovalReason(): Internal.Entity$RemovalReason;
        onFlap(): void;
        actuallyHurt(arg0: DamageSource_, arg1: number): void;
        resetFallDistance(): void;
        canSprint(): boolean;
        blockPosition(): BlockPos;
        setLevel(arg0: Internal.Level_): void;
        setBoundingBox(arg0: Internal.AABB_): void;
        isAmbientCreature(): boolean;
        setZza(arg0: number): void;
        getBlock(): Internal.BlockContainerJS;
        setEquipment(slot: Internal.EquipmentSlot_, item: Internal.ItemStack_): void;
        randomTeleport(arg0: number, arg1: number, arg2: number, arg3: boolean): boolean;
        invalidateCaps(): void;
        getName(): net.minecraft.network.chat.Component;
        playAmbientSound(): void;
        onGround(): boolean;
        getControlledVehicle(): Internal.Entity;
        isOnSameTeam(arg0: Internal.Entity_): boolean;
        getArmorValue(): number;
        isInFluidType(arg0: Internal.BiPredicate_<Internal.FluidType, number>): boolean;
        tick(): void;
        getKillCredit(): Internal.LivingEntity;
        redirect$dlf000$spectrum$isWet(livingEntity: Internal.LivingEntity_): boolean;
        isPushedByFluid(arg0: Internal.FluidType_): boolean;
        getComponentContainer(): Internal.ComponentContainer;
        sinkInFluid(arg0: Internal.FluidType_): void;
        tryCheckInsideBlocks(): void;
        hasPermissions(arg0: number): boolean;
        accessoriesHolder(): Internal.AccessoriesHolder;
        teleportTo(dimension: ResourceLocation_, x: number, y: number, z: number, yaw: number, pitch: number): void;
        onInsideBlock(arg0: Internal.BlockState_): void;
        static createMobAttributes(): Internal.AttributeSupplier$Builder;
        getDefaultLootTable(): ResourceLocation;
        isAutoSpinAttack(): boolean;
        getRemainingFireTicks(): number;
        limitPistonMovement(arg0: Vec3d_): Vec3d;
        onlyOpCanSetNbt(): boolean;
        addMotion(arg0: number, arg1: number, arg2: number): void;
        fireImmune(): boolean;
        getMaxFallDistance(): number;
        dsurround_getEffectInfo(): Internal.EntityEffectInfo;
        isHolding(arg0: Internal.Item_): boolean;
        getZ(arg0: number): number;
        hasCustomOutlineRendering(arg0: Internal.Player_): boolean;
        static areAllEffectsAmbient(arg0: Internal.Collection_<Internal.MobEffectInstance>): boolean;
        doHurtTarget(arg0: Internal.Entity_): boolean;
        getTicksFrozen(): number;
        tickRidden(arg0: Internal.Player_, arg1: Vec3d_): void;
        getRandomX(arg0: number): number;
        spawnAtLocation(arg0: Internal.ItemStack_, arg1: number): Internal.ItemEntity;
        pick(arg0: number, arg1: number, arg2: boolean): Internal.HitResult;
        getVoicePitch(): number;
        setStatusMessage(message: net.minecraft.network.chat.Component_): void;
        setSleepingPos(arg0: BlockPos_): void;
        isDescending(): boolean;
        getAttributeBaseValue(arg0: Internal.Attribute_): number;
        sendEffectToPassengers(arg0: Internal.MobEffectInstance_): void;
        getHeadRotSpeed(): number;
        getYHeadRot(): number;
        handler$dlf000$spectrum$applyBonusDamage(source: DamageSource_, amount: number, cir: Internal.CallbackInfoReturnable_<any>): void;
        verifyEquippedItem(arg0: Internal.ItemStack_): void;
        getProjectile(arg0: Internal.ItemStack_): Internal.ItemStack;
        damageEquipment(slot: Internal.EquipmentSlot_, amount: number, onBroken: Internal.Consumer_<Internal.ItemStack>): void;
        syncPacketPositionCodec(arg0: number, arg1: number, arg2: number): void;
        setAbsorptionAmount(arg0: number): void;
        getArrow(arg0: Internal.ItemStack_, arg1: number): Internal.AbstractArrow;
        isSunBurnTick(): boolean;
        makeBrain(arg0: Internal.Dynamic_<any>): Internal.Brain<any>;
        handler$dlf000$spectrum$mitigateFallDamageWithPuffCirclet(heightDifference: number, onGround: boolean, landedState: Internal.BlockState_, landedPosition: BlockPos_, ci: Internal.CallbackInfo_): void;
        isAffectedByFluids(): boolean;
        canAddPassenger(arg0: Internal.Entity_): boolean;
        shouldRenderAtSqrDistance(arg0: number): boolean;
        getAttachedOrSet<A>(type: Internal.AttachmentType_<A>, defaultValue: A): A;
        damageSources(): Internal.DamageSources;
        removeAttached<A>(type: Internal.AttachmentType_<A>): A;
        removeAllGoals(arg0: Internal.Predicate_<Internal.Goal>): void;
        swing(): void;
        getAmbientSound(): Internal.SoundEvent;
        recreateFromPacket(arg0: Internal.ClientboundAddEntityPacket_): void;
        canStartSwimming(): boolean;
        setDeltaMovement(arg0: Vec3d_): void;
        getLeashOffset(arg0: number): Vec3d;
        isBaby(): boolean;
        damageEquipment(slot: Internal.EquipmentSlot_): void;
        isGlowing(): boolean;
        "isInFluidType(net.minecraft.world.level.material.FluidState)"(arg0: Internal.FluidState_): boolean;
        getWalkTargetValue(arg0: BlockPos_): number;
        /**
         * @deprecated
        */
        canBreatheUnderwater(): boolean;
        die(arg0: DamageSource_): void;
        removeAllEffects(): boolean;
        getLeashOffset(): Vec3d;
        hasLineOfSight(arg0: Internal.Entity_): boolean;
        onClimbable(): boolean;
        isAttackable(): boolean;
        getRiddenSpeed(arg0: Internal.Player_): number;
        processPortalCooldown(): void;
        getSlot(arg0: number): Internal.SlotAccess;
        "deserializeNBT(net.minecraft.nbt.CompoundTag)"(arg0: Internal.CompoundTag_): void;
        stopSeenByPlayer(arg0: Internal.ServerPlayer_): void;
        isUnderWater(): boolean;
        stopRiding(): void;
        getSwimHighSpeedSplashSound(): Internal.SoundEvent;
        getLeashHolder(): Internal.Entity;
        createWitherRose(arg0: Internal.LivingEntity_): void;
        getX(arg0: number): number;
        getSensing(): Internal.Sensing;
        getLegsArmorItem(): Internal.ItemStack;
        captureDrops(arg0: Internal.Collection_<Internal.ItemEntity>): Internal.Collection<Internal.ItemEntity>;
        getSelfAndPassengers(): Internal.Stream<any>;
        rayTrace(distance: number): Internal.RayTraceResultJS;
        getDeltaMovement(): Vec3d;
        canTakeItem(arg0: Internal.ItemStack_): boolean;
        removeSoulSpeed(): void;
        shouldDropExperience(): boolean;
        getEquipmentDropChance(arg0: Internal.EquipmentSlot_): number;
        hasPassenger(arg0: Internal.Entity_): boolean;
        syncComponent(key: Internal.ComponentKey_<any>, packetWriter: Internal.ComponentPacketWriter_, predicate: Internal.PlayerSyncPredicate_): void;
        setSecondsOnFire(arg0: number): void;
        moveTo(arg0: number, arg1: number, arg2: number): void;
        "getDisplayName()"(): net.minecraft.network.chat.Component;
        getLootTable(): ResourceLocation;
        getTicksUsingItem(): number;
        tickHeadTurn(arg0: number, arg1: number): number;
        getArrowCount(): number;
        calculateViewVector(arg0: number, arg1: number): Vec3d;
        getMoveControl(): Internal.MoveControl;
        setMotion(arg0: number, arg1: number, arg2: number): void;
        handler$zki000$supplementaries$consumeQuiverArrow(target: Internal.LivingEntity_, velocity: number, ci: Internal.CallbackInfo_, arrow: Internal.ItemStack_): void;
        playSound(arg0: Internal.SoundEvent_): void;
        makeBoundingBox(): Internal.AABB;
        handler$deo000$eidolon$eidolonrepraised$getMobType(arg0: Internal.CallbackInfoReturnable_<any>): void;
        getDefaultMovementSpeed(): number;
        restoreFrom(arg0: Internal.Entity_): void;
        redirect$bkg000$fabric_entity_events_v1$beforeEntityKilled(livingEntity: Internal.LivingEntity_, source: DamageSource_, amount: number): boolean;
        isPeacefulCreature(): boolean;
        setOnGround(arg0: boolean): void;
        addEffect(arg0: Internal.MobEffectInstance_, arg1: Internal.Entity_): boolean;
        ate(): void;
        setPos(arg0: number, arg1: number, arg2: number): void;
        abstract getStepSound(): Internal.SoundEvent;
        notify(): void;
        getFirstTick(): boolean;
        setPersistenceRequired(): void;
        getLastHurtByMobTimestamp(): number;
        getVehicle(): Internal.Entity;
        isEffectiveAi(): boolean;
        startRiding(arg0: Internal.Entity_, arg1: boolean): boolean;
        setSpawnCancelled(arg0: boolean): void;
        getStringUuid(): string;
        setSwimming(arg0: boolean): void;
        canHydrateInFluidType(arg0: Internal.FluidType_): boolean;
        getMainArm(): Internal.HumanoidArm;
        checkSpawnRules(arg0: Internal.LevelAccessor_, arg1: Internal.MobSpawnType_): boolean;
        getRotationVector(): Internal.Vec2;
        getHurtDir(): number;
        isSprinting(): boolean;
        isMaxGroupSizeReached(arg0: number): boolean;
        getMotionY(): number;
        getOffhandItem(): Internal.ItemStack;
        canCollideWith(arg0: Internal.Entity_): boolean;
        getBlockExplosionResistance(arg0: Internal.Explosion_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.FluidState_, arg5: number): number;
        getFluidFallDistanceModifier(arg0: Internal.FluidType_): number;
        clearSleepingPos(): void;
        canSpawnSprintParticle(): boolean;
        canRide(arg0: Internal.Entity_): boolean;
        "moveTo(net.minecraft.core.BlockPos,float,float)"(arg0: BlockPos_, arg1: number, arg2: number): void;
        getLastHurtMob(): Internal.LivingEntity;
        moveRelative(arg0: number, arg1: Vec3d_): void;
        getOnPos(arg0: number): BlockPos;
        isAddedToWorld(): boolean;
        saveAsPassenger(arg0: Internal.CompoundTag_): boolean;
        gtceu$setFireImmune(isImmune: boolean): void;
        getDrinkingSound(arg0: Internal.ItemStack_): Internal.SoundEvent;
        getSoundSource(): Internal.SoundSource;
        getLastDamageSource(): DamageSource;
        removeAfterChangingDimensions(): void;
        setNoActionTime(arg0: number): void;
        setMovementSpeedAddition(speed: number): void;
        equipmentHasChanged(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getPose(): Internal.Pose;
        getSharedFlag(arg0: number): boolean;
        getAttribute(arg0: Internal.Attribute_): Internal.AttributeInstance;
        setPositionAndRotation(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        canBeAffected(arg0: Internal.MobEffectInstance_): boolean;
        tryAddFrost(): void;
        checkFallDamage(arg0: number, arg1: boolean, arg2: Internal.BlockState_, arg3: BlockPos_): void;
        quark$lastHurtByPlayer(): Internal.Player;
        getRestrictCenter(): BlockPos;
        isLeftHanded(): boolean;
        removeVehicle(): void;
        defineSynchedData(): void;
        checkInsideBlocks(): void;
        setZ(z: number): void;
        getY(): number;
        hashCode(): number;
        deserializeNBT(arg0: Internal.CompoundTag_): void;
        eat(arg0: Internal.Level_, arg1: Internal.ItemStack_): Internal.ItemStack;
        createHoverEvent(): Internal.HoverEvent;
        isWithinMeleeAttackRange(arg0: Internal.LivingEntity_): boolean;
        serverAiStep(): void;
        static checkMonsterSpawnRules(arg0: Internal.EntityType_<Internal.Monster>, arg1: Internal.ServerLevelAccessor_, arg2: Internal.MobSpawnType_, arg3: BlockPos_, arg4: Internal.RandomSource_): boolean;
        broadcastBreakEvent(arg0: Internal.EquipmentSlot_): void;
        getExitPortal(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: boolean, arg3: Internal.WorldBorder_): Internal.Optional<Internal.BlockUtil$FoundRectangle>;
        handler$bkm000$fabric_entity_events_v1$injectElytraTick(info: Internal.CallbackInfo_): void;
        setItemSlotAndDropWhenKilled(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): void;
        sendDebugPackets(): void;
        showVehicleHealth(): boolean;
        getDistance(pos: BlockPos_): number;
        isBlocking(): boolean;
        damageHeldItem(hand: Internal.InteractionHand_, amount: number): void;
        removeAttribute(attribute: Internal.Attribute_, identifier: string): void;
        playMuffledStepSound(arg0: Internal.BlockState_, arg1: BlockPos_): void;
        /**
         * @deprecated
        */
        isPushedByFluid(): boolean;
        dropFromLootTable(arg0: DamageSource_, arg1: boolean): void;
        getArmorCoverPercentage(): number;
        handleRelativeFrictionAndCalculateMovement(arg0: Vec3d_, arg1: number): Vec3d;
        turn(arg0: number, arg1: number): void;
        getAirSupply(): number;
        waterSwimSound(): void;
        moveTo(arg0: BlockPos_, arg1: number, arg2: number): void;
        isPlayer(): boolean;
        isAnimal(): boolean;
        readAdditionalSaveData(arg0: Internal.CompoundTag_): void;
        canBeCollidedWith(): boolean;
        getMotionDirection(): Internal.Direction;
        asComponentProvider(): Internal.ComponentProvider;
        lavaHurt(): void;
        handleDamageEvent(arg0: DamageSource_): void;
        updateUsingItem(arg0: Internal.ItemStack_): void;
        getFabricBalmData(): Internal.CompoundTag;
        canChangeDimensions(): boolean;
        jumpInFluid(arg0: Internal.FluidType_): void;
        getCommandSenderWorld(): Internal.Level;
        quark$lastHurtByPlayerTime(): number;
        getTotalMovementSpeed(): number;
        changeDimension(arg0: Internal.ServerLevel_): Internal.Entity;
        moveInFluid(arg0: Internal.FluidState_, arg1: Vec3d_, arg2: number): boolean;
        updatingUsingItem(): void;
        blockedByShield(arg0: Internal.LivingEntity_): void;
        attack(hp: number): void;
        canSwimInFluidType(arg0: Internal.FluidType_): boolean;
        getFireImmuneTicks(): number;
        getAttributes(): Internal.AttributeMap;
        isSpawnCancelled(): boolean;
        "hasPassenger(java.util.function.Predicate)"(arg0: Internal.Predicate_<Internal.Entity>): boolean;
        getDimensions(arg0: Internal.Pose_): Internal.EntityDimensions;
        isSwimming(): boolean;
        setSprinting(arg0: boolean): void;
        mayInteract(arg0: Internal.Level_, arg1: BlockPos_): boolean;
        setRot(arg0: number, arg1: number): void;
        setPortalCooldown(): void;
        getAttackAnim(arg0: number): number;
        setX(x: number): void;
        getPortalWaitTime(): number;
        getBlockStateOn(): Internal.BlockState;
        wantsToPickUp(arg0: Internal.ItemStack_): boolean;
        getItemBySlot(arg0: Internal.EquipmentSlot_): Internal.ItemStack;
        getFluidJumpThreshold(): number;
        enchantSpawnedArmor(arg0: Internal.RandomSource_, arg1: number, arg2: Internal.EquipmentSlot_): void;
        "setPositionAndRotation(double,double,double,float,float)"(x: number, y: number, z: number, yaw: number, pitch: number): void;
        isInvisibleTo(arg0: Internal.Player_): boolean;
        stopSleeping(): void;
        spectrum$setActuallyTouchingWater(actuallyTouchingWater: boolean): void;
        setAirSupply(arg0: number): void;
        getOnPos(): BlockPos;
        isUndead(): boolean;
        repositionEntityAfterLoad(): boolean;
        static createLivingAttributes(): Internal.AttributeSupplier$Builder;
        getBlockPosBelowThatAffectsMyMovement(): BlockPos;
        moveTowardsClosestSpace(arg0: number, arg1: number, arg2: number): void;
        getStepHeight(): number;
        static getCollisionHorizontalEscapeVector(arg0: number, arg1: number, arg2: number): Vec3d;
        setRegisteredToWorld(navigation: Internal.PathNavigation_): void;
        isSleeping(): boolean;
        stopUsingItem(): void;
        acceptsFailure(): boolean;
        playCombinationStepSounds(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: BlockPos_): void;
        setOnGroundWithKnownMovement(arg0: boolean, arg1: Vec3d_): void;
        getFluidFallingAdjustedMovement(arg0: number, arg1: boolean, arg2: Vec3d_): Vec3d;
        setOldPosAndRot(): void;
        static createMonsterAttributes(): Internal.AttributeSupplier$Builder;
        isFree(arg0: number, arg1: number, arg2: number): boolean;
        getDismountPoses(): Internal.ImmutableList<Internal.Pose>;
        getLastHurtMobTimestamp(): number;
        playBlockFallSound(): void;
        lithiumOnEquipmentChanged(): void;
        "moveTo(double,double,double)"(arg0: number, arg1: number, arg2: number): void;
        setRemainingFireTicks(arg0: number): void;
        updateControlFlags(): void;
        createBodyControl(): Internal.BodyRotationControl;
        /**
         * @deprecated
        */
        getOnPosLegacy(): BlockPos;
        setPos(arg0: Vec3d_): void;
        findDimensionEntryPoint(arg0: Internal.ServerLevel_): Internal.PortalInfo;
        enchantSpawnedWeapon(arg0: Internal.RandomSource_, arg1: number): void;
        populateDefaultEquipmentEnchantments(arg0: Internal.RandomSource_, arg1: Internal.DifficultyInstance_): void;
        damageHeldItem(hand: Internal.InteractionHand_, amount: number, onBroken: Internal.Consumer_<Internal.ItemStack>): void;
        reassessWeaponGoal(): void;
        getStandingEyeHeight(arg0: Internal.Pose_, arg1: Internal.EntityDimensions_): number;
        setCanPickUpLoot(arg0: boolean): void;
        getMainHandItem(): Internal.ItemStack;
        areCapsCompatible(arg0: Internal.CapabilityDispatcher_): boolean;
        setSilent(arg0: boolean): void;
        doPush(arg0: Internal.Entity_): void;
        captureDrops(): Internal.Collection<Internal.ItemEntity>;
        hasExactlyOnePlayerPassenger(): boolean;
        canBeSeenAsEnemy(): boolean;
        handler$dlf000$spectrum$drop(source: DamageSource_, ci: Internal.CallbackInfo_): void;
        getSwimSplashSound(): Internal.SoundEvent;
        setLeftHanded(arg0: boolean): void;
        getActiveEffects(): Internal.Collection<Internal.MobEffectInstance>;
        isOnPortalCooldown(): boolean;
        hurtArmor(arg0: DamageSource_, arg1: number): void;
        canAttack(arg0: Internal.LivingEntity_, arg1: Internal.TargetingConditions_): boolean;
        performRangedAttack(arg0: Internal.LivingEntity_, arg1: number): void;
        increaseAirSupply(arg0: number): number;
        getAttributeValue(arg0: Internal.Holder_<Internal.Attribute>): number;
        setPitch(arg0: number): void;
        isMultipartEntity(): boolean;
        setPosRaw(arg0: number, arg1: number, arg2: number): void;
        handleEntityEvent(arg0: number): void;
        getParts(): Internal.PartEntity<any>[];
        isUsingItem(): boolean;
        spawnSoulSpeedParticle(): void;
        removeFrost(): void;
        isAlwaysTicking(): boolean;
        interactAt(arg0: Internal.Player_, arg1: Vec3d_, arg2: Internal.InteractionHand_): InteractionResult;
        lerpTo(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): void;
        onPassengerTurned(arg0: Internal.Entity_): void;
        spawnAtLocation(arg0: Internal.ItemLike_): Internal.ItemEntity;
        setAttached(type: Internal.AttachmentType_<any>, value: any): any;
        /**
         * @deprecated
        */
        couldAcceptPassenger(): boolean;
        getForgePersistentData(): Internal.CompoundTag;
        lithiumOnBlockCacheDeleted(): void;
        "spawnAtLocation(net.minecraft.world.level.ItemLike,int)"(arg0: Internal.ItemLike_, arg1: number): Internal.ItemEntity;
        setInvulnerable(arg0: boolean): void;
        push(arg0: Internal.Entity_): void;
        isInFluidType(): boolean;
        jumpFromGround(): void;
        canReplaceCurrentItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getDamageAfterArmorAbsorb(arg0: DamageSource_, arg1: number): number;
        handler$chi000$cofh_core$shield(arg0: DamageSource_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        maxUpStep(): number;
        setGlowing(arg0: boolean): void;
        load(arg0: Internal.CompoundTag_): void;
        "broadcastBreakEvent(net.minecraft.world.entity.EquipmentSlot)"(arg0: Internal.EquipmentSlot_): void;
        setLeashedTo(arg0: Internal.Entity_, arg1: boolean): void;
        onChangedBlock(arg0: BlockPos_): void;
        isAlive(): boolean;
        startSleeping(arg0: BlockPos_): void;
        dsurround_getPotionSwirlColor(): number;
        pickUpItem(arg0: Internal.ItemEntity_): void;
        getBbHeight(): number;
        getMeleeAttackRangeSqr(arg0: Internal.LivingEntity_): number;
        getViewVector(arg0: number): Vec3d;
        getTags(): Internal.Set<string>;
        calculateFallDamage(arg0: number, arg1: number): number;
        getLastAttacker(): Internal.LivingEntity;
        hasControllingPassenger(): boolean;
        closerThan(arg0: Internal.Entity_, arg1: number, arg2: number): boolean;
        absMoveTo(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        updateEffectVisibility(): void;
        onPathfindingStart(): void;
        getPercentFrozen(): number;
        setPortalCooldown(arg0: number): void;
        hasGlowingTag(): boolean;
        shouldBlockExplode(arg0: Internal.Explosion_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: number): boolean;
        setPosition(block: Internal.BlockContainerJS_): void;
        handler$den000$eidolon$eidolonrepraised$isAlliedTo(arg0: Internal.Entity_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        isLeashed(): boolean;
        localvar$dlf000$spectrum$modifyDamage(amount: number, source: DamageSource_): number;
        getSoundVolume(): number;
        addEffect(arg0: Internal.MobEffectInstance_): boolean;
        getViewXRot(arg0: number): number;
        canRiderInteract(): boolean;
        fabric_getAttachments(): Internal.Map<any, any>;
        setPose(arg0: Internal.Pose_): void;
        getReachDistance(): number;
        getEntityType(): Internal.EntityType<any>;
        isWaterCreature(): boolean;
        toString(): string;
        updateInvisibilityStatus(): void;
        setLastHurtByPlayer(arg0: Internal.Player_): void;
        "getServer()"(): Internal.MinecraftServer;
        mobInteract(arg0: Internal.Player_, arg1: Internal.InteractionHand_): InteractionResult;
        wasExperienceConsumed(): boolean;
        isPushable(): boolean;
        setYBodyRot(arg0: number): void;
        foodEaten(is: Internal.ItemStack_): void;
        onClientRemoval(): void;
        handler$dlf000$spectrum$eat(stack: Internal.ItemStack_, world: Internal.Level_, targetEntity: Internal.LivingEntity_, ci: Internal.CallbackInfo_): void;
        self(): Internal.LivingEntity;
        shouldDropLoot(): boolean;
        reviveCaps(): void;
        getDistance(x: number, y: number, z: number): number;
        setMotionY(y: number): void;
        static createAttributes(): Internal.AttributeSupplier$Builder;
        getAttached(type: Internal.AttachmentType_<any>): any;
        setRotation(yaw: number, pitch: number): void;
        handler$cam000$radium$tryShortcutFluidPushing(ci: Internal.CallbackInfo_, box: Internal.AABB_, x1: number, x2: number, y1: number, y2: number, z1: number, z2: number, zero: number): void;
        calculateEntityAnimation(arg0: boolean): void;
        forceAddEffect(arg0: Internal.MobEffectInstance_, arg1: Internal.Entity_): void;
        setChestArmorItem(item: Internal.ItemStack_): void;
        getComponent<C extends dev.onyxstudios.cca.api.v3.component.Component>(key: Internal.ComponentKey_<C>): C;
        checkAutoSpinAttack(arg0: Internal.AABB_, arg1: Internal.AABB_): void;
        onAboveBubbleCol(arg0: boolean): void;
        "playSound(net.minecraft.sounds.SoundEvent,float,float)"(id: Internal.SoundEvent_, volume: number, pitch: number): void;
        toComponentPacket(key: Internal.ComponentKey_<any>, writer: Internal.ComponentPacketWriter_, recipient: Internal.ServerPlayer_): Internal.ClientboundCustomPayloadPacket;
        isPassenger(): boolean;
        hasPose(arg0: Internal.Pose_): boolean;
        playStepSound(arg0: BlockPos_, arg1: Internal.BlockState_): void;
        /**
         * @deprecated
        */
        isEyeInFluid(arg0: Internal.TagKey_<Internal.Fluid>): boolean;
        isInvulnerableTo(arg0: DamageSource_): boolean;
        makeStuckInBlock(arg0: Internal.BlockState_, arg1: Vec3d_): void;
        getAttachedOrGet<A>(type: Internal.AttachmentType_<A>, defaultValue: Internal.Supplier_<A>): A;
        isSensitiveToWater(): boolean;
        skipAttackInteraction(arg0: Internal.Entity_): boolean;
        maybeBackOffFromEdge(arg0: Vec3d_, arg1: Internal.MoverType_): Vec3d;
        newFloatList(...arg0: number[]): Internal.ListTag;
        lerpMotion(arg0: number, arg1: number, arg2: number): void;
        "getAttributeValue(net.minecraft.core.Holder)"(arg0: Internal.Holder_<Internal.Attribute>): number;
        shouldRender(arg0: number, arg1: number, arg2: number): boolean;
        getJumpControl(): Internal.JumpControl;
        isFlapping(): boolean;
        getEyeHeight(arg0: Internal.Pose_, arg1: Internal.EntityDimensions_): number;
        getFeetArmorItem(): Internal.ItemStack;
        static getViewScale(): number;
        getVisualRotationYInDegrees(): number;
        setSpeed(arg0: number): void;
        handler$zki000$supplementaries$finalizeSpawn(level: Internal.ServerLevelAccessor_, difficulty: Internal.DifficultyInstance_, reason: Internal.MobSpawnType_, spawnData: Internal.SpawnGroupData_, dataTag: Internal.CompoundTag_, cir: Internal.CallbackInfoReturnable_<any>): void;
        requiresCustomPersistence(): boolean;
        isDiscrete(): boolean;
        unRide(): void;
        getLevel(): Internal.Level;
        "spawnAtLocation(net.minecraft.world.item.ItemStack)"(arg0: Internal.ItemStack_): Internal.ItemEntity;
        getCombatTracker(): Internal.CombatTracker;
        updateDynamicGameEventListener(arg0: Internal.BiConsumer_<Internal.DynamicGameEventListener<any>, Internal.ServerLevel>): void;
        "onSyncedDataUpdated(net.minecraft.network.syncher.EntityDataAccessor)"(arg0: Internal.EntityDataAccessor_<any>): void;
        isNoAi(): boolean;
        areCapsCompatible(arg0: Internal.CapabilityProvider_<Internal.Entity>): boolean;
        extinguishFire(): void;
        getChestArmorItem(): Internal.ItemStack;
        damageEquipment(slot: Internal.EquipmentSlot_, amount: number): void;
        getBlockJumpFactor(): number;
        tell(message: net.minecraft.network.chat.Component_): void;
        closerThan(arg0: Internal.Entity_, arg1: number): boolean;
        onSoulSpeedBlock(): boolean;
        /**
         * @deprecated
        */
        goDownInWater(): void;
        getDistanceSq(pos: BlockPos_): number;
        indicateDamage(arg0: number, arg1: number): void;
        canBeSeenByAnyone(): boolean;
        playEntityOnFireExtinguishedSound(): void;
        isFullyFrozen(): boolean;
        dropCustomDeathLoot(arg0: DamageSource_, arg1: number, arg2: boolean): void;
        handler$eop000$wizards_reborn$isFallFlying(arg0: Internal.CallbackInfoReturnable_<any>): void;
        isInWall(): boolean;
        getMeleeAttackReferencePosition(): Vec3d;
        getAllSlots(): Internal.Iterable<Internal.ItemStack>;
        remove(arg0: Internal.Entity$RemovalReason_): void;
        getScale(): number;
        handler$dlf000$spectrum$canHaveStatusEffect(statusEffectInstance: Internal.MobEffectInstance_, cir: Internal.CallbackInfoReturnable_<any>): void;
        isSuppressingSlidingDownLadder(): boolean;
        getBlockZ(): number;
        dampensVibrations(): boolean;
        hasAttached(type: Internal.AttachmentType_<any>): boolean;
        isSilent(): boolean;
        "playSound(net.minecraft.sounds.SoundEvent)"(arg0: Internal.SoundEvent_): void;
        getPitch(): number;
        newDoubleList(...arg0: number[]): Internal.ListTag;
        getPathfindingMalus(arg0: Internal.BlockPathTypes_): number;
        getRandom(): Internal.RandomSource;
        canReplaceEqualItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        rotate(arg0: Internal.Rotation_): number;
        shouldRiderFaceForward(arg0: Internal.Player_): boolean;
        getPassengersAndSelf(): Internal.Stream<any>;
        breakItem(arg0: Internal.ItemStack_): void;
        rayTrace(distance: number, fluids: boolean): Internal.RayTraceResultJS;
        "getAttributeBaseValue(net.minecraft.core.Holder)"(arg0: Internal.Holder_<Internal.Attribute>): number;
        clearRestriction(): void;
        "self()"(): Internal.LivingEntity;
        rayTrace(): Internal.RayTraceResultJS;
        alwaysAccepts(): boolean;
        "isHolding(java.util.function.Predicate)"(arg0: Internal.Predicate_<Internal.ItemStack>): boolean;
        getNoActionTime(): number;
        isVisuallyCrawling(): boolean;
        isAggressive(): boolean;
        setYya(arg0: number): void;
        setDropChance(arg0: Internal.EquipmentSlot_, arg1: number): void;
        "broadcastBreakEvent(net.minecraft.world.InteractionHand)"(arg0: Internal.InteractionHand_): void;
        setFluidTypeHeight(arg0: Internal.FluidType_, arg1: number): void;
        dropExperience(): void;
        teleportRelative(arg0: number, arg1: number, arg2: number): void;
        setBaby(arg0: boolean): void;
        localvar$dkk000$spectrum$applyAdditionalFirstStrikeEnchantmentDamage(amount: number, source: DamageSource_): number;
        getLastHurtByMob(): Internal.LivingEntity;
        isInWaterOrBubble(): boolean;
        decreaseAirSupply(arg0: number): number;
        updateFluidHeightAndDoFluidPushing(): void;
        spawnParticles(arg0: Internal.ItemStack_, arg1: number): void;
        handler$cil001$dsurround$playStepSound(pos: BlockPos_, state: Internal.BlockState_, ci: Internal.CallbackInfo_): void;
        getPortalCooldown(): number;
        getItem(): Internal.ItemStack;
        causeFallDamage(arg0: number, arg1: number, arg2: DamageSource_): boolean;
        releaseUsingItem(): void;
        getPosition(arg0: number): Vec3d;
        removeFreeWill(): void;
        removeWhenFarAway(arg0: number): boolean;
        wait(arg0: number): void;
        isIgnoringBlockTriggers(): boolean;
        setRecordPlayingNearby(arg0: BlockPos_, arg1: boolean): void;
        isInRain(): boolean;
        getHandHoldingItemAngle(arg0: Internal.Item_): Vec3d;
        hasItemInSlot(arg0: Internal.EquipmentSlot_): boolean;
        canUpdate(arg0: boolean): void;
        getEyeInFluidType(): Internal.FluidType;
        distanceToSqr(arg0: Vec3d_): number;
        syncComponent(key: Internal.ComponentKey_<any>): void;
        modifyAttached<A>(type: Internal.AttachmentType_<A>, modifier: Internal.UnaryOperator_<A>): A;
        isSteppingCarefully(): boolean;
        getSoundFromFluidType(arg0: Internal.FluidType_, arg1: Internal.SoundAction_): Internal.SoundEvent;
        "spawnAtLocation(net.minecraft.world.item.ItemStack,float)"(arg0: Internal.ItemStack_, arg1: number): Internal.ItemEntity;
        addAdditionalSaveData(arg0: Internal.CompoundTag_): void;
        getBlockX(): number;
        /**
         * @deprecated
        */
        getLightLevelDependentMagicValue(): number;
        isFallFlying(): boolean;
        getEncodeId(): string;
        getY(arg0: number): number;
        getMaxHeadXRot(): number;
        getNbt(): Internal.CompoundTag;
        setInvisible(arg0: boolean): void;
        canEnterPose(arg0: Internal.Pose_): boolean;
        getEffect(arg0: Internal.MobEffect_): Internal.MobEffectInstance;
        setTotalMovementSpeedMultiplier(speed: number): void;
        setHealth(arg0: number): void;
        handler$deo000$eidolon$eidolonrepraised$canAttack(arg0: Internal.LivingEntity_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        attack(arg0: DamageSource_, arg1: number): boolean;
        getBlockSpeedFactor(): number;
        modifyExpressionValue$cpi002$mna$elytraOverride(arg0: boolean): boolean;
        onInsideBubbleColumn(arg0: boolean): void;
        getEyePosition(): Vec3d;
        getEyeHeight(): number;
        onOffspringSpawnedFromEgg(arg0: Internal.Player_, arg1: Internal.Mob_): void;
        setDiscardFriction(arg0: boolean): void;
        hasPassenger(arg0: Internal.Predicate_<Internal.Entity>): boolean;
        getYaw(): number;
        swing(arg0: Internal.InteractionHand_, arg1: boolean): void;
        getUsedItemHand(): Internal.InteractionHand;
        setDefaultMovementSpeed(speed: number): void;
        onEffectAdded(arg0: Internal.MobEffectInstance_, arg1: Internal.Entity_): void;
        canAttackType(arg0: Internal.EntityType_<any>): boolean;
        getCapability<T>(arg0: Internal.Capability_<T>, arg1: Internal.Direction_): Internal.LazyOptional<T>;
        canEntityBeSeen(entity: Internal.LivingEntity_): boolean;
        getBrain(): Internal.Brain<any>;
        dsurround_isJumping(): boolean;
        setCustomNameVisible(arg0: boolean): void;
        isAlliedTo(arg0: Internal.Team_): boolean;
        handler$cpk000$mna$playSound(arg0: Internal.SoundEvent_, arg1: number, arg2: number, arg3: Internal.CallbackInfo_): void;
        getAttachedOrCreate<A>(type: Internal.AttachmentType_<A>): A;
        canFireProjectileWeapon(arg0: Internal.ProjectileWeaponItem_): boolean;
        getControllingPassenger(): Internal.LivingEntity;
        getScriptType(): Internal.ScriptType;
        shouldDiscardFriction(): boolean;
        startRiding(arg0: Internal.Entity_): boolean;
        saveWithoutId(arg0: Internal.CompoundTag_): Internal.CompoundTag;
        getForward(): Vec3d;
        serializeNBT(): Internal.Tag;
        getDamageAfterMagicAbsorb(arg0: DamageSource_, arg1: number): number;
        setFeetArmorItem(item: Internal.ItemStack_): void;
        getId(): number;
        canBeHitByProjectile(): boolean;
        getRecipientsForComponentSync(): Internal.Iterable<any>;
        handler$dkf000$spectrum$dropStack(stack: Internal.ItemStack_, cir: Internal.CallbackInfoReturnable_<any>): void;
        getEyeY(): number;
        skipDropExperience(): void;
        fabric_readAttachmentsFromNbt(nbt: Internal.CompoundTag_): void;
        getBoundingBox(): Internal.AABB;
        isInWaterOrRain(): boolean;
        setItemSlot(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): void;
        modify$dlf001$spectrum$applyExuberance(originalXP: number): number;
        handler$dlf000$spectrum$setSprinting(sprinting: boolean, ci: Internal.CallbackInfo_): void;
        tryAddSoulSpeed(): void;
        equals(arg0: any): boolean;
        handler$cpk000$mna$canEnterPose(arg0: Internal.Pose_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        getViewYRot(arg0: number): number;
        getSwimSound(): Internal.SoundEvent;
        getLastArmorItem(arg0: Internal.EquipmentSlot_): Internal.ItemStack;
        dismountsUnderwater(): boolean;
        isAffectedByPotions(): boolean;
        playerTouch(arg0: Internal.Player_): void;
        addTag(arg0: string): boolean;
        getEyeHeight(arg0: Internal.Pose_): number;
        getAddEntityPacket(): Internal.Packet<Internal.ClientGamePacketListener>;
        doWaterSplashEffect(): void;
        static getEquipmentForSlot(arg0: Internal.EquipmentSlot_, arg1: number): Internal.Item;
        isWithinRestriction(arg0: BlockPos_): boolean;
        getTeam(): Internal.Team;
        setTicksFrozen(arg0: number): void;
        getUseItem(): Internal.ItemStack;
        getMyRidingOffset(): number;
        handler$dlf000$spectrum$addStatusEffect(effect: Internal.MobEffectInstance_, source: Internal.Entity_, cir: Internal.CallbackInfoReturnable_<any>): void;
        dismountTo(arg0: number, arg1: number, arg2: number): void;
        getFlyingSpeed(): number;
        hasCustomName(): boolean;
        getSwimAmount(arg0: number): number;
        isLiving(): boolean;
        getX(): number;
        dropAllDeathLoot(arg0: DamageSource_): void;
        isVehicle(): boolean;
        static transfer(original: Internal.AttachmentTarget_, target: Internal.AttachmentTarget_, isDeath: boolean): void;
        tickLeash(): void;
        spawnAtLocation(arg0: Internal.ItemStack_): Internal.ItemEntity;
        customServerAiStep(): void;
        mergeNbt(tag: Internal.CompoundTag_): Internal.Entity;
        handler$cpf000$mna$onClimbable(arg0: Internal.CallbackInfoReturnable_<any>): void;
        thunderHit(arg0: Internal.ServerLevel_, arg1: Internal.LightningBolt_): void;
        setIsInPowderSnow(arg0: boolean): void;
        doEnchantDamageEffects(arg0: Internal.LivingEntity_, arg1: Internal.Entity_): void;
        setCustomName(arg0: net.minecraft.network.chat.Component_): void;
        handleNetherPortal(): void;
        getTeamId(): string;
        canBeRiddenUnderFluidType(arg0: Internal.FluidType_, arg1: Internal.Entity_): boolean;
        wthit_getTypeName(): net.minecraft.network.chat.Component;
        setStingerCount(arg0: number): void;
        getMaxHeadYRot(): number;
        getBoundingBoxForPose(arg0: Internal.Pose_): Internal.AABB;
        isCustomNameVisible(): boolean;
        isSupportedBy(arg0: BlockPos_): boolean;
        followLeashSpeed(): number;
        getPistonPushReaction(): Internal.PushReaction;
        shouldRiderSit(): boolean;
        handler$dlf000$spectrum$checkForTotemPendant(source: DamageSource_, cir: Internal.CallbackInfoReturnable_<any>): void;
        lookAt(arg0: Internal.EntityAnchorArgument$Anchor_, arg1: Vec3d_): void;
        hurtCurrentlyUsedShield(arg0: number): void;
        triggerItemUseEffects(arg0: Internal.ItemStack_, arg1: number): void;
        getLootTableSeed(): number;
        isInFluidType(arg0: Internal.FluidType_): boolean;
        getFluidMotionScale(arg0: Internal.FluidType_): number;
        getMotionX(): number;
        "onSyncedDataUpdated(java.util.List)"(arg0: Internal.List_<Internal.SynchedEntityData$DataValue<any>>): void;
        canBeLeashed(arg0: Internal.Player_): boolean;
        hasIndirectPassenger(arg0: Internal.Entity_): boolean;
        getEntityData(): Internal.SynchedEntityData;
        handleInsidePortal(arg0: BlockPos_): void;
        getPotionEffects(): Internal.EntityPotionEffectsJS;
        /**
         * @deprecated
        */
        jumpInLiquid(arg0: Internal.TagKey_<Internal.Fluid>): void;
        absMoveTo(arg0: number, arg1: number, arg2: number): void;
        onBelowWorld(): void;
        isOnRails(): boolean;
        getAttachedOrThrow<A>(type: Internal.AttachmentType_<A>): A;
        getStingerCount(): number;
        getFallSounds(): Internal.LivingEntity$Fallsounds;
        reapplyPosition(): void;
        getAttributeTotalValue(attribute: Internal.Attribute_): number;
        getDimensionChangingDelay(): number;
        setLivingEntityFlag(arg0: number, arg1: boolean): void;
        getWaterSlowDown(): number;
        createNavigation(arg0: Internal.Level_): Internal.PathNavigation;
        setYaw(arg0: number): void;
        getPickRadius(): number;
        isPathFinding(): boolean;
        isRemoved(): boolean;
        teleportToWithTicket(arg0: number, arg1: number, arg2: number): void;
        spawnAnim(): void;
        getJumpBoostPower(): number;
        fillCrashReportCategory(arg0: Internal.CrashReportCategory_): void;
        handler$cpe000$mna$jumpInLiquid(arg0: Internal.TagKey_<any>, arg1: Internal.CallbackInfo_): void;
        self(): Internal.Entity;
        refreshDimensions(): void;
        "getAttributeValue(net.minecraft.world.entity.ai.attributes.Attribute)"(arg0: Internal.Attribute_): number;
        "isHolding(net.minecraft.world.item.Item)"(arg0: Internal.Item_): boolean;
        "spawnAtLocation(net.minecraft.world.level.ItemLike)"(arg0: Internal.ItemLike_): Internal.ItemEntity;
        setShiftKeyDown(arg0: boolean): void;
        getEyePosition(arg0: number): Vec3d;
        getPassengers(): Internal.EntityArrayList;
        getRiddenInput(arg0: Internal.Player_, arg1: Vec3d_): Vec3d;
        calculateUpVector(arg0: number, arg1: number): Vec3d;
        handler$dlf000$spectrum$TriggerArmorWithHitEffect(source: DamageSource_, amount: number, cir: Internal.CallbackInfoReturnable_<any>): void;
        spawnSprintParticle(): void;
        getMaxHeightFluidType(): Internal.FluidType;
        getZ(): number;
        checkSupportingBlock(arg0: boolean, arg1: Vec3d_): void;
        dropEquipment(): void;
        shouldRemoveSoulSpeed(arg0: Internal.BlockState_): boolean;
        teleportTo(arg0: number, arg1: number, arg2: number): void;
        getAttributeBaseValue(arg0: Internal.Holder_<Internal.Attribute>): number;
        getServer(): Internal.MinecraftServer;
        getExperienceReward(): number;
        getFirstPassenger(): Internal.Entity;
        heal(arg0: number): void;
        getSpawnType(): Internal.MobSpawnType;
        setLastHurtMob(arg0: Internal.Entity_): void;
        getRelativePortalPosition(arg0: Internal.Direction$Axis_, arg1: Internal.BlockUtil$FoundRectangle_): Vec3d;
        setLastHurtByMob(arg0: Internal.LivingEntity_): void;
        interact(arg0: Internal.Player_, arg1: Internal.InteractionHand_): InteractionResult;
        removePassenger(arg0: Internal.Entity_): void;
        getDismountLocationForPassenger(arg0: Internal.LivingEntity_): Vec3d;
        invokeSetLevel(arg0: Internal.Level_): void;
        checkSlowFallDistance(): void;
        tickDeath(): void;
        updateInWaterStateAndDoWaterCurrentPushing(): void;
        canStandOnFluid(arg0: Internal.FluidState_): boolean;
        addPassenger(arg0: Internal.Entity_): void;
        setFabricBalmData(arg0: Internal.CompoundTag_): void;
        touchingUnloadedChunk(): boolean;
        modifyAttribute(attribute: Internal.Attribute_, identifier: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        getLookAngle(): Vec3d;
        handler$cpe000$mna$canStandOnFluid(arg0: Internal.FluidState_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        getAmbientSoundInterval(): number;
        setArrowCount(arg0: number): void;
        getPermissionLevel(): number;
        getMotionZ(): number;
        nextStep(): number;
        isPersistenceRequired(): boolean;
        isInvisible(): boolean;
        is(arg0: Internal.Entity_): boolean;
        getBedOrientation(): Internal.Direction;
        /**
         * @deprecated
        */
        getBlockStateOnLegacy(): Internal.BlockState;
        ejectPassengers(): void;
        removeEffect(arg0: Internal.MobEffect_): boolean;
        getProfile(): Internal.GameProfile;
        isDeadOrDying(): boolean;
        setHeadArmorItem(item: Internal.ItemStack_): void;
        static setViewScale(arg0: number): void;
        take(arg0: Internal.Entity_, arg1: number): void;
        setLevelCallback(arg0: Internal.EntityInLevelCallback_): void;
        getLookControl(): Internal.LookControl;
        isPreventingPlayerRest(arg0: Internal.Player_): boolean;
        pushEntities(): void;
        playSound(arg0: Internal.SoundEvent_, arg1: number, arg2: number): void;
        "areCapsCompatible(net.minecraftforge.common.capabilities.CapabilityDispatcher)"(arg0: Internal.CapabilityDispatcher_): boolean;
        canAttack(arg0: Internal.LivingEntity_): boolean;
        getLastHandItem(arg0: Internal.EquipmentSlot_): Internal.ItemStack;
        getOffHandItem(): Internal.ItemStack;
        startSeenByPlayer(arg0: Internal.ServerPlayer_): void;
        isOnScoreboardTeam(teamId: string): boolean;
        startUsingItem(arg0: Internal.InteractionHand_): void;
        position(): Vec3d;
        static getEquipmentSlotForItem(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getEquipment(slot: Internal.EquipmentSlot_): Internal.ItemStack;
        displayFireAnimation(): boolean;
        handler$deo000$eidolon$eidolonrepraised$isFallFlying(arg0: Internal.CallbackInfoReturnable_<any>): void;
        getRopeHoldPosition(arg0: number): Vec3d;
        copyPosition(arg0: Internal.Entity_): void;
        modifyExpressionValue$cpi000$mna$eytraValidOverride(arg0: boolean): boolean;
        onAddedToWorld(): void;
        "hasPassenger(net.minecraft.world.entity.Entity)"(arg0: Internal.Entity_): boolean;
        isCrouching(): boolean;
        "getAttributeBaseValue(net.minecraft.world.entity.ai.attributes.Attribute)"(attribute: Internal.Attribute_): number;
        onLeaveCombat(): void;
        handler$cpe000$mna$isAffectedByFluids(arg0: Internal.CallbackInfoReturnable_<any>): void;
        setY(y: number): void;
        getAttributeValue(arg0: Internal.Attribute_): number;
        getFeetBlockState(): Internal.BlockState;
        "breakItem(net.minecraft.world.item.ItemStack)"(arg0: Internal.ItemStack_): void;
        isWithinRestriction(): boolean;
        changeDimension(arg0: Internal.ServerLevel_, arg1: Internal.ITeleporter_): Internal.Entity;
        isHorizontalCollisionMinor(arg0: Vec3d_): boolean;
        positionRider(arg0: Internal.Entity_): void;
        baseTick(): void;
        broadcastToPlayer(arg0: Internal.ServerPlayer_): boolean;
        modify$zbj001$additionalentityattributes$additionalEntityAttributes$modifyExperience(originalXP: number): number;
        setSharedFlag(arg0: number, arg1: boolean): void;
        getSleepingPos(): Internal.Optional<BlockPos>;
        getEyeHeightAccess(arg0: Internal.Pose_, arg1: Internal.EntityDimensions_): number;
        damageHeldItem(): void;
        getCustomName(): net.minecraft.network.chat.Component;
        getClass(): typeof any;
        "self()"(): Internal.Entity;
        isVisuallySwimming(): boolean;
        getMaxAirSupply(): number;
        canTrample(arg0: Internal.BlockState_, arg1: BlockPos_, arg2: number): boolean;
        wrapOperation$zoc000$supplementaries$onTravel(instance: Internal.LivingEntity_, state: Internal.FluidState_, original: Internal.Operation_<any>): boolean;
        blockUsingShield(arg0: Internal.LivingEntity_): void;
        processFlappingMovement(): void;
        setItemInHand(arg0: Internal.InteractionHand_, arg1: Internal.ItemStack_): void;
        setMaxHealth(hp: number): void;
        getFacing(): Internal.Direction;
        modify$zbj000$additionalentityattributes$additionalEntityAttributes$waterSpeed(original: number): number;
        isPassengerOfSameVehicle(arg0: Internal.Entity_): boolean;
        getBoundingBoxForCulling(): Internal.AABB;
        getTarget(): Internal.LivingEntity;
        static collideBoundingBox(entity: Internal.Entity_, movement: Vec3d_, entityBoundingBox: Internal.AABB_, world: Internal.Level_, collisions: Internal.List_<any>): Vec3d;
        restrictTo(arg0: BlockPos_, arg1: number): void;
        trackingPosition(): Vec3d;
        getNameTagOffsetY(): number;
        isInvulnerable(): boolean;
        isInLava(): boolean;
        isInWater(): boolean;
        awardKillScore(arg0: Internal.Entity_, arg1: number, arg2: DamageSource_): void;
        finalizeSpawn(arg0: Internal.ServerLevelAccessor_, arg1: Internal.DifficultyInstance_, arg2: Internal.MobSpawnType_, arg3: Internal.SpawnGroupData_, arg4: Internal.CompoundTag_): Internal.SpawnGroupData;
        unsetRemoved(): void;
        getPickupReach(): Vec3i;
        swing(arg0: Internal.InteractionHand_): void;
        hasEffect(arg0: Internal.MobEffect_): boolean;
        getHeldItem(hand: Internal.InteractionHand_): Internal.ItemStack;
        /**
         * @deprecated
        */
        fixupDimensions(): void;
        getRootVehicle(): Internal.Entity;
        onPathfindingDone(): void;
        save(arg0: Internal.CompoundTag_): boolean;
        getLocalBoundsForPose(arg0: Internal.Pose_): Internal.AABB;
        isNoGravity(): boolean;
        curePotionEffects(arg0: Internal.ItemStack_): boolean;
        onItemPickup(arg0: Internal.ItemEntity_): void;
        handler$dhc000$reborncore$onApplyArmorToDamage(source: DamageSource_, amount: number, cir: Internal.CallbackInfoReturnable_<any>): void;
        populateDefaultEquipmentSlots(arg0: Internal.RandomSource_, arg1: Internal.DifficultyInstance_): void;
        completeUsingItem(): void;
        isImmobile(): boolean;
        updateSwimming(): void;
        isHolding(arg0: Internal.Predicate_<Internal.ItemStack>): boolean;
        getSpeed(): number;
        abstract getCachedFeetBlockState(): Internal.BlockState;
        shouldInformAdmins(): boolean;
        canFluidExtinguish(arg0: Internal.FluidType_): boolean;
        rideTick(): void;
        wait(): void;
        dsurround_setPotionSwirlColor(color: number): void;
        getUuid(): Internal.UUID;
        setOffHandItem(item: Internal.ItemStack_): void;
        spawn(): void;
        setNoAi(arg0: boolean): void;
        handler$dke000$spectrum$isSubmergedIn(fluidTag: Internal.TagKey_<any>, cir: Internal.CallbackInfoReturnable_<any>): void;
        teleportTo(arg0: Internal.ServerLevel_, arg1: number, arg2: number, arg3: number, arg4: Internal.Set_<Internal.RelativeMovement>, arg5: number, arg6: number): boolean;
        fabric_writeAttachmentsToNbt(nbt: Internal.CompoundTag_): void;
        shouldShowName(): boolean;
        markHurt(): void;
        getArmorSlots(): Internal.Iterable<Internal.ItemStack>;
        canPickUpLoot(): boolean;
        kill(): void;
        onEnterCombat(): void;
        updateNavigationRegistration(): void;
        playSwimSound(arg0: number): void;
        animateHurt(arg0: number): void;
        syncComponent(key: Internal.ComponentKey_<any>, packetWriter: Internal.ComponentPacketWriter_): void;
        modifyReturnValue$zbi000$additionalentityattributes$getMaxAir(original: number): number;
        static resetForwardDirectionOfRelativePortalPosition(arg0: Vec3d_): Vec3d;
        brainProvider(): Internal.Brain$Provider<any>;
        getJumpPower(): number;
        registerGoals(): void;
        hasRestriction(): boolean;
        getHeadArmorItem(): Internal.ItemStack;
        deserializeNBT(arg0: Internal.Tag_): void;
        positionRider(arg0: Internal.Entity_, arg1: Internal.Entity$MoveFunction_): void;
        redirect$fab000$moonlight$fixSpawnAnimX(instance: Internal.Mob_, v: number): number;
        removeEffectParticles(): void;
        revive(): void;
        getBbWidth(): number;
        static checkAnyLightMonsterSpawnRules(arg0: Internal.EntityType_<Internal.Monster>, arg1: Internal.LevelAccessor_, arg2: Internal.MobSpawnType_, arg3: BlockPos_, arg4: Internal.RandomSource_): boolean;
        isEyeInFluidType(arg0: Internal.FluidType_): boolean;
        addDeltaMovement(arg0: Vec3d_): void;
        updateNoActionTime(): void;
        localvar$egc000$zeldamod$inject3(arg0: number): number;
        getHurtSound(arg0: DamageSource_): Internal.SoundEvent;
        canDrownInFluidType(arg0: Internal.FluidType_): boolean;
        "getName()"(): net.minecraft.network.chat.Component;
        mirror(arg0: Internal.Mirror_): number;
        canUpdate(): boolean;
        knockback(arg0: number, arg1: number, arg2: number): void;
        getTypeName(): net.minecraft.network.chat.Component;
        getTicksRequiredToFreeze(): number;
        shouldDespawnInPeaceful(): boolean;
        getVisibilityPercent(arg0: Internal.Entity_): number;
        getMaxSpawnClusterSize(): number;
        doAutoAttackOnTouch(arg0: Internal.LivingEntity_): void;
        getUsername(): string;
        getPrimaryStepSoundBlockPos(arg0: BlockPos_): BlockPos;
        move(arg0: Internal.MoverType_, arg1: Vec3d_): void;
        lithiumOnBlockCacheSet(newState: Internal.BlockState_): void;
        onRemovedFromWorld(): void;
        getCapability<T>(arg0: Internal.Capability_<T>): Internal.LazyOptional<T>;
        isPickable(): boolean;
        handler$dke000$spectrum$isSubmergedInWater(cir: Internal.CallbackInfoReturnable_<any>): void;
        isInFluidType(predicate: Internal.BiPredicate_<any, any>, forAllTypes: boolean): boolean;
        setYHeadRot(arg0: number): void;
        setJumping(arg0: boolean): void;
        getPickResult(): Internal.ItemStack;
        "getMainHandItem()"(): Internal.ItemStack;
        getAbsorptionAmount(): number;
        getRandomY(): number;
        onEffectRemoved(arg0: Internal.MobEffectInstance_): void;
        getDisplayName(): net.minecraft.network.chat.Component;
        getMobType(): Internal.MobType;
        travel(arg0: Vec3d_): void;
        maxhealthfix$setRestorePoint(arg0: number): void;
        getItemInHand(arg0: Internal.InteractionHand_): Internal.ItemStack;
        spectrum$isActuallyTouchingWater(): boolean;
        shouldBeSaved(): boolean;
        getFluidTypeHeight(arg0: Internal.FluidType_): number;
        fabric_hasPersistentAttachments(): boolean;
        handler$dlf000$spectrum$applyDisarmingEnchantment(source: DamageSource_, amount: number, cir: Internal.CallbackInfoReturnable_<any>): void;
        "areCapsCompatible(net.minecraftforge.common.capabilities.CapabilityProvider)"(arg0: Internal.CapabilityProvider_<Internal.Entity>): boolean;
        hurtHelmet(arg0: DamageSource_, arg1: number): void;
        removeTag(arg0: string): boolean;
        isHoldingInAnyHand(i: Internal.Ingredient_): boolean;
        /**
         * @deprecated
        */
        getFluidHeight(arg0: Internal.TagKey_<Internal.Fluid>): number;
        canSpawnSoulSpeedParticle(): boolean;
        notifyAll(): void;
        aiStep(): void;
        getPassengersRidingOffset(): number;
        setAttributeBaseValue(attribute: Internal.Attribute_, value: number): void;
        "isInFluidType(java.util.function.BiPredicate)"(arg0: Internal.BiPredicate_<Internal.FluidType, number>): boolean;
        distanceToEntitySqr(arg0: Internal.Entity_): number;
        isFrame(): boolean;
        broadcastBreakEvent(arg0: Internal.InteractionHand_): void;
        setLegsArmorItem(item: Internal.ItemStack_): void;
        discard(): void;
        sendSystemMessage(arg0: net.minecraft.network.chat.Component_): void;
        acceptsSuccess(): boolean;
        setNoGravity(arg0: boolean): void;
        getUseItemRemainingTicks(): number;
        getIndirectPassengers(): Internal.Iterable<any>;
        attackable(): boolean;
        createCommandSourceStack(): Internal.CommandSourceStack;
        getNavigation(): Internal.PathNavigation;
        isControlledByLocalInstance(): boolean;
        isMonster(): boolean;
        getLastClimbablePos(): Internal.Optional<BlockPos>;
        getEatingSound(arg0: Internal.ItemStack_): Internal.SoundEvent;
        getPerceivedTargetDistanceSquareForMeleeAttack(arg0: Internal.LivingEntity_): number;
        getHorizontalFacing(): Internal.Direction;
        setId(arg0: number): void;
        onSyncedDataUpdated(arg0: Internal.List_<Internal.SynchedEntityData$DataValue<any>>): void;
        getType(): string;
        isDamageSourceBlocked(arg0: DamageSource_): boolean;
        getLightProbePosition(arg0: number): Vec3d;
        getActiveEffectsMap(): Internal.Map<Internal.MobEffect, Internal.MobEffectInstance>;
        onEquipItem(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_): void;
        static isDarkEnoughToSpawn(arg0: Internal.ServerLevelAccessor_, arg1: BlockPos_, arg2: Internal.RandomSource_): boolean;
        checkDespawn(): void;
        getWalkTargetValue(arg0: BlockPos_, arg1: Internal.LevelReader_): number;
        lookAt(arg0: Internal.Entity_, arg1: number, arg2: number): void;
        setHeldItem(hand: Internal.InteractionHand_, item: Internal.ItemStack_): void;
        equipItemIfPossible(arg0: Internal.ItemStack_): Internal.ItemStack;
        playHurtSound(arg0: DamageSource_): void;
        onSyncedDataUpdated(arg0: Internal.EntityDataAccessor_<any>): void;
        isActuallyReallyBlocking(): boolean;
        lerpHeadTo(arg0: number, arg1: number): void;
        canDisableShield(): boolean;
        doesEmitEquipEvent(arg0: Internal.EquipmentSlot_): boolean;
        setMotionX(x: number): void;
        shouldStayCloseToLeashHolder(): boolean;
        getHandSlots(): Internal.Iterable<Internal.ItemStack>;
        getMovementEmission(): Internal.Entity$MovementEmission;
        distanceToEntity(arg0: Internal.Entity_): number;
        wait(arg0: number, arg1: number): void;
        getTeamColor(): number;
        lithiumSetClimbingMobCachingSectionUpdateBehavior(listenForCachedBlockChanges: boolean): void;
        setNbt(nbt: Internal.CompoundTag_): void;
        "isInFluidType(net.minecraftforge.fluids.FluidType)"(arg0: Internal.FluidType_): boolean;
        checkSpawnObstruction(arg0: Internal.LevelReader_): boolean;
        extinguish(): void;
        getRestrictRadius(): number;
        moveTo(arg0: Vec3d_): void;
        isColliding(arg0: BlockPos_, arg1: Internal.BlockState_): boolean;
        updateInWaterStateAndDoFluidPushing(): boolean;
        "swing(net.minecraft.world.InteractionHand)"(arg0: Internal.InteractionHand_): void;
        dsurround_setEffectInfo(info: Internal.EntityEffectInfo_): void;
        getRegisteredNavigation(): Internal.PathNavigation;
        tickEffects(): void;
        isInvertedHealAndHarm(): boolean;
        canHoldItem(arg0: Internal.ItemStack_): boolean;
        killedEntity(arg0: Internal.ServerLevel_, arg1: Internal.LivingEntity_): boolean;
        getAttachedOrElse<A>(type: Internal.AttachmentType_<A>, defaultValue: A): A;
        handler$dlf000$spectrum$applyInexorableEffects(ci: Internal.CallbackInfo_): void;
        getClassification(arg0: boolean): Internal.MobCategory;
        isFreezing(): boolean;
        runCommand(command: string): number;
        setGuaranteedDrop(arg0: Internal.EquipmentSlot_): void;
        setSharedFlagOnFire(arg0: boolean): void;
        set defaultMovementSpeedMultiplier(speed: number)
        get suppressingBounce(): boolean
        set target(arg0: Internal.LivingEntity_)
        get onFire(): boolean
        get deathSound(): Internal.SoundEvent
        get positionCodec(): Internal.VecDeltaCodec
        get shaking(): boolean
        set maxUpStep(arg0: number)
        get fallFlyingTicks(): number
        set xxa(arg0: number)
        set delayedLeashHolderId(arg0: number)
        get shiftKeyDown(): boolean
        set UUID(arg0: Internal.UUID_)
        set motionZ(z: number)
        get blockY(): number
        get spectator(): boolean
        get alwaysExperienceDropper(): boolean
        set mainHandItem(item: Internal.ItemStack_)
        get persistentData(): Internal.CompoundTag
        get health(): number
        get maxHealth(): number
        get registeredToWorld(): boolean
        set aggressive(arg0: boolean)
        set removed(arg0: Internal.Entity$RemovalReason_)
        get inWaterRainOrBubble(): boolean
        get removalReason(): Internal.Entity$RemovalReason
        set level(arg0: Internal.Level_)
        set boundingBox(arg0: Internal.AABB_)
        get ambientCreature(): boolean
        set zza(arg0: number)
        get block(): Internal.BlockContainerJS
        get name(): net.minecraft.network.chat.Component
        get controlledVehicle(): Internal.Entity
        get armorValue(): number
        get killCredit(): Internal.LivingEntity
        get componentContainer(): Internal.ComponentContainer
        get defaultLootTable(): ResourceLocation
        get autoSpinAttack(): boolean
        get remainingFireTicks(): number
        get maxFallDistance(): number
        get ticksFrozen(): number
        get voicePitch(): number
        set statusMessage(message: net.minecraft.network.chat.Component_)
        set sleepingPos(arg0: BlockPos_)
        get descending(): boolean
        get headRotSpeed(): number
        get YHeadRot(): number
        set absorptionAmount(arg0: number)
        get sunBurnTick(): boolean
        get affectedByFluids(): boolean
        get ambientSound(): Internal.SoundEvent
        set deltaMovement(arg0: Vec3d_)
        get baby(): boolean
        get glowing(): boolean
        get leashOffset(): Vec3d
        get attackable(): boolean
        get underWater(): boolean
        get swimHighSpeedSplashSound(): Internal.SoundEvent
        get leashHolder(): Internal.Entity
        get sensing(): Internal.Sensing
        get legsArmorItem(): Internal.ItemStack
        get selfAndPassengers(): Internal.Stream<any>
        get deltaMovement(): Vec3d
        set secondsOnFire(arg0: number)
        get "displayName()"(): net.minecraft.network.chat.Component
        get lootTable(): ResourceLocation
        get ticksUsingItem(): number
        get arrowCount(): number
        get moveControl(): Internal.MoveControl
        get defaultMovementSpeed(): number
        get peacefulCreature(): boolean
        set onGround(arg0: boolean)
        get stepSound(): Internal.SoundEvent
        get firstTick(): boolean
        get lastHurtByMobTimestamp(): number
        get vehicle(): Internal.Entity
        get effectiveAi(): boolean
        set spawnCancelled(arg0: boolean)
        get stringUuid(): string
        set swimming(arg0: boolean)
        get mainArm(): Internal.HumanoidArm
        get rotationVector(): Internal.Vec2
        get hurtDir(): number
        get sprinting(): boolean
        get motionY(): number
        get offhandItem(): Internal.ItemStack
        get lastHurtMob(): Internal.LivingEntity
        get addedToWorld(): boolean
        get soundSource(): Internal.SoundSource
        get lastDamageSource(): DamageSource
        set noActionTime(arg0: number)
        set movementSpeedAddition(speed: number)
        get pose(): Internal.Pose
        get restrictCenter(): BlockPos
        get leftHanded(): boolean
        set z(z: number)
        get y(): number
        get blocking(): boolean
        /**
         * @deprecated
        */
        get pushedByFluid(): boolean
        get armorCoverPercentage(): number
        get airSupply(): number
        get player(): boolean
        get animal(): boolean
        get motionDirection(): Internal.Direction
        get fabricBalmData(): Internal.CompoundTag
        get commandSenderWorld(): Internal.Level
        get totalMovementSpeed(): number
        get fireImmuneTicks(): number
        get attributes(): Internal.AttributeMap
        get spawnCancelled(): boolean
        get swimming(): boolean
        set sprinting(arg0: boolean)
        set x(x: number)
        get portalWaitTime(): number
        get blockStateOn(): Internal.BlockState
        get fluidJumpThreshold(): number
        set airSupply(arg0: number)
        get onPos(): BlockPos
        get undead(): boolean
        get blockPosBelowThatAffectsMyMovement(): BlockPos
        get stepHeight(): number
        set registeredToWorld(navigation: Internal.PathNavigation_)
        get sleeping(): boolean
        get dismountPoses(): Internal.ImmutableList<Internal.Pose>
        get lastHurtMobTimestamp(): number
        set remainingFireTicks(arg0: number)
        /**
         * @deprecated
        */
        get onPosLegacy(): BlockPos
        set pos(arg0: Vec3d_)
        set canPickUpLoot(arg0: boolean)
        get mainHandItem(): Internal.ItemStack
        set silent(arg0: boolean)
        get swimSplashSound(): Internal.SoundEvent
        set leftHanded(arg0: boolean)
        get activeEffects(): Internal.Collection<Internal.MobEffectInstance>
        get onPortalCooldown(): boolean
        set pitch(arg0: number)
        get multipartEntity(): boolean
        get parts(): Internal.PartEntity<any>[]
        get usingItem(): boolean
        get alwaysTicking(): boolean
        get forgePersistentData(): Internal.CompoundTag
        set invulnerable(arg0: boolean)
        get inFluidType(): boolean
        set glowing(arg0: boolean)
        get alive(): boolean
        get bbHeight(): number
        get tags(): Internal.Set<string>
        get lastAttacker(): Internal.LivingEntity
        get percentFrozen(): number
        set portalCooldown(arg0: number)
        set position(block: Internal.BlockContainerJS_)
        get leashed(): boolean
        get soundVolume(): number
        set pose(arg0: Internal.Pose_)
        get reachDistance(): number
        get entityType(): Internal.EntityType<any>
        get waterCreature(): boolean
        set lastHurtByPlayer(arg0: Internal.Player_)
        get "server()"(): Internal.MinecraftServer
        get pushable(): boolean
        set YBodyRot(arg0: number)
        set motionY(y: number)
        set chestArmorItem(item: Internal.ItemStack_)
        get passenger(): boolean
        get sensitiveToWater(): boolean
        get jumpControl(): Internal.JumpControl
        get flapping(): boolean
        get feetArmorItem(): Internal.ItemStack
        get viewScale(): number
        get visualRotationYInDegrees(): number
        set speed(arg0: number)
        get discrete(): boolean
        get level(): Internal.Level
        get combatTracker(): Internal.CombatTracker
        get noAi(): boolean
        get chestArmorItem(): Internal.ItemStack
        get blockJumpFactor(): number
        get fullyFrozen(): boolean
        get inWall(): boolean
        get meleeAttackReferencePosition(): Vec3d
        get allSlots(): Internal.Iterable<Internal.ItemStack>
        get scale(): number
        get suppressingSlidingDownLadder(): boolean
        get blockZ(): number
        get silent(): boolean
        get pitch(): number
        get random(): Internal.RandomSource
        get passengersAndSelf(): Internal.Stream<any>
        get noActionTime(): number
        get visuallyCrawling(): boolean
        get aggressive(): boolean
        set yya(arg0: number)
        set baby(arg0: boolean)
        get lastHurtByMob(): Internal.LivingEntity
        get inWaterOrBubble(): boolean
        get portalCooldown(): number
        get item(): Internal.ItemStack
        get ignoringBlockTriggers(): boolean
        get inRain(): boolean
        get eyeInFluidType(): Internal.FluidType
        get steppingCarefully(): boolean
        get blockX(): number
        /**
         * @deprecated
        */
        get lightLevelDependentMagicValue(): number
        get fallFlying(): boolean
        get encodeId(): string
        get maxHeadXRot(): number
        get nbt(): Internal.CompoundTag
        set invisible(arg0: boolean)
        set totalMovementSpeedMultiplier(speed: number)
        set health(arg0: number)
        get blockSpeedFactor(): number
        get eyePosition(): Vec3d
        get eyeHeight(): number
        set discardFriction(arg0: boolean)
        get yaw(): number
        get usedItemHand(): Internal.InteractionHand
        set defaultMovementSpeed(speed: number)
        get brain(): Internal.Brain<any>
        set customNameVisible(arg0: boolean)
        get controllingPassenger(): Internal.LivingEntity
        get scriptType(): Internal.ScriptType
        get forward(): Vec3d
        set feetArmorItem(item: Internal.ItemStack_)
        get id(): number
        get recipientsForComponentSync(): Internal.Iterable<any>
        get eyeY(): number
        get boundingBox(): Internal.AABB
        get inWaterOrRain(): boolean
        get swimSound(): Internal.SoundEvent
        get affectedByPotions(): boolean
        get addEntityPacket(): Internal.Packet<Internal.ClientGamePacketListener>
        get team(): Internal.Team
        set ticksFrozen(arg0: number)
        get useItem(): Internal.ItemStack
        get myRidingOffset(): number
        get flyingSpeed(): number
        get living(): boolean
        get x(): number
        get vehicle(): boolean
        set isInPowderSnow(arg0: boolean)
        set customName(arg0: net.minecraft.network.chat.Component_)
        get teamId(): string
        set stingerCount(arg0: number)
        get maxHeadYRot(): number
        get customNameVisible(): boolean
        get pistonPushReaction(): Internal.PushReaction
        get lootTableSeed(): number
        get motionX(): number
        get entityData(): Internal.SynchedEntityData
        get potionEffects(): Internal.EntityPotionEffectsJS
        get onRails(): boolean
        get stingerCount(): number
        get fallSounds(): Internal.LivingEntity$Fallsounds
        get dimensionChangingDelay(): number
        get waterSlowDown(): number
        set yaw(arg0: number)
        get pickRadius(): number
        get pathFinding(): boolean
        get removed(): boolean
        get jumpBoostPower(): number
        set shiftKeyDown(arg0: boolean)
        get passengers(): Internal.EntityArrayList
        get maxHeightFluidType(): Internal.FluidType
        get z(): number
        get server(): Internal.MinecraftServer
        get experienceReward(): number
        get firstPassenger(): Internal.Entity
        get spawnType(): Internal.MobSpawnType
        set lastHurtMob(arg0: Internal.Entity_)
        set lastHurtByMob(arg0: Internal.LivingEntity_)
        set fabricBalmData(arg0: Internal.CompoundTag_)
        get lookAngle(): Vec3d
        get ambientSoundInterval(): number
        set arrowCount(arg0: number)
        get permissionLevel(): number
        get motionZ(): number
        get persistenceRequired(): boolean
        get invisible(): boolean
        get bedOrientation(): Internal.Direction
        /**
         * @deprecated
        */
        get blockStateOnLegacy(): Internal.BlockState
        get profile(): Internal.GameProfile
        get deadOrDying(): boolean
        set headArmorItem(item: Internal.ItemStack_)
        set viewScale(arg0: number)
        set levelCallback(arg0: Internal.EntityInLevelCallback_)
        get lookControl(): Internal.LookControl
        get offHandItem(): Internal.ItemStack
        get crouching(): boolean
        set y(y: number)
        get feetBlockState(): Internal.BlockState
        get withinRestriction(): boolean
        get sleepingPos(): Internal.Optional<BlockPos>
        get customName(): net.minecraft.network.chat.Component
        get class(): typeof any
        get visuallySwimming(): boolean
        get maxAirSupply(): number
        set maxHealth(hp: number)
        get facing(): Internal.Direction
        get boundingBoxForCulling(): Internal.AABB
        get target(): Internal.LivingEntity
        get nameTagOffsetY(): number
        get invulnerable(): boolean
        get inLava(): boolean
        get inWater(): boolean
        get pickupReach(): Vec3i
        get rootVehicle(): Internal.Entity
        get noGravity(): boolean
        get immobile(): boolean
        get speed(): number
        get cachedFeetBlockState(): Internal.BlockState
        get uuid(): Internal.UUID
        set offHandItem(item: Internal.ItemStack_)
        set noAi(arg0: boolean)
        get armorSlots(): Internal.Iterable<Internal.ItemStack>
        get jumpPower(): number
        get headArmorItem(): Internal.ItemStack
        get bbWidth(): number
        get "name()"(): net.minecraft.network.chat.Component
        get typeName(): net.minecraft.network.chat.Component
        get ticksRequiredToFreeze(): number
        get maxSpawnClusterSize(): number
        get username(): string
        get pickable(): boolean
        set YHeadRot(arg0: number)
        set jumping(arg0: boolean)
        get pickResult(): Internal.ItemStack
        get "mainHandItem()"(): Internal.ItemStack
        get absorptionAmount(): number
        get randomY(): number
        get displayName(): net.minecraft.network.chat.Component
        get mobType(): Internal.MobType
        get passengersRidingOffset(): number
        get frame(): boolean
        set legsArmorItem(item: Internal.ItemStack_)
        set noGravity(arg0: boolean)
        get useItemRemainingTicks(): number
        get indirectPassengers(): Internal.Iterable<any>
        get navigation(): Internal.PathNavigation
        get controlledByLocalInstance(): boolean
        get monster(): boolean
        get lastClimbablePos(): Internal.Optional<BlockPos>
        get horizontalFacing(): Internal.Direction
        set id(arg0: number)
        get type(): string
        get activeEffectsMap(): Internal.Map<Internal.MobEffect, Internal.MobEffectInstance>
        get actuallyReallyBlocking(): boolean
        set motionX(x: number)
        get handSlots(): Internal.Iterable<Internal.ItemStack>
        get movementEmission(): Internal.Entity$MovementEmission
        get teamColor(): number
        set nbt(nbt: Internal.CompoundTag_)
        get restrictRadius(): number
        get registeredNavigation(): Internal.PathNavigation
        get invertedHealAndHarm(): boolean
        get freezing(): boolean
        set guaranteedDrop(arg0: Internal.EquipmentSlot_)
        set sharedFlagOnFire(arg0: boolean)
    }
    type AbstractSkeleton_ = AbstractSkeleton;
    class EffectChoosingWellspring extends Internal.MobEffect implements Internal.INoCreeperLingering {
        constructor()
        getDisplayName(): net.minecraft.network.chat.Component;
        getClass(): typeof any;
        addAttributeModifier(arg0: Internal.Attribute_, arg1: string, arg2: number, arg3: Internal.AttributeModifier$Operation_): Internal.MobEffect;
        isInstantenous(): boolean;
        addAttributeModifiers(arg0: Internal.LivingEntity_, arg1: Internal.AttributeMap_, arg2: number): void;
        applyInstantenousEffect(arg0: Internal.Entity_, arg1: Internal.Entity_, arg2: Internal.LivingEntity_, arg3: number, arg4: number): void;
        notify(): void;
        isBeneficial(): boolean;
        wait(arg0: number, arg1: number): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientMobEffectExtensions>): void;
        getEffectRendererInternal(): any;
        getColor(): number;
        removeAttributeModifiers(arg0: Internal.LivingEntity_, arg1: Internal.AttributeMap_, arg2: number): void;
        applyEffectTick(arg0: Internal.LivingEntity_, arg1: number): void;
        getAttributeModifierValue(arg0: number, arg1: Internal.AttributeModifier_): number;
        getSortOrder(arg0: Internal.MobEffectInstance_): number;
        getDescriptionId(): string;
        static getIdFromNullable(arg0: Internal.MobEffect_): number;
        getCategory(): Internal.MobEffectCategory;
        toString(): string;
        getCurativeItems(): Internal.List<Internal.ItemStack>;
        notifyAll(): void;
        setFactorDataFactory(arg0: Internal.Supplier_<Internal.MobEffectInstance$FactorData>): Internal.MobEffect;
        createFactorData(): Internal.Optional<Internal.MobEffectInstance$FactorData>;
        static byId(arg0: number): Internal.MobEffect;
        hashCode(): number;
        getAttributeModifiers(): Internal.Map<Internal.Attribute, Internal.AttributeModifier>;
        wait(): void;
        getOrCreateDescriptionId(): string;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        isDurationEffectTick(arg0: number, arg1: number): boolean;
        static getId(arg0: Internal.MobEffect_): number;
        get displayName(): net.minecraft.network.chat.Component
        get class(): typeof any
        get instantenous(): boolean
        get beneficial(): boolean
        get effectRendererInternal(): any
        get color(): number
        get descriptionId(): string
        get category(): Internal.MobEffectCategory
        get curativeItems(): Internal.List<Internal.ItemStack>
        set factorDataFactory(arg0: Internal.Supplier_<Internal.MobEffectInstance$FactorData>)
        get attributeModifiers(): Internal.Map<Internal.Attribute, Internal.AttributeModifier>
        get orCreateDescriptionId(): string
    }
    type EffectChoosingWellspring_ = EffectChoosingWellspring;
    class GenericBlockItem extends Internal.BlockItem implements Internal.ICreativeTabMember {
        constructor(arg0: Internal.Block_, arg1: Internal.Item$Properties_)
        constructor(arg0: Internal.Block_, arg1: Internal.Item$Properties_, arg2: Internal.Supplier_<Internal.CreativeModeTab>)
        constructor(arg0: Internal.Block_)
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        static setBlockEntityData(arg0: Internal.ItemStack_, arg1: Internal.BlockEntityType_<any>, arg2: Internal.CompoundTag_): void;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        allowContinuingBlockBreaking(player: Internal.Player_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        abstract moonlight$addAdditionalBehavior(arg0: Internal.AdditionalItemPlacement_): void;
        isFireResistant(): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        "getCreativeTab()"(): string;
        abstract moonlight$getClientAnimationExtension(): any;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        fabric_setCustomDamageHandler(handler: Internal.CustomDamageHandler_): void;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getBarColor(arg0: Internal.ItemStack_): number;
        getOrCreateDescriptionId(): string;
        getItem(): Internal.Item;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): InteractionResult;
        abstract moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        abstract moonlight$setClientAnimationExtension(arg0: any): void;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        canPlace(arg0: Internal.BlockPlaceContext_, arg1: Internal.BlockState_): boolean;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        handler$dfl000$revelationary$getCloakedName(stack: Internal.ItemStack_, callbackInfoReturnable: Internal.CallbackInfoReturnable_<any>): void;
        isEdible(): boolean;
        getAttributeModifiers(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        static getBlockEntityData(arg0: Internal.ItemStack_): Internal.CompoundTag;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        cardinal_createComponents(stack: Internal.ItemStack_): Internal.ComponentContainer;
        removeFromBlockToItemMap(arg0: Internal.Map_<Internal.Block, Internal.Item>, arg1: Internal.Item_): void;
        isFoil(arg0: Internal.ItemStack_): boolean;
        "getAttributeModifiers(net.minecraft.world.entity.EquipmentSlot,net.minecraft.world.item.ItemStack)"(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        fabric_getEquipmentSlotProvider(): Internal.EquipmentSlotProvider;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        static updateCustomBlockEntityTag(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.ItemStack_): boolean;
        owo$tab(): number;
        /**
         * @deprecated
        */
        getPlaceSound(arg0: Internal.BlockState_): Internal.SoundEvent;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        getBlock(): Internal.Block;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        registerBlocks(arg0: Internal.Map_<Internal.Block, Internal.Item>, arg1: Internal.Item_): void;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vector3f;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        "getCreativeTab()"(): Internal.CreativeModeTab;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        "getAttributeModifiers(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.EquipmentSlot)"(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        allowNbtUpdateAnimation(player: Internal.Player_, hand: Internal.InteractionHand_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        fabric_getCachedItemVariant(): Internal.ItemVariant;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        fabric_getCustomDamageHandler(): Internal.CustomDamageHandler;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        static getPlayerPOVHitResult(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.ClipContext$Fluid_): Internal.BlockHitResult;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        mustSurvive(): boolean;
        equals(arg0: any): boolean;
        setRarity(arg0: Internal.Rarity_): void;
        getRecipeRemainder(stack: Internal.ItemStack_): Internal.ItemStack;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        onDestroyed(arg0: Internal.ItemEntity_): void;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        canBeHurtBy(arg0: DamageSource_): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        fabric_setEquipmentSlotProvider(equipmentSlotProvider: Internal.EquipmentSlotProvider_): void;
        getDescriptionId(): string;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        getPlaceSound(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): Internal.SoundEvent;
        zeta$setHumanoidArmorModel(arg0: Internal.HumanoidArmorModelGetter_): void;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: DamageSource_): void;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        getDescription(): net.minecraft.network.chat.Component;
        owo$stackGenerator(): Internal.BiConsumer<any, any>;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        getCreativeTab(): Internal.CreativeModeTab;
        useOn(arg0: Internal.UseOnContext_): InteractionResult;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        handler$ebb000$connectormod$redirectIsPiglinCurrency(arg0: Internal.ItemStack_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        setAttackDamage(attackDamage: number): void;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        toString(): string;
        /**
         * @deprecated
        */
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        modifyReturnValue$ffm000$quark$overrideOtherStackedOnMe(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_, arg3: Internal.Slot_, arg4: Internal.ClickAction_, arg5: Internal.Player_, arg6: Internal.SlotAccess_): boolean;
        getId(): string;
        handler$fbm000$moonlight$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        isSuitableFor(stack: Internal.ItemStack_, state: Internal.BlockState_): boolean;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        puzzleslib$setRenderProperties(arg0: any): void;
        notify(): void;
        quark$getPlacementState(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getPlacementState(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getCreativeTabStacks(): Internal.List<Internal.ItemStack>;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        updateCustomBlockEntityTag(arg0: BlockPos_, arg1: Internal.Level_, arg2: Internal.Player_, arg3: Internal.ItemStack_, arg4: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        place(arg0: Internal.BlockPlaceContext_): InteractionResult;
        zeta$setBlockEntityWithoutLevelRenderer(arg0: Internal.BlockEntityWithoutLevelRenderer_): void;
        handler$cog000$croptopia$overrideConstructor(arg0: Internal.Item$Properties_, arg1: Internal.CallbackInfo_): void;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        updatePlacementContext(arg0: Internal.BlockPlaceContext_): Internal.BlockPlaceContext;
        getEatingSound(): Internal.SoundEvent;
        owo$setGroup(group: Internal.CreativeModeTab_): void;
        puzzleslib$getRenderProperties(): any;
        canBeDepleted(): boolean;
        placeBlock(arg0: Internal.BlockPlaceContext_, arg1: Internal.BlockState_): boolean;
        getDamage(arg0: Internal.ItemStack_): number;
        wait(arg0: number, arg1: number): void;
        getMod(): string;
        static getDefaultProperties(): Internal.Item$Properties;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        owo$group(): Internal.CreativeModeTab;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        puzzleslib$setBlock(arg0: Internal.Block_): void;
        modifyReturnValue$ffm000$quark$overrideStackedOnOther(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_): boolean;
        get drinkingSound(): Internal.SoundEvent
        get fireResistant(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get "creativeTab()"(): string
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set maxDamage(arg0: number)
        get orCreateDescriptionId(): string
        get item(): Internal.Item
        get class(): typeof any
        get renderPropertiesInternal(): any
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        get edible(): boolean
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        get block(): Internal.Block
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        set nameKey(arg0: string)
        get "creativeTab()"(): Internal.CreativeModeTab
        get idLocation(): ResourceLocation
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
        set rarity(arg0: Internal.Rarity_)
        get complex(): boolean
        get descriptionId(): string
        get creativeTab(): string
        set burnTime(i: number)
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        get creativeTab(): Internal.CreativeModeTab
        set itemBuilder(b: Internal.ItemBuilder_)
        set attackDamage(attackDamage: number)
        /**
         * @deprecated
        */
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        get creativeTabStacks(): Internal.List<Internal.ItemStack>
        /**
         * @deprecated
        */
        get maxStackSize(): number
        get eatingSound(): Internal.SoundEvent
        get mod(): string
        get defaultProperties(): Internal.Item$Properties
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
    }
    type GenericBlockItem_ = GenericBlockItem;
    class FramedSoulTorchBlock extends Internal.FramedTorchBlock {
        constructor()
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        getCamoOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        getCamoShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: number): number;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getSettings(): Internal.BlockBehaviour$Properties;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        /**
         * @deprecated
        */
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        getTypeData(): Internal.CompoundTag;
        setFriction(arg0: number): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        rotate(arg0: Internal.BlockState_, arg1: Internal.BlockHitResult_, arg2: Internal.Rotation_): Internal.BlockState;
        getSpeedFactor(): number;
        getComponentBySkipPredicate(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): Internal.BlockState;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        playerDestroy(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Player_): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Internal.Player_): Internal.ItemStack;
        getClass(): typeof any;
        getBlockType(): Internal.IBlockType;
        getMaxVerticalOffset(): number;
        newBlockEntity(arg0: BlockPos_, arg1: Internal.BlockState_): Internal.BlockEntity;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        getRenderPropertiesInternal(): any;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        needsDynamicNodeTypeCheck(): boolean;
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        "rotate(net.minecraft.world.level.block.state.BlockState,net.minecraft.core.Direction,net.minecraft.world.level.block.Rotation)"(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        setRequiresTool(v: boolean): void;
        asBlock(): Internal.Block;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        puzzleslib$setItem(arg0: Internal.Item_): void;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        doesBlockOccludeBeaconBeam(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        /**
         * @deprecated
        */
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        useCamoOcclusionShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        /**
         * @deprecated
        */
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        lychee$isTickable(): boolean;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        isSuffocating(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        getTicker<T extends Internal.BlockEntity>(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockEntityType_<T>): Internal.BlockEntityTicker<T>;
        /**
         * @deprecated
        */
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        updateShapeLockable(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Supplier_<Internal.BlockState>): Internal.BlockState;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        lockState(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Player_, arg3: Internal.ItemStack_): boolean;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        getCamoVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        spawnDestroyParticles(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_): void;
        wait(): void;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Internal.Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(shape: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        setIsRandomlyTicking(arg0: boolean): void;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        registerDefaultState(arg0: Internal.BlockState_): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        createBlockItem(): Internal.BlockItem;
        printCamoBlock(arg0: Internal.CompoundTag_): Internal.Optional<Internal.MutableComponent>;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        abstract canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        /**
         * @deprecated
        */
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        needCullingUpdateAfterStateChange(arg0: Internal.LevelReader_, arg1: Internal.BlockState_, arg2: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        shouldPreventNeighborCulling(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        isAir(arg0: Internal.BlockState_): boolean;
        static createProperties(arg0: Internal.IBlockType_): Internal.BlockBehaviour$Properties;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getCamoDrops(arg0: Internal.List_<Internal.ItemStack>, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        "rotate(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.phys.BlockHitResult,net.minecraft.world.level.block.Rotation)"(arg0: Internal.BlockState_, arg1: Internal.BlockHitResult_, arg2: Internal.Rotation_): Internal.BlockState;
        needsDynamicBurningCheck(): boolean;
        getDescriptionId(): string;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        handler$bob000$radium$postConstruct(p_i241196_1_: Internal.BlockBehaviour$Properties_, ci: Internal.CallbackInfo_): void;
        tryDropExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: Internal.ItemStack_, arg3: Internal.IntProvider_): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        handler$eok000$particular$spawnParticles(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, random: Internal.RandomSource_, ci: Internal.CallbackInfo_): void;
        getJumpFactor(): number;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        setDrops(arg0: ResourceLocation_): void;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        static playCamoBreakSound(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        getBlockProperties(): Internal.BlockBehaviour$Properties;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        runOcclusionTestAndGetLookupState(arg0: Internal.SideSkipPredicate_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockState_, arg5: Internal.Direction_): Internal.BlockState;
        notifyAll(): void;
        getShapeForEachState(arg0: Internal.Function_<Internal.BlockState, Internal.VoxelShape>): Internal.ImmutableMap<Internal.BlockState, Internal.VoxelShape>;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        getFriction(): number;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        createBlockStateDefinition(arg0: Internal.StateDefinition$Builder_<Internal.Block, Internal.BlockState>): void;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        notify(): void;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        canCamoSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        handler$dji000$spectrum$afterBreak(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        static toggleYSlope(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        handleUse(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): InteractionResult;
        setDestroySpeed(v: number): void;
        tryApplyCamoImmediately(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.LivingEntity_, arg3: Internal.ItemStack_): void;
        isIntangible(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): boolean;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        handler$zbh000$additionalentityattributes$additionalEntityAttributes$saveBreakingPlayer(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        updateCulling(arg0: Internal.LevelReader_, arg1: BlockPos_): void;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getListener<T extends Internal.BlockEntity>(arg0: Internal.ServerLevel_, arg1: T): Internal.GameEventListener;
        arch$holder(): Internal.Holder<Internal.Block>;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        handleBlockLeftClick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        playBreakSound(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        initCache(arg0: Internal.BlockState_): Internal.StateCache;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): void;
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        lychee$setTickable(arg0: boolean): void;
        getComponentAtEdge(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Direction_, arg4: Internal.Direction_): Internal.BlockState;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        getCache(arg0: Internal.BlockState_): Internal.StateCache;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        rotate(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        unpackNestedModelData(arg0: Internal.ModelData_, arg1: Internal.BlockState_, arg2: Internal.BlockState_): Internal.ModelData;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        get settings(): Internal.BlockBehaviour$Properties
        /**
         * @deprecated
        */
        get explosionResistance(): number
        get typeData(): Internal.CompoundTag
        set friction(arg0: number)
        get speedFactor(): number
        get class(): typeof any
        get blockType(): Internal.IBlockType
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get descriptionId(): string
        get jumpFactor(): number
        set drops(arg0: ResourceLocation_)
        set speedFactor(arg0: number)
        get blockProperties(): Internal.BlockBehaviour$Properties
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get mod(): string
        set hasCollision(arg0: boolean)
    }
    type FramedSoulTorchBlock_ = FramedSoulTorchBlock;
    class GlazedTerracottaBlock extends Internal.HorizontalDirectionalBlock {
        constructor(arg0: Internal.BlockBehaviour$Properties_)
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getSettings(): Internal.BlockBehaviour$Properties;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        getTypeData(): Internal.CompoundTag;
        setFriction(arg0: number): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getSpeedFactor(): number;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        playerDestroy(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Player_): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Internal.Player_): Internal.ItemStack;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        getRenderPropertiesInternal(): any;
        needsDynamicNodeTypeCheck(): boolean;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        setRequiresTool(v: boolean): void;
        asBlock(): Internal.Block;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        puzzleslib$setItem(arg0: Internal.Item_): void;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        /**
         * @deprecated
        */
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        /**
         * @deprecated
        */
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        lychee$isTickable(): boolean;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        /**
         * @deprecated
        */
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        spawnDestroyParticles(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_): void;
        wait(): void;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Internal.Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(shape: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        setIsRandomlyTicking(arg0: boolean): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        registerDefaultState(arg0: Internal.BlockState_): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        /**
         * @deprecated
        */
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        /**
         * @deprecated
        */
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        isAir(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        needsDynamicBurningCheck(): boolean;
        getDescriptionId(): string;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        handler$bob000$radium$postConstruct(p_i241196_1_: Internal.BlockBehaviour$Properties_, ci: Internal.CallbackInfo_): void;
        tryDropExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: Internal.ItemStack_, arg3: Internal.IntProvider_): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        handler$eok000$particular$spawnParticles(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, random: Internal.RandomSource_, ci: Internal.CallbackInfo_): void;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        setDrops(arg0: ResourceLocation_): void;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        getBlockProperties(): Internal.BlockBehaviour$Properties;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getShapeForEachState(arg0: Internal.Function_<Internal.BlockState, Internal.VoxelShape>): Internal.ImmutableMap<Internal.BlockState, Internal.VoxelShape>;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        getFriction(): number;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        createBlockStateDefinition(arg0: Internal.StateDefinition$Builder_<Internal.Block, Internal.BlockState>): void;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        notify(): void;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        handler$dji000$spectrum$afterBreak(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        setDestroySpeed(v: number): void;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        handler$zbh000$additionalentityattributes$additionalEntityAttributes$saveBreakingPlayer(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        arch$holder(): Internal.Holder<Internal.Block>;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): void;
        lychee$setTickable(arg0: boolean): void;
        /**
         * @deprecated
        */
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        get settings(): Internal.BlockBehaviour$Properties
        /**
         * @deprecated
        */
        get explosionResistance(): number
        get typeData(): Internal.CompoundTag
        set friction(arg0: number)
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get descriptionId(): string
        get jumpFactor(): number
        set drops(arg0: ResourceLocation_)
        set speedFactor(arg0: number)
        get blockProperties(): Internal.BlockBehaviour$Properties
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get mod(): string
        set hasCollision(arg0: boolean)
    }
    type GlazedTerracottaBlock_ = GlazedTerracottaBlock;
    class BlockModGate extends Internal.FenceGateBlock {
        constructor(arg0: Internal.MapColor_, arg1: Internal.WoodType_)
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getSettings(): Internal.BlockBehaviour$Properties;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        getTypeData(): Internal.CompoundTag;
        setFriction(arg0: number): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getSpeedFactor(): number;
        static connectsToDirection(arg0: Internal.BlockState_, arg1: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        playerDestroy(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Player_): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Internal.Player_): Internal.ItemStack;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        getRenderPropertiesInternal(): any;
        needsDynamicNodeTypeCheck(): boolean;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        setRequiresTool(v: boolean): void;
        asBlock(): Internal.Block;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        puzzleslib$setItem(arg0: Internal.Item_): void;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        /**
         * @deprecated
        */
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        /**
         * @deprecated
        */
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        lychee$isTickable(): boolean;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        spawnDestroyParticles(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_): void;
        wait(): void;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Internal.Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(shape: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        setIsRandomlyTicking(arg0: boolean): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        registerDefaultState(arg0: Internal.BlockState_): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        /**
         * @deprecated
        */
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        isAir(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        needsDynamicBurningCheck(): boolean;
        getDescriptionId(): string;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        handler$bob000$radium$postConstruct(p_i241196_1_: Internal.BlockBehaviour$Properties_, ci: Internal.CallbackInfo_): void;
        tryDropExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: Internal.ItemStack_, arg3: Internal.IntProvider_): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        handler$eok000$particular$spawnParticles(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, random: Internal.RandomSource_, ci: Internal.CallbackInfo_): void;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        setDrops(arg0: ResourceLocation_): void;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        getBlockProperties(): Internal.BlockBehaviour$Properties;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getShapeForEachState(arg0: Internal.Function_<Internal.BlockState, Internal.VoxelShape>): Internal.ImmutableMap<Internal.BlockState, Internal.VoxelShape>;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        getFriction(): number;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        createBlockStateDefinition(arg0: Internal.StateDefinition$Builder_<Internal.Block, Internal.BlockState>): void;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        notify(): void;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        handler$dji000$spectrum$afterBreak(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        setDestroySpeed(v: number): void;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        handler$zbh000$additionalentityattributes$additionalEntityAttributes$saveBreakingPlayer(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        arch$holder(): Internal.Holder<Internal.Block>;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): void;
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        lychee$setTickable(arg0: boolean): void;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        get settings(): Internal.BlockBehaviour$Properties
        /**
         * @deprecated
        */
        get explosionResistance(): number
        get typeData(): Internal.CompoundTag
        set friction(arg0: number)
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get descriptionId(): string
        get jumpFactor(): number
        set drops(arg0: ResourceLocation_)
        set speedFactor(arg0: number)
        get blockProperties(): Internal.BlockBehaviour$Properties
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get mod(): string
        set hasCollision(arg0: boolean)
    }
    type BlockModGate_ = BlockModGate;
    class BlockModBookshelf extends Internal.BlockMod {
        constructor(arg0: Internal.MapColor_)
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getSettings(): Internal.BlockBehaviour$Properties;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        getTypeData(): Internal.CompoundTag;
        setFriction(arg0: number): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getSpeedFactor(): number;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        playerDestroy(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Player_): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Internal.Player_): Internal.ItemStack;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        getRenderPropertiesInternal(): any;
        needsDynamicNodeTypeCheck(): boolean;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        setRequiresTool(v: boolean): void;
        asBlock(): Internal.Block;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        puzzleslib$setItem(arg0: Internal.Item_): void;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        /**
         * @deprecated
        */
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        /**
         * @deprecated
        */
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        lychee$isTickable(): boolean;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        /**
         * @deprecated
        */
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        spawnDestroyParticles(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_): void;
        wait(): void;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Internal.Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(shape: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        setIsRandomlyTicking(arg0: boolean): void;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        registerDefaultState(arg0: Internal.BlockState_): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        /**
         * @deprecated
        */
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        /**
         * @deprecated
        */
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        isAir(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        needsDynamicBurningCheck(): boolean;
        getDescriptionId(): string;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        handler$bob000$radium$postConstruct(p_i241196_1_: Internal.BlockBehaviour$Properties_, ci: Internal.CallbackInfo_): void;
        tryDropExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: Internal.ItemStack_, arg3: Internal.IntProvider_): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        handler$eok000$particular$spawnParticles(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, random: Internal.RandomSource_, ci: Internal.CallbackInfo_): void;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        setDrops(arg0: ResourceLocation_): void;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        getBlockProperties(): Internal.BlockBehaviour$Properties;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getShapeForEachState(arg0: Internal.Function_<Internal.BlockState, Internal.VoxelShape>): Internal.ImmutableMap<Internal.BlockState, Internal.VoxelShape>;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        getFriction(): number;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        createBlockStateDefinition(arg0: Internal.StateDefinition$Builder_<Internal.Block, Internal.BlockState>): void;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        notify(): void;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        handler$dji000$spectrum$afterBreak(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        setDestroySpeed(v: number): void;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        handler$zbh000$additionalentityattributes$additionalEntityAttributes$saveBreakingPlayer(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        arch$holder(): Internal.Holder<Internal.Block>;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): void;
        lychee$setTickable(arg0: boolean): void;
        /**
         * @deprecated
        */
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        get settings(): Internal.BlockBehaviour$Properties
        /**
         * @deprecated
        */
        get explosionResistance(): number
        get typeData(): Internal.CompoundTag
        set friction(arg0: number)
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get descriptionId(): string
        get jumpFactor(): number
        set drops(arg0: ResourceLocation_)
        set speedFactor(arg0: number)
        get blockProperties(): Internal.BlockBehaviour$Properties
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get mod(): string
        set hasCollision(arg0: boolean)
    }
    type BlockModBookshelf_ = BlockModBookshelf;
    interface LongToIntFunction {
        abstract applyAsInt(arg0: number): number;
        (arg0: number): number;
    }
    type LongToIntFunction_ = LongToIntFunction | ((arg0: number)=> number);
    class CroptopiaSaplingItem extends Internal.ItemNameBlockItem {
        constructor(arg0: Internal.Block_, arg1: Internal.Block_, arg2: Internal.Block_, arg3: Internal.Item$Properties_)
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        static setBlockEntityData(arg0: Internal.ItemStack_, arg1: Internal.BlockEntityType_<any>, arg2: Internal.CompoundTag_): void;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        allowContinuingBlockBreaking(player: Internal.Player_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        abstract moonlight$addAdditionalBehavior(arg0: Internal.AdditionalItemPlacement_): void;
        isFireResistant(): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        abstract moonlight$getClientAnimationExtension(): any;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        fabric_setCustomDamageHandler(handler: Internal.CustomDamageHandler_): void;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getBarColor(arg0: Internal.ItemStack_): number;
        getOrCreateDescriptionId(): string;
        getItem(): Internal.Item;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): InteractionResult;
        abstract moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        abstract moonlight$setClientAnimationExtension(arg0: any): void;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        canPlace(arg0: Internal.BlockPlaceContext_, arg1: Internal.BlockState_): boolean;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        handler$dfl000$revelationary$getCloakedName(stack: Internal.ItemStack_, callbackInfoReturnable: Internal.CallbackInfoReturnable_<any>): void;
        isEdible(): boolean;
        getAttributeModifiers(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        static getBlockEntityData(arg0: Internal.ItemStack_): Internal.CompoundTag;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        cardinal_createComponents(stack: Internal.ItemStack_): Internal.ComponentContainer;
        removeFromBlockToItemMap(arg0: Internal.Map_<Internal.Block, Internal.Item>, arg1: Internal.Item_): void;
        isFoil(arg0: Internal.ItemStack_): boolean;
        "getAttributeModifiers(net.minecraft.world.entity.EquipmentSlot,net.minecraft.world.item.ItemStack)"(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        fabric_getEquipmentSlotProvider(): Internal.EquipmentSlotProvider;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        static updateCustomBlockEntityTag(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.ItemStack_): boolean;
        owo$tab(): number;
        /**
         * @deprecated
        */
        getPlaceSound(arg0: Internal.BlockState_): Internal.SoundEvent;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        getBlock(): Internal.Block;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        registerBlocks(arg0: Internal.Map_<Internal.Block, Internal.Item>, arg1: Internal.Item_): void;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vector3f;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        "getAttributeModifiers(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.EquipmentSlot)"(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        allowNbtUpdateAnimation(player: Internal.Player_, hand: Internal.InteractionHand_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        fabric_getCachedItemVariant(): Internal.ItemVariant;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        fabric_getCustomDamageHandler(): Internal.CustomDamageHandler;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        static getPlayerPOVHitResult(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.ClipContext$Fluid_): Internal.BlockHitResult;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        mustSurvive(): boolean;
        equals(arg0: any): boolean;
        setRarity(arg0: Internal.Rarity_): void;
        getRecipeRemainder(stack: Internal.ItemStack_): Internal.ItemStack;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        onDestroyed(arg0: Internal.ItemEntity_): void;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        canBeHurtBy(arg0: DamageSource_): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        fabric_setEquipmentSlotProvider(equipmentSlotProvider: Internal.EquipmentSlotProvider_): void;
        getDescriptionId(): string;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        getPlaceSound(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): Internal.SoundEvent;
        zeta$setHumanoidArmorModel(arg0: Internal.HumanoidArmorModelGetter_): void;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: DamageSource_): void;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        getDescription(): net.minecraft.network.chat.Component;
        owo$stackGenerator(): Internal.BiConsumer<any, any>;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        useOn(arg0: Internal.UseOnContext_): InteractionResult;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        handler$ebb000$connectormod$redirectIsPiglinCurrency(arg0: Internal.ItemStack_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        setAttackDamage(attackDamage: number): void;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        toString(): string;
        /**
         * @deprecated
        */
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        modifyReturnValue$ffm000$quark$overrideOtherStackedOnMe(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_, arg3: Internal.Slot_, arg4: Internal.ClickAction_, arg5: Internal.Player_, arg6: Internal.SlotAccess_): boolean;
        getId(): string;
        handler$fbm000$moonlight$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        isSuitableFor(stack: Internal.ItemStack_, state: Internal.BlockState_): boolean;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        puzzleslib$setRenderProperties(arg0: any): void;
        notify(): void;
        quark$getPlacementState(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getPlacementState(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        updateCustomBlockEntityTag(arg0: BlockPos_, arg1: Internal.Level_, arg2: Internal.Player_, arg3: Internal.ItemStack_, arg4: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        place(arg0: Internal.BlockPlaceContext_): InteractionResult;
        zeta$setBlockEntityWithoutLevelRenderer(arg0: Internal.BlockEntityWithoutLevelRenderer_): void;
        handler$cog000$croptopia$overrideConstructor(arg0: Internal.Item$Properties_, arg1: Internal.CallbackInfo_): void;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        updatePlacementContext(arg0: Internal.BlockPlaceContext_): Internal.BlockPlaceContext;
        getEatingSound(): Internal.SoundEvent;
        owo$setGroup(group: Internal.CreativeModeTab_): void;
        puzzleslib$getRenderProperties(): any;
        canBeDepleted(): boolean;
        placeBlock(arg0: Internal.BlockPlaceContext_, arg1: Internal.BlockState_): boolean;
        getDamage(arg0: Internal.ItemStack_): number;
        wait(arg0: number, arg1: number): void;
        getMod(): string;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        owo$group(): Internal.CreativeModeTab;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        puzzleslib$setBlock(arg0: Internal.Block_): void;
        modifyReturnValue$ffm000$quark$overrideStackedOnOther(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_): boolean;
        get drinkingSound(): Internal.SoundEvent
        get fireResistant(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set maxDamage(arg0: number)
        get orCreateDescriptionId(): string
        get item(): Internal.Item
        get class(): typeof any
        get renderPropertiesInternal(): any
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        get edible(): boolean
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        get block(): Internal.Block
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        set nameKey(arg0: string)
        get idLocation(): ResourceLocation
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
        set rarity(arg0: Internal.Rarity_)
        get complex(): boolean
        get descriptionId(): string
        get creativeTab(): string
        set burnTime(i: number)
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        set itemBuilder(b: Internal.ItemBuilder_)
        set attackDamage(attackDamage: number)
        /**
         * @deprecated
        */
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        /**
         * @deprecated
        */
        get maxStackSize(): number
        get eatingSound(): Internal.SoundEvent
        get mod(): string
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
    }
    type CroptopiaSaplingItem_ = CroptopiaSaplingItem;
    class MajoraEffect extends Internal.MobEffect {
        getDisplayName(): net.minecraft.network.chat.Component;
        getClass(): typeof any;
        addAttributeModifier(arg0: Internal.Attribute_, arg1: string, arg2: number, arg3: Internal.AttributeModifier$Operation_): Internal.MobEffect;
        isInstantenous(): boolean;
        addAttributeModifiers(arg0: Internal.LivingEntity_, arg1: Internal.AttributeMap_, arg2: number): void;
        applyInstantenousEffect(arg0: Internal.Entity_, arg1: Internal.Entity_, arg2: Internal.LivingEntity_, arg3: number, arg4: number): void;
        notify(): void;
        isBeneficial(): boolean;
        wait(arg0: number, arg1: number): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientMobEffectExtensions>): void;
        getEffectRendererInternal(): any;
        getColor(): number;
        removeAttributeModifiers(arg0: Internal.LivingEntity_, arg1: Internal.AttributeMap_, arg2: number): void;
        applyEffectTick(arg0: Internal.LivingEntity_, arg1: number): void;
        getAttributeModifierValue(arg0: number, arg1: Internal.AttributeModifier_): number;
        getSortOrder(arg0: Internal.MobEffectInstance_): number;
        getDescriptionId(): string;
        static getIdFromNullable(arg0: Internal.MobEffect_): number;
        getCategory(): Internal.MobEffectCategory;
        toString(): string;
        getCurativeItems(): Internal.List<Internal.ItemStack>;
        notifyAll(): void;
        setFactorDataFactory(arg0: Internal.Supplier_<Internal.MobEffectInstance$FactorData>): Internal.MobEffect;
        createFactorData(): Internal.Optional<Internal.MobEffectInstance$FactorData>;
        static byId(arg0: number): Internal.MobEffect;
        hashCode(): number;
        getAttributeModifiers(): Internal.Map<Internal.Attribute, Internal.AttributeModifier>;
        wait(): void;
        getOrCreateDescriptionId(): string;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        isDurationEffectTick(arg0: number, arg1: number): boolean;
        static getId(arg0: Internal.MobEffect_): number;
        get displayName(): net.minecraft.network.chat.Component
        get class(): typeof any
        get instantenous(): boolean
        get beneficial(): boolean
        get effectRendererInternal(): any
        get color(): number
        get descriptionId(): string
        get category(): Internal.MobEffectCategory
        get curativeItems(): Internal.List<Internal.ItemStack>
        set factorDataFactory(arg0: Internal.Supplier_<Internal.MobEffectInstance$FactorData>)
        get attributeModifiers(): Internal.Map<Internal.Attribute, Internal.AttributeModifier>
        get orCreateDescriptionId(): string
    }
    type MajoraEffect_ = MajoraEffect;
    class VoidStartPlatformFeature extends Internal.Feature<Internal.NoneFeatureConfiguration> {
        constructor(arg0: Internal.Codec_<Internal.NoneFeatureConfiguration>)
        getClass(): typeof any;
        static isStone(arg0: Internal.BlockState_): boolean;
        safeSetBlock(arg0: Internal.WorldGenLevel_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Predicate_<Internal.BlockState>): void;
        toString(): string;
        setBlock(arg0: Internal.LevelWriter_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        static checkNeighbors(arg0: Internal.Function_<BlockPos, Internal.BlockState>, arg1: BlockPos_, arg2: Internal.Predicate_<Internal.BlockState>): boolean;
        notifyAll(): void;
        place(arg0: Internal.NoneFeatureConfiguration_, arg1: Internal.WorldGenLevel_, arg2: Internal.ChunkGenerator_, arg3: Internal.RandomSource_, arg4: BlockPos_): boolean;
        notify(): void;
        static isAdjacentToAir(arg0: Internal.Function_<BlockPos, Internal.BlockState>, arg1: BlockPos_): boolean;
        wait(arg0: number, arg1: number): void;
        place(arg0: Internal.FeaturePlaceContext_<Internal.NoneFeatureConfiguration>): boolean;
        static isGrassOrDirt(arg0: Internal.LevelSimulatedReader_, arg1: BlockPos_): boolean;
        markAboveForPostProcessing(arg0: Internal.WorldGenLevel_, arg1: BlockPos_): void;
        hashCode(): number;
        wait(): void;
        wait(arg0: number): void;
        static isDirt(arg0: Internal.BlockState_): boolean;
        equals(arg0: any): boolean;
        static isReplaceable(arg0: Internal.TagKey_<Internal.Block>): Internal.Predicate<Internal.BlockState>;
        configuredCodec(): Internal.Codec<Internal.ConfiguredFeature<Internal.NoneFeatureConfiguration, Internal.Feature<Internal.NoneFeatureConfiguration>>>;
        get class(): typeof any
    }
    type VoidStartPlatformFeature_ = VoidStartPlatformFeature;
    interface MixinClientChunkManager {
        abstract dsurround_getClientChunkMap(): Internal.ClientChunkCache$Storage;
        (): Internal.ClientChunkCache$Storage_;
    }
    type MixinClientChunkManager_ = (()=> Internal.ClientChunkCache$Storage_) | MixinClientChunkManager;
    class BiomeGenerationSettings {
        constructor(arg0: Internal.Map_<Internal.GenerationStep$Carving, Internal.HolderSet<Internal.ConfiguredWorldCarver<any>>>, arg1: Internal.List_<Internal.HolderSet<Internal.PlacedFeature>>)
        getClass(): typeof any;
        toString(): string;
        getFlowerFeatures(): Internal.List<Internal.ConfiguredFeature<any, any>>;
        features(): Internal.List<Internal.HolderSet<Internal.PlacedFeature>>;
        getCarvingStages(): Internal.Set<Internal.GenerationStep$Carving>;
        notifyAll(): void;
        hasFeature(arg0: Internal.PlacedFeature_): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        hashCode(): number;
        wait(): void;
        wait(arg0: number): void;
        getCarvers(arg0: Internal.GenerationStep$Carving_): Internal.Iterable<Internal.Holder<Internal.ConfiguredWorldCarver<any>>>;
        equals(arg0: any): boolean;
        get class(): typeof any
        get flowerFeatures(): Internal.List<Internal.ConfiguredFeature<any, any>>
        get carvingStages(): Internal.Set<Internal.GenerationStep$Carving>
        features: Internal.List<Internal.HolderSet<Internal.PlacedFeature>>;
        carvers: Internal.Map<Internal.GenerationStep$Carving, Internal.HolderSet<Internal.ConfiguredWorldCarver<any>>>;
        static readonly EMPTY: (Internal.BiomeGenerationSettings) & (Internal.BiomeGenerationSettings);
        featureSet: Internal.Supplier<Internal.Set<Internal.PlacedFeature>>;
        static readonly CODEC: Internal.MapCodec<Internal.BiomeGenerationSettings>;
        flowerFeatures: Internal.Supplier<Internal.List<Internal.ConfiguredFeature<any, any>>>;
    }
    type BiomeGenerationSettings_ = BiomeGenerationSettings;
    class ControllerBlock$ControllerBlockState extends Internal.Enum<Internal.ControllerBlock$ControllerBlockState> implements Internal.StringRepresentable {
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        getClass(): typeof any;
        static fromEnumWithMapping<E extends Internal.Enum<E> & Internal.StringRepresentable>(arg0: Internal.Supplier_<E[]>, arg1: Internal.Function_<string, string>): Internal.StringRepresentable$EnumCodec<E>;
        toString(): string;
        getSerializedName(): string;
        notifyAll(): void;
        static values(): Internal.ControllerBlock$ControllerBlockState[];
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.ControllerBlock$ControllerBlockState>>;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        compareTo(arg0: any): number;
        name(): string;
        hashCode(): number;
        static fromEnum<E extends Internal.Enum<E> & Internal.StringRepresentable>(arg0: Internal.Supplier_<E[]>): Internal.StringRepresentable$EnumCodec<E>;
        static keys(arg0: Internal.StringRepresentable_[]): Internal.Keyable;
        ordinal(): number;
        wait(): void;
        "compareTo(appeng.block.networking.ControllerBlock$ControllerBlockState)"(arg0: Internal.ControllerBlock$ControllerBlockState_): number;
        wait(arg0: number): void;
        getDeclaringClass(): typeof Internal.ControllerBlock$ControllerBlockState;
        "compareTo(java.lang.Object)"(arg0: any): number;
        equals(arg0: any): boolean;
        compareTo(arg0: Internal.ControllerBlock$ControllerBlockState_): number;
        static valueOf(arg0: string): Internal.ControllerBlock$ControllerBlockState;
        get class(): typeof any
        get serializedName(): string
        get declaringClass(): typeof Internal.ControllerBlock$ControllerBlockState
        static readonly online: (Internal.ControllerBlock$ControllerBlockState) & (Internal.ControllerBlock$ControllerBlockState);
        static readonly offline: (Internal.ControllerBlock$ControllerBlockState) & (Internal.ControllerBlock$ControllerBlockState);
        static readonly conflicted: (Internal.ControllerBlock$ControllerBlockState) & (Internal.ControllerBlock$ControllerBlockState);
    }
    type ControllerBlock$ControllerBlockState_ = "offline" | "conflicted" | ControllerBlock$ControllerBlockState | "online";
    interface Spliterator$OfPrimitive <T, T_CONS, T_SPLITR extends Internal.Spliterator$OfPrimitive<T, T_CONS, T_SPLITR>> extends Internal.Spliterator<T> {
        forEachRemaining(arg0: T_CONS): void;
        abstract "tryAdvance(java.util.function.Consumer)"(arg0: Internal.Consumer_<T>): boolean;
        hasCharacteristics(arg0: number): boolean;
        abstract tryAdvance(arg0: T_CONS): boolean;
        getComparator(): Internal.Comparator<T>;
        "forEachRemaining(java.util.function.Consumer)"(arg0: Internal.Consumer_<T>): void;
        abstract estimateSize(): number;
        "forEachRemaining(java.lang.Object)"(arg0: T_CONS): void;
        abstract "tryAdvance(java.lang.Object)"(arg0: T_CONS): boolean;
        trySplit(): Internal.Spliterator<any>;
        getExactSizeIfKnown(): number;
        forEachRemaining(arg0: Internal.Consumer_<T>): void;
        abstract tryAdvance(arg0: Internal.Consumer_<T>): boolean;
        abstract characteristics(): number;
        get comparator(): Internal.Comparator<T>
        get exactSizeIfKnown(): number
    }
    type Spliterator$OfPrimitive_<T, T_CONS, T_SPLITR extends Internal.Spliterator$OfPrimitive<T, T_CONS, T_SPLITR>> = Spliterator$OfPrimitive<T, T_CONS, T_SPLITR>;
    class BrokenMageArmor extends Internal.DyeableArmorItem implements Internal.ITieredItem<Internal.BrokenMageArmor>, Internal.INoCreativeTab {
        constructor(arg0: Internal.ArmorItem$Type_)
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        allowContinuingBlockBreaking(player: Internal.Player_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        moonlight$addAdditionalBehavior(placementOverride: Internal.AdditionalItemPlacement_): void;
        isFireResistant(): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        moonlight$getClientAnimationExtension(): any;
        static hasRestore(arg0: Internal.ItemStack_): boolean;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        hasCustomColor(arg0: Internal.ItemStack_): boolean;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        fabric_setCustomDamageHandler(handler: Internal.CustomDamageHandler_): void;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getBarColor(arg0: Internal.ItemStack_): number;
        getOrCreateDescriptionId(): string;
        getItem(): Internal.Item;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        static get(arg0: Internal.ItemStack_): Internal.Equipable;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): InteractionResult;
        kjs$getAttributeMap(): Internal.Multimap<any, any>;
        moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        moonlight$setClientAnimationExtension(obj: any): void;
        getDefense(): number;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        handler$dfl000$revelationary$getCloakedName(stack: Internal.ItemStack_, callbackInfoReturnable: Internal.CallbackInfoReturnable_<any>): void;
        isEdible(): boolean;
        getAttributeModifiers(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        getTier(arg0: Internal.Level_, arg1: Internal.ItemStack_): number;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        cardinal_createComponents(stack: Internal.ItemStack_): Internal.ComponentContainer;
        isFoil(arg0: Internal.ItemStack_): boolean;
        "getAttributeModifiers(net.minecraft.world.entity.EquipmentSlot,net.minecraft.world.item.ItemStack)"(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        static dispenseArmor(arg0: Internal.BlockSource_, arg1: Internal.ItemStack_): boolean;
        getMaterial(): Internal.ArmorMaterial;
        fabric_getEquipmentSlotProvider(): Internal.EquipmentSlotProvider;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        resolveTier(arg0: Internal.Level_, arg1: Internal.ItemStack_): number;
        owo$tab(): number;
        setCachedTier(arg0: number): void;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        setColor(arg0: Internal.ItemStack_, arg1: number): void;
        getCachedTier(): number;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        static getBySlot(arg0: Internal.EquipmentSlot_): Internal.BrokenMageArmor;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        getColor(arg0: Internal.ItemStack_): number;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vector3f;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        getToughness(): number;
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        "getAttributeModifiers(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.EquipmentSlot)"(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        allowNbtUpdateAnimation(player: Internal.Player_, hand: Internal.InteractionHand_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        fabric_getCachedItemVariant(): Internal.ItemVariant;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        fabric_getCustomDamageHandler(): Internal.CustomDamageHandler;
        clearColor(arg0: Internal.ItemStack_): void;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        swapWithEquipmentSlot(arg0: Internal.Item_, arg1: Internal.Level_, arg2: Internal.Player_, arg3: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        static getPlayerPOVHitResult(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.ClipContext$Fluid_): Internal.BlockHitResult;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        equals(arg0: any): boolean;
        setRarity(arg0: Internal.Rarity_): void;
        getType(): Internal.ArmorItem$Type;
        getRecipeRemainder(stack: Internal.ItemStack_): Internal.ItemStack;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        /**
         * @deprecated
        */
        onDestroyed(arg0: Internal.ItemEntity_): void;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        canBeHurtBy(arg0: DamageSource_): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        fabric_setEquipmentSlotProvider(equipmentSlotProvider: Internal.EquipmentSlotProvider_): void;
        getDescriptionId(): string;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        zeta$setHumanoidArmorModel(arg0: Internal.HumanoidArmorModelGetter_): void;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: DamageSource_): void;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        getDescription(): net.minecraft.network.chat.Component;
        owo$stackGenerator(): Internal.BiConsumer<any, any>;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        kjs$getMutableAttributeMap(): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        useOn(arg0: Internal.UseOnContext_): InteractionResult;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        handler$ebb000$connectormod$redirectIsPiglinCurrency(arg0: Internal.ItemStack_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        setAttackDamage(attackDamage: number): void;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        getEquipmentSlot(): Internal.EquipmentSlot;
        toString(): string;
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        modifyReturnValue$ffm000$quark$overrideOtherStackedOnMe(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_, arg3: Internal.Slot_, arg4: Internal.ClickAction_, arg5: Internal.Player_, arg6: Internal.SlotAccess_): boolean;
        getId(): string;
        handler$fbm000$moonlight$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        isSuitableFor(stack: Internal.ItemStack_, state: Internal.BlockState_): boolean;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        puzzleslib$setRenderProperties(arg0: any): void;
        notify(): void;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        getEquipSound(): Internal.SoundEvent;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        restore(arg0: Internal.ItemStack_): Internal.ItemStack;
        zeta$setBlockEntityWithoutLevelRenderer(arg0: Internal.BlockEntityWithoutLevelRenderer_): void;
        handler$cog000$croptopia$overrideConstructor(arg0: Internal.Item$Properties_, arg1: Internal.CallbackInfo_): void;
        static dyeArmor(arg0: Internal.ItemStack_, arg1: Internal.List_<Internal.DyeItem>): Internal.ItemStack;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        convertFrom(arg0: Internal.ItemStack_): Internal.ItemStack;
        getEatingSound(): Internal.SoundEvent;
        owo$setGroup(group: Internal.CreativeModeTab_): void;
        puzzleslib$getRenderProperties(): any;
        canBeDepleted(): boolean;
        getDamage(arg0: Internal.ItemStack_): number;
        wait(arg0: number, arg1: number): void;
        getMod(): string;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        owo$group(): Internal.CreativeModeTab;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        kjs$setAttributeMap(arg0: Internal.Multimap_<any, any>): void;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        modifyReturnValue$ffm000$quark$overrideStackedOnOther(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_): boolean;
        get drinkingSound(): Internal.SoundEvent
        get fireResistant(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set maxDamage(arg0: number)
        get orCreateDescriptionId(): string
        get item(): Internal.Item
        get class(): typeof any
        get renderPropertiesInternal(): any
        get defense(): number
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        get edible(): boolean
        get material(): Internal.ArmorMaterial
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        set cachedTier(arg0: number)
        get cachedTier(): number
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        set nameKey(arg0: string)
        get toughness(): number
        get idLocation(): ResourceLocation
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
        set rarity(arg0: Internal.Rarity_)
        get type(): Internal.ArmorItem$Type
        get complex(): boolean
        get descriptionId(): string
        get creativeTab(): string
        set burnTime(i: number)
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        set itemBuilder(b: Internal.ItemBuilder_)
        set attackDamage(attackDamage: number)
        get equipmentSlot(): Internal.EquipmentSlot
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        get equipSound(): Internal.SoundEvent
        /**
         * @deprecated
        */
        get maxStackSize(): number
        get eatingSound(): Internal.SoundEvent
        get mod(): string
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
    }
    type BrokenMageArmor_ = BrokenMageArmor;
    class ServerboundSeenAdvancementsPacket$Action extends Internal.Enum<Internal.ServerboundSeenAdvancementsPacket$Action> {
        static values(): Internal.ServerboundSeenAdvancementsPacket$Action[];
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        getClass(): typeof any;
        getDeclaringClass(): typeof Internal.ServerboundSeenAdvancementsPacket$Action;
        toString(): string;
        notifyAll(): void;
        "compareTo(net.minecraft.network.protocol.game.ServerboundSeenAdvancementsPacket$Action)"(arg0: Internal.ServerboundSeenAdvancementsPacket$Action_): number;
        compareTo(arg0: Internal.ServerboundSeenAdvancementsPacket$Action_): number;
        static valueOf(arg0: string): Internal.ServerboundSeenAdvancementsPacket$Action;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        compareTo(arg0: any): number;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.ServerboundSeenAdvancementsPacket$Action>>;
        name(): string;
        hashCode(): number;
        ordinal(): number;
        wait(): void;
        wait(arg0: number): void;
        "compareTo(java.lang.Object)"(arg0: any): number;
        equals(arg0: any): boolean;
        get class(): typeof any
        get declaringClass(): typeof Internal.ServerboundSeenAdvancementsPacket$Action
        static readonly OPENED_TAB: (Internal.ServerboundSeenAdvancementsPacket$Action) & (Internal.ServerboundSeenAdvancementsPacket$Action);
        static readonly CLOSED_SCREEN: (Internal.ServerboundSeenAdvancementsPacket$Action) & (Internal.ServerboundSeenAdvancementsPacket$Action);
    }
    type ServerboundSeenAdvancementsPacket$Action_ = "closed_screen" | ServerboundSeenAdvancementsPacket$Action | "opened_tab";
    class ChatTypeDecoration extends Internal.Record {
        constructor(arg0: string, arg1: Internal.List_<Internal.ChatTypeDecoration$Parameter>, arg2: Internal.Style_)
        getClass(): typeof any;
        toString(): string;
        translationKey(): string;
        parameters(): Internal.List<Internal.ChatTypeDecoration$Parameter>;
        style(): Internal.Style;
        notifyAll(): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        hashCode(): number;
        static outgoingDirectMessage(arg0: string): Internal.ChatTypeDecoration;
        wait(): void;
        wait(arg0: number): void;
        static withSender(arg0: string): Internal.ChatTypeDecoration;
        equals(arg0: any): boolean;
        decorate(arg0: net.minecraft.network.chat.Component_, arg1: Internal.ChatType$Bound_): net.minecraft.network.chat.Component;
        static incomingDirectMessage(arg0: string): Internal.ChatTypeDecoration;
        static teamMessage(arg0: string): Internal.ChatTypeDecoration;
        get class(): typeof any
        static readonly CODEC: Internal.Codec<Internal.ChatTypeDecoration>;
    }
    type ChatTypeDecoration_ = ChatTypeDecoration;
    class PatternStringError extends Internal.PatternError {
        constructor(translateKey: string)
        getClass(): typeof any;
        getErrorInfo(): net.minecraft.network.chat.Component;
        getWorld(): Internal.Level;
        toString(): string;
        notifyAll(): void;
        getCandidates(): Internal.List<Internal.List<Internal.ItemStack>>;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        setWorldState(worldState: Internal.MultiblockState_): void;
        getPos(): BlockPos;
        hashCode(): number;
        wait(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        get class(): typeof any
        get errorInfo(): net.minecraft.network.chat.Component
        get world(): Internal.Level
        get candidates(): Internal.List<Internal.List<Internal.ItemStack>>
        set worldState(worldState: Internal.MultiblockState_)
        get pos(): BlockPos
        readonly translateKey: string;
    }
    type PatternStringError_ = PatternStringError;
    class ItemCrystalOfMemories extends com.mna.api.items.TieredItem implements Internal.IShowHud {
        constructor()
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        allowContinuingBlockBreaking(player: Internal.Player_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        moonlight$addAdditionalBehavior(placementOverride: Internal.AdditionalItemPlacement_): void;
        isFireResistant(): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        moonlight$getClientAnimationExtension(): any;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        fabric_setCustomDamageHandler(handler: Internal.CustomDamageHandler_): void;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getBarColor(arg0: Internal.ItemStack_): number;
        getOrCreateDescriptionId(): string;
        getItem(): Internal.Item;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): InteractionResult;
        moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        moonlight$setClientAnimationExtension(obj: any): void;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        getMode(arg0: Internal.ItemStack_): number;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        handler$dfl000$revelationary$getCloakedName(stack: Internal.ItemStack_, callbackInfoReturnable: Internal.CallbackInfoReturnable_<any>): void;
        isEdible(): boolean;
        getAttributeModifiers(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        getTier(arg0: Internal.Level_, arg1: Internal.ItemStack_): number;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        cardinal_createComponents(stack: Internal.ItemStack_): Internal.ComponentContainer;
        isFoil(arg0: Internal.ItemStack_): boolean;
        "getAttributeModifiers(net.minecraft.world.entity.EquipmentSlot,net.minecraft.world.item.ItemStack)"(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        fabric_getEquipmentSlotProvider(): Internal.EquipmentSlotProvider;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        resolveTier(arg0: Internal.Level_, arg1: Internal.ItemStack_): number;
        owo$tab(): number;
        setCachedTier(arg0: number): void;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        getCachedTier(): number;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vector3f;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        "getAttributeModifiers(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.EquipmentSlot)"(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        allowNbtUpdateAnimation(player: Internal.Player_, hand: Internal.InteractionHand_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        fabric_getCachedItemVariant(): Internal.ItemVariant;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        fabric_getCustomDamageHandler(): Internal.CustomDamageHandler;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        static getPlayerPOVHitResult(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.ClipContext$Fluid_): Internal.BlockHitResult;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        equals(arg0: any): boolean;
        setRarity(arg0: Internal.Rarity_): void;
        getRecipeRemainder(stack: Internal.ItemStack_): Internal.ItemStack;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        /**
         * @deprecated
        */
        onDestroyed(arg0: Internal.ItemEntity_): void;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        canBeHurtBy(arg0: DamageSource_): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        fabric_setEquipmentSlotProvider(equipmentSlotProvider: Internal.EquipmentSlotProvider_): void;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        getDescriptionId(): string;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        zeta$setHumanoidArmorModel(arg0: Internal.HumanoidArmorModelGetter_): void;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: DamageSource_): void;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        getDescription(): net.minecraft.network.chat.Component;
        owo$stackGenerator(): Internal.BiConsumer<any, any>;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        useOn(arg0: Internal.UseOnContext_): InteractionResult;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        handler$ebb000$connectormod$redirectIsPiglinCurrency(arg0: Internal.ItemStack_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        setAttackDamage(attackDamage: number): void;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        toString(): string;
        /**
         * @deprecated
        */
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        modifyReturnValue$ffm000$quark$overrideOtherStackedOnMe(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_, arg3: Internal.Slot_, arg4: Internal.ClickAction_, arg5: Internal.Player_, arg6: Internal.SlotAccess_): boolean;
        getId(): string;
        handler$fbm000$moonlight$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        isSuitableFor(stack: Internal.ItemStack_, state: Internal.BlockState_): boolean;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        puzzleslib$setRenderProperties(arg0: any): void;
        notify(): void;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        zeta$setBlockEntityWithoutLevelRenderer(arg0: Internal.BlockEntityWithoutLevelRenderer_): void;
        handler$cog000$croptopia$overrideConstructor(arg0: Internal.Item$Properties_, arg1: Internal.CallbackInfo_): void;
        setSneakBypass(): com.mna.api.items.TieredItem;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        getEatingSound(): Internal.SoundEvent;
        owo$setGroup(group: Internal.CreativeModeTab_): void;
        puzzleslib$getRenderProperties(): any;
        canBeDepleted(): boolean;
        getDamage(arg0: Internal.ItemStack_): number;
        wait(arg0: number, arg1: number): void;
        getMod(): string;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        owo$group(): Internal.CreativeModeTab;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        modifyReturnValue$ffm000$quark$overrideStackedOnOther(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_): boolean;
        get drinkingSound(): Internal.SoundEvent
        get fireResistant(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set maxDamage(arg0: number)
        get orCreateDescriptionId(): string
        get item(): Internal.Item
        get class(): typeof any
        get renderPropertiesInternal(): any
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        get edible(): boolean
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        set cachedTier(arg0: number)
        get cachedTier(): number
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        set nameKey(arg0: string)
        get idLocation(): ResourceLocation
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
        set rarity(arg0: Internal.Rarity_)
        get complex(): boolean
        get descriptionId(): string
        get creativeTab(): string
        set burnTime(i: number)
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        set itemBuilder(b: Internal.ItemBuilder_)
        set attackDamage(attackDamage: number)
        /**
         * @deprecated
        */
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        /**
         * @deprecated
        */
        get maxStackSize(): number
        get eatingSound(): Internal.SoundEvent
        get mod(): string
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
    }
    type ItemCrystalOfMemories_ = ItemCrystalOfMemories;
    class FramedDoublePrismBlock extends Internal.AbstractFramedDoubleBlock {
        constructor()
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        getCamoOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        getCamoShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: number): number;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getSettings(): Internal.BlockBehaviour$Properties;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        /**
         * @deprecated
        */
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        getTypeData(): Internal.CompoundTag;
        setFriction(arg0: number): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getSolidityCheck(arg0: Internal.BlockState_, arg1: Internal.Direction_): Internal.SolidityCheck;
        rotate(arg0: Internal.BlockState_, arg1: Internal.BlockHitResult_, arg2: Internal.Rotation_): Internal.BlockState;
        getSpeedFactor(): number;
        getComponentBySkipPredicate(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): Internal.BlockState;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        playerDestroy(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Player_): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Internal.Player_): Internal.ItemStack;
        getClass(): typeof any;
        abstract getBlockType(): Internal.IBlockType;
        getMaxVerticalOffset(): number;
        newBlockEntity(arg0: BlockPos_, arg1: Internal.BlockState_): Internal.BlockEntity;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        getRenderPropertiesInternal(): any;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        needsDynamicNodeTypeCheck(): boolean;
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        getBlockPair(arg0: Internal.BlockState_): Internal.Tuple<Internal.BlockState, Internal.BlockState>;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        "rotate(net.minecraft.world.level.block.state.BlockState,net.minecraft.core.Direction,net.minecraft.world.level.block.Rotation)"(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        calculateTopInteractionMode(arg0: Internal.BlockState_): Internal.DoubleBlockTopInteractionMode;
        setRequiresTool(v: boolean): void;
        asBlock(): Internal.Block;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        puzzleslib$setItem(arg0: Internal.Item_): void;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        doesBlockOccludeBeaconBeam(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        useCamoOcclusionShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        /**
         * @deprecated
        */
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        lychee$isTickable(): boolean;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static testComponent(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        isSuffocating(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        getTicker<T extends Internal.BlockEntity>(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockEntityType_<T>): Internal.BlockEntityTicker<T>;
        /**
         * @deprecated
        */
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        updateShapeLockable(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Supplier_<Internal.BlockState>): Internal.BlockState;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        lockState(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Player_, arg3: Internal.ItemStack_): boolean;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        placeLiquid(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.FluidState_): boolean;
        getCamoVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        spawnDestroyParticles(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_): void;
        wait(): void;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Internal.Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(shape: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        setIsRandomlyTicking(arg0: boolean): void;
        getPickupSound(arg0: Internal.BlockState_): Internal.Optional<Internal.SoundEvent>;
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        registerDefaultState(arg0: Internal.BlockState_): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        createBlockItem(): Internal.BlockItem;
        printCamoBlock(arg0: Internal.CompoundTag_): Internal.Optional<Internal.MutableComponent>;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        needCullingUpdateAfterStateChange(arg0: Internal.LevelReader_, arg1: Internal.BlockState_, arg2: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        shouldPreventNeighborCulling(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.BlockState_): boolean;
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        getPickupSound(): Internal.Optional<Internal.SoundEvent>;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        isAir(arg0: Internal.BlockState_): boolean;
        static createProperties(arg0: Internal.IBlockType_): Internal.BlockBehaviour$Properties;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getCamoDrops(arg0: Internal.List_<Internal.ItemStack>, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        "rotate(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.phys.BlockHitResult,net.minecraft.world.level.block.Rotation)"(arg0: Internal.BlockState_, arg1: Internal.BlockHitResult_, arg2: Internal.Rotation_): Internal.BlockState;
        static getStatePair(arg0: Internal.BlockState_): Internal.Tuple<Internal.BlockState, Internal.BlockState>;
        needsDynamicBurningCheck(): boolean;
        getDescriptionId(): string;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        handler$bob000$radium$postConstruct(p_i241196_1_: Internal.BlockBehaviour$Properties_, ci: Internal.CallbackInfo_): void;
        tryDropExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: Internal.ItemStack_, arg3: Internal.IntProvider_): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        handler$eok000$particular$spawnParticles(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, random: Internal.RandomSource_, ci: Internal.CallbackInfo_): void;
        getJumpFactor(): number;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        setDrops(arg0: ResourceLocation_): void;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        pickupBlock(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        static playCamoBreakSound(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        getBlockProperties(): Internal.BlockBehaviour$Properties;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        runOcclusionTestAndGetLookupState(arg0: Internal.SideSkipPredicate_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockState_, arg5: Internal.Direction_): Internal.BlockState;
        notifyAll(): void;
        getShapeForEachState(arg0: Internal.Function_<Internal.BlockState, Internal.VoxelShape>): Internal.ImmutableMap<Internal.BlockState, Internal.VoxelShape>;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        getFriction(): number;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        createBlockStateDefinition(arg0: Internal.StateDefinition$Builder_<Internal.Block, Internal.BlockState>): void;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        calculateBlockPair(arg0: Internal.BlockState_): Internal.Tuple<Internal.BlockState, Internal.BlockState>;
        notify(): void;
        getTopInteractionMode(arg0: Internal.BlockState_): Internal.DoubleBlockTopInteractionMode;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        canCamoSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        handler$dji000$spectrum$afterBreak(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        static toggleYSlope(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        /**
         * @deprecated
        */
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        handleUse(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): InteractionResult;
        setDestroySpeed(v: number): void;
        tryApplyCamoImmediately(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.LivingEntity_, arg3: Internal.ItemStack_): void;
        isIntangible(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): boolean;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        handler$zbh000$additionalentityattributes$additionalEntityAttributes$saveBreakingPlayer(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        updateCulling(arg0: Internal.LevelReader_, arg1: BlockPos_): void;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getListener<T extends Internal.BlockEntity>(arg0: Internal.ServerLevel_, arg1: T): Internal.GameEventListener;
        arch$holder(): Internal.Holder<Internal.Block>;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        handleBlockLeftClick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        playBreakSound(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): boolean;
        canPlaceLiquid(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Fluid_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        calculateSolidityCheck(arg0: Internal.BlockState_, arg1: Internal.Direction_): Internal.SolidityCheck;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        calculateCamoGetter(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.Direction_): Internal.CamoGetter;
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        initCache(arg0: Internal.BlockState_): Internal.StateCache;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        getCamoGetter(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.Direction_): Internal.CamoGetter;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): void;
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        lychee$setTickable(arg0: boolean): void;
        getComponentAtEdge(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Direction_, arg4: Internal.Direction_): Internal.BlockState;
        static itemModelSource(): Internal.BlockState;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        getCache(arg0: Internal.BlockState_): Internal.StateCache;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        rotate(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        unpackNestedModelData(arg0: Internal.ModelData_, arg1: Internal.BlockState_, arg2: Internal.BlockState_): Internal.ModelData;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        get settings(): Internal.BlockBehaviour$Properties
        /**
         * @deprecated
        */
        get explosionResistance(): number
        get typeData(): Internal.CompoundTag
        set friction(arg0: number)
        get speedFactor(): number
        get class(): typeof any
        get blockType(): Internal.IBlockType
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get pickupSound(): Internal.Optional<Internal.SoundEvent>
        get descriptionId(): string
        get jumpFactor(): number
        set drops(arg0: ResourceLocation_)
        set speedFactor(arg0: number)
        get blockProperties(): Internal.BlockBehaviour$Properties
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get mod(): string
        set hasCollision(arg0: boolean)
    }
    type FramedDoublePrismBlock_ = FramedDoublePrismBlock;
    class WallSide extends Internal.Enum<Internal.WallSide> implements Internal.StringRepresentable {
        static values(): Internal.WallSide[];
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        getClass(): typeof any;
        static fromEnumWithMapping<E extends Internal.Enum<E> & Internal.StringRepresentable>(arg0: Internal.Supplier_<E[]>, arg1: Internal.Function_<string, string>): Internal.StringRepresentable$EnumCodec<E>;
        toString(): string;
        "compareTo(net.minecraft.world.level.block.state.properties.WallSide)"(arg0: Internal.WallSide_): number;
        getSerializedName(): string;
        notifyAll(): void;
        notify(): void;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.WallSide>>;
        wait(arg0: number, arg1: number): void;
        compareTo(arg0: any): number;
        name(): string;
        hashCode(): number;
        static fromEnum<E extends Internal.Enum<E> & Internal.StringRepresentable>(arg0: Internal.Supplier_<E[]>): Internal.StringRepresentable$EnumCodec<E>;
        static keys(arg0: Internal.StringRepresentable_[]): Internal.Keyable;
        compareTo(arg0: Internal.WallSide_): number;
        ordinal(): number;
        wait(): void;
        wait(arg0: number): void;
        static valueOf(arg0: string): Internal.WallSide;
        getDeclaringClass(): typeof Internal.WallSide;
        "compareTo(java.lang.Object)"(arg0: any): number;
        equals(arg0: any): boolean;
        get class(): typeof any
        get serializedName(): string
        get declaringClass(): typeof Internal.WallSide
        static readonly LOW: (Internal.WallSide) & (Internal.WallSide);
        static readonly TALL: (Internal.WallSide) & (Internal.WallSide);
        static readonly NONE: (Internal.WallSide) & (Internal.WallSide);
    }
    type WallSide_ = "low" | WallSide | "tall" | "none";
    class ReplacerBlock extends Internal.QPBlock implements Internal.QuarryModuleProvider$Block {
        constructor()
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getSettings(): Internal.BlockBehaviour$Properties;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        asItem(): Internal.Item;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        getTypeData(): Internal.CompoundTag;
        setFriction(arg0: number): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getSpeedFactor(): number;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        playerDestroy(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Player_): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Internal.Player_): Internal.ItemStack;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        getRenderPropertiesInternal(): any;
        needsDynamicNodeTypeCheck(): boolean;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        setRequiresTool(v: boolean): void;
        asBlock(): Internal.Block;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        puzzleslib$setItem(arg0: Internal.Item_): void;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        /**
         * @deprecated
        */
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        /**
         * @deprecated
        */
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        lychee$isTickable(): boolean;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        /**
         * @deprecated
        */
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        spawnDestroyParticles(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_): void;
        wait(): void;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Internal.Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(shape: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        setIsRandomlyTicking(arg0: boolean): void;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        registerDefaultState(arg0: Internal.BlockState_): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        disallowedDim(): Internal.Set<ResourceLocation>;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        /**
         * @deprecated
        */
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        /**
         * @deprecated
        */
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        isAir(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        needsDynamicBurningCheck(): boolean;
        getDescriptionId(): string;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        handler$bob000$radium$postConstruct(p_i241196_1_: Internal.BlockBehaviour$Properties_, ci: Internal.CallbackInfo_): void;
        tryDropExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: Internal.ItemStack_, arg3: Internal.IntProvider_): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        handler$eok000$particular$spawnParticles(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, random: Internal.RandomSource_, ci: Internal.CallbackInfo_): void;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        setDrops(arg0: ResourceLocation_): void;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        getBlockProperties(): Internal.BlockBehaviour$Properties;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getShapeForEachState(arg0: Internal.Function_<Internal.BlockState, Internal.VoxelShape>): Internal.ImmutableMap<Internal.BlockState, Internal.VoxelShape>;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        getFriction(): number;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        createBlockStateDefinition(arg0: Internal.StateDefinition$Builder_<Internal.Block, Internal.BlockState>): void;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        notify(): void;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        handler$dji000$spectrum$afterBreak(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        static getModulesInWorld(arg0: Internal.Level_, arg1: BlockPos_): Internal.Set<Internal.QuarryModule>;
        /**
         * @deprecated
        */
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        setDestroySpeed(v: number): void;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        handler$zbh000$additionalentityattributes$additionalEntityAttributes$saveBreakingPlayer(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        arch$holder(): Internal.Holder<Internal.Block>;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): void;
        lychee$setTickable(arg0: boolean): void;
        /**
         * @deprecated
        */
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        getModule(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ReplacerModule;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        getRegistryName(): ResourceLocation;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        get settings(): Internal.BlockBehaviour$Properties
        /**
         * @deprecated
        */
        get explosionResistance(): number
        get typeData(): Internal.CompoundTag
        set friction(arg0: number)
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get descriptionId(): string
        get jumpFactor(): number
        set drops(arg0: ResourceLocation_)
        set speedFactor(arg0: number)
        get blockProperties(): Internal.BlockBehaviour$Properties
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get mod(): string
        get registryName(): ResourceLocation
        set hasCollision(arg0: boolean)
        static readonly NAME: ("replacer") & (string);
    }
    type ReplacerBlock_ = ReplacerBlock;
    class GTWallHangingSignBlock extends Internal.WallHangingSignBlock {
        constructor(properties: Internal.BlockBehaviour$Properties_, type: Internal.WoodType_)
        getSignHitboxCenterPosition(arg0: Internal.BlockState_): Vec3d;
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static getWoodType(arg0: Internal.Block_): Internal.WoodType;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getSettings(): Internal.BlockBehaviour$Properties;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        getTypeData(): Internal.CompoundTag;
        setFriction(arg0: number): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getSpeedFactor(): number;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        playerDestroy(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Player_): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Internal.Player_): Internal.ItemStack;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        newBlockEntity(pos: BlockPos_, state: Internal.BlockState_): Internal.BlockEntity;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        getRenderPropertiesInternal(): any;
        needsDynamicNodeTypeCheck(): boolean;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        entityInside(state: Internal.BlockState_, level: Internal.Level_, pos: BlockPos_, entity: Internal.Entity_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        setRequiresTool(v: boolean): void;
        asBlock(): Internal.Block;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        openTextEdit(arg0: Internal.Player_, arg1: Internal.SignBlockEntity_, arg2: boolean): void;
        puzzleslib$setItem(arg0: Internal.Item_): void;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        handler$ekm001$amendments$use(state: Internal.BlockState_, level: Internal.Level_, pos: BlockPos_, player: Internal.Player_, hand: Internal.InteractionHand_, hit: Internal.BlockHitResult_, cir: Internal.CallbackInfoReturnable_<any>): void;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        /**
         * @deprecated
        */
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static createTickerHelper<E extends Internal.BlockEntity, A extends Internal.BlockEntity>(arg0: Internal.BlockEntityType_<A>, arg1: Internal.BlockEntityType_<E>, arg2: Internal.BlockEntityTicker_<E>): Internal.BlockEntityTicker<A>;
        lychee$isTickable(): boolean;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        getTicker<T extends Internal.BlockEntity>(level: Internal.Level_, state: Internal.BlockState_, blockEntityType: Internal.BlockEntityType_<T>): Internal.BlockEntityTicker<T>;
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        getYRotationDegrees(arg0: Internal.BlockState_): number;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        placeLiquid(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.FluidState_): boolean;
        spawnDestroyParticles(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_): void;
        wait(): void;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Internal.Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(shape: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        getPickupSound(arg0: Internal.BlockState_): Internal.Optional<Internal.SoundEvent>;
        setIsRandomlyTicking(arg0: boolean): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        registerDefaultState(arg0: Internal.BlockState_): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        type(): Internal.WoodType;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        /**
         * @deprecated
        */
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        canAttachTo(arg0: Internal.LevelReader_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        getPickupSound(): Internal.Optional<Internal.SoundEvent>;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        isAir(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        getDescriptionId(): string;
        needsDynamicBurningCheck(): boolean;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        handler$bob000$radium$postConstruct(p_i241196_1_: Internal.BlockBehaviour$Properties_, ci: Internal.CallbackInfo_): void;
        tryDropExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: Internal.ItemStack_, arg3: Internal.IntProvider_): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        handler$eok000$particular$spawnParticles(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, random: Internal.RandomSource_, ci: Internal.CallbackInfo_): void;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        handler$ekm000$amendments$canAttachTo(level: Internal.LevelReader_, state: Internal.BlockState_, facingPos: BlockPos_, direction: Internal.Direction_, cir: Internal.CallbackInfoReturnable_<any>, facingState: Internal.BlockState_): void;
        setDrops(arg0: ResourceLocation_): void;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        pickupBlock(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        getDrops(state: Internal.BlockState_, params: Internal.LootParams$Builder_): Internal.List<any>;
        getBlockProperties(): Internal.BlockBehaviour$Properties;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getShapeForEachState(arg0: Internal.Function_<Internal.BlockState, Internal.VoxelShape>): Internal.ImmutableMap<Internal.BlockState, Internal.VoxelShape>;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        setPlacedBy(level: Internal.Level_, pos: BlockPos_, state: Internal.BlockState_, placer: Internal.LivingEntity_, stack: Internal.ItemStack_): void;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        getFriction(): number;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        createBlockStateDefinition(arg0: Internal.StateDefinition$Builder_<Internal.Block, Internal.BlockState>): void;
        handler$ekm001$amendments$updateExtension(state: Internal.BlockState_, direction: Internal.Direction_, neighborState: Internal.BlockState_, level: Internal.LevelAccessor_, currentPos: BlockPos_, neighborPos: BlockPos_, cir: Internal.CallbackInfoReturnable_<any>): void;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        notify(): void;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        handler$dji000$spectrum$afterBreak(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        setDestroySpeed(v: number): void;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        handler$zbh000$additionalentityattributes$additionalEntityAttributes$saveBreakingPlayer(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getListener<T extends Internal.BlockEntity>(arg0: Internal.ServerLevel_, arg1: T): Internal.GameEventListener;
        arch$holder(): Internal.Holder<Internal.Block>;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        canPlace(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        canPlaceLiquid(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Fluid_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): void;
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        lychee$setTickable(arg0: boolean): void;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        get settings(): Internal.BlockBehaviour$Properties
        /**
         * @deprecated
        */
        get explosionResistance(): number
        get typeData(): Internal.CompoundTag
        set friction(arg0: number)
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get pickupSound(): Internal.Optional<Internal.SoundEvent>
        get descriptionId(): string
        get jumpFactor(): number
        set drops(arg0: ResourceLocation_)
        set speedFactor(arg0: number)
        get blockProperties(): Internal.BlockBehaviour$Properties
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get mod(): string
        set hasCollision(arg0: boolean)
    }
    type GTWallHangingSignBlock_ = GTWallHangingSignBlock;
    class ReaperScytheItem extends Internal.SwordItem {
        constructor(arg0: Internal.Item$Properties_)
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        allowContinuingBlockBreaking(player: Internal.Player_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        moonlight$addAdditionalBehavior(placementOverride: Internal.AdditionalItemPlacement_): void;
        setLore(arg0: string): Internal.Item;
        isFireResistant(): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        moonlight$getClientAnimationExtension(): any;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        fabric_setCustomDamageHandler(handler: Internal.CustomDamageHandler_): void;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getBarColor(arg0: Internal.ItemStack_): number;
        getOrCreateDescriptionId(): string;
        getItem(): Internal.Item;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): InteractionResult;
        kjs$getAttributeMap(): Internal.Multimap<any, any>;
        moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        moonlight$setClientAnimationExtension(obj: any): void;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        handler$dfl000$revelationary$getCloakedName(stack: Internal.ItemStack_, callbackInfoReturnable: Internal.CallbackInfoReturnable_<any>): void;
        isEdible(): boolean;
        getAttributeModifiers(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        getDamage(): number;
        cardinal_createComponents(stack: Internal.ItemStack_): Internal.ComponentContainer;
        isFoil(arg0: Internal.ItemStack_): boolean;
        "getAttributeModifiers(net.minecraft.world.entity.EquipmentSlot,net.minecraft.world.item.ItemStack)"(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        fabric_getEquipmentSlotProvider(): Internal.EquipmentSlotProvider;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        owo$tab(): number;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        getTier(): Internal.Tier;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vector3f;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        "getAttributeModifiers(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.EquipmentSlot)"(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        allowNbtUpdateAnimation(player: Internal.Player_, hand: Internal.InteractionHand_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        fabric_getCachedItemVariant(): Internal.ItemVariant;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        fabric_getCustomDamageHandler(): Internal.CustomDamageHandler;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        static getPlayerPOVHitResult(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.ClipContext$Fluid_): Internal.BlockHitResult;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        equals(arg0: any): boolean;
        setRarity(arg0: Internal.Rarity_): void;
        getRecipeRemainder(stack: Internal.ItemStack_): Internal.ItemStack;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        /**
         * @deprecated
        */
        onDestroyed(arg0: Internal.ItemEntity_): void;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        canBeHurtBy(arg0: DamageSource_): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        fabric_setEquipmentSlotProvider(equipmentSlotProvider: Internal.EquipmentSlotProvider_): void;
        getDescriptionId(): string;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        zeta$setHumanoidArmorModel(arg0: Internal.HumanoidArmorModelGetter_): void;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: DamageSource_): void;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        getDescription(): net.minecraft.network.chat.Component;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        owo$stackGenerator(): Internal.BiConsumer<any, any>;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        kjs$getMutableAttributeMap(): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        useOn(arg0: Internal.UseOnContext_): InteractionResult;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        handler$ebb000$connectormod$redirectIsPiglinCurrency(arg0: Internal.ItemStack_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        setAttackDamage(attackDamage: number): void;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        toString(): string;
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        modifyReturnValue$ffm000$quark$overrideOtherStackedOnMe(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_, arg3: Internal.Slot_, arg4: Internal.ClickAction_, arg5: Internal.Player_, arg6: Internal.SlotAccess_): boolean;
        getId(): string;
        handler$fbm000$moonlight$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        isSuitableFor(stack: Internal.ItemStack_, state: Internal.BlockState_): boolean;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        puzzleslib$setRenderProperties(arg0: any): void;
        notify(): void;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        zeta$setBlockEntityWithoutLevelRenderer(arg0: Internal.BlockEntityWithoutLevelRenderer_): void;
        handler$cog000$croptopia$overrideConstructor(arg0: Internal.Item$Properties_, arg1: Internal.CallbackInfo_): void;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        getEatingSound(): Internal.SoundEvent;
        owo$setGroup(group: Internal.CreativeModeTab_): void;
        puzzleslib$getRenderProperties(): any;
        canBeDepleted(): boolean;
        getDamage(arg0: Internal.ItemStack_): number;
        wait(arg0: number, arg1: number): void;
        handler$doi000$dummmmmmy$hurtItem(stack: Internal.ItemStack_, entity: Internal.LivingEntity_, player: Internal.LivingEntity_, cir: Internal.CallbackInfoReturnable_<any>): void;
        getMod(): string;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        owo$group(): Internal.CreativeModeTab;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        kjs$setAttributeMap(arg0: Internal.Multimap_<any, any>): void;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        modifyReturnValue$ffm000$quark$overrideStackedOnOther(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_): boolean;
        get drinkingSound(): Internal.SoundEvent
        set lore(arg0: string)
        get fireResistant(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set maxDamage(arg0: number)
        get orCreateDescriptionId(): string
        get item(): Internal.Item
        get class(): typeof any
        get renderPropertiesInternal(): any
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        get edible(): boolean
        get damage(): number
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        get tier(): Internal.Tier
        set nameKey(arg0: string)
        get idLocation(): ResourceLocation
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
        set rarity(arg0: Internal.Rarity_)
        get complex(): boolean
        get descriptionId(): string
        get creativeTab(): string
        set burnTime(i: number)
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        set itemBuilder(b: Internal.ItemBuilder_)
        set attackDamage(attackDamage: number)
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        /**
         * @deprecated
        */
        get maxStackSize(): number
        get eatingSound(): Internal.SoundEvent
        get mod(): string
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
    }
    type ReaperScytheItem_ = ReaperScytheItem;
    interface MessageSenderKJS {
        getDisplayName(): net.minecraft.network.chat.Component;
        setStatusMessage(message: net.minecraft.network.chat.Component_): void;
        getName(): net.minecraft.network.chat.Component;
        runCommandSilent(command: string): number;
        tell(message: net.minecraft.network.chat.Component_): void;
        runCommand(command: string): number;
        get displayName(): net.minecraft.network.chat.Component
        set statusMessage(message: net.minecraft.network.chat.Component_)
        get name(): net.minecraft.network.chat.Component
    }
    type MessageSenderKJS_ = MessageSenderKJS;
    interface KeyListener extends Internal.EventListener {
        abstract keyPressed(arg0: Internal.KeyEvent_): void;
        abstract keyReleased(arg0: Internal.KeyEvent_): void;
        abstract keyTyped(arg0: Internal.KeyEvent_): void;
    }
    type KeyListener_ = KeyListener;
    class CoilBlockBuilder extends Internal.BlockBuilder {
        constructor(i: ResourceLocation_)
        /**
         * Note block instrument.
        */
        instrument(i: Internal.NoteBlockInstrument_): Internal.BlockBuilder;
        /**
         * Bounces entities that land on this block by bounciness * their fall velocity.
         * Do not make bounciness negative, as that is a recipe for a long and laggy trip to the void
        */
        bounciness(bounciness: number): Internal.BlockBuilder;
        createAdditionalObjects(): void;
        /**
         * Tags the item with the given tag.
        */
        tagItem(tag: ResourceLocation_): Internal.BlockBuilder;
        /**
         * Sets the translation key for this object, e.g. `block.minecraft.stone`.
        */
        translationKey(key: string): Internal.BuilderBase<Internal.Block>;
        sandSoundType(): Internal.BlockBuilder;
        /**
         * Set the shape of the block.
        */
        box(x0: number, y0: number, z0: number, x1: number, y1: number, z1: number): Internal.BlockBuilder;
        get(): Internal.Block;
        getRegistryType(): Internal.RegistryInfo<any>;
        texture(texture: ResourceLocation_): this;
        /**
         * Texture the block on all sides with the same texture.
        */
        textureAll(tex: string): Internal.BlockBuilder;
        /**
         * Makes displayName() override language files.
        */
        formattedDisplayName(): Internal.BuilderBase<Internal.Block>;
        /**
         * Sets the block's map color dynamically per block state. If unset, defaults to NONE.
        */
        dynamicMapColor(m: Internal.Function_<Internal.BlockState, any>): Internal.BlockBuilder;
        /**
         * Tags both the block and the item with the given tag.
        */
        tagBoth(tag: ResourceLocation_): Internal.BlockBuilder;
        /**
         * Makes the block unbreakable.
        */
        unbreakable(): Internal.BlockBuilder;
        coilMaterial(material: Internal.Supplier_<com.gregtechceu.gtceu.api.data.chemical.material.Material>): this;
        /**
         * Sets random tick callback for this black.
        */
        randomTick(randomTickCallback: Internal.Consumer_<Internal.RandomTickCallbackJS>): Internal.BlockBuilder;
        /**
         * Sets the light level of the block. Defaults to 0 (no light).
        */
        lightLevel(light: number): Internal.BlockBuilder;
        /**
         * Combined method of formattedDisplayName().displayName(name).
        */
        formattedDisplayName(name: net.minecraft.network.chat.Component_): Internal.BuilderBase<Internal.Block>;
        /**
         * Sets the display name for this object, e.g. `Stone`.
         * 
         * This will be overridden by a lang file if it exists.
        */
        displayName(name: net.minecraft.network.chat.Component_): Internal.BuilderBase<Internal.Block>;
        static createShape(boxes: Internal.List_<Internal.AABB>): Internal.VoxelShape;
        /**
         * Makes the block not be solid.
        */
        notSolid(): Internal.BlockBuilder;
        generateLang(lang: Internal.LangEventJS_): void;
        /**
         * Clears all drops for the block.
        */
        noDrops(): Internal.BlockBuilder;
        getClass(): typeof any;
        tier(tier: number): this;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        setWaterlogged(waterlogged: boolean): Internal.BlockBuilder;
        grassSoundType(): Internal.BlockBuilder;
        createProperties(): Internal.BlockBehaviour$Properties;
        /**
         * Sets the block's sound type. Defaults to wood.
        */
        soundType(m: SoundType_): Internal.BlockBuilder;
        "transformObject(java.lang.Object)"(arg0: any): any;
        /**
         * Set the callback used for determining how the block rotates
        */
        rotateState(callbackJS: Internal.Consumer_<Internal.BlockStateRotateCallbackJS>): Internal.BlockBuilder;
        /**
         * Set the callback used for right-clicking on the block
        */
        rightClick(callbackJS: Internal.Consumer_<Internal.BlockRightClickedEventJS>): Internal.BlockBuilder;
        /**
         * Makes the block require a tool to have drops when broken.
        */
        requiresTool(f: boolean): Internal.BlockBuilder;
        /**
         * Sets the hardness of the block. Defaults to 1.5.
         * 
         * Setting this to -1 will make the block unbreakable like bedrock.
        */
        hardness(h: number): Internal.BlockBuilder;
        /**
         * Creates a Block Entity for this block
        */
        blockEntity(callback: Internal.Consumer_<Internal.BlockEntityInfo>): Internal.BlockBuilder;
        /**
         * Set the block to have no corresponding item.
        */
        noItem(): Internal.BlockBuilder;
        createObject(): Internal.Block;
        transformObject(arg0: any): any;
        /**
         * Set the callback used for determining how the block is mirrored
        */
        mirrorState(callbackJS: Internal.Consumer_<Internal.BlockStateMirrorCallbackJS>): Internal.BlockBuilder;
        /**
         * Set how slippery the block is.
        */
        slipperiness(f: number): Internal.BlockBuilder;
        toString(): string;
        woodSoundType(): Internal.BlockBuilder;
        notifyAll(): void;
        transformObject(obj: Internal.Block_): Internal.Block;
        /**
         * Tags both the block and the item with the given tag.
        */
        tag(tag: ResourceLocation_): Internal.BlockBuilder;
        /**
         * Set how this block bounces/moves entities that land on top of this. Do not use this to modify the block, use fallOn instead!
         * Use ctx.bounce(height) or ctx.setVelocity(x, y, z) to change the entities velocity.
        */
        afterFallenOn(callbackJS: Internal.Consumer_<Internal.AfterEntityFallenOnBlockCallbackJS>): Internal.BlockBuilder;
        /**
         * Makes the block suffocating.
        */
        suffocating(b: boolean): Internal.BlockBuilder;
        /**
         * Set the color of a specific layer of the block.
        */
        color(index: number, color: Internal.BlockTintFunction_): Internal.BlockBuilder;
        wait(arg0: number): void;
        /**
         * Set how fast you can walk on the block.
         * 
         * Any value above 1 will make you walk insanely fast as your speed is multiplied by this value each tick.
         * 
         * Recommended values are between 0.1 and 1, useful for mimicking soul sand or ice.
        */
        speedFactor(f: number): Internal.BlockBuilder;
        cropSoundType(): Internal.BlockBuilder;
        newID(pre: string, post: string): ResourceLocation;
        "transformObject(net.minecraft.world.level.block.Block)"(obj: Internal.Block_): Internal.Block;
        /**
         * Set what happens when an entity falls on the block. Do not use this for moving them, use bounce instead!
        */
        fallenOn(callbackJS: Internal.Consumer_<Internal.EntityFallenOnBlockCallbackJS>): Internal.BlockBuilder;
        /**
         * Set the block's model.
        */
        model(m: string): Internal.BlockBuilder;
        getTranslationKeyGroup(): string;
        notify(): void;
        /**
         * Makes the block a redstone conductor.
        */
        redstoneConductor(b: boolean): Internal.BlockBuilder;
        noSoundType(): Internal.BlockBuilder;
        /**
         * Modifies the block's item representation.
        */
        item(i: Internal.Consumer_<Internal.BlockItemBuilder>): Internal.BlockBuilder;
        /**
         * Set the default state of the block.
        */
        defaultState(callbackJS: Internal.Consumer_<Internal.BlockStateModifyCallbackJS>): Internal.BlockBuilder;
        /**
         * Set what happens when an entity steps on the block
         * This is called every tick for every entity standing on the block, so be careful what you do here.
        */
        steppedOn(callbackJS: Internal.Consumer_<Internal.EntitySteppedOnBlockCallbackJS>): Internal.BlockBuilder;
        /**
         * Helper method for setting the render type of the block to `translucent` correctly.
        */
        defaultTranslucent(): Internal.BlockBuilder;
        temperature(temperature: number): this;
        /**
         * Makes the block view blocking.
        */
        viewBlocking(b: boolean): Internal.BlockBuilder;
        /**
         * Add a blockstate property to the block.
         * 
         * For example, facing, lit, etc.
        */
        property(property: Internal.Property_<any>): Internal.BlockBuilder;
        /**
         * Sets the blast resistance of the block. Defaults to 3.
        */
        resistance(r: number): Internal.BlockBuilder;
        gravelSoundType(): Internal.BlockBuilder;
        getBuilderTranslationKey(): string;
        /**
         * Set the shape of the block.
        */
        box(x0: number, y0: number, z0: number, x1: number, y1: number, z1: number, scale16: boolean): Internal.BlockBuilder;
        /**
         * Set the callback for determining the blocks state when placed.
        */
        placementState(callbackJS: Internal.Consumer_<Internal.BlockStateModifyPlacementCallbackJS>): Internal.BlockBuilder;
        /**
         * Set if the block can be replaced by something else.
        */
        canBeReplaced(callbackJS: Internal.Predicate_<Internal.CanBeReplacedCallbackJS>): Internal.BlockBuilder;
        wait(): void;
        /**
         * Set how this block reacts after an explosion. Note the block has already been destroyed at this point
        */
        exploded(callbackJS: Internal.Consumer_<Internal.BlockExplodedCallbackJS>): Internal.BlockBuilder;
        /**
         * Sets the block's map color. Defaults to NONE.
        */
        mapColor(m: Internal.MapColor_): Internal.BlockBuilder;
        /**
         * Sets the render type of the block. Can be `cutout`, `cutout_mipped`, `translucent`, or `basic`.
        */
        renderType(l: string): Internal.BlockBuilder;
        stoneSoundType(): Internal.BlockBuilder;
        /**
         * Makes the block can be waterlogged.
        */
        waterlogged(): Internal.BlockBuilder;
        wait(arg0: number, arg1: number): void;
        /**
         * Set how high you can jump on the block.
        */
        jumpFactor(f: number): Internal.BlockBuilder;
        /**
         * Set the color of a specific layer of the block.
        */
        color(color: Internal.BlockTintFunction_): Internal.BlockBuilder;
        generateDataJsons(generator: Internal.DataJsonGenerator_): void;
        /**
         * Texture a specific side of the block.
        */
        textureSide(direction: Internal.Direction_, tex: string): Internal.BlockBuilder;
        /**
         * Texture a specific texture key of the block.
        */
        texture(id: string, tex: string): Internal.BlockBuilder;
        /**
         * Checks if the block can be waterlogged.
        */
        canBeWaterlogged(): boolean;
        glassSoundType(): Internal.BlockBuilder;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        getWaterlogged(): boolean;
        /**
         * Tags the block with the given tag.
        */
        tagBlock(tag: ResourceLocation_): Internal.BlockBuilder;
        /**
         * Sets the opacity of the block. Opaque blocks do not let light through.
        */
        opaque(o: boolean): Internal.BlockBuilder;
        /**
         * Makes mobs not spawn on the block.
        */
        noValidSpawns(b: boolean): Internal.BlockBuilder;
        level(level: number): this;
        material(material: string): Internal.BlockBuilder;
        /**
         * Helper method for setting the render type of the block to `cutout` correctly.
        */
        defaultCutout(): Internal.BlockBuilder;
        /**
         * Makes the block transparent.
        */
        transparent(b: boolean): Internal.BlockBuilder;
        /**
         * Sets the block should be a full block or not, like cactus or doors.
        */
        fullBlock(f: boolean): Internal.BlockBuilder;
        /**
         * Makes the block not collide with entities.
        */
        noCollision(): Internal.BlockBuilder;
        hashCode(): number;
        energyDiscount(energyDiscount: number): this;
        /**
         * Makes the block require a tool to have drops when broken.
        */
        requiresTool(): Internal.BlockBuilder;
        equals(arg0: any): boolean;
        generateAssetJsons(generator: Internal.AssetJsonGenerator_): void;
        get registryType(): Internal.RegistryInfo<any>
        get class(): typeof any
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        set waterlogged(waterlogged: boolean)
        get translationKeyGroup(): string
        get builderTranslationKey(): string
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        get waterlogged(): boolean
    }
    type CoilBlockBuilder_ = CoilBlockBuilder;
    interface MultiNoiseSamplerHooks {
        abstract fabric_getEndBiomesSampler(): Internal.ImprovedNoise;
        abstract fabric_getSeed(): number;
        abstract fabric_setSeed(arg0: number): void;
    }
    type MultiNoiseSamplerHooks_ = MultiNoiseSamplerHooks;
    class BlockPileFeature extends Internal.Feature<Internal.BlockPileConfiguration> {
        constructor(arg0: Internal.Codec_<Internal.BlockPileConfiguration>)
        getClass(): typeof any;
        static isStone(arg0: Internal.BlockState_): boolean;
        safeSetBlock(arg0: Internal.WorldGenLevel_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Predicate_<Internal.BlockState>): void;
        toString(): string;
        setBlock(arg0: Internal.LevelWriter_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        place(arg0: Internal.BlockPileConfiguration_, arg1: Internal.WorldGenLevel_, arg2: Internal.ChunkGenerator_, arg3: Internal.RandomSource_, arg4: BlockPos_): boolean;
        static checkNeighbors(arg0: Internal.Function_<BlockPos, Internal.BlockState>, arg1: BlockPos_, arg2: Internal.Predicate_<Internal.BlockState>): boolean;
        notifyAll(): void;
        place(arg0: Internal.FeaturePlaceContext_<Internal.BlockPileConfiguration>): boolean;
        configuredCodec(): Internal.Codec<Internal.ConfiguredFeature<Internal.BlockPileConfiguration, Internal.Feature<Internal.BlockPileConfiguration>>>;
        notify(): void;
        static isAdjacentToAir(arg0: Internal.Function_<BlockPos, Internal.BlockState>, arg1: BlockPos_): boolean;
        wait(arg0: number, arg1: number): void;
        static isGrassOrDirt(arg0: Internal.LevelSimulatedReader_, arg1: BlockPos_): boolean;
        markAboveForPostProcessing(arg0: Internal.WorldGenLevel_, arg1: BlockPos_): void;
        hashCode(): number;
        wait(): void;
        wait(arg0: number): void;
        static isDirt(arg0: Internal.BlockState_): boolean;
        equals(arg0: any): boolean;
        static isReplaceable(arg0: Internal.TagKey_<Internal.Block>): Internal.Predicate<Internal.BlockState>;
        get class(): typeof any
    }
    type BlockPileFeature_ = BlockPileFeature;
    class ClassInfo {
        getFieldInfo(): Internal.List<Internal.FieldInfo>;
        getClass(): typeof any;
        getClazzRaw(): typeof any;
        getAnnotations(): Internal.List<Internal.Annotation>;
        isAbstract(): boolean;
        toString(): string;
        static getOrCache(clazz: typeof any): Internal.ClassInfo;
        notifyAll(): void;
        getInterfaceTypes(): Internal.List<Internal.ITypeInfo>;
        isInterface(): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        getSuperClassType(): Internal.ITypeInfo;
        getInterfaces(): Internal.List<Internal.ClassInfo>;
        getSuperClass(): this;
        getParameters(): Internal.List<Internal.ITypeInfo>;
        hashCode(): number;
        wait(): void;
        getName(): string;
        isEnum(): boolean;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        getConstructorInfo(): Internal.List<Internal.ConstructorInfo>;
        getMethodInfo(): Internal.List<Internal.MethodInfo>;
        get fieldInfo(): Internal.List<Internal.FieldInfo>
        get class(): typeof any
        get clazzRaw(): typeof any
        get annotations(): Internal.List<Internal.Annotation>
        get "abstract"(): boolean
        get interfaceTypes(): Internal.List<Internal.ITypeInfo>
        get "interface"(): boolean
        get superClassType(): Internal.ITypeInfo
        get interfaces(): Internal.List<Internal.ClassInfo>
        get superClass(): Internal.ClassInfo
        get parameters(): Internal.List<Internal.ITypeInfo>
        get name(): string
        get enum(): boolean
        get constructorInfo(): Internal.List<Internal.ConstructorInfo>
        get methodInfo(): Internal.List<Internal.MethodInfo>
        static readonly CLASS_CACHE: ({[key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo}) & (Internal.Map<typeof any, Internal.ClassInfo>);
        static readonly CLASS_NAME_CACHE: ({"net.minecraft.world.level.Level$ExplosionInteraction": Internal.ClassInfo, "com.mojang.serialization.codecs.BaseMapCodec": Internal.ClassInfo, "net.minecraft.network.protocol.status.ServerStatus$Players": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.material.info.MaterialFlags": Internal.ClassInfo, "de.dafuqs.spectrum.items.MidnightAberrationItem": Internal.ClassInfo, "net.minecraft.network.FriendlyByteBuf$Reader": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.SculkPatchFeature": Internal.ClassInfo, "appeng.api.parts.IFacadeContainer": Internal.ClassInfo, "de.dafuqs.spectrum.items.CustomUseTimeItem": Internal.ClassInfo, "net.blay09.mods.balm.api.entity.BalmEntity": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.gen.properties.RemoveOresProperties": Internal.ClassInfo, "appeng.blockentity.qnb.QuantumBridgeBlockEntity": Internal.ClassInfo, "net.irisshaders.batchedentityrendering.mixin.BufferSourceAccessor": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.Int2BooleanFunction": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.LootContext$VisitedEntry": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slab.FramedMasonryCornerBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.api.item.component.ICustomDescriptionId": Internal.ClassInfo, "net.minecraft.world.level.block.CrossCollisionBlock": Internal.ClassInfo, "divinerpg.effect.mob.armor.UpdatableArmorEffect": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.UltimatePotionBase": Internal.ClassInfo, "net.minecraft.world.level.levelgen.NoiseChunk$BlockStateFiller": Internal.ClassInfo, "java.lang.CharSequence": Internal.ClassInfo, "net.minecraft.world.level.block.ChainBlock": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.upgrade.Upgradeable$UpgradeType": Internal.ClassInfo, "java.awt.dnd.DropTargetDragEvent": Internal.ClassInfo, "com.mojang.serialization.codecs.EitherCodec": Internal.ClassInfo, "com.electronwill.nightconfig.core.file.FileConfigBuilder": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.structures.ShipwreckStructure": Internal.ClassInfo, "snownee.lychee.core.EmptyContainer": Internal.ClassInfo, "com.aizistral.omniconfig.wrappers.Omniconfig$GenericParameter": Internal.ClassInfo, "net.minecraft.world.level.BaseSpawner": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.arcanewood.ArcaneWoodHoeItem": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.generic.ItemBase": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.editor.ILDLRegister": Internal.ClassInfo, "dev.architectury.extensions.injected.InjectedEntityTypeExtension": Internal.ClassInfo, "net.minecraft.world.level.block.FrostedIceBlock": Internal.ClassInfo, "com.mna.effects.harmful.EffectDisjunction": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.ShortListIterator": Internal.ClassInfo, "com.kamth.zeldamod.item.items.HookshotItem": Internal.ClassInfo, "com.epherical.croptopia.items.ReferenceItem": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundPlayerLookAtPacket": Internal.ClassInfo, "net.minecraft.client.renderer.texture.atlas.SpriteSourceType": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.widget.ImageWidget": Internal.ClassInfo, "malte0811.ferritecore.mixin.mrl.ResourceLocationAccess": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.tag.TagPrefix$BlockProperties": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decay.DecayAwayBlock": Internal.ClassInfo, "com.mojang.blaze3d.shaders.Shader": Internal.ClassInfo, "net.minecraftforge.fml.event.config.ModConfigEvent$Loading": Internal.ClassInfo, "net.minecraftforge.client.gui.overlay.IGuiOverlay": Internal.ClassInfo, "com.gregtechceu.gtceu.client.model.PipeModel": Internal.ClassInfo, "com.inventorypets.pets.petShield": Internal.ClassInfo, "java.util.Currency": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetActionBarTextPacket": Internal.ClassInfo, "java.util.LinkedHashMap": Internal.ClassInfo, "org.embeddedt.embeddium.client.gui.options.OptionIdentifier": Internal.ClassInfo, "java.nio.channels.InterruptibleChannel": Internal.ClassInfo, "com.mna.effects.neutral.EffectAmplifyMagic": Internal.ClassInfo, "mods.railcraft.world.level.block.worldspike.PersonalWorldSpikeBlock": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundPlayerInfoRemovePacket": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.RotationState": Internal.ClassInfo, "divinerpg.blocks.vanilla.BlockTomatoPlant": Internal.ClassInfo, "net.minecraft.util.Tuple": Internal.ClassInfo, "net.minecraft.core.Holder$Kind": Internal.ClassInfo, "appeng.api.util.IConfigurableObject": Internal.ClassInfo, "xaero.map.file.export.PNGExportResultType": Internal.ClassInfo, "net.minecraft.world.level.block.piston.MovingPistonBlock": Internal.ClassInfo, "java.lang.Module": Internal.ClassInfo, "xfacthd.framedblocks.common.block.stairs.FramedVerticalSlicedStairsBlock": Internal.ClassInfo, "net.minecraft.world.level.block.WallSkullBlock": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.items.SliceMapItem$DepthMapData": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.model.ModelCuboidAccessor": Internal.ClassInfo, "vectorwing.farmersdelight.common.item.HorseFeedItem": Internal.ClassInfo, "techreborn.items.tool.basic.ElectricTreetapItem": Internal.ClassInfo, "net.minecraft.world.level.block.entity.RandomizableContainerBlockEntity": Internal.ClassInfo, "net.minecraft.world.level.block.entity.BellBlockEntity": Internal.ClassInfo, "vazkii.patchouli.client.book.BookIcon": Internal.ClassInfo, "net.minecraft.world.item.Item$Properties": Internal.ClassInfo, "com.yanny.ytech.configuration.item.SpearItem": Internal.ClassInfo, "net.minecraft.client.InputType": Internal.ClassInfo, "mezz.jei.api.recipe.IFocusGroup": Internal.ClassInfo, "net.minecraft.advancements.critereon.ContextAwarePredicate": Internal.ClassInfo, "java.nio.channels.AsynchronousChannel": Internal.ClassInfo, "mods.railcraft.world.item.SpikeMaulItem": Internal.ClassInfo, "divinerpg.effect.mob.armor.base.WitherProtectionEffect": Internal.ClassInfo, "net.fabricmc.fabric.mixin.lookup.BlockEntityTypeAccessor": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.TemptingSensor": Internal.ClassInfo, "com.tterrag.registrate.providers.RegistrateAdvancementProvider": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopeslab.FramedSlopeSlabBlock": Internal.ClassInfo, "mods.railcraft.world.level.block.PoweredRollingMachineBlock": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.api.alchemy.PipeConnection": Internal.ClassInfo, "dev.latvian.mods.kubejs.typings.desc.DescriptionContext": Internal.ClassInfo, "org.violetmoon.quark.content.tools.item.SlimeInABucketItem": Internal.ClassInfo, "cofh.core.common.block.EntityBlockActive6Way": Internal.ClassInfo, "com.gregtechceu.gtceu.core.mixins.GuiGraphicsAccessor": Internal.ClassInfo, "net.minecraft.client.gui.screens.social.PlayerSocialManager": Internal.ClassInfo, "mezz.jei.api.runtime.config.IJeiConfigValueSerializer": Internal.ClassInfo, "com.mna.items.constructs.parts.arms.ConstructPartAxeArmRight": Internal.ClassInfo, "dev.latvian.mods.kubejs.net.NetworkEventJS": Internal.ClassInfo, "xfacthd.atlasviewer.client.api.ISpriteSourcePackAwareSpriteContents": Internal.ClassInfo, "de.dafuqs.spectrum.items.magic_items.CelestialPocketWatchItem": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.gui.options.storage.OptionStorage": Internal.ClassInfo, "com.mojang.serialization.MapCodec$MapCodecCodec": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.gui.options.OptionPage": Internal.ClassInfo, "net.minecraft.world.item.SnowballItem": Internal.ClassInfo, "net.minecraft.world.level.block.state.StateDefinition$Factory": Internal.ClassInfo, "net.minecraft.server.ServerScoreboard$Method": Internal.ClassInfo, "net.minecraft.advancements.CriterionTriggerInstance": Internal.ClassInfo, "net.minecraft.advancements.CriterionTrigger$Listener": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.CompostableRecipesEventJS": Internal.ClassInfo, "net.minecraft.client.resources.DownloadedPackSource": Internal.ClassInfo, "net.minecraft.world.item.BowItem": Internal.ClassInfo, "com.yogpc.qp.machines.module.ExpModule": Internal.ClassInfo, "de.dafuqs.spectrum.enchantments.PestControlEnchantment": Internal.ClassInfo, "elucent.eidolon.common.item.CleavingAxeItem": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.entity.movement_tracker.EntityMovementTrackerSection": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.factory.HeldItemUIFactory$IHeldItemUIHolder": Internal.ClassInfo, "net.minecraft.world.level.block.JigsawBlock": Internal.ClassInfo, "com.mna.items.artifice.charms.ItemTeleportToBedCharm": Internal.ClassInfo, "net.minecraft.client.gui.navigation.ScreenRectangle": Internal.ClassInfo, "net.minecraft.world.level.validation.DirectoryValidator": Internal.ClassInfo, "xfacthd.framedblocks.common.block.interactive.FramedLeverBlock": Internal.ClassInfo, "mods.railcraft.world.item.FirestoneOreBlockItem": Internal.ClassInfo, "xaero.map.gui.GuiSettings": Internal.ClassInfo, "net.minecraft.client.renderer.ItemInHandRenderer$HandRenderSelection": Internal.ClassInfo, "net.minecraft.advancements.DisplayInfo": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopepanelcorner.FramedDoubleCornerSlopePanelBlock": Internal.ClassInfo, "mods.railcraft.api.charge.ChargeBlock$Spec": Internal.ClassInfo, "dev.latvian.mods.kubejs.stages.StageChangeEvent": Internal.ClassInfo, "elucent.eidolon.common.block.EffigyBlock": Internal.ClassInfo, "de.dafuqs.spectrum.items.tools.OblivionPickaxeItem": Internal.ClassInfo, "java.lang.ref.WeakReference": Internal.ClassInfo, "snownee.lychee.random_block_ticking.RandomlyTickable": Internal.ClassInfo, "appeng.api.networking.pathing.ChannelMode": Internal.ClassInfo, "de.dafuqs.spectrum.items.magic_items.ExchangeStaffItem": Internal.ClassInfo, "net.minecraft.commands.synchronization.ArgumentTypeInfo$Template": Internal.ClassInfo, "net.minecraft.world.item.SwordItem": Internal.ClassInfo, "net.minecraft.data.loot.LootTableSubProvider": Internal.ClassInfo, "net.minecraft.world.level.chunk.UpgradeData": Internal.ClassInfo, "net.minecraftforge.event.entity.EntityLeaveLevelEvent": Internal.ClassInfo, "java.nio.file.attribute.BasicFileAttributes": Internal.ClassInfo, "io.netty.channel.Channel$Unsafe": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.gen.RemoveWorldgenEventJS": Internal.ClassInfo, "pokefenn.totemic.effect.SpiderEffect": Internal.ClassInfo, "divinerpg.blocks.base.BlockModPlanks": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopepanel.FramedStackedSlopePanelBlock": Internal.ClassInfo, "com.google.common.collect.HashBiMap": Internal.ClassInfo, "com.mna.items.sorcery.ItemManaGem": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.functions.LootItemFunction": Internal.ClassInfo, "de.keksuccino.konkrete.mixin.client.IMixinScreen": Internal.ClassInfo, "mods.railcraft.world.level.block.track.actuator.SwitchTrackRouterBlock": Internal.ClassInfo, "net.minecraft.world.level.block.Block": Internal.ClassInfo, "shcm.shsupercm.forge.citresewn.pack.cits.CITElytra": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.RuleTestType": Internal.ClassInfo, "dev.emi.trinkets.api.SlotGroup": Internal.ClassInfo, "com.almostreliable.lootjs.kube.builder.EntityPredicateBuilderJS": Internal.ClassInfo, "io.wispforest.owo.ui.event.FocusGained": Internal.ClassInfo, "mods.railcraft.world.level.block.signal.SignalInterlockBoxBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.common.block.BoilerFireboxType": Internal.ClassInfo, "net.minecraft.world.level.pathfinder.Path": Internal.ClassInfo, "com.gregtechceu.gtceu.api.item.MetaMachineItem": Internal.ClassInfo, "net.minecraft.world.level.block.SeagrassBlock": Internal.ClassInfo, "java.nio.file.attribute.FileTime": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetChunkCacheRadiusPacket": Internal.ClassInfo, "biomesoplenty.common.block.MushroomBlockBOP": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.items.PresentItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.ClientInitEventJS": Internal.ClassInfo, "net.minecraft.network.protocol.PacketFlow": Internal.ClassInfo, "net.minecraft.world.entity.RelativeMovement": Internal.ClassInfo, "org.violetmoon.zeta.registry.LateBoundHolder": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.core.mixins.forge.SelfEntitySpawnDataMixin": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.render.immediate.model.ModelCuboid": Internal.ClassInfo, "com.mna.blocks.sorcery.TransitoryTileBlock": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundRecipePacket": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.ObjectObjectImmutablePair": Internal.ClassInfo, "com.mojang.authlib.Agent": Internal.ClassInfo, "org.violetmoon.quark.content.tools.item.BottledCloudItem": Internal.ClassInfo, "com.gregtechceu.gtceu.api.machine.feature.IMachineFeature": Internal.ClassInfo, "net.minecraft.world.item.SpectralArrowItem": Internal.ClassInfo, "com.enderio.base.common.block.glass.FusedQuartzBlock": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerGamePacketListener": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.arcane.ArcaneEnchantedBookItem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.FeaturePlaceContext": Internal.ClassInfo, "com.gregtechceu.gtceu.integration.kjs.recipe.components.GTRecipeComponents$1": Internal.ClassInfo, "net.minecraft.server.players.IpBanList": Internal.ClassInfo, "net.minecraft.client.renderer.texture.Stitcher$Entry": Internal.ClassInfo, "com.gregtechceu.gtceu.integration.kjs.recipe.components.GTRecipeComponents$2": Internal.ClassInfo, "com.gregtechceu.gtceu.integration.kjs.recipe.components.GTRecipeComponents$3": Internal.ClassInfo, "xfacthd.framedblocks.common.item.FramedHangingSignItem": Internal.ClassInfo, "net.minecraft.world.level.block.SimpleWaterloggedBlock": Internal.ClassInfo, "com.kamth.zeldamod.block.custom.DekuFlowerBlock": Internal.ClassInfo, "io.netty.channel.ChannelPipeline": Internal.ClassInfo, "net.minecraftforge.event.server.ServerStartedEvent": Internal.ClassInfo, "org.violetmoon.zeta.item.ZetaArrowItem": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.ObjectCollection": Internal.ClassInfo, "net.minecraft.nbt.NbtAccounter": Internal.ClassInfo, "terrablender.worldgen.IExtendedBiomeSource": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.worldgen.generator.veins.VeinedVeinGenerator": Internal.ClassInfo, "com.mna.items.armor.CouncilArmorItem": Internal.ClassInfo, "appeng.crafting.pattern.SmithingTablePatternItem": Internal.ClassInfo, "com.mna.blocks.sorcery.MagelightBlock": Internal.ClassInfo, "net.minecraft.world.level.block.KelpPlantBlock": Internal.ClassInfo, "com.kamth.zeldamod.item.items.ClawshotItem": Internal.ClassInfo, "mods.railcraft.world.level.block.detector.AnimalDetectorBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.VariantBlockStateGenerator$Model": Internal.ClassInfo, "net.minecraft.world.item.context.BlockPlaceContext": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2ShortFunction": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$MouseDragged$Pre": Internal.ClassInfo, "net.minecraftforge.registries.RegistryManager": Internal.ClassInfo, "com.lothrazar.simpletomb.block.BlockTomb": Internal.ClassInfo, "net.minecraft.world.level.levelgen.ThreadSafeLegacyRandomSource": Internal.ClassInfo, "io.github.cottonmc.libcd.api.CustomOutputRecipe": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundPlaceRecipePacket": Internal.ClassInfo, "java.security.SignatureSpi": Internal.ClassInfo, "net.minecraft.world.level.block.PiglinWallSkullBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.api.machine.feature.IUIMachine": Internal.ClassInfo, "java.time.format.FormatStyle": Internal.ClassInfo, "com.google.gson.ReflectionAccessFilter$FilterResult": Internal.ClassInfo, "net.minecraft.world.level.block.SupportType": Internal.ClassInfo, "net.minecraft.client.GameNarrator": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.core.mixins.accessor.DispenserBlockAccessor": Internal.ClassInfo, "com.google.common.collect.ImmutableSetMultimap$Builder": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.util.tuples.WorldSectionBox": Internal.ClassInfo, "java.util.stream.DoubleStream$Builder": Internal.ClassInfo, "appeng.api.parts.IPartItem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.FossilFeatureConfiguration": Internal.ClassInfo, "com.google.common.collect.ImmutableMultiset": Internal.ClassInfo, "appeng.api.orientation.RelativeSide": Internal.ClassInfo, "org.violetmoon.zeta.event.bus.ZetaEventBus": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.AtlasSpriteRegistryEventJS": Internal.ClassInfo, "net.minecraft.world.entity.ambient.AmbientCreature": Internal.ClassInfo, "com.gregtechceu.gtceu.integration.kjs.recipe.components.GTRecipeComponents$4": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.EndIslandFeature": Internal.ClassInfo, "com.gregtechceu.gtceu.integration.kjs.recipe.components.GTRecipeComponents$5": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.ObjectList": Internal.ClassInfo, "mods.railcraft.world.item.TicketItem": Internal.ClassInfo, "org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout": Internal.ClassInfo, "java.util.concurrent.Executor": Internal.ClassInfo, "cofh.core.common.block.LightningAirBlock": Internal.ClassInfo, "net.fabricmc.fabric.mixin.networking.accessor.ThreadedAnvilChunkStorageAccessor": Internal.ClassInfo, "com.mna.api.items.inventory.SpellInventory": Internal.ClassInfo, "org.apache.logging.log4j.core.LifeCycle$State": Internal.ClassInfo, "org.violetmoon.quark.mixin.mixins.accessor.AccessorAbstractArrow": Internal.ClassInfo, "net.minecraft.world.level.block.MultifaceSpreader": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.world.interests.PointOfInterestSetExtended": Internal.ClassInfo, "net.minecraft.world.level.chunk.storage.ChunkScanAccess": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.ArcaneFortressArmorItem": Internal.ClassInfo, "java.nio.LongBuffer": Internal.ClassInfo, "net.minecraftforge.forgespi.language.ModFileScanData": Internal.ClassInfo, "net.minecraftforge.event.level.ChunkEvent$Unload": Internal.ClassInfo, "com.gregtechceu.gtceu.integration.kjs.events.GTFluidVeinEventJS": Internal.ClassInfo, "mezz.jei.api.runtime.config.IJeiConfigFile": Internal.ClassInfo, "net.minecraft.client.main.GameConfig$UserData": Internal.ClassInfo, "com.anthonyhilyard.prism.util.IColor": Internal.ClassInfo, "appeng.block.spatial.MatrixFrameBlock": Internal.ClassInfo, "com.kamth.zeldamod.item.items.GaleBoomerangItem": Internal.ClassInfo, "net.minecraft.core.Direction": Internal.ClassInfo, "net.minecraft.world.level.SpawnData": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopepanel.FramedSlopePanelBlock": Internal.ClassInfo, "snownee.lychee.mixin.LightPredicateAccess": Internal.ClassInfo, "mods.railcraft.api.charge.Charge": Internal.ClassInfo, "net.irisshaders.batchedentityrendering.impl.MemoryTrackingBuffer": Internal.ClassInfo, "appeng.parts.automation.AnnihilationPlanePartItem": Internal.ClassInfo, "com.mna.blocks.artifice.TranscriptionTableBlock": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.texture.ProgressTexture": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerContainerEvent$Open": Internal.ClassInfo, "net.minecraft.world.level.block.Rotation": Internal.ClassInfo, "com.tterrag.registrate.util.nullness.NonNullSupplier": Internal.ClassInfo, "net.minecraftforge.network.PlayMessages$SpawnEntity": Internal.ClassInfo, "dev.ftb.mods.ftbquests.item.TaskScreenConfiguratorItem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.pools.FeaturePoolElement": Internal.ClassInfo, "dev.latvian.mods.rhino.mod.util.color.Color": Internal.ClassInfo, "com.yogpc.qp.machines.module.FilterModule": Internal.ClassInfo, "net.minecraft.world.entity.ai.attributes.AttributeMap": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetHealthPacket": Internal.ClassInfo, "java.awt.event.MouseListener": Internal.ClassInfo, "mods.railcraft.world.item.OverallsItem": Internal.ClassInfo, "net.minecraft.world.entity.animal.Bee$BeePollinateGoal": Internal.ClassInfo, "java.util.function.Predicate": Internal.ClassInfo, "com.enderio.base.common.item.tool.ExperienceRodItem": Internal.ClassInfo, "com.gregtechceu.gtceu.integration.kjs.recipe.components.GTRecipeComponents$FluidIngredientJS": Internal.ClassInfo, "java.security.cert.Certificate": Internal.ClassInfo, "io.wispforest.owo.ui.core.Animation": Internal.ClassInfo, "com.enderio.base.common.enchantment.WitherEnchantment": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.DarkestScroll": Internal.ClassInfo, "net.minecraft.world.level.block.CocoaBlock": Internal.ClassInfo, "com.mna.blocks.WaterloggableBlock": Internal.ClassInfo, "net.minecraft.world.level.block.PitcherCropBlock": Internal.ClassInfo, "elucent.eidolon.common.block.TableBlockBase": Internal.ClassInfo, "com.tterrag.registrate.providers.ProviderType": Internal.ClassInfo, "com.inventorypets.items.petAchieveItemAll": Internal.ClassInfo, "java.awt.image.ImageProducer": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.custom.PickaxeItemBuilder": Internal.ClassInfo, "net.minecraftforge.event.TickEvent$Type": Internal.ClassInfo, "io.netty.buffer.ByteBuf": Internal.ClassInfo, "net.minecraft.world.level.WorldGenLevel": Internal.ClassInfo, "net.minecraft.world.level.levelgen.carver.CarverDebugSettings": Internal.ClassInfo, "net.minecraft.world.entity.decoration.PaintingVariant": Internal.ClassInfo, "mcp.mobius.waila.mixin.GuiAccess": Internal.ClassInfo, "com.inventorypets.pets.petPacMan": Internal.ClassInfo, "org.apache.maven.artifact.repository.ArtifactRepository": Internal.ClassInfo, "java.awt.JobAttributes$SidesType": Internal.ClassInfo, "net.minecraft.world.entity.monster.PatrollingMonster": Internal.ClassInfo, "net.minecraftforge.client.event.CustomizeGuiOverlayEvent": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.ChestType": Internal.ClassInfo, "net.minecraft.world.entity.animal.Wolf": Internal.ClassInfo, "dev.latvian.mods.kubejs.util.AttachedData": Internal.ClassInfo, "net.minecraft.world.entity.boss.enderdragon.EndCrystal": Internal.ClassInfo, "io.wispforest.owo.ui.core.PositionedRectangle": Internal.ClassInfo, "com.mna.items.artifice.ItemArcaneCrown": Internal.ClassInfo, "dev.latvian.mods.rhino.ExternalArrayData": Internal.ClassInfo, "divinerpg.blocks.base.BlockModGrass": Internal.ClassInfo, "net.minecraft.client.ParticleStatus": Internal.ClassInfo, "xfacthd.framedblocks.api.predicate.contex.FalseConnectionPredicate": Internal.ClassInfo, "divinerpg.items.base.ItemModRanged": Internal.ClassInfo, "net.minecraftforge.client.model.geometry.IGeometryLoader": Internal.ClassInfo, "net.minecraftforge.client.event.RenderHighlightEvent$Block": Internal.ClassInfo, "com.yanny.ytech.configuration.block.AqueductFertilizerBlock": Internal.ClassInfo, "appeng.block.misc.ChargerBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.rule.blockentity.Passthrough": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.jade_vines.JadeiteLotusBulbBlock": Internal.ClassInfo, "xfacthd.framedblocks.common.block.cube.FramedBouncyCubeBlock": Internal.ClassInfo, "software.bernie.geckolib.core.animation.Animation$LoopType": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.FireworkRocketEntityKJS": Internal.ClassInfo, "com.mojang.blaze3d.platform.Monitor": Internal.ClassInfo, "net.minecraft.world.inventory.StackedContentsCompatible": Internal.ClassInfo, "de.dafuqs.spectrum.enchantments.FirstStrikeEnchantment": Internal.ClassInfo, "net.minecraft.client.gui.screens.worldselection.PresetEditor": Internal.ClassInfo, "net.minecraft.world.item.PlaceOnWaterBlockItem": Internal.ClassInfo, "mods.railcraft.world.entity.FirestoneItemEntity": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slab.FramedDoubleSlabBlock": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.widget.TankWidget": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Reference2IntFunction": Internal.ClassInfo, "com.mna.blocks.sorcery.IceSpikeBlock": Internal.ClassInfo, "net.minecraftforge.event.level.SaplingGrowTreeEvent": Internal.ClassInfo, "com.electronwill.nightconfig.core.UnmodifiableConfig$Entry": Internal.ClassInfo, "dev.latvian.mods.kubejs.player.PlayerChatDecorateEventJS": Internal.ClassInfo, "io.wispforest.accessories.api.slot.SlotEntryReference": Internal.ClassInfo, "io.wispforest.owo.mixin.ui.SlotAccessor": Internal.ClassInfo, "net.fabricmc.fabric.impl.renderer.SpriteFinderImpl": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.enchantments.TorrentEnchantment": Internal.ClassInfo, "java.awt.datatransfer.FlavorMap": Internal.ClassInfo, "net.minecraft.client.renderer.GpuWarnlistManager": Internal.ClassInfo, "it.unimi.dsi.fastutil.Stack": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.ui.input.Key": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.EvilEssence": Internal.ClassInfo, "javax.swing.text.MutableAttributeSet": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.worldgen.generator.veins.ClassicVeinGenerator": Internal.ClassInfo, "divinerpg.blocks.base.BlockMod": Internal.ClassInfo, "net.minecraft.network.chat.Style": Internal.ClassInfo, "java.util.EventListener": Internal.ClassInfo, "net.minecraftforge.event.TagsUpdatedEvent": Internal.ClassInfo, "com.gregtechceu.gtceu.common.block.GTStandingSignBlock": Internal.ClassInfo, "divinerpg.blocks.base.BlockModVine": Internal.ClassInfo, "net.minecraft.world.level.block.TargetBlock": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.chests.BlackHoleChestBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.material.stack.UnificationEntry": Internal.ClassInfo, "net.fabricmc.fabric.api.renderer.v1.render.RenderContext": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.redstone.RedstoneTransceiverBlock": Internal.ClassInfo, "java.awt.PageAttributes$OrientationRequestedType": Internal.ClassInfo, "de.dafuqs.spectrum.items.tools.BedrockShovelItem": Internal.ClassInfo, "net.minecraftforge.network.PacketDistributor$PacketTarget": Internal.ClassInfo, "java.io.FilenameFilter": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.item.BlockTypeBasedBlockItem": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetExperiencePacket": Internal.ClassInfo, "net.minecraft.world.level.block.LeverBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.NumberComponent": Internal.ClassInfo, "net.minecraftforge.client.event.ModelEvent$ModifyBakingResult": Internal.ClassInfo, "net.minecraft.world.level.block.NetherSproutsBlock": Internal.ClassInfo, "net.minecraft.server.players.UserBanList": Internal.ClassInfo, "net.minecraftforge.client.extensions.IForgeBlockAndTintGetter": Internal.ClassInfo, "net.minecraft.world.entity.EntityType$EntityFactory": Internal.ClassInfo, "divinerpg.blocks.base.BlockModMoss": Internal.ClassInfo, "net.minecraft.world.entity.npc.VillagerProfession": Internal.ClassInfo, "java.lang.StackTraceElement": Internal.ClassInfo, "net.minecraft.world.level.block.RedstoneLampBlock": Internal.ClassInfo, "com.almostreliable.lootjs.core.LootEntry": Internal.ClassInfo, "divinerpg.effect.mob.armor.base.StepAssistEffect": Internal.ClassInfo, "biomesoplenty.common.block.GlowwormSilkBottomBlock": Internal.ClassInfo, "com.google.common.collect.DenseImmutableTable": Internal.ClassInfo, "com.mna.items.filters.ItemFilterGroup": Internal.ClassInfo, "mods.railcraft.world.level.block.track.StrapIronTrackBlock": Internal.ClassInfo, "com.kamth.zeldamod.item.items.HeroBowItem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.LakeFeature": Internal.ClassInfo, "xaero.map.cache.BlockStateShortShapeCache": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.predicate.BlockPredicate": Internal.ClassInfo, "net.minecraft.world.entity.animal.TropicalFish": Internal.ClassInfo, "divinerpg.blocks.base.BlockModProximitySpawner": Internal.ClassInfo, "com.gregtechceu.gtceu.api.pipenet.IPipeNode": Internal.ClassInfo, "net.minecraft.world.level.chunk.ChunkGenerator": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.ClientLevelKJS": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.UltimatePotionLingering": Internal.ClassInfo, "com.mojang.brigadier.context.ParsedCommandNode": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.pools.StructureTemplatePool$Projection": Internal.ClassInfo, "com.mna.effects.beneficial.EffectCamouflage": Internal.ClassInfo, "divinerpg.items.iceika.ItemHeatPack": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.jade_vines.JadeVinePlantBlock$JadeVinesPlantPart": Internal.ClassInfo, "net.minecraft.world.level.block.entity.BaseContainerBlockEntity": Internal.ClassInfo, "snownee.lychee.core.input.ItemHolder": Internal.ClassInfo, "com.gregtechceu.gtceu.api.pipenet.longdistance.LongDistanceNetwork": Internal.ClassInfo, "vectorwing.farmersdelight.common.item.FuelItem": Internal.ClassInfo, "com.enderio.base.common.item.misc.LocationPrintoutItem": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slab.FramedCheckeredCubeBlock": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$MouseScrolled": Internal.ClassInfo, "com.mna.items.artifact.AllfatherAxe": Internal.ClassInfo, "net.minecraft.world.level.gameevent.BlockPositionSource": Internal.ClassInfo, "de.dafuqs.spectrum.items.trinkets.GlowVisionGogglesItem": Internal.ClassInfo, "net.minecraft.client.OptionInstance$TooltipSupplier": Internal.ClassInfo, "elucent.eidolon.client.particle.RuneParticleType": Internal.ClassInfo, "net.minecraft.client.main.GameConfig$QuickPlayData": Internal.ClassInfo, "com.gregtechceu.gtceu.api.recipe.OverclockingLogic$Logic": Internal.ClassInfo, "io.netty.channel.MessageSizeEstimator": Internal.ClassInfo, "com.kamth.zeldamod.item.items.InjuredSwordItem": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.SaltCampfireItem": Internal.ClassInfo, "com.inventorypets.pets.petWither": Internal.ClassInfo, "com.kamth.zeldamod.item.masks.GaroMask": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.BlockColumnFeature": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundAddPlayerPacket": Internal.ClassInfo, "net.minecraft.world.level.biome.BiomeManager": Internal.ClassInfo, "com.lowdragmc.lowdraglib.core.mixins.accessor.MouseHandlerAccessor": Internal.ClassInfo, "net.minecraft.world.item.crafting.ShulkerBoxColoring": Internal.ClassInfo, "com.gregtechceu.gtceu.core.IFireImmuneEntity": Internal.ClassInfo, "net.fabricmc.fabric.api.blockview.v2.FabricBlockView": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.AlchemyBottleItem": Internal.ClassInfo, "net.minecraft.world.level.block.SculkSpreader$ChargeCursor": Internal.ClassInfo, "org.violetmoon.quark.content.tools.config.PickarangType$PickarangConstructor": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.worldgen.GTOreDefinition": Internal.ClassInfo, "javax.accessibility.AccessibleContext": Internal.ClassInfo, "snownee.lychee.mixin.LootParamsBuilderAccess": Internal.ClassInfo, "net.fabricmc.fabric.api.loot.v2.FabricLootPoolBuilder": Internal.ClassInfo, "net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity": Internal.ClassInfo, "mods.railcraft.world.level.block.MultiblockBlock": Internal.ClassInfo, "net.minecraft.tags.TagEntry": Internal.ClassInfo, "divinerpg.items.twilight.ItemSkyFlower": Internal.ClassInfo, "org.violetmoon.zeta.client.HumanoidArmorModelGetter": Internal.ClassInfo, "net.minecraftforge.event.level.ExplosionEvent": Internal.ClassInfo, "net.minecraft.server.level.Ticket": Internal.ClassInfo, "com.yanny.ytech.configuration.block.AqueductBlock": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeCommandSourceStack": Internal.ClassInfo, "net.minecraft.client.sounds.SoundBufferLibrary": Internal.ClassInfo, "mezz.jei.api.runtime.IEditModeConfig": Internal.ClassInfo, "elucent.eidolon.common.item.AthameItem": Internal.ClassInfo, "net.minecraft.world.inventory.PlayerEnderChestContainer": Internal.ClassInfo, "io.wispforest.owo.util.pond.MatrixStackTransformer": Internal.ClassInfo, "com.mna.recipes.manaweaving.ManaweavingPattern": Internal.ClassInfo, "reborncore.common.blockentity.SlotConfiguration": Internal.ClassInfo, "net.minecraft.world.level.block.WoolCarpetBlock": Internal.ClassInfo, "net.minecraft.core.HolderSet": Internal.ClassInfo, "net.minecraft.world.entity.animal.horse.TraderLlama": Internal.ClassInfo, "com.google.common.reflect.TypeToken": Internal.ClassInfo, "net.fabricmc.fabric.api.particle.v1.FabricParticleTypes$1": Internal.ClassInfo, "net.minecraftforge.network.ICustomPacket": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.RunicPedestalBlock": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.render.vertex.buffer.SodiumBufferBuilder": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.client.arcanemicon.index.ChapterHistoryEntry": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.widget.MenuWidget": Internal.ClassInfo, "biomesoplenty.common.block.BrambleBlock": Internal.ClassInfo, "xaero.map.region.texture.LeafRegionTexture": Internal.ClassInfo, "net.minecraft.world.entity.vehicle.MinecartFurnace": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.weathering.WeatheringSlabBlock": Internal.ClassInfo, "mods.railcraft.world.level.block.WaterTankSiding": Internal.ClassInfo, "org.w3c.dom.TypeInfo": Internal.ClassInfo, "net.minecraft.world.level.block.entity.Hopper": Internal.ClassInfo, "de.dafuqs.spectrum.items.tools.BedrockHoeItem": Internal.ClassInfo, "net.minecraft.world.level.chunk.UpgradeData$BlockFixer": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.DeltaFeatureConfiguration": Internal.ClassInfo, "com.gregtechceu.gtceu.api.block.IMachineBlock": Internal.ClassInfo, "net.minecraft.network.syncher.EntityDataSerializer$ForValueType": Internal.ClassInfo, "com.mna.api.capabilities.CodexBreadcrumb$Type": Internal.ClassInfo, "mods.railcraft.world.level.block.signal.SignalBlock": Internal.ClassInfo, "com.mna.items.constructs.parts.arms.ConstructPartCasterArmLeft": Internal.ClassInfo, "net.minecraft.resources.HolderSetCodec": Internal.ClassInfo, "com.mojang.blaze3d.font.GlyphInfo": Internal.ClassInfo, "net.minecraft.util.TaskChainer$DelayedTask": Internal.ClassInfo, "dev.su5ed.sinytra.connector.mod.mixin.recipebook.RecipeBookCategoriesAccessor": Internal.ClassInfo, "com.gregtechceu.gtceu.api.recipe.ingredient.FluidIngredient": Internal.ClassInfo, "io.netty.util.concurrent.GenericFutureListener": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopepanelcorner.FramedCornerSlopePanelWallBlock": Internal.ClassInfo, "divinerpg.items.vanilla.ItemTeleportationCrystal": Internal.ClassInfo, "appeng.crafting.pattern.ProcessingPatternItem": Internal.ClassInfo, "xaero.map.world.MapWorld": Internal.ClassInfo, "com.gregtechceu.gtceu.api.pattern.MultiblockShapeInfo": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.XPScroll": Internal.ClassInfo, "net.minecraft.server.network.ServerGamePacketListenerImpl": Internal.ClassInfo, "divinerpg.items.vanilla.ItemSerenadeOfInfusion": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.tileentity.TickableBlockEntity": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.IntBinaryOperator": Internal.ClassInfo, "com.gregtechceu.gtceu.api.sound.SoundEntry": Internal.ClassInfo, "biomesoplenty.common.block.DoublePlantBlockBOP": Internal.ClassInfo, "mods.railcraft.api.charge.ChargeStorage$Spec": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.api.monogram.MonogramMapEntry": Internal.ClassInfo, "com.mna.items.constructs.parts.arms.ConstructPartManaCannonLeft": Internal.ClassInfo, "com.gregtechceu.gtceu.integration.kjs.builders.block.RendererBlockBuilder": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.dd_deco.PyriteRipperBlock": Internal.ClassInfo, "mezz.jei.api.runtime.IJeiKeyMappings": Internal.ClassInfo, "mods.railcraft.world.level.material.StandardTank": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.stateproviders.NoiseThresholdProvider": Internal.ClassInfo, "net.minecraft.world.entity.animal.Sheep": Internal.ClassInfo, "net.minecraft.world.item.FishingRodItem": Internal.ClassInfo, "io.netty.util.AttributeKey": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.structures.OceanRuinStructure": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.BlockRotProcessor": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.predicates.LootItemConditionType": Internal.ClassInfo, "mods.railcraft.world.level.block.tank.BaseTankBlock": Internal.ClassInfo, "net.minecraft.network.chat.LastSeenMessages$Packed": Internal.ClassInfo, "shcm.shsupercm.forge.citresewn.pack.cits.CIT": Internal.ClassInfo, "com.gregtechceu.gtceu.api.capability.ICoverable": Internal.ClassInfo, "com.google.gson.TypeAdapter": Internal.ClassInfo, "com.mna.blocks.utility.WaterloggableBlockWithOffset": Internal.ClassInfo, "com.kamth.zeldamod.item.items.FireArrowItem": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientGamePacketListener": Internal.ClassInfo, "net.minecraft.world.level.ClipContext$Fluid": Internal.ClassInfo, "cofh.thermal.core.common.item.FertilizerItem": Internal.ClassInfo, "com.kamth.zeldamod.item.armors.HoverBoots": Internal.ClassInfo, "mods.railcraft.api.container.manipulator.SlotAccessor": Internal.ClassInfo, "org.joml.Quaternionfc": Internal.ClassInfo, "com.kamth.zeldamod.item.items.DekuNutItem": Internal.ClassInfo, "biomesoplenty.common.block.FleshTendonsBottomBlock": Internal.ClassInfo, "de.dafuqs.spectrum.status_effects.DivinityStatusEffect": Internal.ClassInfo, "net.minecraft.world.entity.ExperienceOrb": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundPaddleBoatPacket": Internal.ClassInfo, "net.minecraft.world.level.block.entity.BlockEntity": Internal.ClassInfo, "net.minecraftforge.event.ServerChatEvent": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.client.particle.SmokeParticleType": Internal.ClassInfo, "java.util.RegularEnumSet": Internal.ClassInfo, "org.w3c.dom.DocumentFragment": Internal.ClassInfo, "net.minecraftforge.fml.event.lifecycle.ModLifecycleEvent": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.ItemFrameEntityKJS": Internal.ClassInfo, "net.fabricmc.fabric.api.client.screen.v1.ScreenKeyboardEvents$AfterKeyPress": Internal.ClassInfo, "net.minecraft.world.level.block.MushroomBlock": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopeslab.FramedDoubleSlopeSlabBlock": Internal.ClassInfo, "net.minecraft.world.level.gameevent.GameEventListener": Internal.ClassInfo, "java.security.Guard": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.lava_sponge.WetLavaSpongeBlock": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.WoodType": Internal.ClassInfo, "com.mna.api.items.DynamicItemFilter": Internal.ClassInfo, "de.dafuqs.spectrum.items.tools.BedrockBowItem": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.Double2ReferenceFunction": Internal.ClassInfo, "net.minecraft.world.entity.Shearable": Internal.ClassInfo, "net.minecraft.server.level.ChunkHolder": Internal.ClassInfo, "com.mna.enchantments.Cloudstep": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.crystallarieum.CrystallarieumGrowableBlock$GrowthStage": Internal.ClassInfo, "net.minecraft.world.level.block.InfestedBlock": Internal.ClassInfo, "net.minecraft.client.renderer.item.ItemPropertyFunction": Internal.ClassInfo, "pokefenn.totemic.item.music.EagleBoneWhistleItem": Internal.ClassInfo, "vazkii.patchouli.mixin.AccessorSmithingTrimRecipe": Internal.ClassInfo, "org.apache.maven.artifact.versioning.Restriction": Internal.ClassInfo, "org.apache.logging.log4j.core.filter.AbstractFilterable": Internal.ClassInfo, "mods.railcraft.world.item.tunnelbore.SteelTunnelBoreHeadItem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.NoiseChunk$NoiseInterpolator": Internal.ClassInfo, "com.inventorypets.pets.petPurpliciousCow": Internal.ClassInfo, "com.lowdragmc.lowdraglib.utils.BlockInfo": Internal.ClassInfo, "net.minecraft.world.ticks.TickAccess": Internal.ClassInfo, "net.minecraftforge.registries.NewRegistryEvent": Internal.ClassInfo, "org.violetmoon.zeta.recipe.IZetaCondition$IContext": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.blocks.BlockBigLamp": Internal.ClassInfo, "dev.architectury.event.Event": Internal.ClassInfo, "org.joml.Quaterniondc": Internal.ClassInfo, "xfacthd.framedblocks.common.block.interactive.FramedPressurePlateBlock": Internal.ClassInfo, "divinerpg.blocks.base.BlockModCrop": Internal.ClassInfo, "appeng.recipes.handlers.InscriberProcessType": Internal.ClassInfo, "net.minecraft.core.RegistryAccess$ImmutableRegistryAccess": Internal.ClassInfo, "com.inventorypets.pets.petMetaUtility": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blockpredicates.MatchingFluidsPredicate": Internal.ClassInfo, "com.kamth.zeldamod.item.masks.StoneMask": Internal.ClassInfo, "net.minecraft.client.gui.layouts.LayoutElement": Internal.ClassInfo, "com.mna.effects.beneficial.EffectBindWounds": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2ObjectSortedMap": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.ui.input.MouseButton": Internal.ClassInfo, "net.blay09.mods.balm.mixin.MouseHandlerAccessor": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.CurseTransposer": Internal.ClassInfo, "com.gregtechceu.gtceu.api.machine.feature.ICleanroomProvider": Internal.ClassInfo, "net.minecraft.client.renderer.texture.TextureManager": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.ObjectSet": Internal.ClassInfo, "net.minecraft.world.item.FireworkStarItem": Internal.ClassInfo, "appeng.crafting.inv.ICraftingInventory": Internal.ClassInfo, "divinerpg.blocks.base.BlockModDoubleCrop": Internal.ClassInfo, "net.minecraft.world.level.block.GrowingPlantBodyBlock": Internal.ClassInfo, "divinerpg.blocks.vethea.BlockHiveEgg": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.structures.DesertPyramidStructure": Internal.ClassInfo, "com.mna.effects.harmful.EffectSoulVulnerability": Internal.ClassInfo, "snownee.lychee.mixin.GameRendererAccess": Internal.ClassInfo, "org.orecruncher.dsurround.runtime.audio.effects.LowPassData": Internal.ClassInfo, "net.minecraftforge.client.event.ModelEvent$BakingCompleted": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.worldgen.generator.veins.CuboidVeinGenerator": Internal.ClassInfo, "com.mna.api.entities.construct.materials.ConstructMaterialObsidian": Internal.ClassInfo, "java.nio.file.attribute.FileStoreAttributeView": Internal.ClassInfo, "net.irisshaders.iris.vertices.ExtendingBufferBuilder": Internal.ClassInfo, "cofh.lib.api.inventory.IItemStackHolder": Internal.ClassInfo, "com.gregtechceu.gtceu.data.recipe.misc.alloyblast.AlloyBlastRecipeProducer": Internal.ClassInfo, "com.inventorypets.pets.petMickerson": Internal.ClassInfo, "net.minecraft.client.renderer.RenderStateShard$TransparencyStateShard": Internal.ClassInfo, "xaero.map.palette.FastPalette": Internal.ClassInfo, "shcm.shsupercm.forge.citresewn.pack.CITPack": Internal.ClassInfo, "net.minecraft.world.level.block.NetherrackBlock": Internal.ClassInfo, "net.minecraft.world.item.trading.MerchantOffers": Internal.ClassInfo, "divinerpg.blocks.vethea.BlockVetheaAltar": Internal.ClassInfo, "dev.latvian.mods.kubejs.registry.RegistryInfo": Internal.ClassInfo, "net.irisshaders.iris.texture.pbr.SpriteContentsExtension": Internal.ClassInfo, "net.minecraft.world.level.block.MangroveRootsBlock": Internal.ClassInfo, "net.fabricmc.fabric.api.attachment.v1.AttachmentTarget": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.conditional.MermaidsBrushBlock": Internal.ClassInfo, "xaero.map.server.radar.tracker.ISyncedPlayerTrackerSystem": Internal.ClassInfo, "java.nio.ByteBuffer": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.generic.ItemBaseCurio": Internal.ClassInfo, "cofh.thermal.core.common.item.LockItem": Internal.ClassInfo, "com.mna.recipes.spells.ModifierRecipe": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundClientInformationPacket": Internal.ClassInfo, "biomesoplenty.common.block.FlowerBlockBOP": Internal.ClassInfo, "divinerpg.items.base.block.ItemArcaniumExtractor": Internal.ClassInfo, "net.minecraft.world.level.block.DaylightDetectorBlock": Internal.ClassInfo, "xfacthd.framedblocks.common.block.interactive.FramedButtonBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemTooltipEventJS": Internal.ClassInfo, "net.minecraft.client.KeyboardHandler": Internal.ClassInfo, "net.blay09.mods.balm.mixin.SlotAccessor": Internal.ClassInfo, "appeng.blockentity.storage.SkyChestBlockEntity": Internal.ClassInfo, "it.unimi.dsi.fastutil.chars.Char2ShortFunction": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.items.SignPostItem": Internal.ClassInfo, "appeng.blockentity.networking.ControllerBlockEntity": Internal.ClassInfo, "net.minecraft.world.phys.shapes.CubeVoxelShape": Internal.ClassInfo, "net.minecraft.world.entity.animal.axolotl.Axolotl$Variant": Internal.ClassInfo, "net.minecraft.world.level.block.entity.DecoratedPotBlockEntity": Internal.ClassInfo, "net.minecraft.core.BlockPos": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.ArcaneIteratorBlock": Internal.ClassInfo, "net.minecraftforge.event.entity.EntityTeleportEvent$EnderPearl": Internal.ClassInfo, "techreborn.items.armor.TREnergyArmourItem": Internal.ClassInfo, "appeng.items.tools.fluix.FluixSpadeItem": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.MagnetRing": Internal.ClassInfo, "net.minecraftforge.event.server.ServerLifecycleEvent": Internal.ClassInfo, "net.irisshaders.iris.vertices.IrisExtendedBufferBuilder": Internal.ClassInfo, "com.yogpc.qp.machines.mover.BlockMover": Internal.ClassInfo, "com.inventorypets.pets.petQuiver": Internal.ClassInfo, "net.minecraft.world.item.HoeItem": Internal.ClassInfo, "net.minecraft.world.level.ServerLevelAccessor": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.material.properties.PropertyKey": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundSetCommandMinecartPacket": Internal.ClassInfo, "java.util.function.DoubleBinaryOperator": Internal.ClassInfo, "com.gregtechceu.gtceu.api.item.tool.MaterialToolTier": Internal.ClassInfo, "net.minecraft.tags.TagManager": Internal.ClassInfo, "net.minecraft.world.level.block.CaveVines": Internal.ClassInfo, "io.wispforest.owo.ui.event.MouseEnter": Internal.ClassInfo, "com.mna.api.capabilities.IPlayerMagic": Internal.ClassInfo, "com.almostreliable.lootjs.loot.GroupedLootBuilder": Internal.ClassInfo, "net.minecraftforge.client.event.ClientPlayerNetworkEvent$LoggingOut": Internal.ClassInfo, "it.unimi.dsi.fastutil.booleans.Boolean2DoubleFunction": Internal.ClassInfo, "appeng.items.parts.PartItem": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.predicates.AnyOfCondition$Builder": Internal.ClassInfo, "java.lang.module.ModuleDescriptor$Modifier": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.schema.minecraft.ShapelessRecipeSchema$ShapelessRecipeJS": Internal.ClassInfo, "appeng.api.parts.IPartModel": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$MouseButtonPressed$Pre": Internal.ClassInfo, "net.blay09.mods.balm.api.event.client.screen.ScreenMouseEvent$Drag": Internal.ClassInfo, "dev.ftb.mods.ftbteams.api.TeamMessage": Internal.ClassInfo, "net.minecraft.core.AxisCycle": Internal.ClassInfo, "com.aizistral.etherium.items.EtheriumIngot": Internal.ClassInfo, "net.minecraft.world.level.block.AbstractChestBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.api.recipe.lookup.AbstractMapIngredient": Internal.ClassInfo, "net.irisshaders.iris.mixin.rendertype.RenderTypeAccessor": Internal.ClassInfo, "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier": Internal.ClassInfo, "net.minecraft.world.level.biome.Biome$ClimateSettings": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundInteractPacket$Action": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.gui.options.control.ControlElement": Internal.ClassInfo, "net.minecraft.world.item.enchantment.SoulSpeedEnchantment": Internal.ClassInfo, "me.steinborn.krypton.mixin.shared.network.util.ServerPlayNetworkHandlerAccessor": Internal.ClassInfo, "me.jellysquid.mods.sodium.mixin.features.textures.animations.tracking.SpriteContentsAnimationAccessor": Internal.ClassInfo, "dev.latvian.mods.kubejs.bindings.BlockWrapper": Internal.ClassInfo, "com.gregtechceu.gtceu.api.gui.fancy.IFancyUIProvider$PageGroupingData": Internal.ClassInfo, "net.minecraftforge.network.ServerStatusPing": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.util.sorting.VertexSorters$SortByDistance": Internal.ClassInfo, "com.mna.items.runes.ItemStoneRune": Internal.ClassInfo, "com.yogpc.qp.machines.workbench.BlockWorkbench": Internal.ClassInfo, "java.util.Spliterator$OfLong": Internal.ClassInfo, "net.minecraftforge.event.RegisterCommandsEvent": Internal.ClassInfo, "java.time.zone.ZoneOffsetTransitionRule": Internal.ClassInfo, "com.yanny.ytech.registration.YTechRecipeTypes$1": Internal.ClassInfo, "com.mna.blocks.manaweaving.ManaweavingAltarBlock": Internal.ClassInfo, "net.minecraft.world.level.biome.AmbientMoodSettings": Internal.ClassInfo, "net.minecraft.advancements.critereon.SerializationContext": Internal.ClassInfo, "net.minecraft.world.level.storage.LevelVersion": Internal.ClassInfo, "com.enderio.base.common.item.tool.TravelStaffItem": Internal.ClassInfo, "mods.railcraft.api.track.TrackType": Internal.ClassInfo, "net.minecraft.world.entity.animal.Parrot$Variant": Internal.ClassInfo, "appeng.debug.EraserItem": Internal.ClassInfo, "de.dafuqs.spectrum.recipe.spirit_instiller.SpiritInstillerRecipe": Internal.ClassInfo, "net.minecraft.world.entity.vehicle.ContainerEntity": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.BlockIgnoreProcessor": Internal.ClassInfo, "io.netty.buffer.PooledByteBufAllocator": Internal.ClassInfo, "vazkii.patchouli.common.book.Book": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopepanel.FramedFlatSlopePanelCornerBlock": Internal.ClassInfo, "net.mehvahdjukaar.amendments.common.block.CarpetSlabBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.Int2LongFunction": Internal.ClassInfo, "net.minecraftforge.client.event.ViewportEvent$RenderFog": Internal.ClassInfo, "com.gregtechceu.gtceu.api.recipe.ingredient.FluidIngredient$Value": Internal.ClassInfo, "dev.architectury.registry.menu.MenuRegistry$ScreenFactory": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundMoveEntityPacket": Internal.ClassInfo, "xaero.map.region.LayeredRegionManager": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.providers.nbt.NbtProvider": Internal.ClassInfo, "net.minecraft.network.TickablePacketListener": Internal.ClassInfo, "net.minecraft.world.level.chunk.LevelChunk": Internal.ClassInfo, "com.yanny.ytech.configuration.mob_effect.WildRideMobEffect": Internal.ClassInfo, "de.keksuccino.fancymenu.mixin.mixins.common.client.IMixinMusicManager": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.material.MarkerMaterial": Internal.ClassInfo, "net.minecraft.client.User$Type": Internal.ClassInfo, "net.minecraftforge.common.util.MutableHashedLinkedMap": Internal.ClassInfo, "de.keksuccino.konkrete.events.ScreenKeyPressedEvent": Internal.ClassInfo, "net.fabricmc.fabric.api.renderer.v1.material.RenderMaterial": Internal.ClassInfo, "net.minecraft.world.level.block.RedstoneWallTorchBlock": Internal.ClassInfo, "java.nio.file.attribute.UserPrincipal": Internal.ClassInfo, "divinerpg.util.ArmorInfo": Internal.ClassInfo, "com.mna.items.artifice.ItemHellfireStaff": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$MouseButtonReleased$Post": Internal.ClassInfo, "net.minecraft.world.entity.animal.Turtle": Internal.ClassInfo, "com.yogpc.qp.machines.marker.BlockWaterloggedMarker": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.ArrayRecipeComponent": Internal.ClassInfo, "net.minecraft.world.ticks.SerializableTickContainer": Internal.ClassInfo, "xfacthd.framedblocks.api.block.FramedBlockEntity": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.material.info.MaterialIconType": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.AbstractIntSet": Internal.ClassInfo, "cofh.thermal.core.common.item.BeekeeperArmorItem": Internal.ClassInfo, "net.minecraftforge.event.entity.EntityEvent$EntityConstructing": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.api.wissen.WissenItemType": Internal.ClassInfo, "net.minecraft.client.resources.language.LanguageManager": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.ShortList": Internal.ClassInfo, "dev.su5ed.sinytra.connector.mod.compat.hud.GuiExtensions": Internal.ClassInfo, "net.fabricmc.fabric.api.client.sound.v1.FabricSoundInstance": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.trunkplacers.GiantTrunkPlacer": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeAbstractMinecart": Internal.ClassInfo, "appeng.api.storage.ITerminalHost": Internal.ClassInfo, "net.minecraft.world.level.dimension.DimensionType$MonsterSettings": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopepanel.FramedExtendedDoubleSlopePanelBlock": Internal.ClassInfo, "de.dafuqs.spectrum.interfaces.TouchingWaterAware": Internal.ClassInfo, "net.minecraft.data.CachedOutput": Internal.ClassInfo, "net.minecraft.world.level.levelgen.synth.ImprovedNoise": Internal.ClassInfo, "net.minecraftforge.common.IForgeShearable": Internal.ClassInfo, "net.minecraftforge.event.level.ChunkEvent$Load": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.ServerLevelKJS": Internal.ClassInfo, "java.awt.font.FontRenderContext": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.item.IThirdPersonAnimationProvider": Internal.ClassInfo, "com.google.gson.JsonNull": Internal.ClassInfo, "com.mna.items.sorcery.ItemStaff": Internal.ClassInfo, "net.minecraft.world.item.crafting.RepairItemRecipe": Internal.ClassInfo, "dev.onyxstudios.cca.api.v3.component.sync.PlayerSyncPredicate": Internal.ClassInfo, "lol.bai.badpackets.impl.handler.ServerPacketHandler$Holder": Internal.ClassInfo, "net.minecraft.client.sounds.AudioStream": Internal.ClassInfo, "net.minecraft.world.level.block.FungusBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.structures.WoodlandMansionStructure": Internal.ClassInfo, "appeng.parts.CableBusContainer": Internal.ClassInfo, "net.minecraftforge.event.level.ExplosionEvent$Start": Internal.ClassInfo, "appeng.items.tools.SettingsCategory": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.SpikeConfiguration": Internal.ClassInfo, "net.minecraft.world.entity.projectile.ThrownExperienceBottle": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundPlaceGhostRecipePacket": Internal.ClassInfo, "net.minecraft.world.item.ArmorItem": Internal.ClassInfo, "net.minecraft.world.item.ItemDisplayContext": Internal.ClassInfo, "net.minecraft.advancements.AdvancementList$Listener": Internal.ClassInfo, "com.gregtechceu.gtceu.api.registry.GTRegistries": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.CosmicHeart": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.PointedDripstoneFeature": Internal.ClassInfo, "java.util.concurrent.atomic.AtomicInteger": Internal.ClassInfo, "net.minecraft.world.entity.VariantHolder": Internal.ClassInfo, "com.mna.blocks.artifice.SeerStoneBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.carver.CanyonCarverConfiguration$CanyonShapeConfiguration": Internal.ClassInfo, "net.minecraft.advancements.critereon.ItemPredicate": Internal.ClassInfo, "com.almostreliable.lootjs.loot.AddAttributesFunction": Internal.ClassInfo, "net.minecraft.client.color.block.BlockColor": Internal.ClassInfo, "shcm.shsupercm.forge.citresewn.mixin.citenchantment.BufferBuilderStorageAccessor": Internal.ClassInfo, "net.minecraft.world.level.entity.LevelEntityGetter": Internal.ClassInfo, "reborncore.common.blockentity.RedstoneConfigurable": Internal.ClassInfo, "vazkii.patchouli.client.book.gui.GuiBookEntry": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$CharacterTyped$Post": Internal.ClassInfo, "net.minecraft.server.level.progress.ChunkProgressListener": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.StructureCheckResult": Internal.ClassInfo, "net.minecraftforge.client.model.generators.MultiPartBlockStateBuilder$PartBuilder$ConditionGroup": Internal.ClassInfo, "de.dafuqs.spectrum.status_effects.GravityStatusEffect": Internal.ClassInfo, "net.minecraft.world.level.block.WitherRoseBlock": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.render.chunk.map.ClientChunkEventListener": Internal.ClassInfo, "xaero.map.region.MapPixel": Internal.ClassInfo, "de.dafuqs.spectrum.items.tools.MoltenRodItem": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeTagAppender": Internal.ClassInfo, "net.minecraft.world.item.BoneMealItem": Internal.ClassInfo, "com.mna.items.runes.ItemRune": Internal.ClassInfo, "com.gregtechceu.gtceu.api.item.tool.GTToolType$Builder": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.structure.PreservationBlockDetectorBlock": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetDefaultSpawnPositionPacket": Internal.ClassInfo, "com.almostreliable.lootjs.loot.condition.builder.DistancePredicateBuilder": Internal.ClassInfo, "java.security.Key": Internal.ClassInfo, "com.mna.items.ItemShuriken": Internal.ClassInfo, "org.apache.logging.log4j.util.BiConsumer": Internal.ClassInfo, "java.awt.PageAttributes": Internal.ClassInfo, "com.google.common.collect.ForwardingSet": Internal.ClassInfo, "dev.emi.emi.mixin.accessor.HoeItemAccessor": Internal.ClassInfo, "dev.latvian.mods.kubejs.player.PlayerStatsJS": Internal.ClassInfo, "de.dafuqs.spectrum.items.item_frame.PhantomGlowFrameItem": Internal.ClassInfo, "com.mna.blocks.worldgen.MAWaterFlowerBlock": Internal.ClassInfo, "com.kamth.zeldamod.item.masks.TruthMask": Internal.ClassInfo, "net.minecraft.nbt.CollectionTag": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2BooleanFunction": Internal.ClassInfo, "net.minecraft.data.tags.TagsProvider": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.innocentwood.InnocentWoodShovelItem": Internal.ClassInfo, "net.minecraft.world.item.BrushItem": Internal.ClassInfo, "java.time.temporal.TemporalUnit": Internal.ClassInfo, "net.minecraft.client.gui.components.Button$Builder": Internal.ClassInfo, "cofh.thermal.core.common.block.SignalumBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.core.mixins.ShapedRecipeAccessor": Internal.ClassInfo, "appeng.api.behaviors.GenericInternalInventory": Internal.ClassInfo, "xfacthd.atlasviewer.client.mixin.AccessorFrameInfo": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.mixins.forge.MobBucketItemAccessor": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.Int2DoubleFunction": Internal.ClassInfo, "mods.railcraft.world.level.block.detector.AnyDetectorBlock": Internal.ClassInfo, "dev.onyxstudios.cca.api.v3.util.NbtSerializable": Internal.ClassInfo, "techreborn.items.GpsItem": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.api.events.SummonedEntityEvent": Internal.ClassInfo, "com.tterrag.registrate.builders.BlockEntityBuilder$BlockEntityFactory": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopepanelcorner.FramedExtendedDoubleCornerSlopePanelWallBlock": Internal.ClassInfo, "net.minecraft.world.entity.Display$RenderState": Internal.ClassInfo, "it.unimi.dsi.fastutil.BidirectionalIterator": Internal.ClassInfo, "net.minecraft.world.entity.ai.attributes.AttributeModifier": Internal.ClassInfo, "java.util.stream.Stream$Builder": Internal.ClassInfo, "com.google.common.collect.Table$Cell": Internal.ClassInfo, "net.minecraft.client.gui.navigation.FocusNavigationEvent$TabNavigation": Internal.ClassInfo, "net.minecraftforge.common.capabilities.CapabilityProvider": Internal.ClassInfo, "vectorwing.farmersdelight.common.item.DogFoodItem": Internal.ClassInfo, "net.minecraft.client.model.HumanoidModel": Internal.ClassInfo, "mods.railcraft.world.level.block.track.outfitted.WyeTrackBlock": Internal.ClassInfo, "de.dafuqs.spectrum.enchantments.DisarmingEnchantment": Internal.ClassInfo, "net.minecraft.network.chat.SignedMessageBody": Internal.ClassInfo, "java.time.Period": Internal.ClassInfo, "snownee.lychee.mixin.PointedDripstoneBlockAccess": Internal.ClassInfo, "com.mna.effects.beneficial.EffectSoar": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.set.BlockType": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerInteractEvent$RightClickEmpty": Internal.ClassInfo, "dev.latvian.mods.kubejs.player.EntityArrayList": Internal.ClassInfo, "com.mna.api.entities.construct.ConstructCapability": Internal.ClassInfo, "com.mna.items.base.IBagItem": Internal.ClassInfo, "com.enderio.base.common.item.misc.EnderSkullBlockItem": Internal.ClassInfo, "net.minecraft.world.phys.Vec2": Internal.ClassInfo, "net.minecraft.world.phys.Vec3": Internal.ClassInfo, "com.enderio.base.common.block.glass.GlassCollisionPredicate": Internal.ClassInfo, "com.eliotlash.mclib.math.IValue": Internal.ClassInfo, "com.mna.enchantments.staves.RangeModifier": Internal.ClassInfo, "appeng.items.storage.StorageTier": Internal.ClassInfo, "net.minecraft.core.HolderGetter$Provider": Internal.ClassInfo, "appeng.api.networking.events.GridEvent": Internal.ClassInfo, "net.minecraft.world.item.Equipable": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.JsonRecipeJS": Internal.ClassInfo, "org.apache.logging.log4j.core.async.AsyncWaitStrategyFactory": Internal.ClassInfo, "cofh.thermal.core.common.item.FlorbItem": Internal.ClassInfo, "net.minecraft.client.telemetry.TelemetryEventType": Internal.ClassInfo, "net.minecraft.data.DataProvider$Factory": Internal.ClassInfo, "pokefenn.totemic.item.music.InfusedFluteItem": Internal.ClassInfo, "net.fabricmc.fabric.api.lookup.v1.block.BlockApiLookup$BlockApiProvider": Internal.ClassInfo, "mods.railcraft.world.level.block.LogBookBlock": Internal.ClassInfo, "de.dafuqs.spectrum.explosion.ModularExplosionProvider": Internal.ClassInfo, "xaero.map.server.radar.tracker.SyncedPlayerTracker": Internal.ClassInfo, "com.mna.items.artifice.curio.ItemTrickeryBracelet": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.ShortBidirectionalIterator": Internal.ClassInfo, "elucent.eidolon.common.item.ItemBase": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopepanel.FramedFlatInverseDoubleSlopePanelCornerBlock": Internal.ClassInfo, "java.lang.invoke.TypeDescriptor": Internal.ClassInfo, "io.wispforest.owo.ui.core.HorizontalAlignment": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundCommandsPacket": Internal.ClassInfo, "it.unimi.dsi.fastutil.Function": Internal.ClassInfo, "java.time.chrono.ChronoLocalDateTime": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.CrystalItem": Internal.ClassInfo, "vectorwing.farmersdelight.common.item.MelonJuiceItem": Internal.ClassInfo, "net.minecraft.world.item.BowlFoodItem": Internal.ClassInfo, "net.fabricmc.fabric.api.transfer.v1.transaction.TransactionContext": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.HugeMushroomFeatureConfiguration": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.custom.StairBlockBuilder": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.CustomWallHangingSignBlock": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.ingredient.Target": Internal.ClassInfo, "net.minecraft.world.entity.boss.enderdragon.phases.EnderDragonPhaseManager": Internal.ClassInfo, "xaero.map.core.IWorldMapSMultiBlockChangePacket": Internal.ClassInfo, "net.minecraft.world.level.block.TintedGlassBlock": Internal.ClassInfo, "shcm.shsupercm.forge.citresewn.pack.cits.CITArmor": Internal.ClassInfo, "mods.railcraft.world.level.block.FeedStationBlock": Internal.ClassInfo, "net.minecraft.world.level.lighting.LightEngine": Internal.ClassInfo, "org.violetmoon.quark.mixin.mixins.client.accessor.AccessorModelManager": Internal.ClassInfo, "elucent.eidolon.common.item.curio.SoulboneAmuletItem": Internal.ClassInfo, "com.mojang.brigadier.SingleRedirectModifier": Internal.ClassInfo, "dev.latvian.mods.kubejs.event.EventResult": Internal.ClassInfo, "net.minecraft.world.level.gameevent.PositionSourceType": Internal.ClassInfo, "com.mna.effects.beneficial.EffectWindWall": Internal.ClassInfo, "net.minecraft.world.inventory.BrewingStandMenu": Internal.ClassInfo, "com.mojang.datafixers.types.families.TypeFamily": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.ModifiableItemKJS": Internal.ClassInfo, "de.dafuqs.revelationary.api.revelations.RevelationAware": Internal.ClassInfo, "com.mna.api.blocks.tile.TileEntityWithInventory": Internal.ClassInfo, "cofh.thermal.core.common.block.EnderiumBlock": Internal.ClassInfo, "net.minecraft.world.phys.shapes.DiscreteVoxelShape$IntLineConsumer": Internal.ClassInfo, "elucent.eidolon.common.block.EnchantedAshBlock": Internal.ClassInfo, "com.mna.items.artifice.ItemInfiniteFluidJug": Internal.ClassInfo, "org.apache.logging.log4j.core.config.ReliabilityStrategy": Internal.ClassInfo, "net.minecraft.util.StringRepresentable$EnumCodec": Internal.ClassInfo, "net.minecraft.world.level.entity.EntitySection": Internal.ClassInfo, "net.minecraft.world.level.levelgen.carver.NetherWorldCarver": Internal.ClassInfo, "java.awt.font.GlyphMetrics": Internal.ClassInfo, "de.dafuqs.spectrum.items.magic_items.RadianceStaffItem": Internal.ClassInfo, "net.minecraft.world.Difficulty": Internal.ClassInfo, "com.aizistral.etherium.items.EtheriumAxe": Internal.ClassInfo, "divinerpg.client.particle.options.ParticleColouredType$ParticleColour": Internal.ClassInfo, "com.lowdragmc.lowdraglib.side.fluid.IFluidTransfer": Internal.ClassInfo, "net.minecraft.client.OptionInstance$Enum": Internal.ClassInfo, "net.minecraft.client.renderer.block.model.ItemTransforms": Internal.ClassInfo, "com.yogpc.qp.machines.QPItem": Internal.ClassInfo, "com.tterrag.registrate.builders.FluidBuilder$FluidTypeFactory": Internal.ClassInfo, "me.jellysquid.mods.lithium.mixin.chunk.entity_class_groups.ClientEntityManagerAccessor": Internal.ClassInfo, "com.lothrazar.library.core.BlockPosDim": Internal.ClassInfo, "net.minecraft.client.renderer.RenderType": Internal.ClassInfo, "java.awt.image.TileObserver": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.AstralPotato": Internal.ClassInfo, "xfacthd.framedblocks.api.predicate.cull.SideSkipPredicate": Internal.ClassInfo, "xfacthd.framedblocks.common.block.pillar.FramedWallBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.core.mixins.ServerGamePacketListenerImplAccessor": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.PlacedFeature": Internal.ClassInfo, "net.fabricmc.fabric.impl.event.lifecycle.LoadedChunksCache": Internal.ClassInfo, "biomesoplenty.common.block.DeadBranchBlock": Internal.ClassInfo, "com.inventorypets.blocks.sandBlock": Internal.ClassInfo, "net.minecraftforge.forgespi.language.IModInfo$ModVersion": Internal.ClassInfo, "java.lang.invoke.TypeDescriptor$OfMethod": Internal.ClassInfo, "net.minecraft.world.entity.ai.village.poi.PoiManager": Internal.ClassInfo, "net.minecraftforge.event.level.BlockEvent$FluidPlaceBlockEvent": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.widget.BlockSelectorWidget": Internal.ClassInfo, "com.mna.api.faction.FactionDifficultyStats": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.shapes.VoxelShapeAlignedCuboid": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerInteractEvent$RightClickBlock": Internal.ClassInfo, "net.minecraftforge.client.event.InputEvent$InteractionKeyMappingTriggered": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.ArcanumLensItem": Internal.ClassInfo, "net.blay09.mods.balm.mixin.KeyMappingAccessor": Internal.ClassInfo, "it.unimi.dsi.fastutil.floats.Float2FloatFunction": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.shapes.VoxelShapeEmpty": Internal.ClassInfo, "dev.latvian.mods.unit.token.UnitTokenStream": Internal.ClassInfo, "com.yogpc.qp.machines.mini_quarry.MiniQuarryItem": Internal.ClassInfo, "net.minecraft.world.level.block.entity.SmokerBlockEntity": Internal.ClassInfo, "org.violetmoon.zeta.network.ZetaNetworkHandler": Internal.ClassInfo, "com.sonicether.soundphysics.world.ClonedClientLevel": Internal.ClassInfo, "net.minecraftforge.client.model.generators.ModelBuilder$RootTransformsBuilder": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.custom.FenceGateBlockBuilder": Internal.ClassInfo, "divinerpg.util.IFullSetInfo": Internal.ClassInfo, "net.minecraft.client.model.geom.ModelPart": Internal.ClassInfo, "com.mna.effects.harmful.EffectLivingBomb": Internal.ClassInfo, "de.dafuqs.spectrum.status_effects.NourishingStatusEffect": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.items.DispenserMinecartItem": Internal.ClassInfo, "net.minecraft.advancements.AdvancementProgress": Internal.ClassInfo, "net.minecraft.world.level.storage.DataVersion": Internal.ClassInfo, "com.lowdragmc.lowdraglib.syncdata.IAccessor": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.gen.properties.RemoveSpawnsProperties": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetPlayerTeamPacket$Action": Internal.ClassInfo, "java.awt.Font": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.Int2ObjectFunction": Internal.ClassInfo, "dev.latvian.mods.kubejs.util.RotationAxis": Internal.ClassInfo, "dev.latvian.mods.kubejs.player.SimplePlayerEventJS": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundBlockEntityDataPacket": Internal.ClassInfo, "xfacthd.framedblocks.common.block.rail.FramedFancyRailSlopeBlock": Internal.ClassInfo, "net.minecraft.client.gui.components.TabOrderedElement": Internal.ClassInfo, "java.util.AbstractSequentialList": Internal.ClassInfo, "com.tterrag.registrate.providers.RegistrateLangProvider": Internal.ClassInfo, "net.minecraftforge.registries.IForgeRegistryInternal": Internal.ClassInfo, "net.minecraftforge.event.LootTableLoadEvent": Internal.ClassInfo, "biomesoplenty.common.block.WallSignBlockBOP": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopepanel.FramedFlatSlopePanelCornerBlock$ShapeKey": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.ComponentRole": Internal.ClassInfo, "net.minecraft.client.multiplayer.ClientAdvancements$Listener": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.worldgen.generator.IndicatorGenerator": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.tileentity.CrystalTileEntity": Internal.ClassInfo, "dev.latvian.mods.rhino.mod.util.color.NoColor": Internal.ClassInfo, "it.unimi.dsi.fastutil.chars.CharSpliterator": Internal.ClassInfo, "net.minecraft.world.level.block.DetectorRailBlock": Internal.ClassInfo, "com.probejs.jdoc.java.MethodInfo": Internal.ClassInfo, "com.gregtechceu.gtceu.core.mixins.PrimedTntAccessor": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decoration.ShimmerstoneLightBlock": Internal.ClassInfo, "net.minecraft.advancements.FrameType": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.entities.BombEntity": Internal.ClassInfo, "java.awt.AWTEvent": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.schema.RecipeComponentFactory": Internal.ClassInfo, "dev.latvian.mods.kubejs.event.IEventHandler": Internal.ClassInfo, "net.minecraft.world.item.crafting.ShapelessRecipe": Internal.ClassInfo, "mods.railcraft.world.level.block.entity.steamboiler.SteamBoilerBlockEntity$Metadata": Internal.ClassInfo, "mods.railcraft.world.level.block.track.outfitted.LockingMode": Internal.ClassInfo, "net.minecraft.client.renderer.entity.player.PlayerRenderer": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.ItemEntityKJS": Internal.ClassInfo, "com.mojang.authlib.minecraft.BanDetails": Internal.ClassInfo, "org.embeddedt.embeddium.model.EpsilonizableBlockElement": Internal.ClassInfo, "net.minecraft.world.level.GameRules$Type": Internal.ClassInfo, "com.gregtechceu.gtceu.common.block.FluidPipeBlock": Internal.ClassInfo, "com.mojang.blaze3d.audio.Listener": Internal.ClassInfo, "divinerpg.blocks.vethea.BlockHelioticBeam": Internal.ClassInfo, "com.yungnickyoung.minecraft.yungsapi.mixin.accessor.StructureTemplatePoolAccessor": Internal.ClassInfo, "net.minecraft.client.renderer.debug.BeeDebugRenderer": Internal.ClassInfo, "com.gregtechceu.gtceu.api.item.tool.GTToolItem": Internal.ClassInfo, "net.minecraft.world.phys.HitResult": Internal.ClassInfo, "it.unimi.dsi.fastutil.floats.Float2ObjectFunction": Internal.ClassInfo, "dev.su5ed.sinytra.connector.mod.compat.ItemStackExtensions": Internal.ClassInfo, "de.keksuccino.fancymenu.util.rendering.ui.screen.CustomizableScreen": Internal.ClassInfo, "com.gregtechceu.gtceu.api.item.component.IItemComponent": Internal.ClassInfo, "com.yogpc.qp.machines.QPBlock": Internal.ClassInfo, "net.minecraft.world.item.CreativeModeTab$TabVisibility": Internal.ClassInfo, "com.lowdragmc.lowdraglib.client.scene.ISceneEntityRenderHook": Internal.ClassInfo, "com.gregtechceu.gtceu.api.fluids.store.FluidStorageKeys": Internal.ClassInfo, "xaero.map.WorldMapSession": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.effects.MoltenHeartEffect": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundPlayerInfoUpdatePacket": Internal.ClassInfo, "net.minecraft.network.chat.SignableCommand$Argument": Internal.ClassInfo, "java.time.ZonedDateTime": Internal.ClassInfo, "java.lang.Record": Internal.ClassInfo, "com.mna.items.runes.ItemMetalRitualRune": Internal.ClassInfo, "net.minecraftforge.client.event.ModelEvent": Internal.ClassInfo, "appeng.block.AEBaseBlock": Internal.ClassInfo, "me.steinborn.krypton.mod.shared.network.ClientConnectionEncryptionExtension": Internal.ClassInfo, "com.mna.effects.beneficial.EffectFireShield": Internal.ClassInfo, "de.dafuqs.spectrum.items.food.SedativesItem": Internal.ClassInfo, "net.blay09.mods.inventoryessentials.mixin.AbstractContainerScreenAccessor": Internal.ClassInfo, "mods.railcraft.world.level.block.track.outfitted.TurnoutTrackBlock": Internal.ClassInfo, "io.netty.util.concurrent.AbstractEventExecutorGroup": Internal.ClassInfo, "cc.abbie.emi_ores.mixin.accessor.BlockStateMatchTestAccessor": Internal.ClassInfo, "dev.latvian.mods.kubejs.script.ScriptTypeHolder": Internal.ClassInfo, "auviotre.enigmatic.addon.items.OdeToLiving": Internal.ClassInfo, "net.minecraft.server.players.BanListEntry": Internal.ClassInfo, "com.mna.items.sorcery.ItemEntityCrystal": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$KeyReleased": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.DoubleBlockHalf": Internal.ClassInfo, "xfacthd.framedblocks.common.block.sign.FramedStandingSignBlock": Internal.ClassInfo, "net.minecraft.client.gui.components.PlayerTabOverlay": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.GolemSensor": Internal.ClassInfo, "java.security.Permission": Internal.ClassInfo, "net.minecraftforge.event.entity.player.ItemTooltipEvent": Internal.ClassInfo, "net.minecraft.world.level.entity.EntityInLevelCallback": Internal.ClassInfo, "divinerpg.blocks.base.BlockStackPlant": Internal.ClassInfo, "net.minecraft.network.protocol.Packet": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.StructurePiece$BlockSelector": Internal.ClassInfo, "net.minecraftforge.fml.event.config.ModConfigEvent$Reloading": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundLevelChunkWithLightPacket": Internal.ClassInfo, "net.minecraft.world.level.BaseCommandBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.bytes.Byte2IntFunction": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.LoreFragment": Internal.ClassInfo, "net.minecraft.nbt.StreamTagVisitor": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundSetCarriedItemPacket": Internal.ClassInfo, "xaero.map.gui.message.MessageBox": Internal.ClassInfo, "com.aizistral.omniconfig.wrappers.Omniconfig$EnumParameter": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blockpredicates.CombiningPredicate": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.curio.WissenKeychainItem": Internal.ClassInfo, "com.mojang.serialization.codecs.SimpleMapCodec": Internal.ClassInfo, "net.minecraft.world.item.CompassItem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blending.Blender$DistanceGetter": Internal.ClassInfo, "mods.railcraft.world.level.block.track.outfitted.LockingMode$LockType": Internal.ClassInfo, "xfacthd.framedblocks.common.blockentity.special.FramedItemFrameBlockEntity$MapMarkerRemover": Internal.ClassInfo, "com.mojang.datafixers.types.families.RecursiveTypeFamily": Internal.ClassInfo, "java.lang.constant.DirectMethodHandleDesc": Internal.ClassInfo, "org.orecruncher.dsurround.config.biome.IBiomeSoundProvider": Internal.ClassInfo, "net.fabricmc.fabric.impl.client.rendering.ColorProviderRegistryImpl$ColorMapperHolder": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.items.BambooSpikesTippedItem": Internal.ClassInfo, "com.electronwill.nightconfig.core.UnmodifiableCommentedConfig$CommentNode": Internal.ClassInfo, "com.mojang.math.Transformation": Internal.ClassInfo, "software.bernie.geckolib.core.keyframe.BoneAnimationQueue": Internal.ClassInfo, "net.minecraft.world.level.levelgen.carver.WorldCarver": Internal.ClassInfo, "javax.accessibility.AccessibleTable": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.farming.TilledShaleClayBlock": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.Sensor": Internal.ClassInfo, "net.minecraftforge.event.entity.player.ArrowNockEvent": Internal.ClassInfo, "mods.railcraft.world.item.enchantment.RailcraftDamageEnchantment": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundPongPacket": Internal.ClassInfo, "net.minecraft.client.Options": Internal.ClassInfo, "net.minecraft.client.sounds.Weighted": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.material.properties.PolymerProperty": Internal.ClassInfo, "dev.latvian.mods.kubejs.server.CustomCommandEventJS": Internal.ClassInfo, "appeng.helpers.InterfaceLogicHost": Internal.ClassInfo, "net.minecraft.world.level.levelgen.Heightmap": Internal.ClassInfo, "com.mojang.realmsclient.gui.task.RepeatedDelayStrategy": Internal.ClassInfo, "net.minecraft.client.gui.components.AbstractWidget": Internal.ClassInfo, "net.minecraftforge.event.entity.EntityEvent": Internal.ClassInfo, "xfacthd.atlasviewer.client.mixin.AccessorTextureAtlas": Internal.ClassInfo, "net.minecraft.resources.ResourceLocation": Internal.ClassInfo, "org.violetmoon.zeta.item.ZetaBlockItem": Internal.ClassInfo, "net.minecraft.client.Realms32BitWarningStatus": Internal.ClassInfo, "net.minecraftforge.event.entity.EntityTravelToDimensionEvent": Internal.ClassInfo, "io.wispforest.owo.ui.core.Sizing": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.model.quad.properties.ModelQuadFacing": Internal.ClassInfo, "net.minecraft.world.InteractionResultHolder": Internal.ClassInfo, "dev.ftb.mods.ftbteams.api.property.PrivacyMode": Internal.ClassInfo, "top.theillusivec4.curios.api.type.capability.ICuriosItemHandler": Internal.ClassInfo, "elucent.eidolon.common.potion.VulnerableEffect": Internal.ClassInfo, "org.embeddedt.modernfix.duck.ITimeTrackingServer": Internal.ClassInfo, "net.minecraft.server.level.progress.StoringChunkProgressListener": Internal.ClassInfo, "dev.latvian.mods.kubejs.registry.BuilderType": Internal.ClassInfo, "com.mna.items.constructs.parts.head.ConstructPartSmartHead": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.BlockContainerJS": Internal.ClassInfo, "net.fabricmc.fabric.api.recipe.v1.ingredient.CustomIngredientSerializer": Internal.ClassInfo, "com.gregtechceu.gtceu.api.machine.trait.MachineTrait": Internal.ClassInfo, "net.minecraft.world.entity.boss.enderdragon.EnderDragon": Internal.ClassInfo, "de.dafuqs.spectrum.items.trinkets.AzureDikeRingItem": Internal.ClassInfo, "software.bernie.geckolib.core.keyframe.event.data.KeyFrameData": Internal.ClassInfo, "java.util.concurrent.Delayed": Internal.ClassInfo, "reborncore.common.blockentity.MultiblockWriter": Internal.ClassInfo, "com.inventorypets.pets.petSheep": Internal.ClassInfo, "com.kamth.zeldamod.item.masks.RomaniMask": Internal.ClassInfo, "java.security.DomainCombiner": Internal.ClassInfo, "net.minecraft.network.chat.FilterMask": Internal.ClassInfo, "appeng.blockentity.misc.ChargerBlockEntity": Internal.ClassInfo, "net.minecraft.world.level.GameRules": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.CraftingContainerKJS": Internal.ClassInfo, "com.gregtechceu.gtceu.api.block.IAppearance": Internal.ClassInfo, "java.time.Instant": Internal.ClassInfo, "com.mojang.brigadier.ImmutableStringReader": Internal.ClassInfo, "appeng.api.networking.GridFlags": Internal.ClassInfo, "com.mna.items.sorcery.ItemSpell": Internal.ClassInfo, "net.minecraft.client.renderer.texture.AbstractTexture": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.shooting_star.ShootingStarItem": Internal.ClassInfo, "net.minecraft.world.level.block.GrowingPlantHeadBlock": Internal.ClassInfo, "xaero.map.highlight.DimensionHighlighterHandler": Internal.ClassInfo, "net.minecraftforge.common.world.ModifiableBiomeInfo$BiomeInfo$Builder": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.gravity.FloatBlock": Internal.ClassInfo, "mezz.jei.api.recipe.transfer.IRecipeTransferError$Type": Internal.ClassInfo, "com.mojang.realmsclient.dto.RealmsNotification": Internal.ClassInfo, "net.fabricmc.fabric.api.transfer.v1.transaction.base.SnapshotParticipant": Internal.ClassInfo, "mezz.jei.api.gui.drawable.IDrawable": Internal.ClassInfo, "net.minecraft.world.level.block.BucketPickup": Internal.ClassInfo, "com.electronwill.nightconfig.core.EnumGetMethod": Internal.ClassInfo, "net.minecraftforge.client.event.sound.PlaySoundEvent": Internal.ClassInfo, "net.minecraftforge.eventbus.api.IEventBus": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.ingredient.IRecipeIngredientSlot": Internal.ClassInfo, "java.net.Proxy$Type": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.melon.GlisteringStemBlock": Internal.ClassInfo, "net.minecraftforge.event.entity.EntityAttributeCreationEvent": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.items.HatStandItem": Internal.ClassInfo, "dev.latvian.mods.rhino.BaseFunction": Internal.ClassInfo, "biomesoplenty.common.block.DoubleWatersidePlantBlock": Internal.ClassInfo, "java.awt.event.HierarchyEvent": Internal.ClassInfo, "mods.railcraft.world.level.block.track.outfitted.ReversiblePoweredOutfittedTrackBlock": Internal.ClassInfo, "mods.railcraft.api.charge.Charge$Provider": Internal.ClassInfo, "java.lang.Appendable": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerEvent$ItemCraftedEvent": Internal.ClassInfo, "com.yanny.ytech.configuration.item.ClayBucketItem": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.EnigmaticItem": Internal.ClassInfo, "net.minecraft.nbt.StreamTagVisitor$EntryResult": Internal.ClassInfo, "net.minecraft.world.level.block.DispenserBlock": Internal.ClassInfo, "com.mojang.blaze3d.shaders.FogShape": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.pastel_network.nodes.PastelNodeBlockEntity": Internal.ClassInfo, "net.minecraft.advancements.critereon.MinMaxBounds$BoundsFromReaderFactory": Internal.ClassInfo, "net.minecraft.world.level.levelgen.GeodeLayerSettings": Internal.ClassInfo, "java.lang.Object": Internal.ClassInfo, "java.awt.CompositeContext": Internal.ClassInfo, "dev.architectury.registry.registries.RegistrySupplier": Internal.ClassInfo, "net.minecraft.util.profiling.metrics.MetricSampler$MetricSamplerBuilder": Internal.ClassInfo, "com.mojang.brigadier.ResultConsumer": Internal.ClassInfo, "com.yogpc.qp.machines.workbench.WorkbenchRecipe$WorkbenchRecipeType": Internal.ClassInfo, "net.minecraft.world.level.block.TripWireBlock": Internal.ClassInfo, "java.awt.ImageCapabilities": Internal.ClassInfo, "net.minecraft.world.item.crafting.DecoratedPotRecipe": Internal.ClassInfo, "javax.accessibility.AccessibleSelection": Internal.ClassInfo, "me.steinborn.krypton.mod.shared.network.ConfigurableAutoFlush": Internal.ClassInfo, "com.gregtechceu.gtceu.api.capability.IMedicalConditionTracker": Internal.ClassInfo, "com.mna.items.constructs.parts.torso.ConstructPartStorageTorso": Internal.ClassInfo, "net.minecraftforge.event.entity.ProjectileImpactEvent": Internal.ClassInfo, "java.lang.module.ModuleDescriptor$Exports$Modifier": Internal.ClassInfo, "net.minecraft.world.item.Item": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.schema.DynamicRecipeComponent": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.providers.score.ScoreboardNameProvider": Internal.ClassInfo, "xfacthd.framedblocks.common.block.stairs.FramedSlicedStairsBlock": Internal.ClassInfo, "net.minecraft.world.entity.projectile.ItemSupplier": Internal.ClassInfo, "dev.latvian.mods.kubejs.gui.chest.ChestMenuInventoryClickEvent$Callback": Internal.ClassInfo, "biomesoplenty.common.block.state.properties.QuarterProperty": Internal.ClassInfo, "it.unimi.dsi.fastutil.booleans.Boolean2ObjectFunction": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.custom.HoeItemBuilder": Internal.ClassInfo, "com.mna.blocks.IOffsetPlace": Internal.ClassInfo, "io.wispforest.owo.ui.layers.Layer$Instance": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.VileniumIngotItem": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.api.events.EnterBlockEvent": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.CustomStandingSignBlock": Internal.ClassInfo, "net.minecraftforge.client.model.generators.VariantBlockStateBuilder$PartialBlockstate": Internal.ClassInfo, "divinerpg.items.vanilla.ItemStaff": Internal.ClassInfo, "net.minecraft.world.entity.decoration.HangingEntity": Internal.ClassInfo, "net.minecraft.client.renderer.debug.GoalSelectorDebugRenderer$DebugGoal": Internal.ClassInfo, "net.minecraft.network.protocol.BundleDelimiterPacket": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.LongIntPair": Internal.ClassInfo, "net.fabricmc.fabric.impl.item.ItemExtensions": Internal.ClassInfo, "net.minecraftforge.event.entity.player.ItemFishedEvent": Internal.ClassInfo, "org.violetmoon.quark.content.tools.item.AbacusItem": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.EvilIngot": Internal.ClassInfo, "me.srrapero720.embeddiumplus.mixins.impl.darkness.accessors.LightTextureAccessor": Internal.ClassInfo, "io.wispforest.owo.ui.inject.ComponentStub": Internal.ClassInfo, "vazkii.patchouli.xplat.XplatModContainer": Internal.ClassInfo, "dev.latvian.mods.kubejs.loot.GiftLootEventJS": Internal.ClassInfo, "net.minecraft.network.chat.SignedMessageChain$Decoder": Internal.ClassInfo, "com.mna.api.capabilities.IPlayerCantrips": Internal.ClassInfo, "com.yanny.ytech.configuration.item.PebbleItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.server.ServerEventJS": Internal.ClassInfo, "elucent.eidolon.common.item.curio.VoidAmuletItem": Internal.ClassInfo, "com.gregtechceu.gtceu.api.machine.feature.multiblock.IMultiPart": Internal.ClassInfo, "com.almostreliable.lootjs.core.ILootAction": Internal.ClassInfo, "net.fabricmc.fabric.api.event.registry.RegistryIdRemapCallback$RemapState": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.redstone.EntityDetectorBlock": Internal.ClassInfo, "net.minecraft.world.entity.projectile.FishingHook": Internal.ClassInfo, "net.mehvahdjukaar.amendments.common.block.HangingFlowerPotBlock": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.pastel_network.nodes.PastelNodeBlock": Internal.ClassInfo, "mods.railcraft.world.level.block.steamboiler.SteamBoilerBlock": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.boom.IncandescentAmalgamItem": Internal.ClassInfo, "xfacthd.framedblocks.common.item.FramedSignItem": Internal.ClassInfo, "net.minecraft.world.item.EmptyMapItem": Internal.ClassInfo, "mods.railcraft.util.container.ForwardingContainer": Internal.ClassInfo, "com.yungnickyoung.minecraft.yungsapi.mixin.accessor.SinglePoolElementAccessor": Internal.ClassInfo, "dev.latvian.mods.kubejs.loot.LootTableEntry": Internal.ClassInfo, "xaero.map.region.MapLayer": Internal.ClassInfo, "appeng.api.networking.crafting.ICraftingProvider": Internal.ClassInfo, "net.minecraft.world.level.entity.LevelCallback": Internal.ClassInfo, "cofh.core.common.item.BoatItemCoFH": Internal.ClassInfo, "net.minecraft.world.level.block.CherryLeavesBlock": Internal.ClassInfo, "xfacthd.framedblocks.common.block.interactive.FramedFlowerPotBlock": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.predicates.LootItemCondition$Builder": Internal.ClassInfo, "net.minecraft.world.level.block.VineBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.bytes.Byte2CharFunction": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.fluids.SoftFluidStack": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.widget.ProgressWidget": Internal.ClassInfo, "com.yogpc.qp.machines.module.FillerModuleItem": Internal.ClassInfo, "divinerpg.block_entities.furnace.ModFurnaceBlockEntity": Internal.ClassInfo, "com.gregtechceu.gtceu.GTCEu": Internal.ClassInfo, "net.minecraft.world.item.ItemFrameItem": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.AbstractReferenceCollection": Internal.ClassInfo, "biomesoplenty.common.block.SaplingBlockBOP": Internal.ClassInfo, "org.violetmoon.zeta.util.RaytracingUtil": Internal.ClassInfo, "com.mna.items.constructs.parts.arms.ConstructPartShieldArmLeft": Internal.ClassInfo, "net.minecraft.world.level.dimension.LevelStem": Internal.ClassInfo, "xfacthd.framedblocks.common.block.stairs.FramedVerticalDividedStairsBlock": Internal.ClassInfo, "de.dafuqs.spectrum.items.InkPoweredPotionFillable": Internal.ClassInfo, "de.dafuqs.spectrum.mixin.accessors.GoatHornItemAccessor": Internal.ClassInfo, "net.minecraft.nbt.ListTag": Internal.ClassInfo, "vectorwing.farmersdelight.common.mixin.accessor.RecipeManagerAccessor": Internal.ClassInfo, "appeng.api.parts.IPart": Internal.ClassInfo, "net.minecraft.world.entity.GlowSquid": Internal.ClassInfo, "net.minecraft.world.level.block.TrappedChestBlock": Internal.ClassInfo, "com.mna.blocks.sorcery.ManaCrystalBlock": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopepanelcorner.FramedSmallDoubleCornerSlopePanelWallBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.api.recipe.GTRecipe$ActionResult": Internal.ClassInfo, "mods.railcraft.world.item.SignalLabelItem": Internal.ClassInfo, "java.net.URL": Internal.ClassInfo, "elucent.eidolon.common.item.WandItem": Internal.ClassInfo, "dev.onyxstudios.cca.api.v3.component.ComponentAccess": Internal.ClassInfo, "com.kamth.zeldamod.item.items.StickItem": Internal.ClassInfo, "com.gregtechceu.gtceu.api.registry.registrate.GTRegistrate": Internal.ClassInfo, "com.mna.items.artifice.FortuneRing": Internal.ClassInfo, "de.dafuqs.spectrum.items.food.KimchiItem": Internal.ClassInfo, "net.minecraft.world.scores.Score": Internal.ClassInfo, "elucent.eidolon.common.item.WarlockRobesItem": Internal.ClassInfo, "org.objectweb.asm.Type": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.WissenWandItem": Internal.ClassInfo, "dynamic_fps.impl.config.Config": Internal.ClassInfo, "xaero.map.server.player.IServerPlayer": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blockpredicates.AnyOfPredicate": Internal.ClassInfo, "biomesoplenty.common.block.WallHangingSignBlockBOP": Internal.ClassInfo, "techreborn.blocks.machine.tier1.ResinBasinBlock": Internal.ClassInfo, "net.minecraft.world.level.block.HayBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.Pair": Internal.ClassInfo, "software.bernie.geckolib.core.animation.AnimationProcessor": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.block.entity.inventory_change_tracking.InventoryChangeListener": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.widget.LabelWidget": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.redstone.EnderGlassBlock$TransparencyState": Internal.ClassInfo, "xfacthd.framedblocks.common.block.rail.FramedFancyPoweredRailBlock": Internal.ClassInfo, "java.nio.file.PathMatcher": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.BambooFeature": Internal.ClassInfo, "de.dafuqs.spectrum.items.trinkets.WeepingCircletItem": Internal.ClassInfo, "net.minecraft.util.BitStorage": Internal.ClassInfo, "appeng.blockentity.storage.SkyStoneTankBlockEntity": Internal.ClassInfo, "java.net.URI": Internal.ClassInfo, "net.minecraft.client.resources.metadata.animation.AnimationMetadataSectionSerializer": Internal.ClassInfo, "com.mojang.datafixers.kinds.Functor$Mu": Internal.ClassInfo, "io.netty.buffer.AbstractByteBuf": Internal.ClassInfo, "net.minecraft.client.renderer.block.ModelBlockRenderer": Internal.ClassInfo, "com.mna.effects.harmful.SimpleHarmfulEffect": Internal.ClassInfo, "net.minecraft.client.multiplayer.chat.report.ChatReportBuilder$Result": Internal.ClassInfo, "net.minecraft.world.inventory.InventoryMenu": Internal.ClassInfo, "com.enderio.armory.common.item.darksteel.DarkSteelSwordItem": Internal.ClassInfo, "net.fabricmc.fabric.api.util.BooleanFunction": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.TwistedHeart": Internal.ClassInfo, "net.fabricmc.fabric.impl.networking.NetworkHandlerExtensions": Internal.ClassInfo, "net.minecraftforge.common.util.TransformationHelper$TransformOrigin": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.Long2ByteMap": Internal.ClassInfo, "java.util.Optional": Internal.ClassInfo, "dev.latvian.mods.rhino.WrappedExecutable": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.idols.ShearingIdolBlock": Internal.ClassInfo, "net.minecraft.server.ReloadableServerResources": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.block.IWashable": Internal.ClassInfo, "org.violetmoon.quark.content.mobs.item.SoulBeadItem": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slope.FramedPyramidBlock": Internal.ClassInfo, "appeng.api.networking.crafting.ICraftingService": Internal.ClassInfo, "com.mna.blocks.tileentities.EldrinAltarTile$Stage": Internal.ClassInfo, "com.kamth.zeldamod.block.custom.TimedEyeSwitchBlock": Internal.ClassInfo, "net.minecraft.network.chat.ChatDecorator": Internal.ClassInfo, "appeng.debug.MeteoritePlacerItem": Internal.ClassInfo, "com.mna.api.particles.parameters.ParticleItemStack": Internal.ClassInfo, "com.mna.blocks.ritual.RitualTeleportLocationBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.player.AdvancementJS": Internal.ClassInfo, "com.enderio.api.conduit.IClientConduitData$UpdateExtendedData": Internal.ClassInfo, "net.fabricmc.fabric.mixin.client.particle.ParticleManagerAccessor$SimpleSpriteProviderAccessor": Internal.ClassInfo, "elucent.eidolon.common.item.CompletedResearchItem": Internal.ClassInfo, "de.dafuqs.spectrum.items.ExperienceStorageItem": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.api.items.IMultiblockMiningTool": Internal.ClassInfo, "vectorwing.farmersdelight.common.registry.ModItems$1": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.idols.FirestarterIdolBlock": Internal.ClassInfo, "com.probejs.features.plugin.VSCodeFileSavedEventJS": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.api.alchemy.AlchemyPotion": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.misc.StasisEnchantment": Internal.ClassInfo, "net.minecraft.world.level.block.entity.SignBlockEntity": Internal.ClassInfo, "java.util.Hashtable": Internal.ClassInfo, "divinerpg.enchant.BrainFreezeEnchant": Internal.ClassInfo, "net.minecraft.network.chat.ComponentContents": Internal.ClassInfo, "com.mojang.blaze3d.platform.VideoMode": Internal.ClassInfo, "org.violetmoon.zeta.event.load.ZAddReloadListener": Internal.ClassInfo, "net.mehvahdjukaar.polytone.mixins.accessor.BiomeAccessor": Internal.ClassInfo, "com.tterrag.registrate.builders.MenuBuilder$ScreenFactory": Internal.ClassInfo, "vice.satisfying_buttons.accessors.IAbstractButtonAccessor": Internal.ClassInfo, "net.minecraft.client.CloudStatus": Internal.ClassInfo, "com.mna.api.blocks.IManaweaveNotifiable": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.gui.options.Option": Internal.ClassInfo, "net.minecraftforge.common.world.StructureModifier$Phase": Internal.ClassInfo, "shcm.shsupercm.forge.citresewn.pack.cits.CITEnchantment$MergeMethod": Internal.ClassInfo, "elucent.eidolon.api.IDyeable": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.memory.MemoryBlock": Internal.ClassInfo, "net.minecraft.world.item.crafting.FireworkStarRecipe": Internal.ClassInfo, "dev.latvian.mods.kubejs.gui.chest.ChestMenuClickHandler": Internal.ClassInfo, "com.mna.api.items.ChargeableItem": Internal.ClassInfo, "appeng.items.storage.BasicStorageCell": Internal.ClassInfo, "net.minecraft.client.resources.model.UnbakedModel": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.arcanewood.ArcaneWoodSwordItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.gen.AddWorldgenEventJS": Internal.ClassInfo, "net.minecraft.SystemReport": Internal.ClassInfo, "net.minecraft.world.entity.monster.Silverfish": Internal.ClassInfo, "techreborn.items.tool.advanced.AdvancedJackhammerItem": Internal.ClassInfo, "com.gregtechceu.gtceu.api.pipenet.longdistance.LongDistancePipeBlock": Internal.ClassInfo, "xfacthd.framedblocks.common.block.cube.FramedCube": Internal.ClassInfo, "dev.latvian.mods.kubejs.misc.PoiTypeBuilder": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeFriendlyByteBuf": Internal.ClassInfo, "divinerpg.items.iceika.ItemSerenadeOfIce": Internal.ClassInfo, "appeng.block.crafting.CraftingUnitBlock": Internal.ClassInfo, "com.mna.items.ritual.ItemPlayerCharm": Internal.ClassInfo, "org.violetmoon.zeta.item.ext.ItemExtensionFactory": Internal.ClassInfo, "com.google.gson.JsonDeserializationContext": Internal.ClassInfo, "net.minecraftforge.api.distmarker.Dist": Internal.ClassInfo, "com.mna.blocks.artifice.SlipstreamGeneratorBlock": Internal.ClassInfo, "mods.railcraft.world.level.block.tank.IronTankWallBlock": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.DeeperDownPortalBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.common.data.GTSoundEntries": Internal.ClassInfo, "org.w3c.dom.Document": Internal.ClassInfo, "com.kamth.zeldamod.item.masks.CouplesMask": Internal.ClassInfo, "questsadditions.blocks.LootCrateTileEntity": Internal.ClassInfo, "net.fabricmc.fabric.impl.networking.AbstractNetworkAddon": Internal.ClassInfo, "top.theillusivec4.curios.mixin.core.AbstractContainerMenuAccessor": Internal.ClassInfo, "com.yogpc.qp.machines.mover.BlockMover$BlockMoverItem": Internal.ClassInfo, "java.nio.file.Path": Internal.ClassInfo, "mezz.jei.api.recipe.transfer.IRecipeTransferManager": Internal.ClassInfo, "net.fabricmc.fabric.mixin.screen.ScreenAccessor": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundPlayerCombatKillPacket": Internal.ClassInfo, "net.minecraft.world.entity.vehicle.MinecartHopper": Internal.ClassInfo, "net.minecraft.world.RandomSequences": Internal.ClassInfo, "de.dafuqs.spectrum.items.conditional.GemstonePowderItem": Internal.ClassInfo, "net.minecraft.client.resources.sounds.SoundInstance": Internal.ClassInfo, "java.time.temporal.TemporalField": Internal.ClassInfo, "com.inventorypets.items.bananaItem": Internal.ClassInfo, "software.bernie.geckolib.core.keyframe.Keyframe": Internal.ClassInfo, "elucent.eidolon.common.block.Scriptorium": Internal.ClassInfo, "org.violetmoon.zeta.item.ZetaSignItem": Internal.ClassInfo, "net.minecraft.commands.arguments.ArgumentSignatures$Signer": Internal.ClassInfo, "java.util.function.ToDoubleFunction": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.map.type.MapDecorationType": Internal.ClassInfo, "xfacthd.framedblocks.common.block.rail.FramedFancyRailBlock": Internal.ClassInfo, "net.minecraft.world.level.block.piston.PistonBaseBlock": Internal.ClassInfo, "mezz.jei.api.recipe.transfer.IRecipeTransferHandler": Internal.ClassInfo, "de.dafuqs.spectrum.mixin.accessors.FoxEntityAccessor": Internal.ClassInfo, "elucent.eidolon.client.particle.LineWispParticleType": Internal.ClassInfo, "xfacthd.framedblocks.common.block.stairs.FramedVerticalDoubleHalfStairsBlock": Internal.ClassInfo, "net.minecraftforge.common.capabilities.ICapabilityProvider": Internal.ClassInfo, "net.minecraft.core.particles.DustParticleOptions": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetTitleTextPacket": Internal.ClassInfo, "dev.latvian.mods.rhino.Script": Internal.ClassInfo, "com.mna.api.recipes.IMARecipe": Internal.ClassInfo, "divinerpg.enchant.AftershockEnchant": Internal.ClassInfo, "java.text.AttributedCharacterIterator$Attribute": Internal.ClassInfo, "java.util.Calendar": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.BlockBuilder": Internal.ClassInfo, "net.minecraft.world.entity.ai.attributes.AttributeInstance": Internal.ClassInfo, "net.fabricmc.fabric.api.transfer.v1.transaction.TransactionContext$Result": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.items.RopeItem": Internal.ClassInfo, "dev.shwg.smoothswapping.mixin.ClickableWidgetAccessor": Internal.ClassInfo, "java.util.concurrent.ScheduledExecutorService": Internal.ClassInfo, "net.minecraft.stats.Stats": Internal.ClassInfo, "com.gregtechceu.gtceu.api.item.tool.IToolGridHighLight": Internal.ClassInfo, "org.apache.logging.log4j.core.Logger": Internal.ClassInfo, "net.minecraft.world.entity.Display$TextDisplay": Internal.ClassInfo, "net.minecraft.world.level.BlockAndTintGetter": Internal.ClassInfo, "net.minecraft.server.level.BlockDestructionProgress": Internal.ClassInfo, "vectorwing.farmersdelight.common.item.DrinkableItem": Internal.ClassInfo, "net.minecraftforge.client.IItemDecorator": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.farming.SpectrumFarmlandBlock": Internal.ClassInfo, "net.minecraft.world.entity.ai.attributes.AttributeModifier$Operation": Internal.ClassInfo, "net.minecraft.world.item.ComplexItem": Internal.ClassInfo, "com.mna.blocks.sorcery.HellfireBlock": Internal.ClassInfo, "net.irisshaders.iris.mixin.texture.AnimationMetadataSectionAccessor": Internal.ClassInfo, "com.inventorypets.pets.petOcelot": Internal.ClassInfo, "net.minecraft.world.entity.vehicle.AbstractMinecart": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.CreativeModeTabKJS": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.cinderhearth.CinderhearthBlock": Internal.ClassInfo, "net.minecraft.world.item.enchantment.WaterWorkerEnchantment": Internal.ClassInfo, "org.apache.logging.log4j.core.util.Watcher": Internal.ClassInfo, "org.orecruncher.dsurround.lib.scripting.Script": Internal.ClassInfo, "net.minecraft.world.item.enchantment.ThornsEnchantment": Internal.ClassInfo, "net.minecraft.client.multiplayer.chat.ChatLog": Internal.ClassInfo, "net.minecraft.advancements.critereon.LocationPredicate$Builder": Internal.ClassInfo, "com.kamth.zeldamod.item.masks.ScentMask": Internal.ClassInfo, "dev.architectury.hooks.level.biome.EffectsProperties": Internal.ClassInfo, "cofh.core.common.effect.PanaceaMobEffect": Internal.ClassInfo, "net.minecraft.client.gui.screens.worldselection.WorldCreationContext$OptionsModifier": Internal.ClassInfo, "reborncore.api.blockentity.IUpgradeable": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.tag.TagPrefix$MaterialRecipeHandler": Internal.ClassInfo, "net.minecraft.util.random.Weight": Internal.ClassInfo, "org.violetmoon.zeta.event.play.loading.ZGatherHints": Internal.ClassInfo, "divinerpg.items.arcana.ItemArcanaPotion": Internal.ClassInfo, "net.minecraft.world.WorldlyContainerHolder": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.api.items.IEldritch": Internal.ClassInfo, "net.minecraft.client.multiplayer.ClientChunkCache$Storage": Internal.ClassInfo, "io.wispforest.owo.ui.core.OwoUIAdapter": Internal.ClassInfo, "com.kamth.zeldamod.item.masks.BlastMask": Internal.ClassInfo, "cofh.lib.api.IResourceStorage": Internal.ClassInfo, "java.time.InstantSource": Internal.ClassInfo, "com.yogpc.qp.machines.module.ModuleInventory$HasModuleInventory": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.FluidLogging$SpectrumFluidFillable": Internal.ClassInfo, "com.gregtechceu.gtceu.api.pattern.TraceabilityPredicate": Internal.ClassInfo, "net.minecraft.world.level.GameRules$Category": Internal.ClassInfo, "pokefenn.totemic.api.totem.PortableTotemCarving": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerSleepInBedEvent": Internal.ClassInfo, "snownee.lychee.mixin.NbtPredicateAccess": Internal.ClassInfo, "io.wispforest.owo.ui.event.MouseDrag": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.PlacementModifierType": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.fluids.FoodProvider": Internal.ClassInfo, "xfacthd.framedblocks.common.block.pane.FramedFloorBlock": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.client.animation.SmokingPipeItemAnimation": Internal.ClassInfo, "org.apache.commons.lang3.mutable.MutableObject": Internal.ClassInfo, "net.minecraftforge.fml.config.ConfigFileTypeHandler": Internal.ClassInfo, "java.util.function.LongToDoubleFunction": Internal.ClassInfo, "com.mna.effects.beneficial.EffectEldrinSight": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2FloatMap$Entry": Internal.ClassInfo, "com.mna.spells.crafting.SpellRecipe": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.api.items.ISpellstone": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.config.StringConfig": Internal.ClassInfo, "net.minecraft.core.HolderSet$Direct": Internal.ClassInfo, "net.minecraft.world.inventory.RecipeHolder": Internal.ClassInfo, "com.mna.items.constructs.parts.arms.ConstructPartCasterArmRight": Internal.ClassInfo, "org.apache.logging.log4j.core.impl.LogEventFactory": Internal.ClassInfo, "com.inventorypets.pets.petCloud": Internal.ClassInfo, "com.almostreliable.lootjs.loot.action.ModifyLootAction$Callback": Internal.ClassInfo, "net.minecraft.advancements.AdvancementList": Internal.ClassInfo, "techreborn.blocks.lighting.LampBlock": Internal.ClassInfo, "xaero.map.core.IWorldMapServerLevel": Internal.ClassInfo, "net.minecraft.client.searchtree.RefreshableSearchTree": Internal.ClassInfo, "net.minecraftforge.client.model.generators.ModelBuilder$ElementBuilder$RotationBuilder": Internal.ClassInfo, "com.google.common.reflect.Invokable": Internal.ClassInfo, "net.minecraftforge.client.gui.overlay.NamedGuiOverlay": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.ReplaceSphereConfiguration": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.curio.ArcaciteRingItem": Internal.ClassInfo, "com.anthonyhilyard.iceberg.events.RenderTooltipExtEvent$Post": Internal.ClassInfo, "com.github.minecraftschurlimods.potionbundles.AbstractThrowablePotionBundle": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.VariantBlockStateGenerator": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundBossEventPacket$OperationType": Internal.ClassInfo, "appeng.api.orientation.IOrientableBlock": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.redstone.WeatherDetectorBlock": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.lava_sponge.LavaSpongeBlock": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.config.Tristate": Internal.ClassInfo, "com.gregtechceu.gtceu.api.machine.feature.IVoidable": Internal.ClassInfo, "net.minecraft.client.renderer.chunk.RenderChunkRegion": Internal.ClassInfo, "fzzyhmstrs.emi_loot.mixins.LootPoolEntryAccessor": Internal.ClassInfo, "net.minecraft.client.renderer.block.model.BlockElementFace": Internal.ClassInfo, "divinerpg.block_entities.furnace.InfiniFurnaceBlockEntity": Internal.ClassInfo, "techreborn.init.TRContent$TankUnit": Internal.ClassInfo, "net.minecraft.world.level.block.SoulSandBlock": Internal.ClassInfo, "com.almostreliable.lootjs.loot.action.GroupedLootAction": Internal.ClassInfo, "snownee.lychee.core.contextual.ContextualConditionType": Internal.ClassInfo, "net.minecraftforge.client.event.RegisterColorHandlersEvent$Block": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.TinyPipeBaseBlock": Internal.ClassInfo, "java.util.Locale$Category": Internal.ClassInfo, "org.violetmoon.quark.mixin.mixins.accessor.AccessorLivingEntity": Internal.ClassInfo, "net.minecraft.world.entity.player.PlayerModelPart": Internal.ClassInfo, "net.minecraft.world.level.block.WitherSkullBlock": Internal.ClassInfo, "appeng.api.networking.events.statistics.GridStatisticsEvent": Internal.ClassInfo, "java.lang.Package": Internal.ClassInfo, "net.minecraft.world.level.levelgen.WorldDimensions$Complete": Internal.ClassInfo, "xfacthd.framedblocks.common.block.stairs.FramedVerticalHalfStairsBlock": Internal.ClassInfo, "net.minecraft.world.phys.EntityHitResult": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.idols.StatusEffectIdolBlock": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundHurtAnimationPacket": Internal.ClassInfo, "dev.latvian.mods.kubejs.player.PlayerEventJS": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundAnimatePacket": Internal.ClassInfo, "com.llamalad7.mixinextras.sugar.ref.LocalIntRef": Internal.ClassInfo, "java.util.function.Consumer": Internal.ClassInfo, "org.apache.logging.log4j.core.filter.Filterable": Internal.ClassInfo, "org.violetmoon.zeta.registry.RenderLayerRegistry$Layer": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.callbacks.BlockStateModifyCallbackJS": Internal.ClassInfo, "java.util.concurrent.ConcurrentHashMap$CollectionView": Internal.ClassInfo, "java.time.format.DateTimeFormatter": Internal.ClassInfo, "mezz.jei.api.ingredients.IIngredientTypeWithSubtypes": Internal.ClassInfo, "com.google.common.collect.RegularImmutableTable": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.DirectionProperty": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.ReplacementMatch": Internal.ClassInfo, "net.minecraft.world.level.block.BonemealableBlock": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.render.chunk.map.ChunkTrackerHolder": Internal.ClassInfo, "java.security.KeyPair": Internal.ClassInfo, "fzzyhmstrs.emi_loot.util.LootManagerConditionManager": Internal.ClassInfo, "net.minecraftforge.client.event.RenderGuiEvent$Post": Internal.ClassInfo, "net.minecraftforge.client.event.RegisterGuiOverlaysEvent": Internal.ClassInfo, "org.orecruncher.dsurround.mixins.audio.MixinSoundEngineAccessor": Internal.ClassInfo, "de.dafuqs.spectrum.items.tools.GlassCrestWorkstaffItem": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.icon.Icon": Internal.ClassInfo, "net.minecraft.world.level.block.FurnaceBlock": Internal.ClassInfo, "java.util.concurrent.atomic.AtomicReferenceArray": Internal.ClassInfo, "com.lowdragmc.lowdraglib.syncdata.IManaged": Internal.ClassInfo, "net.minecraft.world.entity.SpawnPlacements$SpawnPredicate": Internal.ClassInfo, "net.fabricmc.fabric.api.transfer.v1.transaction.TransactionContext$CloseCallback": Internal.ClassInfo, "org.violetmoon.quark.addons.oddities.item.TinyPotatoBlockItem": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.BooleanProperty": Internal.ClassInfo, "appeng.api.config.PowerUnits": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.trunkplacers.ForkingTrunkPlacer": Internal.ClassInfo, "net.minecraft.world.entity.schedule.Keyframe": Internal.ClassInfo, "net.fabricmc.fabric.mixin.networking.accessor.CustomPayloadC2SPacketAccessor": Internal.ClassInfo, "net.minecraftforge.client.event.RenderHandEvent": Internal.ClassInfo, "com.mna.api.events.construct.ConstructSprayEffectEvent": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap": Internal.ClassInfo, "snownee.lychee.item_inside.ItemInsideRecipe": Internal.ClassInfo, "it.unimi.dsi.fastutil.chars.CharPredicate": Internal.ClassInfo, "xaero.map.core.IWorldMapMinecraftClient": Internal.ClassInfo, "xfacthd.framedblocks.common.block.sign.AbstractFramedHangingSignBlock": Internal.ClassInfo, "net.minecraft.world.level.biome.Biome$Precipitation": Internal.ClassInfo, "com.yogpc.qp.machines.module.ModuleInventory": Internal.ClassInfo, "org.apache.logging.log4j.MarkerManager$Log4jMarker": Internal.ClassInfo, "org.w3c.dom.DOMImplementation": Internal.ClassInfo, "com.mna.effects.harmful.EffectDeath": Internal.ClassInfo, "com.gregtechceu.gtceu.common.data.GTRecipeTypes": Internal.ClassInfo, "com.mojang.realmsclient.dto.ValueObject": Internal.ClassInfo, "java.util.EnumMap": Internal.ClassInfo, "snownee.lychee.util.json.JsonPointer": Internal.ClassInfo, "net.minecraft.client.gui.navigation.FocusNavigationEvent": Internal.ClassInfo, "com.enderio.api.conduit.IConduitMenuData$Simple": Internal.ClassInfo, "appeng.hooks.IntrinsicEnchantItem": Internal.ClassInfo, "java.time.chrono.Chronology": Internal.ClassInfo, "vectorwing.farmersdelight.common.item.HotCocoaItem": Internal.ClassInfo, "com.aizistral.etherium.items.EtheriumOre": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundPlayerInfoUpdatePacket$Action": Internal.ClassInfo, "org.apache.commons.lang3.mutable.Mutable": Internal.ClassInfo, "org.apache.logging.log4j.core.lookup.StrMatcher": Internal.ClassInfo, "net.minecraftforge.client.event.ViewportEvent$ComputeFogColor": Internal.ClassInfo, "com.mojang.blaze3d.platform.InputConstants$Type": Internal.ClassInfo, "appeng.debug.ChunkLoaderBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.common.block.GTCeilingHangingSignBlock": Internal.ClassInfo, "com.mna.api.particles.parameters.ParticleColor$IntWrapper": Internal.ClassInfo, "org.violetmoon.quark.base.item.boat.QuarkBoatItem": Internal.ClassInfo, "dev.ftb.mods.ftbteams.api.Team": Internal.ClassInfo, "com.gregtechceu.gtceu.api.capability.IWorkable": Internal.ClassInfo, "net.minecraft.world.entity.ai.navigation.GroundPathNavigation": Internal.ClassInfo, "net.minecraft.world.level.block.BigDripleafBlock": Internal.ClassInfo, "appeng.items.tools.fluix.FluixPickaxeItem": Internal.ClassInfo, "org.violetmoon.zeta.recipe.FlagIngredient$Serializer": Internal.ClassInfo, "com.mna.effects.beneficial.EffectInstantMana": Internal.ClassInfo, "com.lowdragmc.lowdraglib.client.renderer.IItemRendererProvider": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.IntCollection": Internal.ClassInfo, "net.minecraft.world.level.block.entity.BlastFurnaceBlockEntity": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.gen.properties.AddLakeProperties": Internal.ClassInfo, "appeng.api.config.FuzzyMode": Internal.ClassInfo, "net.minecraftforge.client.event.InputEvent$Key": Internal.ClassInfo, "com.gregtechceu.gtceu.api.block.MaterialBlock": Internal.ClassInfo, "dev.latvian.mods.rhino.util.wrap.TypeWrappers": Internal.ClassInfo, "com.mojang.serialization.DataResult": Internal.ClassInfo, "com.electronwill.nightconfig.core.file.FileConfig": Internal.ClassInfo, "net.fabricmc.fabric.api.client.screen.v1.ScreenEvents$BeforeTick": Internal.ClassInfo, "org.orecruncher.dsurround.mixinutils.IMusicManager": Internal.ClassInfo, "net.minecraftforge.client.event.EntityRenderersEvent$RegisterLayerDefinitions": Internal.ClassInfo, "snownee.lychee.dripstone_dripping.DripstoneContext": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.Infinimeal": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingDestroyBlockEvent": Internal.ClassInfo, "divinerpg.items.vanilla.ItemSlowingSword": Internal.ClassInfo, "net.minecraft.world.level.levelgen.heightproviders.HeightProviderType": Internal.ClassInfo, "xfacthd.framedblocks.common.block.stairs.FramedVerticalStairsBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.foliageplacers.FoliagePlacer": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.conditional.colored_tree.ColoredTree$TreePart": Internal.ClassInfo, "net.minecraft.world.level.timers.TimerCallback": Internal.ClassInfo, "org.slf4j.Marker": Internal.ClassInfo, "divinerpg.items.arcana.ItemStaffStarlight": Internal.ClassInfo, "java.awt.im.InputMethodHighlight": Internal.ClassInfo, "net.minecraft.client.color.item.ItemColor": Internal.ClassInfo, "com.gregtechceu.gtceu.api.capability.IPropertyFluidFilter": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.chests.HeartboundChestBlock": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.core.misc.IExtendedPistonTile": Internal.ClassInfo, "net.fabricmc.fabric.impl.client.indigo.renderer.render.AbstractRenderContext": Internal.ClassInfo, "java.util.concurrent.ScheduledFuture": Internal.ClassInfo, "cofh.core.common.item.CoinItem": Internal.ClassInfo, "org.joml.Matrix4x3d": Internal.ClassInfo, "net.minecraft.world.level.block.BeaconBlock": Internal.ClassInfo, "org.joml.Matrix4x3f": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.GenerateClientAssetsEventJS": Internal.ClassInfo, "net.minecraft.world.entity.player.Inventory": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.items.JarItem": Internal.ClassInfo, "net.minecraft.world.item.ChorusFruitItem": Internal.ClassInfo, "com.mna.api.items.inventory.ISpellBookInventory": Internal.ClassInfo, "net.minecraft.world.entity.player.Player$BedSleepingProblem": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.events.IVillagerBrainEvent": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.world.ServerWorldExtended": Internal.ClassInfo, "net.minecraftforge.client.event.RegisterClientReloadListenersEvent": Internal.ClassInfo, "appeng.block.misc.CrankBlock": Internal.ClassInfo, "dev.latvian.mods.unit.UnitVariables": Internal.ClassInfo, "net.minecraft.world.DifficultyInstance": Internal.ClassInfo, "snownee.lychee.core.recipe.type.BlockKeyRecipeType": Internal.ClassInfo, "java.time.OffsetTime": Internal.ClassInfo, "com.mojang.brigadier.suggestion.Suggestions": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.boom.ThreatConfluxBlock$ArmedState": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.BerserkEmblem": Internal.ClassInfo, "javax.accessibility.AccessibleState": Internal.ClassInfo, "top.theillusivec4.curios.api.type.capability.ICurio$SoundInfo": Internal.ClassInfo, "com.enderio.api.conduit.IExtendedConduitData$EmptyExtendedConduitData": Internal.ClassInfo, "net.minecraft.client.telemetry.TelemetryProperty": Internal.ClassInfo, "reborncore.common.multiblock.BlockMultiblockBase": Internal.ClassInfo, "com.mojang.serialization.Codec$ResultFunction": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.medicalcondition.MedicalCondition": Internal.ClassInfo, "com.sonicether.soundphysics.world.CachingClientLevel": Internal.ClassInfo, "com.mna.effects.neutral.SimpleNeutralEffect": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.entries.LootPoolEntryType": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingEvent": Internal.ClassInfo, "dev.onyxstudios.cca.api.v3.component.Component": Internal.ClassInfo, "net.minecraft.world.level.levelgen.RandomState": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.util.Point2i": Internal.ClassInfo, "com.inventorypets.items.rockCandy": Internal.ClassInfo, "com.mna.api.faction.IFaction": Internal.ClassInfo, "it.unimi.dsi.fastutil.chars.CharListIterator": Internal.ClassInfo, "xaero.map.file.export.PNGExportResult": Internal.ClassInfo, "net.minecraft.world.item.enchantment.LootBonusEnchantment": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.HugeRedMushroomFeature": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.custom.ArmorItemBuilder$Helmet": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.worldgen.GTLayerPattern$Builder": Internal.ClassInfo, "io.wispforest.owo.util.Observable": Internal.ClassInfo, "de.dafuqs.spectrum.items.food.TeaItem": Internal.ClassInfo, "net.minecraft.client.renderer.RenderStateShard$WriteMaskStateShard": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.trunkplacers.CherryTrunkPlacer": Internal.ClassInfo, "com.mojang.datafixers.util.Unit": Internal.ClassInfo, "java.util.AbstractSet": Internal.ClassInfo, "net.minecraft.util.valueproviders.ClampedInt": Internal.ClassInfo, "net.minecraft.world.level.block.SculkBlock": Internal.ClassInfo, "net.minecraft.world.level.block.CalibratedSculkSensorBlock": Internal.ClassInfo, "net.minecraft.client.model.HumanoidModel$ArmPose": Internal.ClassInfo, "com.mojang.brigadier.exceptions.Dynamic2CommandExceptionType": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.ModifyRecipeCraftingGrid": Internal.ClassInfo, "techreborn.blocks.transformers.BlockLVTransformer": Internal.ClassInfo, "com.probejs.jdoc.document.DocumentMethod": Internal.ClassInfo, "net.minecraft.world.entity.vehicle.AbstractMinecartContainer": Internal.ClassInfo, "dev.ftb.mods.ftbquests.block.entity.TaskScreenBlockEntity": Internal.ClassInfo, "com.mojang.authlib.minecraft.TelemetryPropertyContainer": Internal.ClassInfo, "net.minecraft.world.level.block.Fallable": Internal.ClassInfo, "com.mna.items.artifice.curio.ItemEldritchOrb": Internal.ClassInfo, "snownee.lychee.mixin.StatePropertiesPredicateAccess": Internal.ClassInfo, "vazkii.patchouli.client.book.template.TemplateInclusion": Internal.ClassInfo, "techreborn.blocks.misc.TechRebornStairsBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.misc.PotionBuilder": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.custom.ArmorItemBuilder$Chestplate": Internal.ClassInfo, "com.lowdragmc.lowdraglib.client.renderer.IBlockRendererProvider": Internal.ClassInfo, "net.minecraft.world.entity.ai.attributes.Attribute": Internal.ClassInfo, "net.minecraft.world.item.enchantment.ArrowInfiniteEnchantment": Internal.ClassInfo, "net.mehvahdjukaar.amendments.common.SwingAnimation": Internal.ClassInfo, "net.minecraft.world.level.block.MudBlock": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slab.FramedSlabBlock": Internal.ClassInfo, "software.bernie.geckolib.core.keyframe.AnimationPointQueue": Internal.ClassInfo, "net.minecraft.world.level.block.HangingRootsBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.api.machine.feature.multiblock.IWorkableMultiController": Internal.ClassInfo, "net.minecraft.client.renderer.RenderStateShard$OverlayStateShard": Internal.ClassInfo, "net.minecraft.world.level.block.EquipableCarvedPumpkinBlock": Internal.ClassInfo, "com.mna.api.spells.parts.SpellEffect": Internal.ClassInfo, "snownee.lychee.core.recipe.ILycheeRecipe$NBTPatchContext": Internal.ClassInfo, "java.util.jar.Manifest": Internal.ClassInfo, "org.w3c.dom.Text": Internal.ClassInfo, "net.fabricmc.fabric.api.networking.v1.PacketSender": Internal.ClassInfo, "io.netty.util.AttributeMap": Internal.ClassInfo, "io.netty.util.concurrent.ScheduledFuture": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.RandomBooleanFeatureConfiguration": Internal.ClassInfo, "net.minecraftforge.client.model.generators.ConfiguredModel$Builder": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.NumberComponent$IntRange": Internal.ClassInfo, "net.minecraft.core.Holder": Internal.ClassInfo, "fzzyhmstrs.emi_loot.mixins.LootPoolAccessor": Internal.ClassInfo, "appeng.api.config.CpuSelectionMode": Internal.ClassInfo, "com.electronwill.nightconfig.core.UnmodifiableCommentedConfig$Entry": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundJigsawGeneratePacket": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.WissenActivatorBlock": Internal.ClassInfo, "com.enderio.api.conduit.IConduitType": Internal.ClassInfo, "com.mna.items.constructs.parts.torso.ConstructPartArmorTorso": Internal.ClassInfo, "appeng.items.tools.powered.MatterCannonItem": Internal.ClassInfo, "appeng.blockentity.AEBaseInvBlockEntity": Internal.ClassInfo, "java.awt.font.GlyphJustificationInfo": Internal.ClassInfo, "com.mna.brewing.ManaPotion": Internal.ClassInfo, "mods.railcraft.world.item.CrowbarItem": Internal.ClassInfo, "java.util.GregorianCalendar": Internal.ClassInfo, "net.minecraft.world.level.block.CakeBlock": Internal.ClassInfo, "java.lang.module.ModuleDescriptor$Version": Internal.ClassInfo, "net.minecraft.world.entity.monster.Ravager": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Reference2ShortFunction": Internal.ClassInfo, "org.apache.logging.log4j.core.impl.ThrowableProxy": Internal.ClassInfo, "xfacthd.framedblocks.common.block.door.FramedFenceGateBlock": Internal.ClassInfo, "net.minecraft.client.renderer.block.model.BakedQuad": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundCustomChatCompletionsPacket$Action": Internal.ClassInfo, "net.minecraftforge.client.model.generators.ModelBuilder$TransformsBuilder": Internal.ClassInfo, "net.minecraft.client.renderer.block.model.ItemTransform": Internal.ClassInfo, "net.minecraftforge.client.event.RenderHighlightEvent": Internal.ClassInfo, "com.inventorypets.pets.petEnchantingTable": Internal.ClassInfo, "dev.latvian.mods.rhino.UniqueTag": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.shooting_star.ShootingStar": Internal.ClassInfo, "appeng.api.config.Setting": Internal.ClassInfo, "net.minecraft.world.level.block.WallHangingSignBlock": Internal.ClassInfo, "com.mna.items.artifice.ItemBubbleBoat": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.block.ILightable$FireSourceType": Internal.ClassInfo, "com.yogpc.qp.machines.misc.YSetterItem": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.Half": Internal.ClassInfo, "vectorwing.farmersdelight.common.item.SkilletItem": Internal.ClassInfo, "appeng.block.storage.SkyChestBlock": Internal.ClassInfo, "io.netty.channel.ChannelOption": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.SoulDust": Internal.ClassInfo, "net.fabricmc.fabric.api.transfer.v1.storage.base.SingleSlotStorage": Internal.ClassInfo, "dev.latvian.mods.kubejs.command.CommandRegistryEventJS": Internal.ClassInfo, "java.util.function.DoubleFunction": Internal.ClassInfo, "mcp.mobius.waila.mixin.BeaconBlockEntityAccess": Internal.ClassInfo, "net.minecraft.world.item.crafting.ArmorDyeRecipe": Internal.ClassInfo, "elucent.eidolon.common.item.curio.PrestigiousPalmItem": Internal.ClassInfo, "mods.railcraft.world.level.block.detector.LocomotiveDetectorBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.GeodeConfiguration": Internal.ClassInfo, "net.minecraft.world.level.block.TripWireHookBlock": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.generic.ItemBasePotion": Internal.ClassInfo, "com.kamth.zeldamod.item.items.HammerItem": Internal.ClassInfo, "com.mna.items.armor.FeyArmorItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.BlockKJS": Internal.ClassInfo, "net.minecraft.world.level.block.SnowLayerBlock": Internal.ClassInfo, "tfar.craftingstation.CraftingStationSlabBlock": Internal.ClassInfo, "net.minecraft.client.renderer.blockentity.BlockEntityRendererProvider$Context": Internal.ClassInfo, "mods.railcraft.particle.RailcraftParticleTypes$1": Internal.ClassInfo, "net.minecraftforge.server.permission.events.PermissionGatherEvent": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.SarconIngotItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.creativetab.CreativeTabIconSupplier": Internal.ClassInfo, "divinerpg.enums.BlockColor": Internal.ClassInfo, "net.minecraft.world.level.levelgen.DensityFunction$Visitor": Internal.ClassInfo, "snownee.lychee.core.input.ItemHolderCollection": Internal.ClassInfo, "com.kamth.zeldamod.item.items.PurpleRingItem": Internal.ClassInfo, "com.gregtechceu.gtceu.api.fluids.FluidBuilder": Internal.ClassInfo, "de.dafuqs.spectrum.items.tools.MalachiteCrossbowItem": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundKeepAlivePacket": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.idols.SlimeSizingIdolBlock": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetEquipmentPacket": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.item_bowl.ItemBowlBlock": Internal.ClassInfo, "net.minecraft.world.entity.player.Abilities": Internal.ClassInfo, "com.kamth.zeldamod.block.custom.BlueDekuFlowerBlock": Internal.ClassInfo, "appeng.api.networking.crafting.CraftingJobStatus": Internal.ClassInfo, "xaero.map.file.MapSaveLoad": Internal.ClassInfo, "dev.latvian.mods.kubejs.util.WrappedJS": Internal.ClassInfo, "com.tterrag.registrate.providers.RegistrateProvider": Internal.ClassInfo, "org.violetmoon.zeta.world.EntitySpawnHandler": Internal.ClassInfo, "com.mojang.brigadier.context.StringRange": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.redstone.RedstoneInteractionBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.EnvironmentScanPlacement": Internal.ClassInfo, "net.minecraft.client.sounds.SoundEventListener": Internal.ClassInfo, "org.apache.logging.log4j.core.util.Source": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.material.properties.HazardProperty": Internal.ClassInfo, "com.enderio.base.common.enchantment.AutoSmeltEnchantment": Internal.ClassInfo, "com.mna.effects.beneficial.EffectManaRegen": Internal.ClassInfo, "net.minecraft.world.entity.animal.horse.Donkey": Internal.ClassInfo, "io.netty.channel.ChannelId": Internal.ClassInfo, "org.violetmoon.zeta.network.ZetaMessageSerializer$Reader": Internal.ClassInfo, "snownee.lychee.core.recipe.LycheeRecipe": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundCommandSuggestionsPacket": Internal.ClassInfo, "net.minecraft.client.resources.SkinManager": Internal.ClassInfo, "net.minecraft.world.entity.ai.gossip.GossipContainer$EntityGossips": Internal.ClassInfo, "net.minecraft.world.entity.animal.FlyingAnimal": Internal.ClassInfo, "com.mna.blocks.artifice.ConstructWorkbenchBlock": Internal.ClassInfo, "shcm.shsupercm.forge.citresewn.pack.cits.CITEnchantment$Dummy$GlintRenderLayer": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.block.ListeningBlockStatePredicate": Internal.ClassInfo, "mods.railcraft.api.charge.ChargeCartStorage": Internal.ClassInfo, "net.minecraft.world.level.levelgen.NoiseChunk": Internal.ClassInfo, "dev.latvian.mods.kubejs.fluid.FluidBuilder": Internal.ClassInfo, "malte0811.ferritecore.mixin.dedupbakedquad.BakedQuadAccess": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.world.ChunkRandomSource": Internal.ClassInfo, "snownee.lychee.core.LycheeContext$Builder": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.SculkSensorPhase": Internal.ClassInfo, "mezz.jei.api.gui.builder.IRecipeSlotBuilder": Internal.ClassInfo, "java.text.AttributedCharacterIterator": Internal.ClassInfo, "net.minecraft.world.entity.projectile.FishingHook$FishHookState": Internal.ClassInfo, "com.chailotl.particular.mixin.AccessorEnderChestBlockEntity": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.model.color.interop.BlockColorsExtended": Internal.ClassInfo, "java.io.ObjectInput": Internal.ClassInfo, "net.minecraftforge.common.ForgeSpawnEggItem": Internal.ClassInfo, "net.minecraft.world.level.block.BeaconBeamBlock": Internal.ClassInfo, "org.apache.commons.lang3.mutable.MutableBoolean": Internal.ClassInfo, "divinerpg.items.arcana.ItemEnderScepter": Internal.ClassInfo, "techreborn.blocks.storage.energy.MediumVoltageSUBlock": Internal.ClassInfo, "com.mojang.authlib.minecraft.report.ReportEvidence": Internal.ClassInfo, "net.fabricmc.fabric.api.item.v1.EquipmentSlotProvider": Internal.ClassInfo, "appeng.blockentity.networking.EnergyAcceptorBlockEntity": Internal.ClassInfo, "net.minecraft.world.entity.monster.Strider": Internal.ClassInfo, "com.enderio.base.common.enchantment.ShimmerEnchantment": Internal.ClassInfo, "net.minecraft.client.renderer.debug.RaidDebugRenderer": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.pools.LegacySinglePoolElement": Internal.ClassInfo, "pokefenn.totemic.block.music.DrumBlock": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeFluid": Internal.ClassInfo, "net.minecraftforge.event.entity.living.MobSpawnEvent": Internal.ClassInfo, "com.aizistral.omniconfig.Property": Internal.ClassInfo, "dev.ftb.mods.ftbquests.item.CustomIconItem": Internal.ClassInfo, "java.util.function.DoubleUnaryOperator": Internal.ClassInfo, "de.dafuqs.spectrum.enchantments.SteadfastEnchantment": Internal.ClassInfo, "dynamic_fps.impl.util.duck.DuckScreen": Internal.ClassInfo, "net.minecraft.world.item.enchantment.TridentImpalerEnchantment": Internal.ClassInfo, "io.wispforest.owo.ui.core.ParentComponent": Internal.ClassInfo, "java.lang.Thread$UncaughtExceptionHandler": Internal.ClassInfo, "xfacthd.framedblocks.api.predicate.contex.NonDetailedConnectionPredicate": Internal.ClassInfo, "com.inventorypets.pets.petPufferfish": Internal.ClassInfo, "java.time.chrono.ChronoLocalDate": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.CreativeLightStorageBlock": Internal.ClassInfo, "appeng.recipes.handlers.InscriberRecipe": Internal.ClassInfo, "net.minecraft.client.gui.GuiGraphics$ScissorStack": Internal.ClassInfo, "net.fabricmc.fabric.impl.client.screen.ScreenExtensions": Internal.ClassInfo, "snownee.lychee.util.RecipeMatcher": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundAddEntityPacket": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.jade_vines.JadeVinePetalBlock": Internal.ClassInfo, "java.util.stream.IntStream$IntMapMultiConsumer": Internal.ClassInfo, "dev.latvian.mods.rhino.mod.util.MinecraftRemapper": Internal.ClassInfo, "com.connectivity.networkstats.IWrappedPacket": Internal.ClassInfo, "net.minecraft.world.entity.decoration.LeashFenceKnotEntity": Internal.ClassInfo, "net.minecraft.world.level.chunk.storage.ChunkStorage": Internal.ClassInfo, "java.lang.constant.MethodHandleDesc": Internal.ClassInfo, "snownee.lychee.core.ItemShapelessContext": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.CreativeKnowledgeSrollItem": Internal.ClassInfo, "de.dafuqs.spectrum.items.tools.GlassCrestGreatswordItem": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.item_roundel.ItemRoundelBlock": Internal.ClassInfo, "divinerpg.items.vanilla.ItemSerenadeOfDeath": Internal.ClassInfo, "com.google.common.collect.ListMultimap": Internal.ClassInfo, "divinerpg.blocks.iceika.BlockWinterberryVinesHead": Internal.ClassInfo, "io.wispforest.owo.ui.core.CursorStyle": Internal.ClassInfo, "java.util.function.UnaryOperator": Internal.ClassInfo, "net.minecraft.world.entity.boss.wither.WitherBoss": Internal.ClassInfo, "net.minecraft.world.level.chunk.PalettedContainer": Internal.ClassInfo, "de.dafuqs.spectrum.items.tools.LagoonRodItem": Internal.ClassInfo, "net.fabricmc.fabric.api.datagen.v1.loot.FabricBlockLootTableGenerator": Internal.ClassInfo, "org.violetmoon.zeta.event.load.ZConfigChanged": Internal.ClassInfo, "net.minecraft.client.Camera$NearPlane": Internal.ClassInfo, "net.minecraft.stats.StatFormatter": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgePotion": Internal.ClassInfo, "techreborn.items.ManualItem": Internal.ClassInfo, "net.fabricmc.fabric.api.resource.IdentifiableResourceReloadListener": Internal.ClassInfo, "net.minecraft.world.item.enchantment.ArrowFireEnchantment": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.SimpleBlockConfiguration": Internal.ClassInfo, "net.minecraft.world.level.levelgen.WorldgenRandom$Algorithm": Internal.ClassInfo, "org.apache.logging.log4j.core.LifeCycle": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.render.immediate.model.ModelPartData": Internal.ClassInfo, "java.text.CharacterIterator": Internal.ClassInfo, "appeng.api.storage.cells.IBasicCellItem": Internal.ClassInfo, "appeng.items.tools.GuideItem": Internal.ClassInfo, "java.security.PrivilegedExceptionAction": Internal.ClassInfo, "net.minecraftforge.registries.IForgeRegistry": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.rock_candy.SugarStickBlock": Internal.ClassInfo, "appeng.api.stacks.KeyCounter": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.CoralMushroomFeature": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blockpredicates.WouldSurvivePredicate": Internal.ClassInfo, "com.mna.api.entities.construct.materials.ConstructMaterialUnknown": Internal.ClassInfo, "org.embeddedt.embeddium.api.model.EmbeddiumBakedModelExtension": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerPacketListener": Internal.ClassInfo, "net.minecraft.client.renderer.texture.SpriteContents$AnimatedTexture": Internal.ClassInfo, "net.minecraft.resources.RegistryOps$RegistryInfo": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.TotemOfExperienceAbsorptionBlock": Internal.ClassInfo, "net.minecraft.world.level.block.InfestedRotatedPillarBlock": Internal.ClassInfo, "net.minecraft.world.entity.MoverType": Internal.ClassInfo, "net.minecraft.client.GuiMessageTag$Icon": Internal.ClassInfo, "mods.railcraft.world.item.tunnelbore.IronTunnelBoreHeadItem": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.editor.ui.StringTabContainer": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.Int2ShortFunction": Internal.ClassInfo, "dev.latvian.mods.kubejs.fluid.FluidWrapper": Internal.ClassInfo, "techreborn.blocks.misc.BlockRubberLog": Internal.ClassInfo, "cofh.core.common.block.GlossedMagmaBlock": Internal.ClassInfo, "de.dafuqs.spectrum.items.magic_items.ampoules.BaseGlassAmpouleItem": Internal.ClassInfo, "net.minecraft.client.gui.font.FontSet": Internal.ClassInfo, "net.minecraft.world.phys.shapes.DiscreteVoxelShape$IntFaceConsumer": Internal.ClassInfo, "java.nio.file.attribute.GroupPrincipal": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.foliageplacers.RandomSpreadFoliagePlacer": Internal.ClassInfo, "com.mojang.blaze3d.vertex.BufferBuilder$RenderedBuffer": Internal.ClassInfo, "java.util.RandomAccess": Internal.ClassInfo, "com.gregtechceu.gtceu.api.registry.registrate.BuilderBase": Internal.ClassInfo, "net.mehvahdjukaar.polytone.mixins.forge.ModifiableBiomeInfoBiomeInfoAccessor": Internal.ClassInfo, "net.minecraft.world.inventory.ContainerListener": Internal.ClassInfo, "net.minecraft.world.item.crafting.SmithingTransformRecipe$Serializer": Internal.ClassInfo, "org.violetmoon.zeta.config.ConfigFlagManager": Internal.ClassInfo, "de.dafuqs.matchbooks.recipe.IngredientStack": Internal.ClassInfo, "net.fabricmc.fabric.impl.client.indigo.renderer.render.AbstractBlockRenderContext": Internal.ClassInfo, "javax.swing.text.TabSet": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.trunkplacers.UpwardsBranchingTrunkPlacer": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.InputItem": Internal.ClassInfo, "terrablender.worldgen.IExtendedParameterList": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.objects.Perhaps": Internal.ClassInfo, "io.netty.util.concurrent.Promise": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.ReferenceArraySet": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.LongComparator": Internal.ClassInfo, "com.kamth.zeldamod.item.items.KeyItem": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.boom.IncandescentAmalgamBlock": Internal.ClassInfo, "net.minecraft.util.valueproviders.UniformFloat": Internal.ClassInfo, "com.kamth.zeldamod.item.armors.Flippers": Internal.ClassInfo, "org.embeddedt.modernfix.duck.IBlockState": Internal.ClassInfo, "net.minecraft.world.level.block.WeepingVinesPlantBlock": Internal.ClassInfo, "net.minecraft.core.RegistryAccess$Frozen": Internal.ClassInfo, "io.wispforest.owo.ui.core.Positioning": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.boom.ParametricMiningDeviceBlock": Internal.ClassInfo, "com.yogpc.qp.machines.module.PumpModuleItem": Internal.ClassInfo, "com.kamth.zeldamod.block.custom.HammerPegBlock": Internal.ClassInfo, "net.minecraft.server.players.GameProfileCache": Internal.ClassInfo, "org.violetmoon.zeta.module.ZetaModuleManager": Internal.ClassInfo, "dev.latvian.mods.rhino.mod.util.OrderedCompoundTag": Internal.ClassInfo, "java.lang.IllegalStateException": Internal.ClassInfo, "net.minecraft.client.renderer.RenderStateShard$OutputStateShard": Internal.ClassInfo, "net.minecraft.server.network.ServerPlayerConnection": Internal.ClassInfo, "org.violetmoon.zeta.item.ZetaSmithingTemplateItem": Internal.ClassInfo, "appeng.me.service.CraftingService": Internal.ClassInfo, "com.chailotl.particular.mixin.AccessorChestBlockEntity": Internal.ClassInfo, "net.minecraft.world.item.enchantment.ArrowDamageEnchantment": Internal.ClassInfo, "net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.CoralTreeFeature": Internal.ClassInfo, "com.mojang.datafixers.util.Pair$Mu": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.DripstoneClusterConfiguration": Internal.ClassInfo, "com.inventorypets.pets.petCobblestone": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.farming.TilledSlushBlock": Internal.ClassInfo, "com.mna.items.artifice.ItemEnderguardAmulet": Internal.ClassInfo, "appeng.api.networking.IGridNodeListener$State": Internal.ClassInfo, "net.minecraft.world.level.block.BaseCoralPlantTypeBlock": Internal.ClassInfo, "net.minecraft.client.HotbarManager": Internal.ClassInfo, "com.yogpc.qp.machines.CheckerLog": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.VillagerBabiesSensor": Internal.ClassInfo, "net.minecraft.client.sounds.MusicManager": Internal.ClassInfo, "net.minecraft.world.level.block.RedStoneOreBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.loot.LootBuilder": Internal.ClassInfo, "me.jellysquid.mods.lithium.mixin.chunk.entity_class_groups.EntityTrackingSectionAccessor": Internal.ClassInfo, "com.gregtechceu.gtceu.api.capability.recipe.IRecipeHandler": Internal.ClassInfo, "net.minecraft.client.multiplayer.chat.report.ReportEnvironment": Internal.ClassInfo, "divinerpg.items.vethea.ItemMinersAmulet": Internal.ClassInfo, "net.minecraft.world.inventory.StonecutterMenu": Internal.ClassInfo, "net.minecraft.client.gui.screens.worldselection.WorldCreationContext": Internal.ClassInfo, "com.gregtechceu.gtceu.integration.kjs.recipe.components.CapabilityMap": Internal.ClassInfo, "io.wispforest.owo.ui.core.OwoUIDrawContext$TextAnchor": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.LargeDripstoneFeature": Internal.ClassInfo, "com.mna.api.spells.attributes.Attribute": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingKnockBackEvent": Internal.ClassInfo, "net.fabricmc.fabric.api.client.screen.v1.ScreenMouseEvents$AfterMouseRelease": Internal.ClassInfo, "snownee.lychee.core.Reference$Constant": Internal.ClassInfo, "xaero.map.mcworld.WorldMapClientWorldData": Internal.ClassInfo, "net.minecraftforge.client.event.InputEvent$MouseButton": Internal.ClassInfo, "io.netty.buffer.CompositeByteBuf": Internal.ClassInfo, "elucent.eidolon.common.item.ReversalPickItem": Internal.ClassInfo, "com.electronwill.nightconfig.core.UnmodifiableConfig": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.snbt.SNBTCompoundTag": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.RandomSelectorFeature": Internal.ClassInfo, "net.minecraft.world.level.block.LiquidBlockContainer": Internal.ClassInfo, "com.mojang.brigadier.Command": Internal.ClassInfo, "net.fabricmc.fabric.api.client.screen.v1.ScreenMouseEvents$AllowMouseRelease": Internal.ClassInfo, "net.irisshaders.iris.parsing.ExtendedBiome": Internal.ClassInfo, "com.electronwill.nightconfig.core.io.WritingMode": Internal.ClassInfo, "appeng.items.tools.quartz.QuartzWrenchItem": Internal.ClassInfo, "net.minecraft.world.level.block.RedStoneWireBlock": Internal.ClassInfo, "java.util.HashMap": Internal.ClassInfo, "net.minecraft.world.item.enchantment.QuickChargeEnchantment": Internal.ClassInfo, "com.google.common.collect.Multimap": Internal.ClassInfo, "net.minecraft.client.gui.components.events.ContainerEventHandler": Internal.ClassInfo, "dev.latvian.mods.rhino.EvaluatorException": Internal.ClassInfo, "net.minecraft.world.level.block.TallFlowerBlock": Internal.ClassInfo, "net.minecraft.world.level.block.entity.ComparatorBlockEntity": Internal.ClassInfo, "appeng.items.tools.fluix.FluixSmithingTemplateItem": Internal.ClassInfo, "xaero.map.server.radar.tracker.SyncedPlayerTrackerSystemManager": Internal.ClassInfo, "reborncore.common.BaseBlockEntityProvider": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.PlayerKJS": Internal.ClassInfo, "mezz.jei.api.recipe.category.IRecipeCategory": Internal.ClassInfo, "com.probejs.jdoc.property.PropertyParam": Internal.ClassInfo, "xfacthd.framedblocks.common.block.interactive.FramedWeightedPressurePlateBlock": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.entity.PositionedEntityTrackingSection": Internal.ClassInfo, "fuzs.puzzleslib.mixin.accessor.FireBlockForgeAccessor": Internal.ClassInfo, "com.gregtechceu.gtceu.common.block.explosive.IndustrialTNTBlock": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.conditional.StuckStormStoneBlock": Internal.ClassInfo, "net.minecraftforge.registries.DataPackRegistryEvent": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.DebugInfoEventJS": Internal.ClassInfo, "com.mojang.authlib.UserType": Internal.ClassInfo, "net.minecraft.world.level.block.WallTorchBlock": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundContainerClosePacket": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.PipeBaseBlock": Internal.ClassInfo, "cofh.thermal.dynamics.common.item.DuctBlockItem": Internal.ClassInfo, "dev.latvian.mods.rhino.util.wrap.TypeWrapperFactory": Internal.ClassInfo, "io.wispforest.owo.ui.event.MouseLeave": Internal.ClassInfo, "net.minecraft.nbt.NumericTag": Internal.ClassInfo, "net.minecraft.server.level.ServerPlayerGameMode": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.LongOpenHashSet": Internal.ClassInfo, "java.awt.image.ColorModel": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetEntityDataPacket": Internal.ClassInfo, "com.gregtechceu.gtceu.api.GTCEuAPI": Internal.ClassInfo, "elucent.eidolon.common.item.IWingsItem": Internal.ClassInfo, "java.awt.dnd.DragSourceDragEvent": Internal.ClassInfo, "appeng.blockentity.networking.CreativeEnergyCellBlockEntity": Internal.ClassInfo, "net.minecraftforge.client.event.ClientPlayerNetworkEvent$Clone": Internal.ClassInfo, "net.minecraft.world.effect.MobEffect": Internal.ClassInfo, "fuzs.puzzleslib.mixin.client.accessor.ModelBakeryAccessor": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.farming.ImmutableFarmlandBlock": Internal.ClassInfo, "net.minecraft.world.item.ArmorStandItem": Internal.ClassInfo, "dev.latvian.mods.rhino.mod.wrapper.ColorWrapper": Internal.ClassInfo, "net.minecraft.world.SimpleContainer": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.ItemSorterBlock": Internal.ClassInfo, "divinerpg.blocks.vanilla.BlockAltarOfCorruption": Internal.ClassInfo, "net.minecraft.tags.TagManager$LoadResult": Internal.ClassInfo, "java.util.concurrent.Future": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.PrimordialFireBlock": Internal.ClassInfo, "net.minecraftforge.client.event.RenderLivingEvent": Internal.ClassInfo, "net.minecraft.world.entity.projectile.Projectile": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.idols.BonemealingIdolBlock": Internal.ClassInfo, "techreborn.blocks.misc.BlockRubberPlankStair": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.animation.Transform": Internal.ClassInfo, "net.minecraftforge.client.event.InputEvent$MouseScrollingEvent": Internal.ClassInfo, "com.yanny.ytech.registration.YTechItems$9": Internal.ClassInfo, "com.yanny.ytech.registration.YTechItems$7": Internal.ClassInfo, "com.yanny.ytech.registration.YTechItems$8": Internal.ClassInfo, "elucent.eidolon.common.item.SilverArmorItem": Internal.ClassInfo, "appeng.blockentity.spatial.SpatialPylonBlockEntity$AxisPosition": Internal.ClassInfo, "cofh.core.common.item.IAugmentItem": Internal.ClassInfo, "java.awt.event.KeyEvent": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.dd_deco.HummingstoneBlock": Internal.ClassInfo, "net.minecraft.world.entity.monster.warden.AngerManagement": Internal.ClassInfo, "com.google.gson.LongSerializationPolicy": Internal.ClassInfo, "mezz.jei.api.runtime.IIngredientVisibility": Internal.ClassInfo, "net.minecraft.core.MappedRegistry": Internal.ClassInfo, "appeng.api.config.IncludeExclude": Internal.ClassInfo, "net.minecraft.world.level.gameevent.GameEventListener$DeliveryMode": Internal.ClassInfo, "pokefenn.totemic.item.CustomRenderedBlockItem": Internal.ClassInfo, "com.yanny.ytech.registration.YTechItems$5": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.TotemOfFlamesBlock": Internal.ClassInfo, "com.yanny.ytech.registration.YTechItems$6": Internal.ClassInfo, "com.yanny.ytech.registration.YTechItems$3": Internal.ClassInfo, "com.yanny.ytech.registration.YTechItems$4": Internal.ClassInfo, "com.gregtechceu.gtceu.common.pipelike.laser.LaserPipeNet": Internal.ClassInfo, "com.yanny.ytech.registration.YTechItems$1": Internal.ClassInfo, "com.yanny.ytech.registration.YTechItems$2": Internal.ClassInfo, "dev.latvian.mods.kubejs.util.JsonIO": Internal.ClassInfo, "net.fabricmc.fabric.api.renderer.v1.model.FabricBakedModel": Internal.ClassInfo, "dev.ftb.mods.ftbteams.api.TeamRank": Internal.ClassInfo, "javax.script.Bindings": Internal.ClassInfo, "me.jellysquid.mods.sodium.mixin.features.textures.animations.upload.SpriteContentsAnimationFrameAccessor": Internal.ClassInfo, "dev.latvian.mods.rhino.IdEnumerationIterator": Internal.ClassInfo, "com.lowdragmc.lowdraglib.core.mixins.accessor.VertexFormatAccessor": Internal.ClassInfo, "questsadditions.blocks.LootCrateBlock": Internal.ClassInfo, "snownee.kiwi.mixin.FireBlockAccess": Internal.ClassInfo, "it.unimi.dsi.fastutil.bytes.Byte2ObjectMap$Entry": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.innocentwood.InnocentWoodSwordItem": Internal.ClassInfo, "de.dafuqs.spectrum.events.RedstoneTransferGameEvent": Internal.ClassInfo, "net.minecraft.client.resources.MobEffectTextureManager": Internal.ClassInfo, "com.mna.effects.neutral.EffectSoaked": Internal.ClassInfo, "java.time.zone.ZoneRules": Internal.ClassInfo, "io.wispforest.owo.mixin.ui.access.ButtonWidgetAccessor": Internal.ClassInfo, "net.minecraftforge.client.model.generators.ModelBuilder": Internal.ClassInfo, "net.minecraft.server.players.UserBanListEntry": Internal.ClassInfo, "net.minecraft.world.item.SignItem": Internal.ClassInfo, "net.fabricmc.fabric.api.registry.FlammableBlockRegistry$Entry": Internal.ClassInfo, "net.minecraftforge.eventbus.ListenerList": Internal.ClassInfo, "be.florens.expandability.api.forge.LivingFluidCollisionEvent": Internal.ClassInfo, "net.minecraft.world.inventory.ClickAction": Internal.ClassInfo, "com.mna.items.artifice.SpellModifierRing": Internal.ClassInfo, "org.embeddedt.embeddium.api.OptionGUIConstructionEvent": Internal.ClassInfo, "de.dafuqs.spectrum.items.armor.ArmorWithHitEffect": Internal.ClassInfo, "com.gregtechceu.gtceu.api.pattern.MultiblockState": Internal.ClassInfo, "com.inventorypets.pets.petCraftingTable": Internal.ClassInfo, "com.gregtechceu.gtceu.core.mixins.IFoliagePlacerTypeAccessor": Internal.ClassInfo, "net.minecraft.client.multiplayer.prediction.BlockStatePredictionHandler": Internal.ClassInfo, "com.mojang.datafixers.DataFixer": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.widget.DialogWidget": Internal.ClassInfo, "net.minecraftforge.network.IContainerFactory": Internal.ClassInfo, "com.yogpc.qp.machines.checker.ItemChecker": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.MutableToolTier": Internal.ClassInfo, "net.minecraft.world.level.storage.LevelStorageSource$LevelCandidates": Internal.ClassInfo, "org.violetmoon.zeta.registry.RenderLayerRegistry": Internal.ClassInfo, "appeng.block.crafting.ICraftingUnitType": Internal.ClassInfo, "net.minecraftforge.client.event.RenderPlayerEvent$Post": Internal.ClassInfo, "mods.railcraft.world.level.block.signal.TokenSignalBoxBlock": Internal.ClassInfo, "mods.railcraft.world.level.block.track.actuator.SwitchTrackActuatorBlock": Internal.ClassInfo, "org.embeddedt.modernfix.duck.IServerLevel": Internal.ClassInfo, "net.minecraftforge.client.ChunkRenderTypeSet": Internal.ClassInfo, "cofh.thermal.core.common.item.EarthChargeItem": Internal.ClassInfo, "net.minecraft.network.chat.RemoteChatSession$Data": Internal.ClassInfo, "mods.railcraft.world.level.block.charge.NickelIronBatteryBlock": Internal.ClassInfo, "mods.railcraft.world.module.TankModule": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.EyeOfNebula": Internal.ClassInfo, "com.google.common.collect.ImmutableCollection": Internal.ClassInfo, "com.mojang.text2speech.Narrator": Internal.ClassInfo, "reborncore.common.screen.Syncable": Internal.ClassInfo, "net.fabricmc.fabric.api.client.screen.v1.ScreenMouseEvents$AfterMouseClick": Internal.ClassInfo, "mods.railcraft.world.level.block.signal.SignalSequencerBoxBlock": Internal.ClassInfo, "org.lwjgl.CLongBuffer": Internal.ClassInfo, "divinerpg.world.structure.LowestCeilingType": Internal.ClassInfo, "io.netty.channel.ChannelProgressiveFuture": Internal.ClassInfo, "com.kamth.zeldamod.item.masks.BremenMask": Internal.ClassInfo, "com.gregtechceu.gtceu.api.recipe.lookup.RecipeIterator": Internal.ClassInfo, "com.gregtechceu.gtceu.api.item.IGTTool": Internal.ClassInfo, "mcp.mobius.waila.mixin.GameNarratorAccess": Internal.ClassInfo, "net.minecraft.world.entity.boss.enderdragon.phases.DragonLandingPhase": Internal.ClassInfo, "appeng.decorative.solid.QuartzLampBlock": Internal.ClassInfo, "com.mna.api.blocks.interfaces.IDontCreateBlockItem": Internal.ClassInfo, "net.minecraft.world.level.block.entity.ConduitBlockEntity": Internal.ClassInfo, "net.minecraft.client.resources.sounds.Sound$Type": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.titration_barrel.TitrationBarrelBlock$BarrelState": Internal.ClassInfo, "net.minecraft.world.entity.projectile.SpectralArrow": Internal.ClassInfo, "software.bernie.geckolib.core.keyframe.AnimationPoint": Internal.ClassInfo, "com.mojang.serialization.Decoder$Terminal": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Reference2ReferenceMap": Internal.ClassInfo, "com.mna.blocks.decoration.ScrollshelfBlock": Internal.ClassInfo, "org.violetmoon.quark.content.experimental.item.HammerItem": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.material.properties.WireProperties": Internal.ClassInfo, "java.util.NavigableMap": Internal.ClassInfo, "org.violetmoon.quark.content.building.item.QuarkItemFrameItem": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.FluidExtractorBlock": Internal.ClassInfo, "cpw.mods.jarhandling.SecureJar": Internal.ClassInfo, "net.minecraftforge.registries.IForgeRegistry$BakeCallback": Internal.ClassInfo, "net.minecraft.world.entity.monster.piglin.PiglinBrute": Internal.ClassInfo, "io.wispforest.owo.util.pond.OwoItemExtensions": Internal.ClassInfo, "de.dafuqs.spectrum.items.conditional.StormStoneItem": Internal.ClassInfo, "dev.latvian.mods.rhino.Callable": Internal.ClassInfo, "net.minecraft.world.level.Level": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.curio.ArcanumAmuletItem": Internal.ClassInfo, "net.minecraft.world.scores.Objective": Internal.ClassInfo, "net.minecraftforge.client.event.RenderBlockScreenEffectEvent": Internal.ClassInfo, "vazkii.patchouli.api.PatchouliConfigAccess$TextOverflowMode": Internal.ClassInfo, "cofh.thermal.core.common.item.HazmatArmorItem": Internal.ClassInfo, "cpw.mods.jarhandling.SecureJar$Provider": Internal.ClassInfo, "elucent.eidolon.common.item.SummoningStaffItem": Internal.ClassInfo, "org.violetmoon.zeta.recipe.IZetaIngredientSerializer": Internal.ClassInfo, "com.gregtechceu.gtceu.integration.kjs.events.GTBedrockOreVeinEventJS": Internal.ClassInfo, "appeng.blockentity.storage.ChestBlockEntity": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$Init": Internal.ClassInfo, "net.minecraft.client.gui.components.SubtitleOverlay": Internal.ClassInfo, "net.blay09.mods.balm.api.event.client.screen.ScreenKeyEvent$Press": Internal.ClassInfo, "dev.latvian.mods.kubejs.command.ArgumentTypeWrapper": Internal.ClassInfo, "net.minecraft.world.item.enchantment.BindingCurseEnchantment": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.RepeatingPlacement": Internal.ClassInfo, "net.minecraft.world.entity.Display$BlockDisplay": Internal.ClassInfo, "dev.latvian.mods.kubejs.platform.forge.IngredientForgeHelper": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetBorderLerpSizePacket": Internal.ClassInfo, "org.violetmoon.quark.content.experimental.hax.PseudoAccessorMerchantOffer": Internal.ClassInfo, "net.minecraftforge.common.capabilities.ICapabilityProviderImpl": Internal.ClassInfo, "mods.railcraft.world.item.SignalTunerItem": Internal.ClassInfo, "mezz.jei.api.gui.drawable.IDrawableBuilder": Internal.ClassInfo, "java.nio.charset.CodingErrorAction": Internal.ClassInfo, "net.minecraft.world.level.levelgen.heightproviders.UniformHeight": Internal.ClassInfo, "mezz.jei.api.gui.drawable.IDrawableAnimated$StartDirection": Internal.ClassInfo, "mods.railcraft.api.signal.SignalNetwork": Internal.ClassInfo, "net.minecraft.data.tags.IntrinsicHolderTagsProvider": Internal.ClassInfo, "xaero.map.util.linked.ILinkedChainNode": Internal.ClassInfo, "com.inventorypets.pets.petSilverfish": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.LongBidirectionalIterator": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.world.chunk.ClassGroupFilterableList": Internal.ClassInfo, "java.nio.DoubleBuffer": Internal.ClassInfo, "com.gregtechceu.gtceu.api.pattern.MultiblockShapeInfo$ShapeInfoBuilder": Internal.ClassInfo, "com.mna.recipes.spells.ISpellComponentRecipe": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.featuresize.TwoLayersFeatureSize": Internal.ClassInfo, "com.yanny.ytech.configuration.mob_effect.VenusTouchMobEffect": Internal.ClassInfo, "pokefenn.totemic.item.TotemicStaffItem": Internal.ClassInfo, "com.enderio.base.common.item.misc.CreativeTabIconItem": Internal.ClassInfo, "com.mna.items.artifice.FactionSpecificSpellModifierRing": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.JigsawReplacementProcessor": Internal.ClassInfo, "net.minecraft.world.level.block.SpongeBlock": Internal.ClassInfo, "net.minecraft.world.entity.animal.Parrot": Internal.ClassInfo, "xfacthd.framedblocks.common.block.pillar.FramedThreewayCornerPillarBlock": Internal.ClassInfo, "com.mojang.brigadier.ParseResults": Internal.ClassInfo, "net.minecraft.server.MinecraftServer$ReloadableResources": Internal.ClassInfo, "net.minecraftforge.fluids.FluidType$Properties": Internal.ClassInfo, "net.minecraft.world.entity.animal.Salmon": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.RelicOfTesting": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.SimpleMappingRecipeComponent": Internal.ClassInfo, "appeng.util.ConfigMenuInventory": Internal.ClassInfo, "net.minecraftforge.forgespi.language.IModInfo$DependencySide": Internal.ClassInfo, "divinerpg.blocks.base.BlockModButton": Internal.ClassInfo, "com.llamalad7.mixinextras.sugar.ref.LocalRef": Internal.ClassInfo, "net.minecraft.core.BlockSourceImpl": Internal.ClassInfo, "net.minecraft.world.item.ThrowablePotionItem": Internal.ClassInfo, "com.probejs.jdoc.property.PropertyValue": Internal.ClassInfo, "vazkii.patchouli.client.book.template.BookTemplate": Internal.ClassInfo, "net.minecraft.util.random.WeightedEntry$Wrapper": Internal.ClassInfo, "com.mojang.brigadier.tree.RootCommandNode": Internal.ClassInfo, "divinerpg.effect.mob.armor.arcana.VemosHealEffect": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.CustomCeilingHangingSignBlock": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.util.BooleanConsumer": Internal.ClassInfo, "appeng.api.parts.SelectedPart": Internal.ClassInfo, "net.minecraft.world.level.block.WaterlilyBlock": Internal.ClassInfo, "net.minecraft.world.level.material.FogType": Internal.ClassInfo, "xaero.map.controls.ControlsHandler": Internal.ClassInfo, "terrablender.worldgen.IExtendedNoiseGeneratorSettings": Internal.ClassInfo, "de.keksuccino.melody.mixin.mixins.common.client.IMixinSoundEngine": Internal.ClassInfo, "net.minecraft.world.item.BottleItem": Internal.ClassInfo, "mods.railcraft.world.level.block.entity.multiblock.MultiblockBlockEntity": Internal.ClassInfo, "mods.railcraft.world.level.block.entity.multiblock.MultiblockPattern": Internal.ClassInfo, "net.irisshaders.iris.targets.Blaze3dRenderTargetExt": Internal.ClassInfo, "divinerpg.blocks.iceika.BlockLights": Internal.ClassInfo, "dev.latvian.mods.rhino.Scriptable": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.enchanter.EnchanterBlock": Internal.ClassInfo, "net.minecraftforge.eventbus.api.IGenericEvent": Internal.ClassInfo, "techreborn.blocks.machine.tier1.PlayerDetectorBlock": Internal.ClassInfo, "com.tterrag.registrate.AbstractRegistrate": Internal.ClassInfo, "net.minecraft.client.gui.narration.NarrationThunk": Internal.ClassInfo, "com.google.gson.JsonArray": Internal.ClassInfo, "net.minecraft.world.level.block.DeadBushBlock": Internal.ClassInfo, "net.minecraft.world.MenuProvider": Internal.ClassInfo, "elucent.eidolon.common.potion.AnchoredEffect": Internal.ClassInfo, "divinerpg.items.base.ItemBossSpawner": Internal.ClassInfo, "net.minecraft.world.item.crafting.ShapedRecipe": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.featuresize.FeatureSizeType": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.LootDataType": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.ArcanumDustItem": Internal.ClassInfo, "mods.railcraft.world.level.block.CrushedObsidian": Internal.ClassInfo, "net.minecraft.world.level.block.BannerBlock": Internal.ClassInfo, "dev.ftb.mods.ftbteams.api.property.TeamPropertyCollection": Internal.ClassInfo, "com.kamth.zeldamod.item.items.MagicBoomerangItem": Internal.ClassInfo, "mods.railcraft.world.level.block.charge.FrameBlock": Internal.ClassInfo, "java.util.concurrent.Callable": Internal.ClassInfo, "net.minecraft.world.level.block.FenceBlock": Internal.ClassInfo, "org.apache.logging.log4j.core.time.Instant": Internal.ClassInfo, "java.util.ArrayList": Internal.ClassInfo, "com.lowdragmc.lowdraglib.client.renderer.block.RendererBlock": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.LootParams$DynamicDrop": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.client.animation.ItemAnimation": Internal.ClassInfo, "com.yanny.ytech.configuration.item.ToolItem": Internal.ClassInfo, "com.mojang.authlib.properties.Property": Internal.ClassInfo, "biomesoplenty.common.block.FleshBlock": Internal.ClassInfo, "com.mna.api.entities.IFactionEnemy": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.MiningCharm": Internal.ClassInfo, "snownee.kiwi.mixin.AxeItemAccess": Internal.ClassInfo, "mcp.mobius.waila.mixin.AbstractFurnaceBlockEntityAccess": Internal.ClassInfo, "net.minecraft.client.gui.spectator.SpectatorMenuListener": Internal.ClassInfo, "net.minecraft.world.entity.decoration.Painting": Internal.ClassInfo, "net.minecraftforge.common.data.ExistingFileHelper$IResourceType": Internal.ClassInfo, "appeng.me.cluster.implementations.CraftingCPUCluster": Internal.ClassInfo, "net.minecraft.world.level.NoiseColumn": Internal.ClassInfo, "it.unimi.dsi.fastutil.booleans.Boolean2ReferenceFunction": Internal.ClassInfo, "mods.railcraft.world.level.block.track.outfitted.RoutingTrackBlock": Internal.ClassInfo, "fuzs.puzzleslib.impl.data.ExistingFileHelperHolder": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.mixin.AccessorAbstractArrowEntity": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.PosAlwaysTrueTest": Internal.ClassInfo, "net.minecraft.world.level.levelgen.DensityFunction$SimpleFunction": Internal.ClassInfo, "it.unimi.dsi.fastutil.booleans.Boolean2ByteFunction": Internal.ClassInfo, "dev.ftb.mods.ftbquests.quest.QuestLink": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundChangeDifficultyPacket": Internal.ClassInfo, "net.minecraft.network.chat.SignedMessageLink": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.api.IAntiqueTextProvider": Internal.ClassInfo, "de.dafuqs.spectrum.enchantments.VoidingEnchantment": Internal.ClassInfo, "io.wispforest.owo.ui.layers.Layer": Internal.ClassInfo, "net.minecraft.world.level.block.entity.HangingSignBlockEntity": Internal.ClassInfo, "net.minecraft.world.level.biome.AmbientAdditionsSettings": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundExplodePacket": Internal.ClassInfo, "com.lowdragmc.lowdraglib.syncdata.field.RPCMethodMeta": Internal.ClassInfo, "com.enderio.base.common.item.tool.ColdFireIgniter": Internal.ClassInfo, "java.awt.image.ImageObserver": Internal.ClassInfo, "net.minecraft.network.FriendlyByteBuf$Writer": Internal.ClassInfo, "snownee.lychee.block_crushing.BlockCrushingRecipeType": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.entries.AlternativesEntry$Builder": Internal.ClassInfo, "net.minecraftforge.fml.config.IConfigEvent$ConfigConfig": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.api.spell.Spell": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.texture.TextTexture": Internal.ClassInfo, "mods.railcraft.world.level.block.detector.SheepDetectorBlock": Internal.ClassInfo, "org.apache.maven.repository.Proxy": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.editor.data.IProject": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.innocentwood.InnocentWoodScytheItem": Internal.ClassInfo, "net.minecraft.world.item.crafting.SmeltingRecipe": Internal.ClassInfo, "net.minecraft.world.phys.BlockHitResult": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.MinecraftClientKJS": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.conditional.amaranth.AmaranthCropBlock": Internal.ClassInfo, "net.minecraftforge.common.util.MutableHashedLinkedMap$IdentityStrategy": Internal.ClassInfo, "net.minecraft.world.entity.ai.gossip.GossipContainer": Internal.ClassInfo, "divinerpg.blocks.base.BlockModLight": Internal.ClassInfo, "appeng.api.networking.IGridNodeService": Internal.ClassInfo, "com.probejs.features.plugin.DocGenerationEventJS": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundRemoveMobEffectPacket": Internal.ClassInfo, "dev.onyxstudios.cca.mixin.level.common.MixinWorldProperties": Internal.ClassInfo, "dev.latvian.mods.kubejs.util.ScheduledEvents$Callback": Internal.ClassInfo, "net.minecraftforge.client.extensions.IForgeKeyMapping": Internal.ClassInfo, "net.minecraft.world.entity.Display$BillboardConstraints": Internal.ClassInfo, "de.dafuqs.spectrum.items.tools.WorkstaffItem$GUIToggle": Internal.ClassInfo, "net.minecraft.client.multiplayer.chat.report.ChatReportBuilder$ChatReport": Internal.ClassInfo, "mods.railcraft.world.level.block.track.outfitted.DumpingTrackBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.HeightmapPlacement": Internal.ClassInfo, "divinerpg.effect.mob.armor.vanilla.SkelemanFeedEffect": Internal.ClassInfo, "appeng.api.config.AccessRestriction": Internal.ClassInfo, "net.minecraftforge.event.AnvilUpdateEvent": Internal.ClassInfo, "com.gregtechceu.gtceu.api.gui.GuiTextures": Internal.ClassInfo, "net.minecraft.client.telemetry.TelemetryProperty$GameMode": Internal.ClassInfo, "de.dafuqs.spectrum.items.food.beverages.BeverageItem": Internal.ClassInfo, "com.inventorypets.pets.petBanana": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundClearTitlesPacket": Internal.ClassInfo, "net.minecraft.network.chat.OutgoingChatMessage": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.TagMatchTest": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.config.ui.SelectableResource": Internal.ClassInfo, "com.mna.items.artifice.ItemLodestarCopier": Internal.ClassInfo, "net.minecraft.resources.ResourceKey": Internal.ClassInfo, "xaero.map.gui.ScreenBase": Internal.ClassInfo, "com.tterrag.registrate.builders.NoConfigBuilder": Internal.ClassInfo, "elucent.eidolon.client.particle.SteamParticleType": Internal.ClassInfo, "net.minecraft.world.level.LevelHeightAccessor": Internal.ClassInfo, "appeng.items.storage.ViewCellItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.event.EventExit": Internal.ClassInfo, "cofh.lib.api.item.IXpContainerItem": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2ObjectMap": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundPlayerInfoUpdatePacket$Entry": Internal.ClassInfo, "org.orecruncher.dsurround.mixins.core.MixinRaycastContextAccessor": Internal.ClassInfo, "net.minecraft.world.entity.animal.goat.Goat": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerEvent$HarvestCheck": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.LavaSubmergedBlockProcessor": Internal.ClassInfo, "java.util.function.DoubleConsumer": Internal.ClassInfo, "com.yogpc.qp.machines.quarry.FrameBlock": Internal.ClassInfo, "fuzs.puzzleslib.mixin.client.accessor.TooltipAccessor": Internal.ClassInfo, "com.enderio.base.common.item.capacitors.BaseCapacitorItem": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.texture.ShaderTexture": Internal.ClassInfo, "biomesoplenty.common.item.BoatItemBOP": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.ColumnFeatureConfiguration": Internal.ClassInfo, "dev.latvian.mods.kubejs.registry.BuilderBase": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.PosRuleTest": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.ReplaceBlockFeature": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeBaseRailBlock": Internal.ClassInfo, "net.minecraft.world.entity.animal.frog.Frog": Internal.ClassInfo, "net.minecraftforge.common.SoundAction": Internal.ClassInfo, "techreborn.blocks.generator.BlockFusionControlComputer": Internal.ClassInfo, "cofh.core.client.particle.options.ColorParticleOptions": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.worldgen.bedrockore.BedrockOreDefinition": Internal.ClassInfo, "dev.architectury.extensions.injected.InjectedGameEventExtension": Internal.ClassInfo, "net.minecraft.world.level.block.ShulkerBoxBlock": Internal.ClassInfo, "java.awt.MenuItem": Internal.ClassInfo, "net.minecraft.client.gui.screens.inventory.tooltip.ClientTooltipPositioner": Internal.ClassInfo, "lol.bai.badpackets.impl.handler.AbstractPacketHandler": Internal.ClassInfo, "techreborn.items.tool.basic.RockCutterItem": Internal.ClassInfo, "cofh.thermal.core.common.item.SlotSealItem": Internal.ClassInfo, "java.lang.ClassLoader": Internal.ClassInfo, "de.dafuqs.spectrum.items.trinkets.AshenCircletItem": Internal.ClassInfo, "software.bernie.geckolib.core.object.DataTicket": Internal.ClassInfo, "biomesoplenty.common.block.SeaOatsBlock": Internal.ClassInfo, "divinerpg.items.base.block.ItemStatueBlock": Internal.ClassInfo, "cofh.lib.common.inventory.SimpleItemInv": Internal.ClassInfo, "org.apache.logging.log4j.core.config.Reconfigurable": Internal.ClassInfo, "net.minecraft.world.level.block.MangroveLeavesBlock": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.world.interests.PointOfInterestStorageExtended": Internal.ClassInfo, "divinerpg.blocks.vethea.BlockRaglokAltar": Internal.ClassInfo, "dev.latvian.mods.kubejs.platform.IngredientPlatformHelper": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2ObjectFunction": Internal.ClassInfo, "elucent.eidolon.common.item.curio.BasicAmuletItem": Internal.ClassInfo, "org.w3c.dom.DOMConfiguration": Internal.ClassInfo, "net.minecraft.util.profiling.metrics.MetricSampler": Internal.ClassInfo, "com.kamth.zeldamod.block.custom.UnlockedSwordPedestalBlock": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decoration.ColoredSporeBlossomBlock": Internal.ClassInfo, "org.embeddedt.embeddium.render.matrix_stack.CachingPoseStack": Internal.ClassInfo, "com.kamth.zeldamod.item.masks.BunnyMask": Internal.ClassInfo, "techreborn.init.TRContent$SolarPanels": Internal.ClassInfo, "shcm.shsupercm.forge.citresewn.pack.cits.CITElytra$Cached": Internal.ClassInfo, "com.gregtechceu.gtceu.common.block.StoneBlockType": Internal.ClassInfo, "techreborn.blocks.misc.BlockRubberSapling": Internal.ClassInfo, "com.mna.blocks.artifice.LodestarBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.Aquifer$FluidPicker": Internal.ClassInfo, "appeng.block.misc.TinyTNTBlock": Internal.ClassInfo, "net.minecraft.world.level.block.IceBlock": Internal.ClassInfo, "net.minecraft.world.inventory.ClickType": Internal.ClassInfo, "com.mojang.brigadier.context.CommandContext": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.stateproviders.RandomizedIntStateProvider": Internal.ClassInfo, "appeng.blockentity.misc.InterfaceBlockEntity": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.CappedProcessor": Internal.ClassInfo, "com.mojang.authlib.yggdrasil.YggdrasilAuthenticationService": Internal.ClassInfo, "net.minecraft.client.resources.TextureAtlasHolder": Internal.ClassInfo, "com.mojang.serialization.Lifecycle": Internal.ClassInfo, "com.gregtechceu.gtceu.api.item.armor.IArmorLogic": Internal.ClassInfo, "appeng.block.networking.EnergyCellBlockItem": Internal.ClassInfo, "xfacthd.framedblocks.common.block.sign.FramedWallHangingSignBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.worldgen.generator.veins.LayeredVeinGenerator": Internal.ClassInfo, "net.minecraftforge.client.event.ModelEvent$RegisterAdditional": Internal.ClassInfo, "appeng.api.storage.MEStorage": Internal.ClassInfo, "net.minecraft.world.entity.HasCustomInventoryScreen": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.client.ClientWorldAccessor": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.Int2ObjectMap": Internal.ClassInfo, "java.security.ProtectionDomain": Internal.ClassInfo, "biomesoplenty.common.block.HugeLilyPadBlock": Internal.ClassInfo, "de.dafuqs.reverb.mixin.SourceAccessor": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.EscapeScroll": Internal.ClassInfo, "java.nio.channels.WritableByteChannel": Internal.ClassInfo, "net.minecraft.world.item.EnderEyeItem": Internal.ClassInfo, "biomesoplenty.common.block.CeilingHangingSignBlockBOP": Internal.ClassInfo, "com.inventorypets.items.solsticeChestplate": Internal.ClassInfo, "de.dafuqs.spectrum.enchantments.InventoryInsertionEnchantment": Internal.ClassInfo, "io.netty.buffer.ByteBufAllocatorMetricProvider": Internal.ClassInfo, "java.nio.FloatBuffer": Internal.ClassInfo, "org.orecruncher.dsurround.mixins.core.MixinParticleManager": Internal.ClassInfo, "net.minecraft.world.level.block.entity.StructureBlockEntity$UpdateType": Internal.ClassInfo, "net.minecraft.world.entity.schedule.Activity": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundPlayerCombatEnterPacket": Internal.ClassInfo, "com.mojang.datafixers.util.Either$Mu": Internal.ClassInfo, "biomesoplenty.common.block.OrangeAutumnLeavesBlock": Internal.ClassInfo, "org.apache.maven.artifact.Artifact": Internal.ClassInfo, "techreborn.items.tool.vanilla.TRHoeItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.loot.BlockLootEventJS": Internal.ClassInfo, "cofh.lib.api.item.IColorableItem": Internal.ClassInfo, "net.minecraft.world.level.block.entity.HopperBlockEntity": Internal.ClassInfo, "net.minecraft.world.entity.ai.attributes.AttributeSupplier": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.api.wissen.IWissenWandFunctionalTileEntity": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerEvent$StartTracking": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.editor.configurator.Configurator": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.api.items.ICursed": Internal.ClassInfo, "com.mna.items.constructs.parts.arms.ConstructPartAxeArmLeft": Internal.ClassInfo, "xfacthd.framedblocks.common.block.ISlopeBlock$IRailSlopeBlock": Internal.ClassInfo, "mods.railcraft.world.level.block.manipulator.ItemUnloaderBlock": Internal.ClassInfo, "net.minecraftforge.client.settings.KeyModifier": Internal.ClassInfo, "divinerpg.blocks.base.BlockModBridge": Internal.ClassInfo, "mods.railcraft.api.track.TypedTrack": Internal.ClassInfo, "xfacthd.framedblocks.common.block.stairs.FramedDoubleStairsBlock": Internal.ClassInfo, "net.minecraft.util.valueproviders.FloatProviderType": Internal.ClassInfo, "net.minecraftforge.client.model.geometry.BlockGeometryBakingContext": Internal.ClassInfo, "com.mojang.authlib.AuthenticationService": Internal.ClassInfo, "com.almostreliable.lootjs.kube.builder.DamageSourcePredicateBuilderJS": Internal.ClassInfo, "net.minecraft.world.level.levelgen.BelowZeroRetrogen": Internal.ClassInfo, "java.time.chrono.ChronoPeriod": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.FrameBlock": Internal.ClassInfo, "com.mna.items.runes.ItemRunescribingRecipe": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.material.properties.ToolProperty": Internal.ClassInfo, "javax.swing.text.StyleConstants$ColorConstants": Internal.ClassInfo, "net.minecraftforge.client.model.generators.BlockModelProvider": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopepanel.FramedExtendedSlopePanelBlock": Internal.ClassInfo, "reborncore.common.fluid.RebornBucketItem": Internal.ClassInfo, "com.mojang.blaze3d.platform.IconSet": Internal.ClassInfo, "java.util.PrimitiveIterator$OfDouble": Internal.ClassInfo, "net.minecraft.world.level.levelgen.heightproviders.VeryBiasedToBottomHeight": Internal.ClassInfo, "io.wispforest.owo.util.EventSource$Subscription": Internal.ClassInfo, "java.awt.event.HierarchyBoundsListener": Internal.ClassInfo, "com.almostreliable.lootjs.core.ILootHandler": Internal.ClassInfo, "snownee.lychee.core.contextual.CustomCondition": Internal.ClassInfo, "java.util.function.IntSupplier": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.IParticleItem": Internal.ClassInfo, "net.minecraft.world.item.crafting.RecipeSerializer": Internal.ClassInfo, "net.fabricmc.fabric.api.lookup.v1.block.BlockApiLookup$BlockEntityApiProvider": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.featuresize.FeatureSize": Internal.ClassInfo, "dev.emi.trinkets.api.Trinket": Internal.ClassInfo, "org.w3c.dom.Element": Internal.ClassInfo, "xfacthd.framedblocks.common.block.pillar.FramedCornerPillarBlock": Internal.ClassInfo, "net.irisshaders.iris.mixin.texture.SpriteContentsAccessor": Internal.ClassInfo, "net.minecraft.world.item.ItemStack$TooltipPart": Internal.ClassInfo, "net.minecraft.world.entity.PlayerRideable": Internal.ClassInfo, "net.minecraft.client.gui.narration.NarratableEntry$NarrationPriority": Internal.ClassInfo, "net.minecraft.server.level.ChunkTaskPriorityQueueSorter$Release": Internal.ClassInfo, "snownee.lychee.mixin.BlockPredicateAccess": Internal.ClassInfo, "net.minecraft.client.particle.ParticleEngine$MutableSpriteSet": Internal.ClassInfo, "net.minecraft.world.level.block.EndGatewayBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.pieces.StructurePieceType$ContextlessType": Internal.ClassInfo, "com.tterrag.registrate.util.entry.BlockEntry": Internal.ClassInfo, "com.mojang.blaze3d.platform.InputConstants$Key": Internal.ClassInfo, "net.minecraft.world.level.block.CactusBlock": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.objects.AnchorSearchResult": Internal.ClassInfo, "com.mna.items.artifice.ItemThaumaturgicCompass$TrackType": Internal.ClassInfo, "net.minecraft.advancements.critereon.EntityTypePredicate": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundCustomChatCompletionsPacket": Internal.ClassInfo, "net.minecraft.commands.arguments.ArgumentSignatures$Entry": Internal.ClassInfo, "net.minecraftforge.event.entity.player.AnvilRepairEvent": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.CooldownSensorBlock": Internal.ClassInfo, "mods.railcraft.world.level.block.signal.SignalBoxBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.painter.PainterObjectStorage": Internal.ClassInfo, "de.dafuqs.spectrum.items.tools.SpectrumFishingRodItem": Internal.ClassInfo, "mods.railcraft.world.level.block.manipulator.ItemLoaderBlock": Internal.ClassInfo, "org.violetmoon.quark.content.tools.item.SeedPouchItem$PouchContents": Internal.ClassInfo, "net.minecraft.server.MinecraftServer": Internal.ClassInfo, "xaero.map.gui.dropdown.DropDownWidget": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.pools.StructurePoolElementType": Internal.ClassInfo, "cofh.core.client.particle.types.PointToPointParticleType": Internal.ClassInfo, "net.minecraftforge.items.IItemHandlerModifiable": Internal.ClassInfo, "divinerpg.blocks.base.BlockModStem": Internal.ClassInfo, "cofh.thermal.lib.common.item.BlockItemAugmentable": Internal.ClassInfo, "dev.latvian.mods.kubejs.misc.EnchantmentBuilder$PostFunction": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.RevelationTome": Internal.ClassInfo, "net.minecraft.world.level.levelgen.PositionalRandomFactory": Internal.ClassInfo, "net.minecraft.client.renderer.RenderType$CompositeRenderType": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.rule.blockentity.AppendLoot": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.LinearPosTest": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.innocentwood.InnocentWoodAxeItem": Internal.ClassInfo, "com.mojang.datafixers.types.Type$TypeError": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.redstone.DetectorBlock": Internal.ClassInfo, "de.dafuqs.spectrum.items.magic_items.NaturesStaffItem$NaturesStaffTriggered": Internal.ClassInfo, "java.io.Reader": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.idols.IdolBlock": Internal.ClassInfo, "com.mna.items.ritual.ItemPractitionersPouch": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.innocentwood.InnocentWoodPickaxeItem": Internal.ClassInfo, "net.minecraft.world.item.CreativeModeTab$Output": Internal.ClassInfo, "java.security.PrivateKey": Internal.ClassInfo, "net.minecraft.client.renderer.entity.EntityRendererProvider$Context": Internal.ClassInfo, "net.minecraftforge.fml.config.ModConfig": Internal.ClassInfo, "net.minecraftforge.registries.RegisterEvent": Internal.ClassInfo, "net.minecraftforge.fml.loading.progress.Message": Internal.ClassInfo, "net.minecraftforge.client.event.RegisterItemDecorationsEvent": Internal.ClassInfo, "net.minecraft.world.level.block.state.BlockBehaviour$OffsetType": Internal.ClassInfo, "net.minecraft.world.level.block.entity.ChestBlockEntity": Internal.ClassInfo, "com.kamth.zeldamod.item.items.BombArrowItem": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundBlockChangedAckPacket": Internal.ClassInfo, "java.nio.file.spi.FileSystemProvider": Internal.ClassInfo, "dev.latvian.mods.kubejs.event.EventHandlerContainer": Internal.ClassInfo, "dev.latvian.mods.kubejs.bindings.ItemWrapper": Internal.ClassInfo, "appeng.items.materials.StorageComponentItem": Internal.ClassInfo, "net.fabricmc.fabric.api.transfer.v1.transaction.Transaction": Internal.ClassInfo, "net.fabricmc.fabric.api.networking.v1.FabricPacket": Internal.ClassInfo, "com.kamth.zeldamod.item.items.TrueMasterSwordItem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.structures.OceanMonumentStructure": Internal.ClassInfo, "java.lang.Number": Internal.ClassInfo, "net.minecraft.client.resources.sounds.Sound": Internal.ClassInfo, "me.jellysquid.mods.sodium.mixin.features.textures.NativeImageAccessor": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundClientCommandPacket$Action": Internal.ClassInfo, "java.util.zip.ZipConstants": Internal.ClassInfo, "net.minecraft.world.level.block.CarrotBlock": Internal.ClassInfo, "appeng.blockentity.powersink.IExternalPowerSink": Internal.ClassInfo, "net.minecraftforge.event.entity.SpawnPlacementRegisterEvent$Operation": Internal.ClassInfo, "it.unimi.dsi.fastutil.bytes.Byte2ReferenceFunction": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.TagKeyComponent": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.texture.GuiTextureGroup": Internal.ClassInfo, "org.violetmoon.zeta.util.NameChanger": Internal.ClassInfo, "com.enderio.core.client.item.IAdvancedTooltipProvider": Internal.ClassInfo, "net.minecraft.client.main.GameConfig$FolderData": Internal.ClassInfo, "javax.sound.sampled.AudioFormat$Encoding": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.LevelKJS": Internal.ClassInfo, "com.gregtechceu.gtceu.api.registry.registrate.SoundEntryBuilder": Internal.ClassInfo, "java.time.chrono.ChronoZonedDateTime": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.structures.BuriedTreasureStructure": Internal.ClassInfo, "net.minecraft.world.level.biome.BiomeSpecialEffects$GrassColorModifier": Internal.ClassInfo, "reborncore.common.blockentity.FluidConfiguration$ExtractConfig": Internal.ClassInfo, "net.minecraftforge.event.entity.EntityAttributeModificationEvent": Internal.ClassInfo, "com.lowdragmc.lowdraglib.syncdata.field.ManagedFieldHolder": Internal.ClassInfo, "net.minecraft.world.entity.FlyingMob": Internal.ClassInfo, "techreborn.blocks.GenericMachineBlock": Internal.ClassInfo, "java.awt.im.InputContext": Internal.ClassInfo, "de.dafuqs.spectrum.mixin.accessors.ShapedRecipeAccessor": Internal.ClassInfo, "com.mna.items.food.ItemManaTea": Internal.ClassInfo, "appeng.api.upgrades.IUpgradeInventory": Internal.ClassInfo, "net.fabricmc.fabric.api.client.screen.v1.ScreenKeyboardEvents$AllowKeyRelease": Internal.ClassInfo, "divinerpg.items.base.block.ItemDramixAltar": Internal.ClassInfo, "com.tterrag.registrate.util.entry.ItemProviderEntry": Internal.ClassInfo, "com.mojang.brigadier.context.SuggestionContext": Internal.ClassInfo, "com.tterrag.registrate.builders.MenuBuilder": Internal.ClassInfo, "com.mojang.realmsclient.dto.RealmsServer$WorldType": Internal.ClassInfo, "com.gregtechceu.gtceu.api.capability.recipe.IO": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.SecondaryPoiSensor": Internal.ClassInfo, "net.minecraft.world.level.block.DragonEggBlock": Internal.ClassInfo, "xaero.map.file.RegionDetection": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.PlacementFilter": Internal.ClassInfo, "net.minecraft.world.damagesource.DamageEffects": Internal.ClassInfo, "com.gregtechceu.gtceu.common.pipelike.optical.OpticalPipeType": Internal.ClassInfo, "com.mojang.serialization.OptionalDynamic": Internal.ClassInfo, "de.dafuqs.spectrum.enchantments.FoundryEnchantment": Internal.ClassInfo, "mods.railcraft.world.level.block.charge.NickelZincBatteryBlock": Internal.ClassInfo, "java.math.RoundingMode": Internal.ClassInfo, "net.minecraft.world.entity.ai.goal.LookAtPlayerGoal": Internal.ClassInfo, "java.awt.Shape": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.ArcanePedestalBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.trunkplacers.DarkOakTrunkPlacer": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.RecipeKey": Internal.ClassInfo, "divinerpg.world.structure.HighestGroundType": Internal.ClassInfo, "net.minecraft.util.RandomSource": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.dd_deco.Dragonjag": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.fluid.DragonrotFluidBlock": Internal.ClassInfo, "appeng.api.storage.IStorageMounts": Internal.ClassInfo, "org.apache.logging.log4j.core.async.AsyncLoggerConfig$Builder": Internal.ClassInfo, "net.minecraft.world.inventory.CraftingContainer": Internal.ClassInfo, "net.minecraftforge.client.model.generators.ConfiguredModel": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.entity.NavigatingEntity": Internal.ClassInfo, "pokefenn.totemic.api.totem.TotemWoodType": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.CreativeFluidStorageBlock": Internal.ClassInfo, "com.tterrag.registrate.builders.BlockEntityBuilder": Internal.ClassInfo, "net.minecraft.client.multiplayer.chat.report.AbuseReportSender": Internal.ClassInfo, "net.minecraftforge.network.ServerStatusPing$ChannelData": Internal.ClassInfo, "com.aizistral.omniconfig.wrappers.OmniconfigWrapper": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.TallCropBlock": Internal.ClassInfo, "net.minecraft.client.renderer.RenderStateShard$TextureStateShard": Internal.ClassInfo, "xaero.map.gui.MapTileSelection": Internal.ClassInfo, "de.dafuqs.spectrum.events.ExactPositionSource$Type": Internal.ClassInfo, "net.fabricmc.fabric.impl.transfer.item.SpecialLogicInventory": Internal.ClassInfo, "reborncore.common.blockentity.RedstoneConfiguration$State": Internal.ClassInfo, "appeng.crafting.execution.CraftingCpuLogic": Internal.ClassInfo, "software.bernie.geckolib.core.animatable.model.CoreGeoBone": Internal.ClassInfo, "com.gregtechceu.gtceu.common.pipelike.item.longdistance.LDItemPipeType": Internal.ClassInfo, "de.dafuqs.spectrum.items.trinkets.SpectrumTrinketItem": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.HeatSensorBlock": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.world.ReadableContainerExtended": Internal.ClassInfo, "org.violetmoon.zeta.item.ZetaArrowItem$Impl": Internal.ClassInfo, "net.minecraft.world.inventory.MenuType$MenuSupplier": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.idols.AoEStatusEffectIdolBlock": Internal.ClassInfo, "net.minecraft.core.cauldron.CauldronInteraction": Internal.ClassInfo, "de.dafuqs.spectrum.items.trinkets.AzureDikeItem": Internal.ClassInfo, "net.mehvahdjukaar.amendments.common.block.CarpetStairBlock": Internal.ClassInfo, "de.dafuqs.spectrum.items.magic_items.PerturbedEyeItem": Internal.ClassInfo, "net.minecraft.world.level.block.entity.BlockEntityType$BlockEntitySupplier": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerInteractEvent$LeftClickBlock$Action": Internal.ClassInfo, "elucent.eidolon.client.particle.SignParticleType": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.custom.FenceBlockBuilder": Internal.ClassInfo, "appeng.api.networking.IGridStorage": Internal.ClassInfo, "techreborn.items.tool.industrial.OmniToolItem": Internal.ClassInfo, "vazkii.patchouli.mixin.AccessorSmithingTransformRecipe": Internal.ClassInfo, "mods.railcraft.world.level.block.charge.ZincCarbonBatteryBlock": Internal.ClassInfo, "malte0811.ferritecore.fastmap.FastMap": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.render.chunk.map.ChunkTracker": Internal.ClassInfo, "appeng.api.inventories.InternalInventory": Internal.ClassInfo, "com.lowdragmc.lowdraglib.syncdata.blockentity.IManagedBlockEntity": Internal.ClassInfo, "biomesoplenty.common.block.BrimstoneBudBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.StringComponent$1": Internal.ClassInfo, "java.util.Iterator": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundLightUpdatePacketData": Internal.ClassInfo, "com.kamth.zeldamod.item.items.FierceSwordItem": Internal.ClassInfo, "com.inventorypets.pets.petEndPortal": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemClickedEventJS": Internal.ClassInfo, "net.minecraft.client.resources.sounds.EntityBoundSoundInstance": Internal.ClassInfo, "appeng.block.misc.CellWorkbenchBlock": Internal.ClassInfo, "net.minecraft.client.multiplayer.chat.LoggedChatEvent$Type": Internal.ClassInfo, "snownee.lychee.mixin.DoublesAccess": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetObjectivePacket": Internal.ClassInfo, "de.dafuqs.spectrum.items.tools.FractalBidentItem": Internal.ClassInfo, "net.minecraft.world.entity.projectile.AbstractArrow": Internal.ClassInfo, "net.minecraft.world.inventory.SmokerMenu": Internal.ClassInfo, "io.netty.buffer.PoolChunkListMetric": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.HoglinSpecificSensor": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.items.KeyItem": Internal.ClassInfo, "appeng.api.parts.IPartHost": Internal.ClassInfo, "mods.railcraft.world.item.crafting.RailcraftRecipeTypes$1": Internal.ClassInfo, "com.lowdragmc.lowdraglib.syncdata.blockentity.IAsyncAutoSyncBlockEntity": Internal.ClassInfo, "mezz.jei.api.ingredients.ITypedIngredient": Internal.ClassInfo, "net.fabricmc.fabric.api.event.registry.RegistryIdRemapCallback": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.config.NameMap$Builder": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.dd_deco.Dragonjag$Variant": Internal.ClassInfo, "io.netty.channel.ChannelInboundHandlerAdapter": Internal.ClassInfo, "com.enderio.api.misc.IIcon": Internal.ClassInfo, "com.gregtechceu.gtceu.api.pattern.error.PatternError": Internal.ClassInfo, "com.mna.enchantments.staves.SpeedModifier": Internal.ClassInfo, "java.awt.JobAttributes$MultipleDocumentHandlingType": Internal.ClassInfo, "com.mojang.blaze3d.vertex.VertexBuffer": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.IngredientKJS": Internal.ClassInfo, "com.mojang.realmsclient.gui.RealmsNewsManager": Internal.ClassInfo, "net.minecraft.world.entity.animal.Bee$BeeGoToHiveGoal": Internal.ClassInfo, "java.util.Vector": Internal.ClassInfo, "net.minecraft.world.level.block.entity.DaylightDetectorBlockEntity": Internal.ClassInfo, "com.gregtechceu.gtceu.api.gui.fancy.TabsWidget": Internal.ClassInfo, "com.mna.api.items.IRelic": Internal.ClassInfo, "appeng.items.tools.quartz.QuartzHoeItem": Internal.ClassInfo, "net.minecraft.world.level.block.TallSeagrassBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.heightproviders.ConstantHeight": Internal.ClassInfo, "com.mna.api.affinity.Affinity": Internal.ClassInfo, "net.blay09.mods.balm.api.event.client.screen.ScreenMouseEvent": Internal.ClassInfo, "mods.railcraft.world.level.block.CoalCokeBlock": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.idols.VillagerConvertingIdolBlock": Internal.ClassInfo, "vazkii.patchouli.mixin.client.AccessorScreen": Internal.ClassInfo, "com.google.common.collect.RegularImmutableMap": Internal.ClassInfo, "it.unimi.dsi.fastutil.chars.Char2ByteFunction": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.BlockColumnConfiguration$Layer": Internal.ClassInfo, "net.minecraft.server.packs.resources.ResourceManager": Internal.ClassInfo, "io.netty.channel.ChannelOutboundBuffer$MessageProcessor": Internal.ClassInfo, "net.minecraftforge.client.model.data.ModelData$Builder": Internal.ClassInfo, "dev.latvian.mods.kubejs.player.PlayerRespawnedEventJS": Internal.ClassInfo, "net.minecraft.world.entity.monster.piglin.Piglin": Internal.ClassInfo, "mods.railcraft.world.level.block.entity.tank.TankBlockEntity": Internal.ClassInfo, "dev.latvian.mods.kubejs.gui.chest.ChestMenuData": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.NoiseThresholdCountPlacement": Internal.ClassInfo, "dev.latvian.mods.rhino.mod.util.Object2LongEntry": Internal.ClassInfo, "appeng.blockentity.storage.IOPortBlockEntity": Internal.ClassInfo, "org.violetmoon.zetaimplforge.mixin.mixins.WeatheringCopperMixin": Internal.ClassInfo, "net.minecraft.world.entity.animal.Panda$Gene": Internal.ClassInfo, "com.lowdragmc.lowdraglib.syncdata.blockentity.IAutoPersistBlockEntity": Internal.ClassInfo, "net.minecraft.world.scores.Team$Visibility": Internal.ClassInfo, "net.minecraft.world.phys.shapes.VoxelShape": Internal.ClassInfo, "com.mna.items.base.IRadialMenuItem": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerContainerEvent": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.functions.LootItemFunctionType": Internal.ClassInfo, "net.minecraft.world.item.crafting.MapCloningRecipe": Internal.ClassInfo, "appeng.api.networking.IGridServiceProvider": Internal.ClassInfo, "appeng.block.paint.PaintSplotches": Internal.ClassInfo, "net.minecraft.world.level.block.LiquidBlock": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeHolderSet": Internal.ClassInfo, "cofh.lib.api.item.IFluidContainerItem": Internal.ClassInfo, "pokefenn.totemic.api.totem.TotemCarving": Internal.ClassInfo, "net.minecraft.server.level.ChunkHolder$PlayerProvider": Internal.ClassInfo, "net.minecraft.client.renderer.FogRenderer$FogMode": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.DoubleIterable": Internal.ClassInfo, "java.lang.StringBuffer": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundInteractPacket$ActionType": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.pedestal.PedestalVariant": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetSimulationDistancePacket": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.Int2FloatFunction": Internal.ClassInfo, "net.fabricmc.fabric.impl.client.indigo.renderer.accessor.AccessChunkRendererRegion": Internal.ClassInfo, "de.dafuqs.spectrum.status_effects.ScarredStatusEffect": Internal.ClassInfo, "de.dafuqs.spectrum.items.item_frame.SpectrumItemFrameItem": Internal.ClassInfo, "divinerpg.items.vanilla.ItemScythe": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.gui.options.OptionGroup$Builder": Internal.ClassInfo, "com.gregtechceu.gtceu.common.data.GTMaterials": Internal.ClassInfo, "net.minecraft.world.level.chunk.BlockColumn": Internal.ClassInfo, "net.minecraft.world.level.gameevent.vibrations.VibrationSystem$User": Internal.ClassInfo, "com.gregtechceu.gtceu.api.machine.TickableSubscription": Internal.ClassInfo, "net.minecraft.world.level.block.WeightedPressurePlateBlock": Internal.ClassInfo, "de.dafuqs.spectrum.items.food.MoonstruckNectarItem": Internal.ClassInfo, "com.inventorypets.pets.petChest": Internal.ClassInfo, "net.minecraft.world.level.block.DecoratedPotBlock": Internal.ClassInfo, "java.nio.file.attribute.UserPrincipalLookupService": Internal.ClassInfo, "com.mna.blocks.sorcery.ImpaleBlock": Internal.ClassInfo, "net.minecraft.client.multiplayer.chat.ChatListener": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.NearestItemSensor": Internal.ClassInfo, "net.mehvahdjukaar.polytone.slotify.SlotifyScreen": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.CaneItem": Internal.ClassInfo, "mezz.jei.api.runtime.IIngredientVisibility$IListener": Internal.ClassInfo, "xaero.map.file.worldsave.WorldDataHandler": Internal.ClassInfo, "net.fabricmc.fabric.mixin.networking.client.accessor.MinecraftClientAccessor": Internal.ClassInfo, "net.minecraft.world.level.block.WeepingVinesBlock": Internal.ClassInfo, "net.minecraft.advancements.Advancement$Builder": Internal.ClassInfo, "net.minecraft.world.entity.raid.Raider": Internal.ClassInfo, "divinerpg.blocks.base.BlockModFurnace": Internal.ClassInfo, "de.dafuqs.spectrum.mixin.accessors.StatusEffectInstanceAccessor": Internal.ClassInfo, "net.minecraftforge.registries.tags.IReverseTag": Internal.ClassInfo, "net.minecraft.util.TaskChainer": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$KeyReleased$Post": Internal.ClassInfo, "net.minecraftforge.event.level.NoteBlockEvent$Octave": Internal.ClassInfo, "mods.railcraft.world.level.block.AbstractStrengthenedGlassBlock$Type": Internal.ClassInfo, "com.lowdragmc.lowdraglib.utils.interpolate.IEase": Internal.ClassInfo, "net.minecraft.world.level.block.AbstractGlassBlock": Internal.ClassInfo, "net.fabricmc.fabric.mixin.client.particle.ParticleManagerAccessor": Internal.ClassInfo, "java.awt.image.BufferStrategy": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopeslab.FramedFlatDoubleSlopeSlabCornerBlock": Internal.ClassInfo, "io.wispforest.accessories.api.slot.SlotType": Internal.ClassInfo, "com.lowdragmc.lowdraglib.syncdata.ITagSerializable": Internal.ClassInfo, "com.mojang.serialization.Dynamic": Internal.ClassInfo, "com.yogpc.qp.machines.quarry.QuarryBlock": Internal.ClassInfo, "com.mna.items.constructs.parts.arms.ConstructPartManaCannonRight": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.ObjectIterable": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decoration.ColoredStairsBlock": Internal.ClassInfo, "net.fabricmc.fabric.impl.networking.server.ServerPlayNetworkAddon": Internal.ClassInfo, "com.mna.items.constructs.BellOfBidding$Commands": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerEvent$ItemPickupEvent": Internal.ClassInfo, "com.chailotl.particular.mixin.AccessorBiome": Internal.ClassInfo, "org.embeddedt.modernfix.chunk.SafeBlockGetter": Internal.ClassInfo, "xfacthd.framedblocks.common.util.DoubleBlockTopInteractionMode": Internal.ClassInfo, "java.util.stream.DoubleStream": Internal.ClassInfo, "net.minecraft.network.protocol.BundlePacket": Internal.ClassInfo, "net.minecraft.world.level.block.TwistingVinesPlantBlock": Internal.ClassInfo, "com.mojang.datafixers.kinds.App2": Internal.ClassInfo, "net.minecraftforge.fml.config.ModConfig$Type": Internal.ClassInfo, "java.time.LocalDate": Internal.ClassInfo, "divinerpg.blocks.iceika.BlockFrostedChest": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.EndGatewayFeature": Internal.ClassInfo, "fuzs.puzzleslib.mixin.accessor.MobSpawnSettingsBuilderForgeAccessor": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.FeatureConfiguration": Internal.ClassInfo, "net.irisshaders.batchedentityrendering.impl.BufferBuilderExt": Internal.ClassInfo, "net.minecraft.client.renderer.texture.DynamicTexture": Internal.ClassInfo, "com.probejs.jdoc.document.AbstractDocument": Internal.ClassInfo, "com.mna.api.spells.parts.Shape": Internal.ClassInfo, "software.bernie.geckolib.core.keyframe.event.CustomInstructionKeyframeEvent": Internal.ClassInfo, "dev.ftb.mods.ftbquests.block.StageBarrierBlock": Internal.ClassInfo, "net.minecraft.commands.SharedSuggestionProvider": Internal.ClassInfo, "de.dafuqs.spectrum.items.PrioritizedBlockInteraction": Internal.ClassInfo, "java.util.OptionalDouble": Internal.ClassInfo, "com.kamth.zeldamod.item.items.FireRodItem": Internal.ClassInfo, "java.nio.channels.AsynchronousFileChannel": Internal.ClassInfo, "org.apache.logging.log4j.LogBuilder": Internal.ClassInfo, "com.mna.blocks.runeforging.RunicAnvilBlock": Internal.ClassInfo, "net.minecraft.network.FriendlyByteBuf": Internal.ClassInfo, "net.minecraft.world.level.block.CoralBlock": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.spirit_sallow.SpiritSallowLeavesBlock": Internal.ClassInfo, "net.minecraft.world.level.block.CropBlock": Internal.ClassInfo, "cofh.core.common.block.EntityBlock6Way": Internal.ClassInfo, "net.minecraft.world.entity.animal.Rabbit": Internal.ClassInfo, "net.minecraftforge.entity.IEntityAdditionalSpawnData": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slope.FramedDoubleHalfSlopeBlock": Internal.ClassInfo, "java.nio.charset.Charset": Internal.ClassInfo, "com.gregtechceu.gtceu.common.data.GTOres": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingEntityUseItemEvent": Internal.ClassInfo, "techreborn.blocks.transformers.BlockMVTransformer": Internal.ClassInfo, "net.minecraft.world.entity.animal.camel.Camel": Internal.ClassInfo, "fzzyhmstrs.emi_loot.mixins.FluidPredicateAccessor": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.predicate.BlockEntityPredicateDataCheck": Internal.ClassInfo, "snownee.lychee.core.contextual.ContextualCondition": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.map.CustomMapData$Type": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.spirit_instiller.SpiritInstillerBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemStackSet": Internal.ClassInfo, "com.google.common.collect.ForwardingList": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.WaterloggableLeverBlock": Internal.ClassInfo, "com.mna.blocks.decoration.BookshelfBlock": Internal.ClassInfo, "net.minecraft.world.entity.ai.memory.ExpirableValue": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.ShortPredicate": Internal.ClassInfo, "net.minecraft.world.level.gameevent.GameEventListener$Holder": Internal.ClassInfo, "xaero.map.mcworld.IWorldMapClientWorld": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.BlockBrokenEventJS": Internal.ClassInfo, "vazkii.patchouli.common.util.ItemStackUtil$StackWrapper": Internal.ClassInfo, "dev.latvian.mods.kubejs.stages.Stages": Internal.ClassInfo, "net.minecraft.network.syncher.SynchedEntityData$DataItem": Internal.ClassInfo, "net.minecraft.world.level.block.GlassBlock": Internal.ClassInfo, "net.blay09.mods.balm.api.event.client.screen.ScreenKeyEvent": Internal.ClassInfo, "de.dafuqs.spectrum.recipe.SpectrumRecipeTypes$1": Internal.ClassInfo, "mods.railcraft.world.level.block.track.outfitted.LauncherTrackBlock": Internal.ClassInfo, "divinerpg.blocks.vanilla.BlockMobPumpkin": Internal.ClassInfo, "net.minecraft.world.level.entity.EntityLookup": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.WissenCasingBlock": Internal.ClassInfo, "java.lang.Float": Internal.ClassInfo, "net.minecraft.world.entity.monster.Pillager": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.client.model.ExtraModelData$Builder": Internal.ClassInfo, "net.irisshaders.batchedentityrendering.impl.MemoryTrackingRenderBuffers": Internal.ClassInfo, "de.dafuqs.spectrum.items.PresentUnpackBehavior": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.items.InstrumentItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.util.TinyMap": Internal.ClassInfo, "org.apache.logging.log4j.core.LoggerContext": Internal.ClassInfo, "net.minecraft.client.renderer.texture.SpriteContents$FrameInfo": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.OutputReplacement": Internal.ClassInfo, "net.minecraft.world.level.block.FlowerBlock": Internal.ClassInfo, "divinerpg.items.vethea.ItemVetheanSword": Internal.ClassInfo, "net.minecraft.server.packs.resources.SimpleJsonResourceReloadListener": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.upgrade.UpgradeBlockItem": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.jade_vines.JadeVine": Internal.ClassInfo, "com.mna.blocks.ritual.ChalkRuneBlock": Internal.ClassInfo, "com.kamth.zeldamod.item.items.MilkBottleItem": Internal.ClassInfo, "divinerpg.registries.FluidRegistry$3": Internal.ClassInfo, "divinerpg.items.vanilla.ItemSerenadeStriker": Internal.ClassInfo, "de.dafuqs.spectrum.enchantments.TreasureHunterEnchantment": Internal.ClassInfo, "vectorwing.farmersdelight.common.effect.ComfortEffect": Internal.ClassInfo, "io.wispforest.owo.ui.layers.Layer$Instance$AnchorSide": Internal.ClassInfo, "com.almostreliable.lootjs.predicate.ExtendedEntityFlagsPredicate$IBuilder": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.WardenEntitySensor": Internal.ClassInfo, "net.minecraft.world.entity.ai.memory.MemoryStatus": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.client.ItemStackRenderer": Internal.ClassInfo, "com.chailotl.particular.mixin.AccessorParticle": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundSetCreativeModeSlotPacket": Internal.ClassInfo, "appeng.crafting.CraftingLink": Internal.ClassInfo, "divinerpg.effect.mob.armor.iceika.FrozenSlownessEffect": Internal.ClassInfo, "net.minecraft.world.level.material.FluidState": Internal.ClassInfo, "net.minecraft.world.level.chunk.ChunkAccess$TicksToSave": Internal.ClassInfo, "appeng.items.misc.MeteoriteCompassItem": Internal.ClassInfo, "net.minecraft.sounds.SoundSource": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.redstone.ItemDetectorBlock": Internal.ClassInfo, "net.minecraft.client.renderer.culling.Frustum": Internal.ClassInfo, "divinerpg.blocks.base.BlockModStairs": Internal.ClassInfo, "net.minecraftforge.event.level.ChunkDataEvent": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.ui.input.KeyModifiers": Internal.ClassInfo, "com.enderio.base.common.enchantment.SoulBoundEnchantment": Internal.ClassInfo, "net.minecraft.world.entity.AgeableMob": Internal.ClassInfo, "net.minecraft.client.multiplayer.ClientLevel": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.dd_deco.SawbladeHollyBushBlock": Internal.ClassInfo, "biomesoplenty.common.block.BrimstoneClusterBlock": Internal.ClassInfo, "net.minecraftforge.server.permission.nodes.PermissionNode": Internal.ClassInfo, "appeng.decorative.solid.CertusQuartzClusterBlock": Internal.ClassInfo, "net.minecraft.advancements.critereon.DeserializationContext": Internal.ClassInfo, "net.minecraftforge.client.event.ClientChatEvent": Internal.ClassInfo, "elucent.eidolon.common.block.ResearchTableBlock": Internal.ClassInfo, "cpw.mods.jarhandling.JarMetadata": Internal.ClassInfo, "net.minecraft.world.level.validation.ForbiddenSymlinkInfo": Internal.ClassInfo, "xaero.map.highlight.HighlighterRegistry": Internal.ClassInfo, "appeng.menu.locator.MenuLocator": Internal.ClassInfo, "net.minecraft.world.item.crafting.SmithingRecipe": Internal.ClassInfo, "net.minecraft.world.level.saveddata.maps.MapItemSavedData$HoldingPlayer": Internal.ClassInfo, "net.minecraft.world.entity.animal.sniffer.Sniffer": Internal.ClassInfo, "net.minecraft.world.level.block.state.BlockBehaviour": Internal.ClassInfo, "net.minecraft.world.entity.OwnableEntity": Internal.ClassInfo, "divinerpg.blocks.twilight.BlockBlueFire": Internal.ClassInfo, "software.bernie.geckolib.core.animation.AnimatableManager": Internal.ClassInfo, "dev.latvian.mods.kubejs.misc.VillagerProfessionBuilder": Internal.ClassInfo, "net.minecraft.client.gui.font.FontManager$Preparation": Internal.ClassInfo, "java.util.stream.DoubleStream$DoubleMapMultiConsumer": Internal.ClassInfo, "org.orecruncher.dsurround.mixinutils.IClientWorld": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerSetSpawnEvent": Internal.ClassInfo, "net.minecraft.world.entity.animal.AbstractGolem": Internal.ClassInfo, "net.minecraft.client.model.TridentModel": Internal.ClassInfo, "net.minecraft.world.entity.animal.frog.Tadpole": Internal.ClassInfo, "xfacthd.atlasviewer.client.api.ISpriteSourcePackAwareResource": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.jade_vines.JadeiteLotusStemBlock": Internal.ClassInfo, "net.minecraft.client.quickplay.QuickPlayLog$Type": Internal.ClassInfo, "dev.latvian.mods.kubejs.forge.ForgeEventWrapper": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgePackResources": Internal.ClassInfo, "net.fabricmc.fabric.api.lookup.v1.block.BlockApiLookup": Internal.ClassInfo, "java.util.concurrent.locks.Lock": Internal.ClassInfo, "io.wispforest.owo.ui.core.Size": Internal.ClassInfo, "appeng.blockentity.crafting.IMolecularAssemblerSupportedPattern": Internal.ClassInfo, "net.fabricmc.fabric.api.screenhandler.v1.ExtendedScreenHandlerFactory": Internal.ClassInfo, "java.util.function.DoubleToLongFunction": Internal.ClassInfo, "com.gregtechceu.gtceu.common.pipelike.cable.EnergyNet": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.stateproviders.RuleBasedBlockStateProvider$Rule": Internal.ClassInfo, "net.minecraft.world.level.LevelTimeAccess": Internal.ClassInfo, "com.inventorypets.items.blueScreenofDeath": Internal.ClassInfo, "de.dafuqs.spectrum.items.LoomPatternProvider": Internal.ClassInfo, "org.violetmoon.zeta.registry.DyeablesRegistry": Internal.ClassInfo, "mods.railcraft.world.level.block.signal.SingleSignalBlock": Internal.ClassInfo, "java.text.DecimalFormatSymbols": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slab.FramedDoublePanelBlock": Internal.ClassInfo, "com.mna.effects.beneficial.EffectSpiderClimbing": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopepanel.SlopePanelShape": Internal.ClassInfo, "net.minecraft.world.level.entity.EntityTypeTest": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.LongPredicate": Internal.ClassInfo, "net.minecraft.world.entity.boss.enderdragon.phases.DragonSittingFlamingPhase": Internal.ClassInfo, "divinerpg.blocks.arcana.BlockArcaniteGrass": Internal.ClassInfo, "mods.railcraft.world.level.block.detector.AgeDetectorBlock": Internal.ClassInfo, "net.minecraft.world.level.block.GrindstoneBlock": Internal.ClassInfo, "com.mna.effects.neutral.EffectGrow": Internal.ClassInfo, "com.mojang.datafixers.util.Function10": Internal.ClassInfo, "pokefenn.totemic.item.TotemPoleItem": Internal.ClassInfo, "com.google.common.collect.ArrayTable": Internal.ClassInfo, "com.mna.blocks.sorcery.SpectralCraftingTableBlock": Internal.ClassInfo, "net.minecraft.world.LockCode": Internal.ClassInfo, "net.minecraft.world.level.block.BaseCoralPlantBlock": Internal.ClassInfo, "com.mna.api.particles.parameters.ParticleColor": Internal.ClassInfo, "snownee.lychee.block_crushing.BlockCrushingRecipe": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopeedge.FramedSlopeEdgeBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.custom.HorizontalDirectionalBlockBuilder": Internal.ClassInfo, "com.mojang.realmsclient.dto.PlayerInfo": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.conditional.blood_orchid.BloodOrchidBlock": Internal.ClassInfo, "divinerpg.blocks.base.BlockModSlab": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundRemoveEntitiesPacket": Internal.ClassInfo, "net.minecraft.client.gui.components.ChatComponent": Internal.ClassInfo, "de.dafuqs.spectrum.items.magic_items.PipeBombItem": Internal.ClassInfo, "com.gregtechceu.gtceu.api.recipe.content.Content": Internal.ClassInfo, "net.minecraft.world.entity.npc.InventoryCarrier": Internal.ClassInfo, "com.mojang.datafixers.util.Function15": Internal.ClassInfo, "com.mojang.datafixers.util.Function16": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundCooldownPacket": Internal.ClassInfo, "com.mojang.datafixers.util.Function13": Internal.ClassInfo, "java.security.PrivilegedAction": Internal.ClassInfo, "me.jellysquid.mods.sodium.mixin.features.textures.SpriteContentsInvoker": Internal.ClassInfo, "com.mojang.datafixers.util.Function14": Internal.ClassInfo, "com.mojang.datafixers.util.Function11": Internal.ClassInfo, "me.steinborn.krypton.mod.shared.player.KryptonServerPlayerEntity": Internal.ClassInfo, "com.mojang.datafixers.util.Function12": Internal.ClassInfo, "com.enderio.machines.common.item.CapacitorBankItem": Internal.ClassInfo, "com.gregtechceu.gtceu.api.item.tool.GTToolType": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplateManager": Internal.ClassInfo, "dev.gigaherz.graph3.Graph": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.curio.BaseWissenCurioItem": Internal.ClassInfo, "techreborn.blocks.transformers.BlockTransformer": Internal.ClassInfo, "com.inventorypets.worldgen.TreeTopStructure": Internal.ClassInfo, "com.google.common.collect.ImmutableList$Builder": Internal.ClassInfo, "net.minecraft.world.entity.ai.goal.Goal": Internal.ClassInfo, "net.minecraft.client.renderer.debug.DebugRenderer$SimpleDebugRenderer": Internal.ClassInfo, "org.lwjgl.stb.STBTTFontinfo": Internal.ClassInfo, "xaero.map.radar.tracker.synced.ClientSyncedTrackedPlayerManager": Internal.ClassInfo, "net.minecraft.world.item.EnchantedBookItem": Internal.ClassInfo, "java.util.function.LongBinaryOperator": Internal.ClassInfo, "org.violetmoon.quark.api.event.UsageTickerEvent$Pass": Internal.ClassInfo, "net.minecraftforge.client.gui.overlay.ForgeGui": Internal.ClassInfo, "net.irisshaders.iris.texture.pbr.PBRAtlasTexture": Internal.ClassInfo, "com.kamth.zeldamod.item.items.LensItem": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.block.ModStairBlock": Internal.ClassInfo, "java.nio.ShortBuffer": Internal.ClassInfo, "appeng.helpers.externalstorage.GenericStackInv$Mode": Internal.ClassInfo, "net.minecraft.world.item.crafting.Ingredient": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemBuilder$HurtEnemyContext": Internal.ClassInfo, "dev.emi.emi.mixin.accessor.AxeItemAccessor": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.curio.ArcaneFortressBeltItem": Internal.ClassInfo, "net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.LongIterable": Internal.ClassInfo, "net.minecraft.world.level.ItemLike": Internal.ClassInfo, "net.minecraftforge.common.world.BiomeGenerationSettingsBuilder": Internal.ClassInfo, "net.minecraft.world.item.enchantment.TridentLoyaltyEnchantment": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.custom.ArmorItemBuilder$Leggings": Internal.ClassInfo, "biomesoplenty.common.item.MusicDiscItemBOP": Internal.ClassInfo, "com.mojang.realmsclient.dto.RealmsServer$State": Internal.ClassInfo, "net.minecraftforge.client.event.sound.SoundEvent": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.blocks.BlockCosmicCake": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$KeyPressed": Internal.ClassInfo, "java.lang.reflect.AccessibleObject": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.api.wissen.IItemResultTileEntity": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2DoubleMap$Entry": Internal.ClassInfo, "com.mna.api.capabilities.ChronoAnchorData": Internal.ClassInfo, "reborncore.common.util.Tank": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.callbacks.EntityFallenOnBlockCallbackJS": Internal.ClassInfo, "com.gregtechceu.gtceu.core.mixins.ClientLevelAccessor": Internal.ClassInfo, "net.minecraft.commands.SharedSuggestionProvider$TextCoordinates": Internal.ClassInfo, "mods.railcraft.world.level.block.track.outfitted.JunctionTrackBlock": Internal.ClassInfo, "de.dafuqs.spectrum.status_effects.DeadlyPoisonStatusEffect": Internal.ClassInfo, "de.dafuqs.spectrum.items.PigmentItem": Internal.ClassInfo, "xfacthd.framedblocks.common.block.interactive.FramedItemFrameBlock": Internal.ClassInfo, "net.minecraft.network.chat.contents.DataSource": Internal.ClassInfo, "divinerpg.blocks.twilight.BlockEdenChest": Internal.ClassInfo, "javax.accessibility.AccessibleComponent": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.schema.RecipeNamespace": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.custom.ItemArmorTierRegistryEventJS": Internal.ClassInfo, "cofh.thermal.dynamics.common.block.DuctBlock": Internal.ClassInfo, "java.awt.event.WindowFocusListener": Internal.ClassInfo, "com.gregtechceu.gtceu.common.pipelike.fluidpipe.longdistance.LDFluidPipeType": Internal.ClassInfo, "org.joml.Vector2ic": Internal.ClassInfo, "appeng.api.networking.events.statistics.GridChunkEvent$GridChunkRemoved": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decoration.SpectrumLineFacingBlock": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundCustomPayloadPacket": Internal.ClassInfo, "cofh.thermal.core.common.block.device.EntityBlockComposter": Internal.ClassInfo, "java.nio.channels.ByteChannel": Internal.ClassInfo, "net.caffeinemc.mods.sodium.api.vertex.attributes.CommonVertexAttribute": Internal.ClassInfo, "mods.railcraft.api.core.BlockEntityLike": Internal.ClassInfo, "dev.latvian.mods.kubejs.generator.ResourceGenerator": Internal.ClassInfo, "elucent.eidolon.client.particle.SlashParticleData": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.entities.BombEntity$BreakingMode": Internal.ClassInfo, "com.mna.blocks.manaweaving.ManaResevoirBlock": Internal.ClassInfo, "mods.railcraft.world.level.block.detector.MobDetectorBlock": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.LootPool": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeEntity": Internal.ClassInfo, "xfacthd.framedblocks.api.predicate.contex.ConTexMode": Internal.ClassInfo, "java.lang.reflect.Member": Internal.ClassInfo, "java.net.NetworkInterface": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.ArcaneWoodLeavesBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.TreeConfiguration": Internal.ClassInfo, "appeng.debug.EnergyGeneratorBlock": Internal.ClassInfo, "divinerpg.blocks.base.BlockModPillar": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.Int2IntMap$Entry": Internal.ClassInfo, "divinerpg.blocks.iceika.BlockWinterberryBush": Internal.ClassInfo, "net.minecraftforge.common.world.ModifiableStructureInfo$StructureInfo$Builder": Internal.ClassInfo, "net.minecraft.client.gui.components.AbstractButton": Internal.ClassInfo, "com.mna.effects.harmful.EffectEntangle": Internal.ClassInfo, "java.awt.JobAttributes$DestinationType": Internal.ClassInfo, "com.mojang.blaze3d.pipeline.RenderTarget": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.structures.NetherFortressStructure": Internal.ClassInfo, "net.minecraft.world.level.block.KelpBlock": Internal.ClassInfo, "net.minecraft.world.level.block.HorizontalDirectionalBlock": Internal.ClassInfo, "net.minecraft.world.level.biome.Biome$TemperatureModifier": Internal.ClassInfo, "io.netty.buffer.AbstractReferenceCountedByteBuf": Internal.ClassInfo, "mods.railcraft.world.item.TrackLayerCartItem": Internal.ClassInfo, "net.fabricmc.fabric.api.client.model.loading.v1.FabricBakedModelManager": Internal.ClassInfo, "divinerpg.items.iceika.ItemSnowGlobe": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.StructureStart": Internal.ClassInfo, "fuzs.puzzleslib.mixin.client.accessor.ItemColorsForgeAccessor": Internal.ClassInfo, "dev.latvian.mods.kubejs.script.ConsoleLine": Internal.ClassInfo, "xfacthd.framedblocks.api.type.IBlockType": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.filter.RecipeFilterParseEvent": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2LongMap$Entry": Internal.ClassInfo, "dev.ftb.mods.ftbquests.item.StageBarrierBlockItem": Internal.ClassInfo, "mods.railcraft.world.level.block.steamboiler.SteamBoilerTankBlock": Internal.ClassInfo, "io.wispforest.accessories.pond.AccessoriesAPIAccess": Internal.ClassInfo, "net.minecraft.world.entity.monster.WitherSkeleton": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.Long2CharFunction": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.rock_candy.RockCandy$RockCandyVariant": Internal.ClassInfo, "net.minecraft.world.inventory.BlastFurnaceMenu": Internal.ClassInfo, "de.dafuqs.spectrum.mixin.accessors.TridentEntityAccessor": Internal.ClassInfo, "net.minecraft.world.level.block.RootedDirtBlock": Internal.ClassInfo, "com.mojang.brigadier.suggestion.SuggestionProvider": Internal.ClassInfo, "net.minecraftforge.eventbus.api.IEventBusInvokeDispatcher": Internal.ClassInfo, "net.minecraft.server.level.ChunkHolder$LevelChangeListener": Internal.ClassInfo, "com.mna.blocks.artifice.SpellSpecializationBlock": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.texture.ItemStackTexture": Internal.ClassInfo, "de.keksuccino.melody.mixin.mixins.common.client.IMixinSoundManager": Internal.ClassInfo, "net.minecraftforge.client.event.RegisterColorHandlersEvent": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.treedecorators.AlterGroundDecorator": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.NoiseBasedCountPlacement": Internal.ClassInfo, "xfacthd.framedblocks.common.block.cube.FramedTargetBlock": Internal.ClassInfo, "com.almostreliable.lootjs.mixin.LootItemConditionMixin": Internal.ClassInfo, "java.lang.reflect.Field": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.config.BooleanConfig": Internal.ClassInfo, "io.netty.util.ReferenceCounted": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.gui.widgets.AbstractWidget": Internal.ClassInfo, "net.minecraft.client.renderer.entity.ItemRenderer": Internal.ClassInfo, "net.minecraft.client.multiplayer.chat.report.ReportReason": Internal.ClassInfo, "net.minecraftforge.registries.MissingMappingsEvent$Mapping": Internal.ClassInfo, "com.lowdragmc.lowdraglib.syncdata.IEnhancedManaged": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2ObjectArrayMap": Internal.ClassInfo, "mods.railcraft.world.level.block.FurnaceMultiblockBlock": Internal.ClassInfo, "net.minecraft.world.level.chunk.Palette$Factory": Internal.ClassInfo, "net.minecraft.world.level.block.entity.ContainerOpenersCounter": Internal.ClassInfo, "com.mna.effects.beneficial.EffectTelekinesis": Internal.ClassInfo, "net.minecraft.world.level.block.SignBlock": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.conditional.amaranth.AmaranthBushelBlock": Internal.ClassInfo, "java.awt.event.AWTEventListener": Internal.ClassInfo, "net.minecraft.world.item.HangingEntityItem": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.material.properties.IngotProperty": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.icon.IResourceIcon": Internal.ClassInfo, "com.yanny.ytech.configuration.block.IrrigationBlock": Internal.ClassInfo, "net.minecraft.world.level.block.PressurePlateBlock": Internal.ClassInfo, "mods.railcraft.api.charge.ChargeStorage": Internal.ClassInfo, "appeng.block.paint.PaintSplotchesBlock": Internal.ClassInfo, "java.lang.Runnable": Internal.ClassInfo, "net.minecraft.nbt.IntArrayTag": Internal.ClassInfo, "net.minecraft.world.level.block.MagmaBlock": Internal.ClassInfo, "net.minecraftforge.common.world.ModifiableBiomeInfo$BiomeInfo": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.SpikeFeature$EndSpike": Internal.ClassInfo, "net.minecraft.advancements.critereon.StatePropertiesPredicate": Internal.ClassInfo, "net.minecraftforge.client.model.generators.ItemModelBuilder$OverrideBuilder": Internal.ClassInfo, "org.violetmoon.quark.mixin.mixins.accessor.AccessorServerGamePacketListener": Internal.ClassInfo, "javax.swing.text.AttributeSet$ColorAttribute": Internal.ClassInfo, "net.minecraft.client.renderer.chunk.RenderRegionCache": Internal.ClassInfo, "appeng.api.implementations.items.IMemoryCard": Internal.ClassInfo, "com.sonicether.soundphysics.world.ClonedLevelChunk": Internal.ClassInfo, "com.google.common.collect.ImmutableSet": Internal.ClassInfo, "net.minecraft.world.level.block.state.BlockBehaviour$BlockStateBase$Cache": Internal.ClassInfo, "com.mna.items.constructs.parts.arms.ConstructPartGrabberArmRight": Internal.ClassInfo, "net.fabricmc.fabric.mixin.content.registry.ShovelItemAccessor": Internal.ClassInfo, "cofh.core.common.block.EntityBlockCoFH": Internal.ClassInfo, "com.aizistral.omniconfig.Configuration$VersioningPolicy": Internal.ClassInfo, "java.lang.module.Configuration": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.OrbitalFluidRetainerBlock": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopepanelcorner.FramedLargeInnerCornerSlopePanelWallBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.OutputReplacementTransformer": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.RedemptionPotion": Internal.ClassInfo, "dev.latvian.mods.unit.VariableSet": Internal.ClassInfo, "biomesoplenty.common.block.EyebulbBlock": Internal.ClassInfo, "xfacthd.framedblocks.common.block.pane.FramedWallBoardBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.PlacementContext": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.StructureSpawnOverride$BoundingBoxType": Internal.ClassInfo, "com.aizistral.etherium.items.EnderRod": Internal.ClassInfo, "cofh.thermal.dynamics.common.item.AttachmentItem": Internal.ClassInfo, "net.minecraftforge.common.loot.IGlobalLootModifier": Internal.ClassInfo, "com.mna.items.artifice.ItemRecipeCopyBook": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decoration.GemstoneGlassBlock": Internal.ClassInfo, "appeng.api.networking.energy.IAEPowerStorage": Internal.ClassInfo, "java.util.HashSet": Internal.ClassInfo, "appeng.api.networking.IGridService": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.misc.OverencumberedEffect": Internal.ClassInfo, "net.minecraft.world.level.ClipContext$ShapeGetter": Internal.ClassInfo, "net.irisshaders.batchedentityrendering.impl.BlendingStateHolder": Internal.ClassInfo, "de.dafuqs.spectrum.particle.render.ExtendedParticleManager": Internal.ClassInfo, "net.minecraft.world.entity.animal.WaterAnimal": Internal.ClassInfo, "dev.ftb.mods.ftbquests.util.ProgressChange": Internal.ClassInfo, "org.apache.logging.log4j.message.Message": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.CountPlacement": Internal.ClassInfo, "org.slf4j.spi.LoggingEventBuilder": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slope.FramedHalfSlopeBlock$ShapeKey": Internal.ClassInfo, "org.violetmoon.zeta.mixin.mixins.AccessorLootTable": Internal.ClassInfo, "com.mojang.blaze3d.platform.NativeImage": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slope.FramedSlopeBlock": Internal.ClassInfo, "net.minecraft.world.level.gameevent.vibrations.VibrationSystem": Internal.ClassInfo, "java.util.concurrent.ExecutorService": Internal.ClassInfo, "net.minecraft.world.entity.TamableAnimal": Internal.ClassInfo, "net.minecraft.world.entity.ai.control.BodyRotationControl": Internal.ClassInfo, "io.netty.channel.ChannelProgressivePromise": Internal.ClassInfo, "java.awt.EventQueue": Internal.ClassInfo, "net.minecraft.client.gui.font.FontManager": Internal.ClassInfo, "mods.railcraft.world.level.block.entity.steamboiler.SteamBoilerBlockEntity": Internal.ClassInfo, "net.minecraftforge.event.TickEvent$LevelTickEvent": Internal.ClassInfo, "net.minecraft.world.item.BlockItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.InputReplacementTransformer": Internal.ClassInfo, "mods.railcraft.world.level.block.tank.IronTankGaugeBlock": Internal.ClassInfo, "divinerpg.blocks.base.BlockModTorch": Internal.ClassInfo, "mcp.mobius.waila.mixin.BaseContainerBlockEntityAccess": Internal.ClassInfo, "com.inventorypets.pets.petBiome": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.StorageCrystal": Internal.ClassInfo, "com.gregtechceu.gtceu.common.capability.MedicalConditionTracker": Internal.ClassInfo, "java.awt.event.ActionEvent": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.item.IFirstPersonAnimationProvider": Internal.ClassInfo, "techreborn.blocks.generator.BlockFusionCoil": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.FossilFeature": Internal.ClassInfo, "com.mna.blocks.worldgen.MATarmaRootBlock": Internal.ClassInfo, "net.minecraft.world.entity.Entity": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundRespawnPacket": Internal.ClassInfo, "net.minecraft.data.tags.TagsProvider$TagLookup": Internal.ClassInfo, "com.mojang.datafixers.schemas.Schema": Internal.ClassInfo, "appeng.crafting.pattern.EncodedPatternItem": Internal.ClassInfo, "com.mna.blocks.utility.BlockWithOffset": Internal.ClassInfo, "net.minecraftforge.client.event.ContainerScreenEvent$Render$Background": Internal.ClassInfo, "mods.railcraft.world.level.block.entity.multiblock.MultiblockPattern$Builder": Internal.ClassInfo, "com.mna.items.armor.DyeableMageArmor": Internal.ClassInfo, "java.util.function.LongSupplier": Internal.ClassInfo, "net.minecraftforge.client.event.RenderGuiEvent$Pre": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.EldritchAmulet": Internal.ClassInfo, "net.minecraftforge.client.event.RegisterClientTooltipComponentFactoriesEvent": Internal.ClassInfo, "cofh.core.common.item.BlockItemCoFH": Internal.ClassInfo, "techreborn.blocks.cable.CableBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.chars.Char2FloatFunction": Internal.ClassInfo, "java.lang.module.ModuleReference": Internal.ClassInfo, "com.enderio.api.misc.RedstoneControl": Internal.ClassInfo, "de.keksuccino.fancymenu.util.rendering.ui.widget.CustomizableWidget$CustomBackgroundResetBehavior": Internal.ClassInfo, "appeng.client.render.effects.EnergyParticleData": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.ICustomAnimationItem": Internal.ClassInfo, "com.mna.blocks.worldgen.MAFlowerBlock": Internal.ClassInfo, "com.mna.enchantments.ExperienceToSouls": Internal.ClassInfo, "com.mna.blocks.runeforging.RuneforgeBlock": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.HeavenScroll": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeRecipeSerializer": Internal.ClassInfo, "dev.latvian.mods.kubejs.util.NotificationBuilder": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.api.items.IPermanentCrystal": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.material.properties.ItemPipeProperties": Internal.ClassInfo, "appeng.util.prioritylist.IPartitionList": Internal.ClassInfo, "xfacthd.framedblocks.common.block.stairs.FramedDoubleHalfStairsBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.api.fluids.FluidState": Internal.ClassInfo, "net.minecraft.core.RegistryAccess": Internal.ClassInfo, "javax.swing.text.AttributeSet$ParagraphAttribute": Internal.ClassInfo, "com.inventorypets.items.petAchieveItem5": Internal.ClassInfo, "com.yogpc.qp.machines.quarry.SFQuarryBlock": Internal.ClassInfo, "net.minecraft.client.renderer.texture.atlas.SpriteSource": Internal.ClassInfo, "com.mna.enchantments.base.MAEnchantmentBase": Internal.ClassInfo, "io.wispforest.owo.mixin.ui.access.ClickableWidgetAccessor": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.callbacks.BlockExplodedCallbackJS": Internal.ClassInfo, "com.inventorypets.items.petAchieveItem1": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.items.QuiverItem": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decoration.PigmentBlock": Internal.ClassInfo, "net.minecraftforge.event.entity.living.MobEffectEvent$Applicable": Internal.ClassInfo, "net.minecraft.world.entity.monster.Evoker": Internal.ClassInfo, "reborncore.common.fluid.FluidSettings": Internal.ClassInfo, "snownee.kiwi.mixin.VillagerAccess": Internal.ClassInfo, "com.probejs.jdoc.property.PropertyType": Internal.ClassInfo, "net.minecraft.world.item.PlayerHeadItem": Internal.ClassInfo, "java.util.Dictionary": Internal.ClassInfo, "net.fabricmc.fabric.api.transfer.v1.storage.TransferVariant": Internal.ClassInfo, "java.lang.Throwable": Internal.ClassInfo, "appeng.api.stacks.GenericStack": Internal.ClassInfo, "mods.railcraft.world.level.block.entity.multiblock.MultiblockPattern$Element": Internal.ClassInfo, "appeng.facade.FacadePart": Internal.ClassInfo, "net.mehvahdjukaar.amendments.common.CakeRegistry$CakeType": Internal.ClassInfo, "de.dafuqs.spectrum.enchantments.InexorableEnchantment": Internal.ClassInfo, "dev.latvian.mods.kubejs.forge.ForgeEventConsumer": Internal.ClassInfo, "net.minecraft.world.level.lighting.ChunkSkyLightSources": Internal.ClassInfo, "dev.architectury.extensions.injected.InjectedRegistryEntryExtension": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundPlayerAbilitiesPacket": Internal.ClassInfo, "com.mojang.serialization.Encoder": Internal.ClassInfo, "net.minecraft.world.Container": Internal.ClassInfo, "net.minecraft.core.Direction$Axis": Internal.ClassInfo, "net.minecraftforge.client.event.ComputeFovModifierEvent": Internal.ClassInfo, "net.minecraft.world.item.crafting.CookingBookCategory": Internal.ClassInfo, "net.minecraft.world.item.crafting.SimpleCookingSerializer": Internal.ClassInfo, "de.dafuqs.spectrum.status_effects.ImmunityStatusEffect": Internal.ClassInfo, "java.util.ResourceBundle$Control": Internal.ClassInfo, "java.util.function.BiConsumer": Internal.ClassInfo, "me.jellysquid.mods.sodium.mixin.core.model.BakedModelMixin": Internal.ClassInfo, "mods.railcraft.world.module.ModuleProvider": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerInteractEvent": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.misc.Triplet": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.custom.SwordItemBuilder": Internal.ClassInfo, "com.mojang.serialization.MapCodec$ResultFunction": Internal.ClassInfo, "net.minecraft.world.level.block.DiodeBlock": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$Opening": Internal.ClassInfo, "vectorwing.farmersdelight.common.item.MushroomColonyItem": Internal.ClassInfo, "net.minecraft.world.entity.animal.Animal": Internal.ClassInfo, "dev.latvian.mods.kubejs.integration.forge.jei.AddJEIEventJS": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slab.FramedPanelBlock": Internal.ClassInfo, "mods.railcraft.world.item.GoldenTicketItem": Internal.ClassInfo, "snownee.lychee.core.recipe.ILycheeRecipe": Internal.ClassInfo, "net.minecraftforge.event.village.WandererTradesEvent": Internal.ClassInfo, "net.minecraft.world.level.block.FletchingTableBlock": Internal.ClassInfo, "com.mojang.serialization.Codec": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.treedecorators.BeehiveDecorator": Internal.ClassInfo, "cofh.thermal.core.common.block.SignalumGlassBlock": Internal.ClassInfo, "org.joml.Vector2dc": Internal.ClassInfo, "net.minecraft.world.entity.EntityDimensions": Internal.ClassInfo, "com.enderio.api.misc.Vector2i": Internal.ClassInfo, "net.minecraft.client.renderer.texture.Dumpable": Internal.ClassInfo, "net.minecraft.world.level.gameevent.EntityPositionSource": Internal.ClassInfo, "net.minecraft.world.entity.SlotAccess": Internal.ClassInfo, "snownee.lychee.core.post.PostActionType": Internal.ClassInfo, "biomesoplenty.common.block.HangingCobwebBottomBlock": Internal.ClassInfo, "divinerpg.items.vethea.ItemVetheanDissipator": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.LangEventJS": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.ExperienceTotemBlock": Internal.ClassInfo, "mods.railcraft.world.level.block.charge.EmptyBatteryBlock": Internal.ClassInfo, "elucent.eidolon.common.block.BrazierBlock": Internal.ClassInfo, "net.minecraft.world.entity.boss.enderdragon.phases.DragonTakeoffPhase": Internal.ClassInfo, "mods.railcraft.world.level.block.BlastFurnaceBricksBlock": Internal.ClassInfo, "net.minecraft.client.telemetry.ClientTelemetryManager": Internal.ClassInfo, "net.minecraft.world.damagesource.CombatEntry": Internal.ClassInfo, "net.minecraft.world.effect.MobEffectInstance$FactorData": Internal.ClassInfo, "com.mna.api.items.TieredBlockItem": Internal.ClassInfo, "net.minecraftforge.server.permission.events.PermissionGatherEvent$Nodes": Internal.ClassInfo, "net.minecraft.world.level.gameevent.GameEvent$Context": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundChatAckPacket": Internal.ClassInfo, "net.minecraft.client.model.ArmedModel": Internal.ClassInfo, "java.lang.Cloneable": Internal.ClassInfo, "net.minecraft.world.level.block.DoubleBlockCombiner$NeighborCombineResult": Internal.ClassInfo, "com.lowdragmc.lowdraglib.utils.DummyWorld": Internal.ClassInfo, "com.kamth.zeldamod.item.armors.RocCape": Internal.ClassInfo, "com.inventorypets.items.nuggetEnder": Internal.ClassInfo, "com.almostreliable.lootjs.loot.action.CompositeLootAction": Internal.ClassInfo, "com.inventorypets.items.xeroxParcGui": Internal.ClassInfo, "org.apache.logging.log4j.spi.Terminable": Internal.ClassInfo, "com.mna.items.sorcery.ItemModifierBook": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.config.ConfigGroup": Internal.ClassInfo, "snownee.lychee.core.recipe.ChanceRecipe": Internal.ClassInfo, "mods.railcraft.api.signal.entity.SignalEntity": Internal.ClassInfo, "org.joml.Vector2fc": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.generic.ItemSpellstoneCurio": Internal.ClassInfo, "net.minecraft.world.level.block.entity.TheEndGatewayBlockEntity": Internal.ClassInfo, "org.apache.logging.log4j.core.config.ConfigurationListener": Internal.ClassInfo, "net.minecraft.client.renderer.MultiBufferSource": Internal.ClassInfo, "net.minecraft.world.entity.SpawnGroupData": Internal.ClassInfo, "java.time.temporal.ChronoField": Internal.ClassInfo, "dev.latvian.mods.kubejs.fluid.FluidLike": Internal.ClassInfo, "dev.latvian.mods.kubejs.typings.desc.PrimitiveDescJS": Internal.ClassInfo, "de.dafuqs.spectrum.mixin.accessors.DimensionEffectsAccessor": Internal.ClassInfo, "net.minecraftforge.event.level.ChunkWatchEvent$Watch": Internal.ClassInfo, "net.minecraft.client.sounds.SoundEngine": Internal.ClassInfo, "net.minecraft.world.level.block.WeatheringCopper$WeatherState": Internal.ClassInfo, "net.minecraftforge.event.entity.EntityMountEvent": Internal.ClassInfo, "net.minecraft.client.renderer.debug.GoalSelectorDebugRenderer": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.AbstractObject2FloatMap": Internal.ClassInfo, "net.minecraft.world.level.block.AmethystBlock": Internal.ClassInfo, "dev.emi.trinkets.api.TrinketEnums$DropRule": Internal.ClassInfo, "com.probejs.jdoc.java.FieldInfo": Internal.ClassInfo, "net.fabricmc.fabric.mixin.blockview.BlockViewMixin": Internal.ClassInfo, "net.minecraft.world.level.levelgen.heightproviders.HeightProvider": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.editor.configurator.IConfigurableWidget": Internal.ClassInfo, "net.minecraft.client.renderer.texture.atlas.SpriteSource$Output": Internal.ClassInfo, "org.orecruncher.dsurround.config.biome.BiomeInfo": Internal.ClassInfo, "net.minecraft.world.level.block.MangrovePropaguleBlock": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$Render$Post": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.item.FuelItem": Internal.ClassInfo, "com.gregtechceu.gtceu.api.item.DrumMachineItem": Internal.ClassInfo, "com.mna.items.constructs.parts.arms.ConstructPartFluidNozzleLeft": Internal.ClassInfo, "de.dafuqs.spectrum.mixin.client.accessors.BossBarHudAccessor": Internal.ClassInfo, "org.embeddedt.embeddium.api.eventbus.EmbeddiumEvent": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.util.TooltipList": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.BlockModificationEventJS": Internal.ClassInfo, "mods.railcraft.world.level.block.manipulator.FluidManipulatorBlock": Internal.ClassInfo, "com.mna.enchantments.Bouncing": Internal.ClassInfo, "de.dafuqs.spectrum.helpers.NullableDyeColor": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blockpredicates.MatchingBlocksPredicate": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.DiskConfiguration": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.material.properties.GemProperty": Internal.ClassInfo, "net.minecraft.world.item.SolidBucketItem": Internal.ClassInfo, "divinerpg.items.iceika.ItemGlacialBlade": Internal.ClassInfo, "java.awt.Dialog$ModalExclusionType": Internal.ClassInfo, "net.minecraft.world.level.block.AbstractCauldronBlock": Internal.ClassInfo, "net.minecraftforge.client.model.generators.CustomLoaderBuilder": Internal.ClassInfo, "fuzs.puzzleslib.mixin.accessor.BlockItemAccessor": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.IcebergFeature": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerEvent$LoadFromFile": Internal.ClassInfo, "net.minecraftforge.client.model.geometry.IUnbakedGeometry": Internal.ClassInfo, "dynamic_fps.impl.GraphicsState": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.EndGatewayConfiguration": Internal.ClassInfo, "appeng.api.implementations.blockentities.ICrankable": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingDamageEvent": Internal.ClassInfo, "dev.onyxstudios.cca.api.v3.component.ComponentKey": Internal.ClassInfo, "com.lothrazar.library.block.EntityBlockFlib": Internal.ClassInfo, "java.awt.dnd.DropTargetEvent": Internal.ClassInfo, "mods.railcraft.api.item.Crowbar": Internal.ClassInfo, "java.util.stream.Collector": Internal.ClassInfo, "org.violetmoon.zeta.network.ZetaMessageSerializer$Writer": Internal.ClassInfo, "net.minecraftforge.event.entity.player.EntityItemPickupEvent": Internal.ClassInfo, "net.minecraft.world.item.CrossbowItem": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeLevel": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.widget.TextFieldWidget": Internal.ClassInfo, "elucent.eidolon.mixin.BlockEntityTypeAccessor": Internal.ClassInfo, "net.mehvahdjukaar.amendments.reg.ModBlockProperties$PostType": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.IceSpikeFeature": Internal.ClassInfo, "net.minecraft.world.InteractionResult": Internal.ClassInfo, "net.minecraft.world.entity.boss.enderdragon.phases.DragonSittingScanningPhase": Internal.ClassInfo, "net.minecraftforge.fml.event.lifecycle.FMLLoadCompleteEvent": Internal.ClassInfo, "net.minecraft.world.entity.monster.AbstractIllager": Internal.ClassInfo, "java.nio.ByteOrder": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.bottomless_bundle.BottomlessBundleBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.api.item.MaterialBlockItem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.pieces.StructurePiecesBuilder": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.material.properties.HazardProperty$HazardTrigger": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.Long2ByteFunction": Internal.ClassInfo, "appeng.items.materials.EnergyCardItem": Internal.ClassInfo, "net.minecraft.world.level.ClipContext$Block": Internal.ClassInfo, "xaero.map.deallocator.ByteBufferDeallocator": Internal.ClassInfo, "net.minecraft.client.gui.screens.inventory.EffectRenderingInventoryScreen": Internal.ClassInfo, "com.mojang.brigadier.exceptions.BuiltInExceptionProvider": Internal.ClassInfo, "io.wispforest.owo.ui.core.AnimatableProperty": Internal.ClassInfo, "com.mna.api.blocks.interfaces.ITranslucentBlock": Internal.ClassInfo, "de.keksuccino.fancymenu.util.resource.resources.audio.IAudio": Internal.ClassInfo, "net.minecraft.world.entity.projectile.ThrowableProjectile": Internal.ClassInfo, "com.gregtechceu.gtceu.api.block.RendererBlock": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingEvent$LivingTickEvent": Internal.ClassInfo, "mods.railcraft.api.charge.ChargeProtectionItem$ZapResult": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.ArcaneLumosItem": Internal.ClassInfo, "com.inventorypets.worldgen.UndergroundDungeonStructure": Internal.ClassInfo, "net.minecraft.world.level.block.MultifaceSpreader$SpreadPos": Internal.ClassInfo, "de.dafuqs.matchbooks.recipe.matchbook.Matchbook": Internal.ClassInfo, "net.minecraft.world.level.chunk.ProtoChunk": Internal.ClassInfo, "net.minecraft.client.model.geom.builders.PartDefinition": Internal.ClassInfo, "net.minecraftforge.common.util.LazyOptional": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2DoubleFunction": Internal.ClassInfo, "net.minecraft.world.level.levelgen.GeodeBlockSettings": Internal.ClassInfo, "com.tterrag.registrate.providers.RegistrateItemTagsProvider": Internal.ClassInfo, "net.minecraftforge.server.permission.nodes.PermissionNode$PermissionResolver": Internal.ClassInfo, "com.mna.enchantments.Soulbound": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopeslab.FramedElevatedSlopeSlabBlock": Internal.ClassInfo, "net.minecraft.client.resources.model.ModelManager": Internal.ClassInfo, "net.minecraft.world.level.gameevent.vibrations.VibrationSystem$Data": Internal.ClassInfo, "net.minecraft.server.level.ChunkTracker": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeHolderSet$SerializationType": Internal.ClassInfo, "javax.accessibility.AccessibleRole": Internal.ClassInfo, "org.apache.logging.log4j.Marker": Internal.ClassInfo, "java.io.Flushable": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.conditional.amaranth.PottedAmaranthBushelBlock": Internal.ClassInfo, "net.minecraft.client.renderer.chunk.ChunkRenderDispatcher$RenderChunk": Internal.ClassInfo, "java.nio.file.FileStore": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.SteamPipeBlock": Internal.ClassInfo, "com.enderio.base.common.item.tool.YetaWrenchItem": Internal.ClassInfo, "net.minecraftforge.event.entity.player.CriticalHitEvent": Internal.ClassInfo, "pokefenn.totemic.block.StrippableLogBlock": Internal.ClassInfo, "me.srrapero720.embeddiumplus.foundation.entitydistance.IWhitelistCheck": Internal.ClassInfo, "net.minecraft.world.inventory.LoomMenu": Internal.ClassInfo, "net.irisshaders.batchedentityrendering.mixin.RenderStateShardAccessor": Internal.ClassInfo, "net.minecraft.world.item.TieredItem": Internal.ClassInfo, "net.minecraft.world.entity.WalkAnimationState": Internal.ClassInfo, "net.minecraft.advancements.critereon.EntityEquipmentPredicate": Internal.ClassInfo, "appeng.api.networking.energy.IEnergySource": Internal.ClassInfo, "net.minecraft.world.level.chunk.LevelChunkSection": Internal.ClassInfo, "de.dafuqs.spectrum.items.tools.DreamflayerItem": Internal.ClassInfo, "divinerpg.blocks.twilight.BlockSkyPlant": Internal.ClassInfo, "net.minecraft.world.entity.monster.RangedAttackMob": Internal.ClassInfo, "net.minecraft.util.InclusiveRange": Internal.ClassInfo, "net.minecraft.world.level.block.LeavesBlock": Internal.ClassInfo, "cofh.thermal.core.common.fluid.EnderFluid$FluidBlock": Internal.ClassInfo, "com.lothrazar.simpletomb.block.ModelTomb": Internal.ClassInfo, "com.enderio.base.common.item.PaintedSlabBlockItem": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundPlayerChatPacket": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.Tilt": Internal.ClassInfo, "net.minecraftforge.client.event.RegisterRecipeBookCategoriesEvent": Internal.ClassInfo, "java.util.ImmutableCollections$AbstractImmutableCollection": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemBuilder$NameCallback": Internal.ClassInfo, "net.minecraft.util.SortedArraySet": Internal.ClassInfo, "java.lang.Readable": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundTeleportToEntityPacket": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.modular.ModularUI": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.SteamStorageBaseItem": Internal.ClassInfo, "net.minecraftforge.event.TickEvent$PlayerTickEvent": Internal.ClassInfo, "com.mna.api.items.IPositionalItem": Internal.ClassInfo, "mods.railcraft.world.level.block.post.Connection": Internal.ClassInfo, "com.kamth.zeldamod.block.custom.GloomBlock": Internal.ClassInfo, "net.minecraft.world.level.block.ConcretePowderBlock": Internal.ClassInfo, "net.minecraft.world.entity.projectile.Fireball": Internal.ClassInfo, "net.minecraftforge.forgespi.language.IModInfo": Internal.ClassInfo, "java.net.URLStreamHandlerFactory": Internal.ClassInfo, "net.minecraft.world.item.EnchantedGoldenAppleItem": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.jade_vines.JadeiteFlowerBlock": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.widget.DraggableWidgetGroup": Internal.ClassInfo, "net.minecraft.world.item.HoneycombItem": Internal.ClassInfo, "net.minecraft.network.chat.HoverEvent": Internal.ClassInfo, "mcp.mobius.waila.mixin.PlayerTabOverlayAccess": Internal.ClassInfo, "mods.railcraft.world.level.block.entity.track.LockingTrackBlockEntity": Internal.ClassInfo, "java.lang.annotation.Annotation": Internal.ClassInfo, "com.inventorypets.items.nuggetDiamond": Internal.ClassInfo, "net.minecraftforge.network.NetworkEvent$ServerCustomPayloadEvent": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.parameters.LootContextParams": Internal.ClassInfo, "appeng.api.storage.IStorageProvider": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.spirit_sallow.OminousSaplingBlockItem": Internal.ClassInfo, "appeng.client.render.overlay.IOverlayDataSource": Internal.ClassInfo, "com.google.common.collect.Multiset": Internal.ClassInfo, "com.mna.blocks.ritual.CircleOfPowerBlock": Internal.ClassInfo, "net.minecraftforge.common.world.StructureModifier": Internal.ClassInfo, "divinerpg.items.base.block.ItemFrostedChest": Internal.ClassInfo, "net.minecraft.world.item.MilkBucketItem": Internal.ClassInfo, "com.mojang.authlib.minecraft.MinecraftSessionService": Internal.ClassInfo, "biomesoplenty.common.block.FleshTendonsBlock": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.modular.ModularUIContainer": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.SuperMagnetRing": Internal.ClassInfo, "com.mojang.brigadier.Message": Internal.ClassInfo, "java.awt.Graphics2D": Internal.ClassInfo, "com.mna.api.capabilities.IPlayerProgression": Internal.ClassInfo, "io.netty.channel.EventLoopGroup": Internal.ClassInfo, "de.dafuqs.spectrum.items.trinkets.InkDrainTrinketItem": Internal.ClassInfo, "appeng.api.networking.crafting.ICraftingRequester": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.conditional.blood_orchid.PottedBloodOrchidBlock": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.present.PresentItem": Internal.ClassInfo, "appeng.blockentity.networking.CrystalResonanceGeneratorBlockEntity": Internal.ClassInfo, "dev.ftb.mods.ftbquests.quest.task.Task": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.PiglinBruteSpecificSensor": Internal.ClassInfo, "biomesoplenty.common.block.SandBlockBOP": Internal.ClassInfo, "net.minecraft.client.renderer.texture.SpriteTicker": Internal.ClassInfo, "dev.shadowsoffire.fastsuite.ILockableItemStack": Internal.ClassInfo, "net.minecraft.client.OptionInstance": Internal.ClassInfo, "net.mehvahdjukaar.amendments.common.tile.LiquidCauldronBlockTile": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.foliageplacers.PineFoliagePlacer": Internal.ClassInfo, "net.minecraft.world.level.block.RotatedPillarBlock": Internal.ClassInfo, "com.enderio.api.conduit.ticker.IConduitTicker": Internal.ClassInfo, "net.minecraft.tags.TagNetworkSerialization$NetworkPayload": Internal.ClassInfo, "org.orecruncher.dsurround.effects.IBlockEffectProducer": Internal.ClassInfo, "com.aizistral.omniconfig.wrappers.Omniconfig$IntParameter": Internal.ClassInfo, "java.security.AccessControlContext": Internal.ClassInfo, "com.mna.entities.boss.attacks.ThrownAllfatherAxe": Internal.ClassInfo, "net.minecraft.world.level.block.FallingBlock": Internal.ClassInfo, "xfacthd.framedblocks.api.predicate.contex.FullEdgeConnectionPredicate": Internal.ClassInfo, "org.violetmoon.quark.base.item.QuarkMusicDiscItem": Internal.ClassInfo, "com.mojang.datafixers.types.templates.RecursivePoint$RecursivePointType": Internal.ClassInfo, "dev.latvian.mods.rhino.mod.wrapper.DirectionWrapper": Internal.ClassInfo, "net.fabricmc.fabric.mixin.loot.LootTableAccessor": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.BlockStateConfiguration": Internal.ClassInfo, "net.minecraft.world.level.block.RedstoneTorchBlock": Internal.ClassInfo, "javax.swing.text.AttributeSet$CharacterAttribute": Internal.ClassInfo, "net.minecraft.core.HolderLookup$RegistryLookup": Internal.ClassInfo, "top.theillusivec4.curios.api.type.capability.ICurioItem": Internal.ClassInfo, "com.gregtechceu.gtceu.api.registry.registrate.CompassNode": Internal.ClassInfo, "io.wispforest.owo.util.RegistryAccess$AccessibleRegistry": Internal.ClassInfo, "net.minecraftforge.client.model.generators.ItemModelProvider": Internal.ClassInfo, "com.google.gson.FieldNamingStrategy": Internal.ClassInfo, "net.minecraft.world.level.levelgen.SurfaceRules$RuleSource": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blockpredicates.HasSturdyFacePredicate": Internal.ClassInfo, "org.w3c.dom.CDATASection": Internal.ClassInfo, "net.minecraft.client.multiplayer.chat.report.ChatReportBuilder": Internal.ClassInfo, "net.minecraft.commands.arguments.ArgumentSignatures": Internal.ClassInfo, "net.minecraftforge.event.entity.player.BonemealEvent": Internal.ClassInfo, "dev.onyxstudios.cca.api.v3.component.sync.AutoSyncedComponent": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.StructurePiece": Internal.ClassInfo, "javax.swing.text.AttributeSet": Internal.ClassInfo, "xaero.map.MapProcessor": Internal.ClassInfo, "cofh.core.util.filter.IFilter": Internal.ClassInfo, "com.google.common.reflect.TypeParameter": Internal.ClassInfo, "java.nio.file.DirectoryStream$Filter": Internal.ClassInfo, "net.minecraft.client.gui.screens.Screen": Internal.ClassInfo, "java.security.Signature": Internal.ClassInfo, "com.mna.effects.beneficial.EffectChronoAnchor": Internal.ClassInfo, "io.netty.channel.RecvByteBufAllocator": Internal.ClassInfo, "java.awt.geom.AffineTransform": Internal.ClassInfo, "net.minecraft.stats.RecipeBook": Internal.ClassInfo, "net.minecraft.advancements.critereon.EnterBlockTrigger$TriggerInstance": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.modular.WidgetUIAccess": Internal.ClassInfo, "xfacthd.framedblocks.common.data.property.SlopeType": Internal.ClassInfo, "com.gregtechceu.gtceu.api.gui.fancy.ConfiguratorPanel$FloatingTab": Internal.ClassInfo, "com.yogpc.qp.machines.module.BedrockModuleItem": Internal.ClassInfo, "divinerpg.items.arcana.ItemFirefly": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.idols.SilverfishInsertingIdolBlock": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.conditional.colored_tree.ColoredLeavesBlock": Internal.ClassInfo, "net.minecraft.world.entity.player.ChatVisiblity": Internal.ClassInfo, "com.mna.effects.harmful.EffectChronoExhaustion": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.FluidLogging$SpectrumFluidLoggable": Internal.ClassInfo, "net.minecraft.world.level.biome.BiomeSource": Internal.ClassInfo, "net.minecraft.util.AbortableIterationConsumer": Internal.ClassInfo, "net.minecraft.client.renderer.RenderStateShard$CullStateShard": Internal.ClassInfo, "org.apache.logging.log4j.core.Appender": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.ObjectArrayList": Internal.ClassInfo, "elucent.eidolon.common.entity.SpellProjectileEntity": Internal.ClassInfo, "net.minecraft.network.chat.MutableComponent": Internal.ClassInfo, "net.minecraft.world.level.block.entity.SignText": Internal.ClassInfo, "de.dafuqs.spectrum.items.magic_items.ampoules.BloodstoneGlassAmpouleItem": Internal.ClassInfo, "mezz.jei.api.gui.handlers.IGuiClickableArea": Internal.ClassInfo, "net.minecraft.world.level.block.SculkSensorBlock": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.NearestVisibleLivingEntitySensor": Internal.ClassInfo, "net.minecraft.data.recipes.ShapelessRecipeBuilder": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.ObjectIterator": Internal.ClassInfo, "de.keksuccino.konkrete.events.ScreenKeyReleasedEvent": Internal.ClassInfo, "com.mna.api.particles.parameters.ParticleInt": Internal.ClassInfo, "com.mna.items.sorcery.ItemBangle": Internal.ClassInfo, "net.minecraft.util.SignatureUpdater$Output": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.SteamThermalStorageBlock": Internal.ClassInfo, "com.mna.items.ritual.ItemPurifiedVinteumDust": Internal.ClassInfo, "com.inventorypets.blocks.sandSpawn": Internal.ClassInfo, "com.enderio.api.capability.MultiCapabilityProvider": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeEnchantment": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.RandomPatchConfiguration": Internal.ClassInfo, "net.minecraft.client.renderer.block.ModelBlockRenderer$Cache": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.entity.movement_tracker.SectionedEntityMovementListener": Internal.ClassInfo, "net.minecraft.util.ModCheck$Confidence": Internal.ClassInfo, "com.mojang.authlib.yggdrasil.request.AbuseReportRequest$ThirdPartyServerInfo": Internal.ClassInfo, "cofh.core.init.CoreEntityDataSerializers$1": Internal.ClassInfo, "net.minecraft.world.entity.monster.Ghast": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.worldgen.generator.veins.DikeVeinGenerator$DikeBlockDefinition": Internal.ClassInfo, "io.wispforest.accessories.mixin.SlotAccessor": Internal.ClassInfo, "fzzyhmstrs.emi_loot.mixins.NbtPredicateAccessor": Internal.ClassInfo, "net.fabricmc.fabric.api.client.screen.v1.ScreenEvents$BeforeRender": Internal.ClassInfo, "appeng.api.crafting.IPatternDetails$PatternInputSink": Internal.ClassInfo, "net.minecraftforge.event.entity.EntityEvent$Size": Internal.ClassInfo, "com.inventorypets.items.windowsXP": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopeslab.FramedFlatElevatedDoubleSlopeSlabCornerBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.GenerationStep$Carving": Internal.ClassInfo, "net.minecraft.world.level.block.CarpetBlock": Internal.ClassInfo, "net.minecraft.world.entity.animal.horse.Variant": Internal.ClassInfo, "net.minecraft.client.renderer.RenderStateShard$DepthTestStateShard": Internal.ClassInfo, "cofh.lib.api.ContainerType": Internal.ClassInfo, "net.minecraft.world.level.chunk.PalettedContainerRO": Internal.ClassInfo, "dev.ftb.mods.ftbquests.quest.Movable": Internal.ClassInfo, "net.minecraft.world.level.chunk.LevelChunk$EntityCreationType": Internal.ClassInfo, "appeng.items.materials.UpgradeCardItem": Internal.ClassInfo, "com.mojang.brigadier.tree.LiteralCommandNode": Internal.ClassInfo, "net.minecraft.world.item.crafting.SingleItemRecipe$Serializer": Internal.ClassInfo, "mezz.jei.api.runtime.config.IJeiConfigValueSerializer$IDeserializeResult": Internal.ClassInfo, "com.inventorypets.pets.petMishumaaSaba": Internal.ClassInfo, "net.minecraft.world.level.saveddata.maps.MapItemSavedData": Internal.ClassInfo, "it.unimi.dsi.fastutil.bytes.Byte2LongFunction": Internal.ClassInfo, "org.joml.Quaternionf": Internal.ClassInfo, "org.joml.Quaterniond": Internal.ClassInfo, "java.awt.Point": Internal.ClassInfo, "java.awt.RenderingHints": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.IBagItem": Internal.ClassInfo, "org.joml.Matrix2dc": Internal.ClassInfo, "appeng.debug.CubeGeneratorBlockEntity": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.ReplaceBlockConfiguration": Internal.ClassInfo, "com.mojang.blaze3d.vertex.BufferBuilder$DrawState": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$MouseDragged$Post": Internal.ClassInfo, "net.minecraftforge.forgespi.locating.IModProvider": Internal.ClassInfo, "mods.railcraft.world.item.LocomotiveItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.gen.properties.AddSpawnProperties": Internal.ClassInfo, "me.jellysquid.mods.lithium.api.pathing.BlockPathing": Internal.ClassInfo, "net.minecraft.world.level.block.AttachedStemBlock": Internal.ClassInfo, "mods.railcraft.world.item.enchantment.DestructionEnchantment": Internal.ClassInfo, "de.dafuqs.spectrum.items.Preenchanted": Internal.ClassInfo, "snownee.kiwi.mixin.TagsProviderAccess": Internal.ClassInfo, "com.mna.blocks.artifice.BookStandBlock": Internal.ClassInfo, "snownee.lychee.core.post.CustomAction": Internal.ClassInfo, "net.minecraft.advancements.critereon.SimpleCriterionTrigger": Internal.ClassInfo, "divinerpg.blocks.base.BlockModPressurePlate": Internal.ClassInfo, "appeng.api.implementations.blockentities.IColorableBlockEntity": Internal.ClassInfo, "net.minecraft.world.level.block.EntityBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.DensityFunctions$MarkerOrMarked": Internal.ClassInfo, "org.apache.logging.log4j.core.AbstractLifeCycle": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.custom.ButtonBlockBuilder": Internal.ClassInfo, "appeng.blockentity.networking.WirelessAccessPointBlockEntity": Internal.ClassInfo, "net.minecraft.client.particle.ParticleProvider": Internal.ClassInfo, "net.minecraft.world.level.levelgen.heightproviders.BiasedToBottomHeight": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.client.arcanemicon.Page": Internal.ClassInfo, "net.minecraft.world.level.biome.BiomeGenerationSettings$PlainBuilder": Internal.ClassInfo, "java.io.Writer": Internal.ClassInfo, "com.kamth.zeldamod.item.items.ScaleItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.entity.LivingEntityHurtEventJS": Internal.ClassInfo, "net.minecraft.world.level.biome.MobSpawnSettings$MobSpawnCost": Internal.ClassInfo, "com.kamth.zeldamod.block.custom.WildBombFlowerBlock": Internal.ClassInfo, "com.mna.items.villager_lootables.LootPouchItem": Internal.ClassInfo, "net.minecraft.world.ContainerListener": Internal.ClassInfo, "net.minecraft.nbt.Tag": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.arcanewood.ArcaneWoodShovelItem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.structures.IglooStructure": Internal.ClassInfo, "net.minecraft.world.flag.FeatureFlagUniverse": Internal.ClassInfo, "divinerpg.blocks.base.BlockModWallTorch": Internal.ClassInfo, "net.minecraft.world.entity.monster.Spider": Internal.ClassInfo, "net.minecraftforge.registries.RegisterEvent$RegisterHelper": Internal.ClassInfo, "net.minecraft.tags.TagLoader$EntryWithSource": Internal.ClassInfo, "net.minecraftforge.registries.IForgeRegistry$AddCallback": Internal.ClassInfo, "net.minecraft.world.item.NameTagItem": Internal.ClassInfo, "dev.latvian.mods.rhino.IdScriptableObject": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.Structure": Internal.ClassInfo, "dev.ftb.mods.ftbquests.quest.ChapterGroup": Internal.ClassInfo, "net.minecraftforge.client.event.RegisterParticleProvidersEvent": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.editor.configurator.IConfigurable": Internal.ClassInfo, "java.util.ImmutableCollections$AbstractImmutableList": Internal.ClassInfo, "org.joml.Matrix2fc": Internal.ClassInfo, "net.minecraft.world.entity.animal.Rabbit$Variant": Internal.ClassInfo, "com.yogpc.qp.machines.module.EnergyModuleItem": Internal.ClassInfo, "com.google.gson.JsonSerializationContext": Internal.ClassInfo, "com.mna.effects.beneficial.EffectManaBoost": Internal.ClassInfo, "dev.architectury.event.EventFactory$EventImpl": Internal.ClassInfo, "org.orecruncher.dsurround.config.block.BlockInfo": Internal.ClassInfo, "net.minecraft.world.entity.monster.Vindicator": Internal.ClassInfo, "net.minecraft.client.multiplayer.chat.report.ReportingContext": Internal.ClassInfo, "net.minecraftforge.client.model.geometry.IGeometryBakingContext": Internal.ClassInfo, "pokefenn.totemic.item.BaykokBowItem": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.Long2BooleanFunction": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.block.IColored": Internal.ClassInfo, "net.minecraftforge.fml.event.lifecycle.FMLConstructModEvent": Internal.ClassInfo, "net.minecraftforge.common.util.BlockSnapshot": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.widget.SwitchWidget": Internal.ClassInfo, "java.lang.annotation.ElementType": Internal.ClassInfo, "dev.architectury.utils.OptionalSupplier": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingHurtEvent": Internal.ClassInfo, "net.minecraft.world.level.block.FaceAttachedHorizontalDirectionalBlock": Internal.ClassInfo, "java.lang.invoke.MethodType": Internal.ClassInfo, "net.minecraft.world.level.pathfinder.PathFinder": Internal.ClassInfo, "net.minecraft.client.KeyMapping": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.custom.ArmorItemBuilder": Internal.ClassInfo, "net.minecraft.client.gui.components.DebugScreenOverlay": Internal.ClassInfo, "com.gregtechceu.gtceu.client.renderer.cover.ICoverRenderer": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decoration.ColoredWoodenButtonBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.foliageplacers.BushFoliagePlacer": Internal.ClassInfo, "net.minecraft.world.level.border.WorldBorder$BorderExtent": Internal.ClassInfo, "de.dafuqs.spectrum.entity.entity.SpectrumFishingBobberEntity$PositionType": Internal.ClassInfo, "net.minecraft.world.level.block.CryingObsidianBlock": Internal.ClassInfo, "net.minecraft.world.BossEvent$BossBarColor": Internal.ClassInfo, "net.minecraftforge.client.extensions.common.IClientItemExtensions$FontContext": Internal.ClassInfo, "dev.architectury.extensions.injected.InjectedItemExtension": Internal.ClassInfo, "net.minecraft.server.players.StoredUserList": Internal.ClassInfo, "net.minecraft.world.level.block.entity.BeaconBlockEntity": Internal.ClassInfo, "org.apache.logging.log4j.core.config.Configuration": Internal.ClassInfo, "divinerpg.items.base.block.ItemEdenChest": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeBlockGetter": Internal.ClassInfo, "net.minecraft.commands.Commands$ParseFunction": Internal.ClassInfo, "com.yogpc.qp.machines.module.ExpPumpBlock": Internal.ClassInfo, "net.minecraft.world.entity.Pose": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.conditional.colored_tree.PottedColoredSaplingBlock": Internal.ClassInfo, "net.minecraft.world.item.enchantment.FrostWalkerEnchantment": Internal.ClassInfo, "com.electronwill.nightconfig.core.Config": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slope.FramedVerticalHalfSlopeBlock": Internal.ClassInfo, "com.mojang.brigadier.builder.RequiredArgumentBuilder": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blockpredicates.ReplaceablePredicate": Internal.ClassInfo, "java.util.ImmutableCollections$ListN": Internal.ClassInfo, "snownee.lychee.block_crushing.LycheeFallingBlockEntity": Internal.ClassInfo, "javax.accessibility.Accessible": Internal.ClassInfo, "com.enderio.base.common.item.tool.ElectromagnetItem": Internal.ClassInfo, "net.minecraft.world.level.entity.EntityPersistentStorage": Internal.ClassInfo, "net.minecraft.server.level.TicketType": Internal.ClassInfo, "net.minecraft.network.chat.FormattedText": Internal.ClassInfo, "com.gregtechceu.gtceu.api.machine.feature.IRecipeLogicMachine": Internal.ClassInfo, "net.minecraft.util.valueproviders.UniformInt": Internal.ClassInfo, "net.minecraft.world.level.saveddata.maps.MapItemSavedData$MapPatch": Internal.ClassInfo, "org.apache.logging.log4j.util.Supplier": Internal.ClassInfo, "com.mojang.authlib.minecraft.UserApiService$UserProperties": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingGetProjectileEvent": Internal.ClassInfo, "elucent.eidolon.common.item.curio.SanguineAmuletItem": Internal.ClassInfo, "io.wispforest.owo.mixin.ui.DrawContextInvoker": Internal.ClassInfo, "appeng.api.implementations.blockentities.PatternContainerGroup": Internal.ClassInfo, "com.enderio.base.common.block.DarkSteelLadderBlock": Internal.ClassInfo, "net.minecraft.util.FormattedCharSequence": Internal.ClassInfo, "org.violetmoon.zeta.registry.PottedPlantRegistry": Internal.ClassInfo, "elucent.eidolon.common.item.curio.AngelSightItem": Internal.ClassInfo, "com.mojang.blaze3d.vertex.VertexConsumer": Internal.ClassInfo, "mods.railcraft.world.level.block.charge.ZincSilverBatteryBlock": Internal.ClassInfo, "com.mna.items.artifice.curio.ItemEmberglowBracelet": Internal.ClassInfo, "net.minecraft.world.level.levelgen.carver.CaveCarverConfiguration": Internal.ClassInfo, "xaero.map.highlight.RegionHighlightExistenceTracker": Internal.ClassInfo, "com.yanny.ytech.configuration.item.WildHorseItem": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.weathering.WeatheringBlock": Internal.ClassInfo, "org.orecruncher.dsurround.runtime.audio.SourceContext": Internal.ClassInfo, "divinerpg.effect.mob.armor.iceika.SengFurEffect": Internal.ClassInfo, "com.mojang.serialization.codecs.RecordCodecBuilder$Mu": Internal.ClassInfo, "net.mehvahdjukaar.polytone.slotify.SpecialOffset": Internal.ClassInfo, "com.mna.api.entities.construct.materials.ConstructMaterialGold": Internal.ClassInfo, "io.netty.channel.epoll.EpollEventLoopGroup": Internal.ClassInfo, "divinerpg.blocks.twilight.BlockBrambles": Internal.ClassInfo, "io.netty.channel.ChannelMetadata": Internal.ClassInfo, "net.minecraft.world.level.block.PlayerWallHeadBlock": Internal.ClassInfo, "elucent.eidolon.common.block.HorizontalBlockBase": Internal.ClassInfo, "net.minecraft.world.level.levelgen.DensityFunctions$Marker$Type": Internal.ClassInfo, "net.minecraft.client.renderer.EffectInstance": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.redstone.RedstoneTimerBlock": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.SlabType": Internal.ClassInfo, "net.minecraft.world.entity.monster.warden.AngerLevel": Internal.ClassInfo, "com.google.common.base.CharMatcher": Internal.ClassInfo, "org.apache.logging.log4j.core.pattern.TextRenderer": Internal.ClassInfo, "com.inventorypets.items.nuggetCoal": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.StructureType": Internal.ClassInfo, "de.dafuqs.spectrum.energy.color.ElementalColor": Internal.ClassInfo, "org.violetmoon.quark.content.tools.config.PickarangType": Internal.ClassInfo, "com.google.gson.stream.JsonToken": Internal.ClassInfo, "snownee.lychee.mixin.ShapedRecipeAccess": Internal.ClassInfo, "dev.ftb.mods.ftbquests.item.QuestBarrierBlockItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.entity.LivingEntityEventJS": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundPlayerPositionPacket": Internal.ClassInfo, "com.mna.api.blocks.interfaces.ICutoutBlock": Internal.ClassInfo, "divinerpg.items.base.ItemShickaxe": Internal.ClassInfo, "dev.ftb.mods.ftbquests.quest.QuestObjectBase": Internal.ClassInfo, "com.mojang.datafixers.FamilyOptic": Internal.ClassInfo, "net.minecraft.world.level.block.entity.TheEndPortalBlockEntity": Internal.ClassInfo, "net.minecraft.world.flag.FeatureElement": Internal.ClassInfo, "net.minecraftforge.items.IItemHandler": Internal.ClassInfo, "net.minecraftforge.client.model.generators.ItemModelBuilder": Internal.ClassInfo, "cofh.lib.common.block.OreBlockCoFH": Internal.ClassInfo, "dev.architectury.event.CompoundEventResult": Internal.ClassInfo, "net.minecraft.world.item.enchantment.WaterWalkerEnchantment": Internal.ClassInfo, "dev.latvian.mods.kubejs.loot.ConditionalFunction": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$MouseInput": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.structures.SwampHutStructure": Internal.ClassInfo, "de.dafuqs.spectrum.items.tools.SplitDamageItem$DamageComposition": Internal.ClassInfo, "cofh.thermal.core.common.fluid.CrudeOilFluid$FluidBlock": Internal.ClassInfo, "com.kamth.zeldamod.effect.MiniEffect": Internal.ClassInfo, "com.mna.api.spells.parts.SpellEffect$BlockPlaceResult": Internal.ClassInfo, "dev.gigaherz.graph3.GraphObject": Internal.ClassInfo, "elucent.eidolon.common.potion.ReinforcedEffect": Internal.ClassInfo, "net.minecraft.world.entity.vehicle.MinecartCommandBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.worldgen.bedrockfluid.BedrockFluidDefinition$Builder": Internal.ClassInfo, "net.minecraft.world.entity.animal.Squid": Internal.ClassInfo, "com.google.common.collect.BiMap": Internal.ClassInfo, "appeng.crafting.pattern.AECraftingPattern": Internal.ClassInfo, "io.netty.channel.ChannelHandlerAdapter": Internal.ClassInfo, "io.wispforest.owo.util.EventSource": Internal.ClassInfo, "techreborn.blocks.storage.energy.LapotronicSUBlock": Internal.ClassInfo, "appeng.thirdparty.fabric.SpriteFinderImpl": Internal.ClassInfo, "dev.latvian.mods.kubejs.fluid.OutputFluid": Internal.ClassInfo, "com.kamth.zeldamod.item.items.RazorSwordItem": Internal.ClassInfo, "io.netty.channel.EventLoop": Internal.ClassInfo, "com.gregtechceu.gtceu.api.blockentity.ITickSubscription": Internal.ClassInfo, "com.kamth.zeldamod.item.items.MasterSwordItem": Internal.ClassInfo, "snownee.lychee.LycheeLootContextParams": Internal.ClassInfo, "com.gregtechceu.gtceu.api.sound.CustomSoundEntry": Internal.ClassInfo, "com.lowdragmc.lowdraglib.side.item.IItemTransfer": Internal.ClassInfo, "cofh.core.common.block.EnderAirBlock": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.NetherSaltOreBlock": Internal.ClassInfo, "net.minecraft.client.GraphicsStatus": Internal.ClassInfo, "com.mna.api.spells.attributes.AttributeValuePair": Internal.ClassInfo, "org.orecruncher.dsurround.lib.random.IRandomizer": Internal.ClassInfo, "net.minecraft.world.level.block.entity.SculkCatalystBlockEntity": Internal.ClassInfo, "com.mojang.authlib.ProfileLookupCallback": Internal.ClassInfo, "net.minecraft.world.level.gameevent.GameEventListenerRegistry": Internal.ClassInfo, "com.google.common.collect.ImmutableMultimap$Builder": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.BlockRightClickedEventJS": Internal.ClassInfo, "xaero.map.region.OverlayManager": Internal.ClassInfo, "org.apache.logging.slf4j.Log4jMarker": Internal.ClassInfo, "pokefenn.totemic.block.totem.TotemPoleBlock": Internal.ClassInfo, "appeng.api.networking.ticking.IGridTickable": Internal.ClassInfo, "de.dafuqs.spectrum.items.armor.GemstoneArmorItem": Internal.ClassInfo, "xaero.map.graphics.TextureUpload": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.InputReplacement": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingChangeTargetEvent": Internal.ClassInfo, "java.io.FilterInputStream": Internal.ClassInfo, "net.minecraft.world.level.block.ButtonBlock": Internal.ClassInfo, "com.mna.items.artifice.FilterItem": Internal.ClassInfo, "net.fabricmc.fabric.mixin.object.builder.AbstractBlockAccessor": Internal.ClassInfo, "com.gregtechceu.gtceu.common.pipelike.cable.Insulation": Internal.ClassInfo, "mods.railcraft.world.level.block.track.outfitted.ControlTrackBlock": Internal.ClassInfo, "de.dafuqs.spectrum.items.energy.InkAssortmentItem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.RandomBlockMatchTest": Internal.ClassInfo, "org.orecruncher.dsurround.effects.IBlockEffect": Internal.ClassInfo, "net.minecraft.world.level.block.LoomBlock": Internal.ClassInfo, "net.minecraft.world.entity.player.ProfilePublicKey": Internal.ClassInfo, "appeng.block.misc.LightDetectorBlock": Internal.ClassInfo, "com.kamth.zeldamod.item.items.MegatonItem": Internal.ClassInfo, "software.bernie.geckolib.core.animation.RawAnimation$Stage": Internal.ClassInfo, "snownee.lychee.core.post.Delay$LycheeMarker": Internal.ClassInfo, "com.mna.entities.attributes.AttributeRangedDamage": Internal.ClassInfo, "dev.latvian.mods.kubejs.stages.StageCreationEvent": Internal.ClassInfo, "net.akoto090.nothingcore.entity.custom.PebbleItem": Internal.ClassInfo, "pokefenn.totemic.api.totem.MedicineBagEffect": Internal.ClassInfo, "divinerpg.items.vanilla.ItemCorruptedCannon": Internal.ClassInfo, "net.minecraftforge.registries.ForgeRegistry$Snapshot": Internal.ClassInfo, "net.minecraft.world.item.LingeringPotionItem": Internal.ClassInfo, "com.enderio.api.conduit.NodeIdentifier$IOState": Internal.ClassInfo, "cofh.core.common.item.GrenadeItem": Internal.ClassInfo, "net.minecraft.world.entity.projectile.ThrownEgg": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.medicalcondition.Symptom$ConfiguredSymptom": Internal.ClassInfo, "net.minecraft.world.entity.projectile.Arrow": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.spirit_sallow.SpiritVinesBodyBlock": Internal.ClassInfo, "mods.railcraft.world.level.block.manipulator.AdvancedItemLoaderBlock": Internal.ClassInfo, "divinerpg.effect.mob.armor.ArmorEffect": Internal.ClassInfo, "divinerpg.blocks.base.BlockModTrapdoor": Internal.ClassInfo, "questsadditions.items.LootCrateBlockItem": Internal.ClassInfo, "java.awt.image.WritableRaster": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.MortarItem": Internal.ClassInfo, "net.minecraft.world.level.block.CoralFanBlock": Internal.ClassInfo, "mezz.jei.api.runtime.IIngredientListOverlay": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.predicates.CompositeLootItemCondition$Builder": Internal.ClassInfo, "mods.railcraft.api.signal.TrackLocator$Status": Internal.ClassInfo, "net.minecraft.world.level.block.BubbleColumnBlock": Internal.ClassInfo, "net.minecraft.world.level.block.RootsBlock": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.SensorType": Internal.ClassInfo, "com.mojang.brigadier.suggestion.Suggestion": Internal.ClassInfo, "net.minecraft.world.entity.monster.Monster": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.gui.options.control.Control": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.EntityKJS": Internal.ClassInfo, "divinerpg.effect.mob.armor.twilight.WildwoodHealEffect": Internal.ClassInfo, "com.yogpc.qp.machines.miningwell.MiningWellBlock": Internal.ClassInfo, "net.minecraft.core.IdMap": Internal.ClassInfo, "javax.accessibility.AccessibleBundle": Internal.ClassInfo, "io.netty.channel.ChannelInboundHandler": Internal.ClassInfo, "java.time.temporal.TemporalQuery": Internal.ClassInfo, "org.violetmoon.zeta.registry.BrewingRegistry": Internal.ClassInfo, "org.violetmoon.quark.api.ITrowelable": Internal.ClassInfo, "java.awt.dnd.DragGestureEvent": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.providers.number.NumberProvider": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.LongUnaryOperator": Internal.ClassInfo, "java.lang.Enum$EnumDesc": Internal.ClassInfo, "java.lang.module.ModuleFinder": Internal.ClassInfo, "divinerpg.blocks.twilight.BlockMoonbulb": Internal.ClassInfo, "net.minecraftforge.common.capabilities.CapabilityDispatcher": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundMapItemDataPacket": Internal.ClassInfo, "com.gregtechceu.gtceu.api.block.AppearanceBlock": Internal.ClassInfo, "net.minecraft.world.level.block.MelonBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.bytes.ByteCollection": Internal.ClassInfo, "appeng.api.storage.ISubMenuHost": Internal.ClassInfo, "net.irisshaders.iris.pipeline.programs.ShaderInstanceInterface": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.widget.custom.PlayerInventoryWidget": Internal.ClassInfo, "xfacthd.framedblocks.common.block.interactive.FramedChiseledBookshelfBlock": Internal.ClassInfo, "com.mna.blocks.tileentities.ManaweavingAltarTile": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.foliageplacers.FoliagePlacer$FoliageAttachment": Internal.ClassInfo, "net.minecraft.resources.RegistryFileCodec": Internal.ClassInfo, "appeng.items.AEBaseItem": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.integration.farmersdelight.ArcaneWoodKnifeItem": Internal.ClassInfo, "vectorwing.farmersdelight.common.effect.NourishmentEffect": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.Property": Internal.ClassInfo, "net.minecraft.world.entity.Display$TextDisplay$TextRenderState": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.AttachFace": Internal.ClassInfo, "xfacthd.framedblocks.common.data.property.HorizontalRotation": Internal.ClassInfo, "net.minecraft.world.level.block.IronBarsBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.api.item.MaterialPipeBlockItem": Internal.ClassInfo, "net.minecraftforge.client.event.ModelEvent$RegisterGeometryLoaders": Internal.ClassInfo, "mezz.jei.api.ingredients.IIngredientType": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.worldgen.GTLayerPattern$Layer": Internal.ClassInfo, "net.minecraft.world.entity.vehicle.Boat": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.OblivionStone": Internal.ClassInfo, "net.fabricmc.fabric.impl.client.indigo.renderer.render.TerrainRenderContext": Internal.ClassInfo, "com.gregtechceu.gtceu.api.machine.IMachineBlockEntity": Internal.ClassInfo, "net.minecraft.client.resources.metadata.animation.FrameSize": Internal.ClassInfo, "de.dafuqs.revelationary.mixin.client.WorldRendererMixinAccessor": Internal.ClassInfo, "com.almostreliable.lootjs.loot.LootActionsContainer": Internal.ClassInfo, "com.lowdragmc.lowdraglib.syncdata.managed.IManagedVar": Internal.ClassInfo, "divinerpg.items.arcana.ItemMeteorMash": Internal.ClassInfo, "net.minecraft.world.level.pathfinder.Node": Internal.ClassInfo, "mezz.jei.api.gui.handlers.IGhostIngredientHandler$Target": Internal.ClassInfo, "net.minecraft.network.protocol.BundlerInfo": Internal.ClassInfo, "net.minecraft.world.level.entity.EntityAccess": Internal.ClassInfo, "com.mna.api.recipes.IItemAndPatternRecipe": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.spirit_sallow.SpiritVines$YieldType": Internal.ClassInfo, "net.minecraft.world.level.block.entity.CalibratedSculkSensorBlockEntity": Internal.ClassInfo, "de.dafuqs.spectrum.items.magic_items.ampoules.GlassAmpouleItem": Internal.ClassInfo, "net.minecraftforge.client.extensions.IForgeModelBaker": Internal.ClassInfo, "cofh.lib.common.effect.MobEffectCoFH": Internal.ClassInfo, "com.google.gson.stream.JsonReader": Internal.ClassInfo, "com.google.gson.FieldAttributes": Internal.ClassInfo, "com.inventorypets.pets.petSpider": Internal.ClassInfo, "divinerpg.items.vanilla.ItemSerenadeOfHealth": Internal.ClassInfo, "net.minecraft.world.level.block.WallSignBlock": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.LightTransferLensBlock": Internal.ClassInfo, "vectorwing.farmersdelight.common.item.RopeItem": Internal.ClassInfo, "cofh.lib.api.item.ISecurableItem": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.worldgen.bedrockfluid.BedrockFluidDefinition": Internal.ClassInfo, "net.minecraftforge.event.server.ServerAboutToStartEvent": Internal.ClassInfo, "net.minecraft.world.entity.monster.ZombifiedPiglin": Internal.ClassInfo, "com.mojang.realmsclient.dto.RealmsNews": Internal.ClassInfo, "dev.latvian.mods.kubejs.event.StartupEventJS": Internal.ClassInfo, "net.minecraftforge.registries.tags.ITag": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.generic.ItemBaseTool": Internal.ClassInfo, "de.keksuccino.konkrete.events.ScreenMouseClickedEvent": Internal.ClassInfo, "pokefenn.totemic.block.music.WindChimeBlock": Internal.ClassInfo, "techreborn.blocks.generator.BlockSolarPanel": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.config.DoubleConfig": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.MultifaceGrowthFeature": Internal.ClassInfo, "com.lowdragmc.lowdraglib.async.IAsyncLogic": Internal.ClassInfo, "net.minecraft.world.item.TooltipFlag": Internal.ClassInfo, "java.security.CodeSource": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.ShortCollection": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.client.model.ExtraModelData": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.widget.DraggableScrollableWidgetGroup$ISelected": Internal.ClassInfo, "net.minecraft.world.item.crafting.ShieldDecorationRecipe": Internal.ClassInfo, "net.minecraft.world.entity.AnimationState": Internal.ClassInfo, "com.mna.items.artifice.ItemFluidJug": Internal.ClassInfo, "net.minecraft.server.packs.repository.Pack": Internal.ClassInfo, "net.minecraft.client.renderer.RenderStateShard$LayeringStateShard": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.curio.AlchemyBagItem": Internal.ClassInfo, "dev.latvian.mods.rhino.JavaMembers$MethodInfo": Internal.ClassInfo, "net.minecraft.core.particles.DustParticleOptionsBase": Internal.ClassInfo, "dev.latvian.mods.kubejs.typings.desc.GenericDescJS": Internal.ClassInfo, "com.mna.blocks.artifice.EldrinConduitBlock": Internal.ClassInfo, "org.orecruncher.dsurround.runtime.audio.effects.SourcePropertyFloat": Internal.ClassInfo, "com.yogpc.qp.machines.mini_quarry.MiniQuarryBlock": Internal.ClassInfo, "net.minecraft.world.level.block.WallBannerBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.common.pipelike.laser.LaserRoutePath": Internal.ClassInfo, "me.jellysquid.mods.sodium.mixin.features.textures.animations.tracking.SpriteContentsAnimationFrameAccessor": Internal.ClassInfo, "net.minecraft.world.entity.monster.ZombieVillager": Internal.ClassInfo, "dev.shadowsoffire.placebo.util.CachedObject$CachedObjectSource": Internal.ClassInfo, "java.security.spec.AlgorithmParameterSpec": Internal.ClassInfo, "com.mna.api.spells.base.IModifiable": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.BlockStateProperties": Internal.ClassInfo, "xfacthd.framedblocks.api.predicate.contex.ConnectionPredicate": Internal.ClassInfo, "shcm.shsupercm.forge.citresewn.pack.cits.CITItem": Internal.ClassInfo, "dev.ftb.mods.ftbquests.block.TaskScreenBlock": Internal.ClassInfo, "net.minecraft.world.entity.boss.enderdragon.phases.EnderDragonPhase": Internal.ClassInfo, "org.violetmoon.quark.content.building.block.RopeBlock$1": Internal.ClassInfo, "net.minecraft.data.PackOutput$Target": Internal.ClassInfo, "org.apache.maven.artifact.repository.Authentication": Internal.ClassInfo, "org.violetmoon.quark.content.tools.item.ParrotEggItem": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.icon.Color4I": Internal.ClassInfo, "dev.architectury.extensions.injected.InjectedBlockExtension": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.ExplosionEventJS$Before": Internal.ClassInfo, "net.irisshaders.iris.shadows.CullingDataCache": Internal.ClassInfo, "mods.railcraft.world.level.block.SteamTurbineBlock": Internal.ClassInfo, "org.joml.Matrix4x3fc": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.SculkPatchConfiguration": Internal.ClassInfo, "mods.railcraft.world.item.TurbineRotorItem": Internal.ClassInfo, "lol.bai.badpackets.impl.handler.ServerPacketHandler": Internal.ClassInfo, "techreborn.items.BatteryItem": Internal.ClassInfo, "mezz.jei.api.runtime.IRecipesGui": Internal.ClassInfo, "com.aizistral.omniconfig.wrappers.Omniconfig$BooleanParameter": Internal.ClassInfo, "net.minecraft.world.level.block.HoneyBlock": Internal.ClassInfo, "org.apache.logging.log4j.util.MessageSupplier": Internal.ClassInfo, "elucent.eidolon.common.block.SoulEnchanterBlock": Internal.ClassInfo, "net.minecraftforge.event.TickEvent$ClientTickEvent": Internal.ClassInfo, "com.kamth.zeldamod.item.items.IceArrowItem": Internal.ClassInfo, "net.minecraft.client.renderer.block.model.ItemOverride$Predicate": Internal.ClassInfo, "appeng.block.networking.WirelessAccessPointBlock": Internal.ClassInfo, "de.keksuccino.fancymenu.mixin.mixins.common.client.IMixinSplashRenderer": Internal.ClassInfo, "techreborn.items.tool.vanilla.TRSpadeItem": Internal.ClassInfo, "com.yanny.ytech.configuration.item.ChloriteBraceletItem": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.client.model.IExtraModelDataProvider": Internal.ClassInfo, "net.minecraft.data.recipes.RecipeCategory": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.WeepingVinesFeature": Internal.ClassInfo, "appeng.block.crafting.CraftingBlockItem": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.idols.KnockbackIdolBlock": Internal.ClassInfo, "de.dafuqs.spectrum.items.trinkets.AzureDikeBeltItem": Internal.ClassInfo, "net.minecraftforge.client.event.EntityRenderersEvent$CreateSkullModels": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.AstralFruit": Internal.ClassInfo, "appeng.block.qnb.QuantumBaseBlock": Internal.ClassInfo, "appeng.api.config.PowerMultiplier": Internal.ClassInfo, "divinerpg.items.base.ItemModFuel": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.widget.HsbColorWidget": Internal.ClassInfo, "com.mna.api.items.INoSoulsRecharge": Internal.ClassInfo, "dev.latvian.mods.kubejs.gui.chest.ChestMenuSlot": Internal.ClassInfo, "com.lowdragmc.lowdraglib.core.mixins.accessor.EntityAccessor": Internal.ClassInfo, "de.dafuqs.spectrum.items.trinkets.ExtraHealthRingItem": Internal.ClassInfo, "snownee.lychee.random_block_ticking.RandomBlockTickingRecipeType": Internal.ClassInfo, "software.bernie.geckolib.core.keyframe.event.KeyFrameEvent": Internal.ClassInfo, "net.minecraft.client.gui.Font$DisplayMode": Internal.ClassInfo, "io.netty.channel.ChannelInboundInvoker": Internal.ClassInfo, "net.minecraftforge.client.event.RenderTooltipEvent$GatherComponents": Internal.ClassInfo, "net.minecraft.world.entity.raid.Raids": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.StructureSet": Internal.ClassInfo, "com.mna.api.spells.targeting.SpellTarget": Internal.ClassInfo, "net.minecraft.client.PrioritizeChunkUpdates": Internal.ClassInfo, "org.violetmoon.quark.content.tools.item.RuneItem": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.CustomBoatItem": Internal.ClassInfo, "io.netty.channel.ChannelHandler": Internal.ClassInfo, "com.gregtechceu.gtceu.api.block.ICoilType": Internal.ClassInfo, "appeng.block.misc.GrowthAcceleratorBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.SpikeFeature": Internal.ClassInfo, "dev.emi.emi.mixin.accessor.SmithingTransformRecipeAccessor": Internal.ClassInfo, "com.mojang.datafixers.TypeRewriteRule": Internal.ClassInfo, "dev.architectury.extensions.injected.InjectedLiquidBlockExtension": Internal.ClassInfo, "net.fabricmc.fabric.api.client.networking.v1.ClientPlayNetworking$PlayChannelHandler": Internal.ClassInfo, "net.minecraft.world.item.SplashPotionItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.fluid.FluidBucketItemBuilder": Internal.ClassInfo, "com.mna.blocks.artifice.ThesisDeskBlock": Internal.ClassInfo, "net.minecraft.advancements.CriterionTrigger": Internal.ClassInfo, "net.minecraft.client.renderer.block.model.ItemOverrides": Internal.ClassInfo, "com.gregtechceu.gtceu.api.gui.fancy.IFancyConfigurator": Internal.ClassInfo, "appeng.api.networking.security.IActionSource": Internal.ClassInfo, "appeng.blockentity.ClientTickingBlockEntity": Internal.ClassInfo, "net.minecraft.world.level.LevelWriter": Internal.ClassInfo, "xfacthd.framedblocks.common.block.cube.FramedTubeBlock": Internal.ClassInfo, "com.aizistral.omniconfig.Property$Type": Internal.ClassInfo, "team.reborn.energy.api.EnergyStorage": Internal.ClassInfo, "net.minecraft.world.entity.RiderShieldingMount": Internal.ClassInfo, "java.nio.channels.Channel": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.widget.SelectableWidgetGroup": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.material.IMaterialRegistryManager$Phase": Internal.ClassInfo, "dev.latvian.mods.rhino.Context": Internal.ClassInfo, "appeng.api.implementations.items.IFacadeItem": Internal.ClassInfo, "net.minecraft.world.level.material.MapColor$Brightness": Internal.ClassInfo, "net.minecraft.world.entity.ai.village.poi.PoiType": Internal.ClassInfo, "divinerpg.blocks.base.BlockModLog": Internal.ClassInfo, "mods.railcraft.world.level.block.track.outfitted.DisembarkingTrackBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blockpredicates.SolidPredicate": Internal.ClassInfo, "net.minecraft.world.level.block.SmithingTableBlock": Internal.ClassInfo, "mods.railcraft.world.level.block.tank.SteelTankGaugeBlock": Internal.ClassInfo, "net.minecraft.client.renderer.texture.OverlayTexture": Internal.ClassInfo, "com.lowdragmc.lowdraglib.syncdata.field.ManagedKey": Internal.ClassInfo, "org.apache.logging.log4j.core.config.LoggerConfig$Builder": Internal.ClassInfo, "dev.latvian.mods.unit.function.FunctionFactory": Internal.ClassInfo, "dev.latvian.mods.rhino.mod.util.NBTSerializable": Internal.ClassInfo, "java.awt.font.TextAttribute": Internal.ClassInfo, "org.joml.Matrix3dc": Internal.ClassInfo, "com.gregtechceu.gtceu.api.item.OpticalPipeBlockItem": Internal.ClassInfo, "com.gregtechceu.gtceu.api.machine.feature.multiblock.IMultiController": Internal.ClassInfo, "xfacthd.atlasviewer.client.mixin.AccessorAnimatedTexture": Internal.ClassInfo, "net.minecraft.world.level.block.WebBlock": Internal.ClassInfo, "net.minecraftforge.registries.IdMappingEvent": Internal.ClassInfo, "net.minecraft.world.entity.monster.piglin.AbstractPiglin": Internal.ClassInfo, "net.minecraft.world.level.block.BuddingAmethystBlock": Internal.ClassInfo, "cofh.lib.common.inventory.ItemStorageCoFH": Internal.ClassInfo, "de.dafuqs.spectrum.items.magic_items.EnchantmentCanvasItem": Internal.ClassInfo, "cofh.core.common.effect.WrenchedMobEffect": Internal.ClassInfo, "java.nio.Buffer": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.dd_deco.StrippingLootPillarBlock": Internal.ClassInfo, "net.minecraft.world.level.block.CoralPlantBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.ReferenceSet": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.shapes.VoxelShapeSimpleCube": Internal.ClassInfo, "net.minecraft.util.LazyLoadedValue": Internal.ClassInfo, "net.minecraftforge.common.util.NonNullPredicate": Internal.ClassInfo, "io.wispforest.owo.util.pond.OwoBufferBuilderExtension": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetEntityLinkPacket": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.spirit_instiller.SpiritInstillerBlockEntity": Internal.ClassInfo, "org.violetmoon.zeta.item.ZetaMobBucketItem": Internal.ClassInfo, "net.minecraftforge.event.entity.living.MobSpawnEvent$SpawnPlacementCheck": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.RunicWisestonePlateItem": Internal.ClassInfo, "net.minecraft.world.entity.PlayerRideableJumping": Internal.ClassInfo, "net.minecraft.client.resources.model.ModelBakery$BakedCacheKey": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundGameEventPacket$Type": Internal.ClassInfo, "com.kamth.zeldamod.item.items.BombFlowerItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.entity.forge.LivingEntityDropsEventJS": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.VegetationPatchFeature": Internal.ClassInfo, "com.mna.items.artifice.curio.IPreEnchantedItem": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap": Internal.ClassInfo, "com.mojang.authlib.minecraft.UserApiService": Internal.ClassInfo, "com.epherical.croptopia.mixin.AgeInvokerMixin": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.LargeDripstoneConfiguration": Internal.ClassInfo, "com.mojang.blaze3d.audio.Library": Internal.ClassInfo, "org.joml.Matrix4x3dc": Internal.ClassInfo, "xfacthd.atlasviewer.client.mixin.AccessorTextureManager": Internal.ClassInfo, "com.mojang.serialization.KeyCompressor": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.custom.WallBlockBuilder": Internal.ClassInfo, "net.minecraft.world.level.levelgen.WorldGenerationContext": Internal.ClassInfo, "de.keksuccino.fancymenu.util.resource.Resource": Internal.ClassInfo, "de.dafuqs.spectrum.items.magic_items.PaintbrushItem": Internal.ClassInfo, "java.util.SortedSet": Internal.ClassInfo, "de.dafuqs.spectrum.items.conditional.CloakedItemWithLoomPattern": Internal.ClassInfo, "com.yogpc.qp.machines.misc.CreativeGeneratorBlock": Internal.ClassInfo, "com.mojang.serialization.codecs.RecordCodecBuilder$Instance": Internal.ClassInfo, "com.inventorypets.items.itemPetrifier": Internal.ClassInfo, "appeng.api.implementations.blockentities.IChestOrDrive": Internal.ClassInfo, "com.yogpc.qp.machines.marker.BlockExMarker$Block16Marker": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.pieces.PiecesContainer": Internal.ClassInfo, "dev.latvian.mods.kubejs.loot.LootBuilderPool": Internal.ClassInfo, "net.minecraftforge.registries.tags.ITagManager": Internal.ClassInfo, "xfacthd.framedblocks.common.block.stairs.FramedHalfStairsBlock": Internal.ClassInfo, "net.minecraft.world.entity.boss.enderdragon.phases.DragonChargePlayerPhase": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.gravity.CloakedFloatItem": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.medicalcondition.MedicalCondition$IdleProgressionType": Internal.ClassInfo, "java.util.function.ToLongFunction": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap": Internal.ClassInfo, "techreborn.blocks.misc.BlockAlarm": Internal.ClassInfo, "com.google.common.collect.ImmutableSetMultimap": Internal.ClassInfo, "malte0811.ferritecore.mixin.blockstatecache.VoxelShapeAccess": Internal.ClassInfo, "com.enderio.base.common.item.tool.CoordinateSelectorItem": Internal.ClassInfo, "net.minecraft.client.renderer.block.model.BlockFaceUV": Internal.ClassInfo, "net.minecraft.world.entity.Entity$RemovalReason": Internal.ClassInfo, "appeng.debug.PhantomNodeBlockEntity": Internal.ClassInfo, "net.minecraft.data.BlockFamily": Internal.ClassInfo, "com.gregtechceu.gtceu.api.gui.fancy.FancyMachineUIWidget": Internal.ClassInfo, "net.minecraft.world.item.TridentItem": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundSelectTradePacket": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.WindowKJS": Internal.ClassInfo, "net.minecraft.client.resources.SplashManager": Internal.ClassInfo, "com.gregtechceu.gtceu.api.registry.registrate.IGTFluidBuilder": Internal.ClassInfo, "elucent.eidolon.util.RGBProvider": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.custom.PressurePlateBlockBuilder": Internal.ClassInfo, "net.minecraftforge.event.level.LevelEvent$Save": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.TimeComponent": Internal.ClassInfo, "net.minecraft.world.item.enchantment.FishingSpeedEnchantment": Internal.ClassInfo, "reborncore.common.fluid.FluidValue": Internal.ClassInfo, "net.minecraft.world.level.block.entity.SculkSensorBlockEntity": Internal.ClassInfo, "net.minecraft.client.renderer.RenderBuffers": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.PistonType": Internal.ClassInfo, "com.mna.items.constructs.parts.arms.ConstructPartShieldArmRight": Internal.ClassInfo, "com.mna.enchantments.base.MADamageEnchantmentBase": Internal.ClassInfo, "java.lang.ModuleLayer": Internal.ClassInfo, "appeng.api.networking.crafting.CalculationStrategy": Internal.ClassInfo, "com.kamth.zeldamod.item.armors.ArchaicTunic": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.widget.PhantomSlotWidget": Internal.ClassInfo, "mods.railcraft.world.level.block.detector.TrainDetectorBlock": Internal.ClassInfo, "net.minecraft.server.level.ServerLevel": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decoration.ColoredLightBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.chars.CharList": Internal.ClassInfo, "it.unimi.dsi.fastutil.chars.CharCollection": Internal.ClassInfo, "com.gregtechceu.gtceu.api.recipe.ResearchRecipeBuilder$StationRecipeBuilder": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.map.CustomMapData": Internal.ClassInfo, "mods.railcraft.world.item.enchantment.SmackEnchantment": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.NoOpFeature": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.LootDataId": Internal.ClassInfo, "org.w3c.dom.NamedNodeMap": Internal.ClassInfo, "org.jgrapht.GraphType": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.IGuiParticleItem": Internal.ClassInfo, "it.unimi.dsi.fastutil.bytes.Byte2ObjectMap": Internal.ClassInfo, "net.minecraft.world.level.storage.LevelStorageSource$LevelStorageAccess": Internal.ClassInfo, "divinerpg.blocks.iceika.BlockFrostedAllure": Internal.ClassInfo, "java.lang.reflect.GenericDeclaration": Internal.ClassInfo, "com.almostreliable.lootjs.loot.AddAttributesFunction$Builder": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.world.BiomeSeedProvider": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decay.DecayBlock": Internal.ClassInfo, "org.violetmoon.zeta.network.IZetaMessage": Internal.ClassInfo, "org.violetmoon.zeta.util.zetalist.IZeta": Internal.ClassInfo, "net.minecraftforge.client.model.data.ModelDataManager": Internal.ClassInfo, "net.minecraft.world.level.block.MultifaceBlock": Internal.ClassInfo, "net.minecraftforge.forgespi.language.ModFileScanData$AnnotationData": Internal.ClassInfo, "fuzs.puzzleslib.mixin.client.accessor.ItemForgeAccessor": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$CharacterTyped": Internal.ClassInfo, "net.minecraft.world.level.Explosion": Internal.ClassInfo, "java.util.function.LongConsumer": Internal.ClassInfo, "org.w3c.dom.DocumentType": Internal.ClassInfo, "appeng.api.networking.security.IActionHost": Internal.ClassInfo, "elucent.eidolon.common.block.WoodenStandBlock": Internal.ClassInfo, "net.minecraft.client.model.Model": Internal.ClassInfo, "com.mna.api.spells.base.ISpellComponent": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundContainerSetContentPacket": Internal.ClassInfo, "com.mna.effects.beneficial.EffectLevitation": Internal.ClassInfo, "com.gregtechceu.gtceu.api.recipe.ui.GTRecipeTypeUI$RecipeHolder": Internal.ClassInfo, "net.minecraft.client.Options$FieldAccess": Internal.ClassInfo, "java.lang.Class": Internal.ClassInfo, "divinerpg.items.iceika.ItemMusicShooter": Internal.ClassInfo, "com.blamejared.controlling.mixin.AccessKeyMapping": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.HeightRangePlacement": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundCommandSuggestionPacket": Internal.ClassInfo, "net.minecraft.world.level.block.StructureVoidBlock": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$Closing": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.ThiccScroll": Internal.ClassInfo, "net.minecraft.world.phys.shapes.Shapes$DoubleLineConsumer": Internal.ClassInfo, "com.inventorypets.blocks.stoneBlock": Internal.ClassInfo, "org.apache.logging.log4j.core.LogEvent": Internal.ClassInfo, "net.minecraft.world.scores.Team": Internal.ClassInfo, "dev.latvian.mods.kubejs.platform.forge.ingredient.KubeJSIngredientSerializer": Internal.ClassInfo, "net.minecraft.world.level.levelgen.synth.NormalNoise": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.tag.TagPrefix$OreType": Internal.ClassInfo, "com.electronwill.nightconfig.core.file.CommentedFileConfigBuilder": Internal.ClassInfo, "net.minecraft.network.chat.FormattedText$ContentConsumer": Internal.ClassInfo, "net.minecraft.client.player.AbstractClientPlayer": Internal.ClassInfo, "dev.latvian.mods.kubejs.registry.BuilderFactory": Internal.ClassInfo, "xaero.map.highlight.MapRegionHighlightsPreparer": Internal.ClassInfo, "pokefenn.totemic.item.music.FluteItem": Internal.ClassInfo, "com.mna.api.entities.construct.ItemConstructPart": Internal.ClassInfo, "net.mehvahdjukaar.amendments.common.block.WallCandleSkullBlock": Internal.ClassInfo, "org.violetmoon.quark.content.client.resources.AttributeSlot": Internal.ClassInfo, "com.tterrag.registrate.providers.loot.RegistrateLootTables": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.conditional.QuitoxicReedsBlock": Internal.ClassInfo, "cofh.core.client.particle.types.CylindricalParticleType": Internal.ClassInfo, "mods.railcraft.world.effect.CreosoteEffect": Internal.ClassInfo, "com.yanny.ytech.configuration.block.ReinforcedBrickChimneyBlock": Internal.ClassInfo, "divinerpg.effect.mob.armor.vanilla.AngelicFlightEffect": Internal.ClassInfo, "dev.latvian.mods.kubejs.player.ChestEventJS": Internal.ClassInfo, "appeng.block.IOwnerAwareBlockEntity": Internal.ClassInfo, "java.time.zone.ZoneOffsetTransition": Internal.ClassInfo, "net.minecraft.world.entity.monster.Giant": Internal.ClassInfo, "cpw.mods.jarhandling.SecureJar$ModuleDataProvider": Internal.ClassInfo, "cofh.lib.common.inventory.SimpleItemHandler": Internal.ClassInfo, "com.electronwill.nightconfig.core.ConfigFormat": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.fluids.FluidContainerList": Internal.ClassInfo, "java.awt.Transparency": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.ui.WidgetType": Internal.ClassInfo, "java.util.function.ObjLongConsumer": Internal.ClassInfo, "com.mna.api.particles.IParticleMoveType": Internal.ClassInfo, "dev.latvian.mods.unit.token.CharStream": Internal.ClassInfo, "net.minecraft.world.item.ItemStack": Internal.ClassInfo, "com.gregtechceu.gtceu.api.recipe.OverclockingLogic": Internal.ClassInfo, "com.google.gson.TypeAdapterFactory": Internal.ClassInfo, "xaero.map.core.IWorldMapClientPlayNetHandler": Internal.ClassInfo, "com.mna.api.entities.construct.IConstructDiagnostics": Internal.ClassInfo, "io.wispforest.accessories.client.gui.ButtonEvents$AdjustRendering": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.structures.EndCityStructure": Internal.ClassInfo, "net.minecraft.world.level.levelgen.VerticalAnchor$AboveBottom": Internal.ClassInfo, "net.minecraft.world.item.crafting.SingleItemRecipe": Internal.ClassInfo, "xfacthd.framedblocks.common.blockentity.FramedDoubleBlockEntity": Internal.ClassInfo, "com.kamth.zeldamod.effect.GloomEffect": Internal.ClassInfo, "com.kamth.zeldamod.item.items.MasterSwordGoldItem": Internal.ClassInfo, "appeng.block.crafting.AbstractCraftingUnitBlock": Internal.ClassInfo, "com.mojang.datafixers.functions.PointFree": Internal.ClassInfo, "dev.ftb.mods.ftbquests.quest.BaseQuestFile": Internal.ClassInfo, "java.net.FileNameMap": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.pools.StructureTemplatePool": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.MoonstoneStrikeableBlock": Internal.ClassInfo, "me.srrapero720.embeddiumplus.foundation.darkness.accessors.TextureAccess": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.FluidSensorBlock": Internal.ClassInfo, "javax.accessibility.AccessibleText": Internal.ClassInfo, "top.theillusivec4.curios.api.SlotContext": Internal.ClassInfo, "net.minecraftforge.fluids.capability.IFluidHandler": Internal.ClassInfo, "dev.latvian.mods.kubejs.script.ScriptTypePredicate": Internal.ClassInfo, "de.dafuqs.spectrum.mixin.client.accessors.ModelOverrideListAccessor": Internal.ClassInfo, "appeng.decorative.AEDecorativeBlock": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.curio.ICurioItemTexture": Internal.ClassInfo, "appeng.parts.ICableBusContainer": Internal.ClassInfo, "net.minecraft.world.ticks.LevelTickAccess": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.map.CustomMapDecoration": Internal.ClassInfo, "net.minecraft.client.renderer.RenderStateShard$LightmapStateShard": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.idols.ExplosionIdolBlock": Internal.ClassInfo, "org.lwjgl.PointerBuffer": Internal.ClassInfo, "net.minecraft.advancements.critereon.AbstractCriterionTriggerInstance": Internal.ClassInfo, "com.inventorypets.pets.petEnderman": Internal.ClassInfo, "net.minecraft.client.renderer.debug.GameEventListenerRenderer": Internal.ClassInfo, "com.gregtechceu.gtceu.integration.kjs.events.MaterialModificationEventJS": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.DesertWellFeature": Internal.ClassInfo, "net.minecraft.world.level.block.piston.PistonMovingBlockEntity": Internal.ClassInfo, "java.io.BufferedReader": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.Long2ByteMap$Entry": Internal.ClassInfo, "com.inventorypets.items.feedBag": Internal.ClassInfo, "net.minecraft.world.item.BookItem": Internal.ClassInfo, "net.minecraft.core.particles.SimpleParticleType": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.UnderwaterMagmaFeature": Internal.ClassInfo, "cofh.thermal.lib.common.item.AugmentItem": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2IntArrayMap": Internal.ClassInfo, "net.fabricmc.fabric.api.client.screen.v1.ScreenMouseEvents$BeforeMouseRelease": Internal.ClassInfo, "com.tterrag.registrate.builders.MenuBuilder$ForgeMenuFactory": Internal.ClassInfo, "net.minecraft.data.DataGenerator$PackGenerator": Internal.ClassInfo, "dev.ftb.mods.ftbteams.api.property.TeamPropertyValue": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.material.stack.ItemMaterialInfo": Internal.ClassInfo, "net.minecraft.world.entity.NeutralMob": Internal.ClassInfo, "dev.onyxstudios.cca.internal.entity.SwitchablePlayerEntity": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeDispensibleContainerItem": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.ArcaneCenserBlock": Internal.ClassInfo, "de.dafuqs.spectrum.events.ExactPositionSource": Internal.ClassInfo, "org.joml.Matrix3fc": Internal.ClassInfo, "appeng.block.networking.EnergyAcceptorBlock": Internal.ClassInfo, "net.minecraft.commands.synchronization.ArgumentTypeInfo": Internal.ClassInfo, "net.minecraft.world.entity.boss.enderdragon.phases.DragonLandingApproachPhase": Internal.ClassInfo, "com.mojang.authlib.properties.PropertyMap": Internal.ClassInfo, "snownee.lychee.mixin.ItemEntityAccess": Internal.ClassInfo, "dev.ftb.mods.ftbquests.quest.TeamData": Internal.ClassInfo, "de.dafuqs.spectrum.mixin.accessors.InGameHudAccessor": Internal.ClassInfo, "net.minecraft.world.level.levelgen.heightproviders.WeightedListHeight": Internal.ClassInfo, "net.minecraft.world.level.levelgen.carver.CaveWorldCarver": Internal.ClassInfo, "net.minecraft.world.level.block.AbstractFurnaceBlock": Internal.ClassInfo, "biomesoplenty.common.block.HighGrassBlock": Internal.ClassInfo, "com.mojang.realmsclient.dto.RealmsServerPlayerLists": Internal.ClassInfo, "java.lang.Thread$State": Internal.ClassInfo, "com.mojang.datafixers.RewriteResult": Internal.ClassInfo, "sun.nio.fs.LinuxFileSystem": Internal.ClassInfo, "com.google.common.collect.Multiset$Entry": Internal.ClassInfo, "net.fabricmc.fabric.mixin.loot.LootPoolAccessor": Internal.ClassInfo, "java.text.Format$Field": Internal.ClassInfo, "org.w3c.dom.Comment": Internal.ClassInfo, "net.minecraft.world.entity.Display$TextDisplay$CachedInfo": Internal.ClassInfo, "net.minecraft.world.entity.Display$IntInterpolator": Internal.ClassInfo, "org.apache.logging.log4j.core.net.Advertiser": Internal.ClassInfo, "java.util.List": Internal.ClassInfo, "net.minecraft.world.level.storage.CommandStorage": Internal.ClassInfo, "net.minecraft.world.level.block.DoubleBlockCombiner$Combiner": Internal.ClassInfo, "de.dafuqs.spectrum.energy.InkStorage": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.api.items.IHidden": Internal.ClassInfo, "net.fabricmc.fabric.api.lookup.v1.block.BlockApiCache": Internal.ClassInfo, "net.minecraft.world.entity.ai.control.LookControl": Internal.ClassInfo, "net.minecraft.world.level.block.LayeredCauldronBlock": Internal.ClassInfo, "techreborn.blocks.transformers.BlockHVTransformer": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.GoldenRing": Internal.ClassInfo, "divinerpg.blocks.arcana.BlockArcaniumExtractor": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.foliageplacers.FoliagePlacer$FoliageSetter": Internal.ClassInfo, "javax.swing.text.StyleConstants": Internal.ClassInfo, "net.minecraft.world.inventory.DispenserMenu": Internal.ClassInfo, "net.minecraft.world.level.gameevent.GameEvent": Internal.ClassInfo, "net.minecraft.client.renderer.RenderStateShard$ShaderStateShard": Internal.ClassInfo, "java.lang.Iterable": Internal.ClassInfo, "com.mna.effects.beneficial.EffectRepair": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate$StructureBlockInfo": Internal.ClassInfo, "dev.latvian.mods.kubejs.gui.chest.ChestMenuClickEvent": Internal.ClassInfo, "net.minecraft.client.multiplayer.ServerData$ServerPackStatus": Internal.ClassInfo, "net.minecraft.world.entity.EquipmentSlot$Type": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.items.SackItem": Internal.ClassInfo, "net.minecraft.client.renderer.block.model.ItemModelGenerator": Internal.ClassInfo, "reborncore.common.crafting.RebornRecipe": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.present.PresentBlock": Internal.ClassInfo, "mods.railcraft.world.level.block.ManualRollingMachineBlock": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slab.FramedAdjustableDoublePanelBlock": Internal.ClassInfo, "net.minecraft.world.level.block.entity.JigsawBlockEntity$JointType": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.SaltTorchBlock": Internal.ClassInfo, "net.fabricmc.fabric.api.transfer.v1.context.ContainerItemContext": Internal.ClassInfo, "xaero.map.region.texture.BranchRegionTexture": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.OreConfiguration$TargetBlockState": Internal.ClassInfo, "com.yogpc.qp.machines.module.QuarryModule": Internal.ClassInfo, "java.nio.file.OpenOption": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.ender.EnderDropperBlock": Internal.ClassInfo, "com.mojang.blaze3d.vertex.VertexFormatElement$Usage": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.items.PancakeItem": Internal.ClassInfo, "java.util.Collections$UnmodifiableMap": Internal.ClassInfo, "net.minecraftforge.client.model.generators.MultiPartBlockStateBuilder$PartBuilder": Internal.ClassInfo, "net.minecraft.world.inventory.AnvilMenu": Internal.ClassInfo, "java.awt.PrintJob": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.AbstractInt2ObjectFunction": Internal.ClassInfo, "divinerpg.items.base.ItemModShovel": Internal.ClassInfo, "net.minecraft.world.level.block.state.pattern.BlockPattern": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.titration_barrel.TitrationBarrelBlock": Internal.ClassInfo, "net.minecraft.world.level.CollisionGetter": Internal.ClassInfo, "net.minecraft.world.entity.npc.AbstractVillager": Internal.ClassInfo, "vazkii.patchouli.client.book.BookContentsBuilder": Internal.ClassInfo, "com.inventorypets.pets.petIlluminati": Internal.ClassInfo, "de.dafuqs.spectrum.items.magic_items.StaffOfRemembranceItem": Internal.ClassInfo, "net.minecraft.data.recipes.RecipeProvider": Internal.ClassInfo, "com.inventorypets.pets.petAnvil": Internal.ClassInfo, "java.nio.file.WatchEvent$Kind": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.worldgen.WorldGenLayers": Internal.ClassInfo, "mods.railcraft.world.item.FirestoneItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.ClientEventJS": Internal.ClassInfo, "dev.latvian.mods.kubejs.misc.PaintingVariantBuilder": Internal.ClassInfo, "dev.ftb.mods.ftbquests.block.LootCrateOpenerBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.server.tag.TagEventJS": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.render.viewport.CameraTransform": Internal.ClassInfo, "net.minecraft.world.item.Instrument": Internal.ClassInfo, "xaero.map.MapFullReloader": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.BedPart": Internal.ClassInfo, "net.fabricmc.fabric.impl.transfer.fluid.FluidVariantCache": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.material.properties.WoodProperty": Internal.ClassInfo, "com.mna.effects.beneficial.EffectMistForm": Internal.ClassInfo, "com.yanny.ytech.configuration.block.AbstractPrimitiveMachineBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.common.data.GTItems": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.ArcaneLinenBlock": Internal.ClassInfo, "xfacthd.framedblocks.common.block.pillar.FramedPillarBlock": Internal.ClassInfo, "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap": Internal.ClassInfo, "net.minecraft.world.entity.monster.Witch": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slab.FramedAdjustableDoubleSlabBlock": Internal.ClassInfo, "mezz.jei.api.runtime.IIngredientFilter": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.ReferenceCollection": Internal.ClassInfo, "net.minecraft.world.item.enchantment.ProtectionEnchantment": Internal.ClassInfo, "net.fabricmc.fabric.api.client.screen.v1.ScreenKeyboardEvents$BeforeKeyRelease": Internal.ClassInfo, "net.minecraft.world.item.StandingAndWallBlockItem": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.Long2ShortFunction": Internal.ClassInfo, "net.minecraft.world.item.DyeColor": Internal.ClassInfo, "xaero.map.palette.Paletted2DFastBitArrayIntStorage": Internal.ClassInfo, "net.minecraftforge.client.extensions.IForgeBakedModel": Internal.ClassInfo, "com.inventorypets.pets.petMeta25": Internal.ClassInfo, "mods.railcraft.world.level.block.track.HighSpeedElectricTrackBlock": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundUseItemOnPacket": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.conditional.colored_tree.ColoredStrippedWoodBlock": Internal.ClassInfo, "net.minecraft.world.level.lighting.DataLayerStorageMap": Internal.ClassInfo, "net.minecraft.client.OptionInstance$CycleableValueSet": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.idols.LineTeleportingIdolBlock": Internal.ClassInfo, "net.minecraft.world.level.block.AbstractSkullBlock": Internal.ClassInfo, "com.mna.items.sorcery.ItemBookOfRote": Internal.ClassInfo, "net.minecraft.core.dispenser.DefaultDispenseItemBehavior": Internal.ClassInfo, "net.minecraft.world.item.context.UseOnContext": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.Long2FloatFunction": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.AlwaysTrueTest": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopepanelcorner.FramedDoubleCornerSlopePanelWallBlock": Internal.ClassInfo, "net.minecraft.world.item.crafting.Ingredient$Value": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.custom.SlabBlockBuilder": Internal.ClassInfo, "net.minecraft.world.level.block.SculkSpreader": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.TwistingVinesConfig": Internal.ClassInfo, "net.minecraft.client.gui.spectator.SpectatorMenuCategory": Internal.ClassInfo, "org.orecruncher.dsurround.config.SoundEventType": Internal.ClassInfo, "xaero.map.graphics.CustomVertexConsumers": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decoration.WandLightBlock": Internal.ClassInfo, "net.blay09.mods.balm.mixin.AbstractContainerScreenAccessor": Internal.ClassInfo, "net.minecraft.world.level.biome.Climate$Sampler": Internal.ClassInfo, "dev.latvian.mods.rhino.util.Remapper": Internal.ClassInfo, "net.minecraft.server.packs.repository.PackRepository": Internal.ClassInfo, "net.minecraft.world.entity.animal.SnowGolem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.DeltaFeature": Internal.ClassInfo, "it.unimi.dsi.fastutil.floats.Float2ReferenceFunction": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetTimePacket": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.DetectorBlock$Builder": Internal.ClassInfo, "net.minecraftforge.registries.IdMappingEvent$ModRemapping": Internal.ClassInfo, "net.irisshaders.iris.mixin.texture.SpriteContentsFrameInfoAccessor": Internal.ClassInfo, "org.violetmoon.zeta.config.SectionDefinition": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.config.NameMap": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgePlayer": Internal.ClassInfo, "java.util.Date": Internal.ClassInfo, "com.gregtechceu.gtceu.common.data.GTElements": Internal.ClassInfo, "java.util.Random": Internal.ClassInfo, "net.mehvahdjukaar.amendments.common.item.DyeBottleItem": Internal.ClassInfo, "com.inventorypets.pets.petSquid": Internal.ClassInfo, "com.lowdragmc.lowdraglib.core.mixins.accessor.ServerPlayerAccessor": Internal.ClassInfo, "mezz.jei.api.ingredients.IIngredientRenderer": Internal.ClassInfo, "com.mna.enchantments.base.ModifierEnchantment": Internal.ClassInfo, "dev.latvian.mods.kubejs.misc.SoundEventBuilder": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.world.ClimbingMobCachingSection": Internal.ClassInfo, "net.minecraft.world.inventory.ContainerData": Internal.ClassInfo, "java.util.zip.ZipEntry": Internal.ClassInfo, "java.awt.datatransfer.Clipboard": Internal.ClassInfo, "com.inventorypets.pets.petMeta75": Internal.ClassInfo, "elucent.eidolon.common.block.CandleBlock": Internal.ClassInfo, "com.mna.effects.harmful.EffectEarthquake": Internal.ClassInfo, "net.minecraft.world.level.pathfinder.BlockPathTypes": Internal.ClassInfo, "mods.railcraft.world.item.PressureBoilerTankBlockItem": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.Property$Value": Internal.ClassInfo, "divinerpg.blocks.arcana.BlockElevantium": Internal.ClassInfo, "elucent.eidolon.client.particle.SparkleParticleType": Internal.ClassInfo, "org.violetmoon.zeta.block.IZetaBlock": Internal.ClassInfo, "java.lang.ref.Reference": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.entries.ComposableEntryContainer": Internal.ClassInfo, "it.unimi.dsi.fastutil.bytes.ByteConsumer": Internal.ClassInfo, "mods.railcraft.api.charge.ChargeProtectionItem": Internal.ClassInfo, "net.minecraftforge.client.event.ClientChatReceivedEvent": Internal.ClassInfo, "net.minecraft.world.level.LevelAccessor": Internal.ClassInfo, "it.unimi.dsi.fastutil.chars.Char2DoubleFunction": Internal.ClassInfo, "net.minecraft.commands.CommandSource": Internal.ClassInfo, "net.minecraft.world.level.GameRules$BooleanValue": Internal.ClassInfo, "dev.latvian.mods.kubejs.entity.EntityEventJS": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.RootSystemFeature": Internal.ClassInfo, "org.spongepowered.asm.mixin.injection.callback.Cancellable": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slope.FramedDoubleSlopeBlock": Internal.ClassInfo, "com.lowdragmc.lowdraglib.networking.IHandlerContext": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blockpredicates.TrueBlockPredicate": Internal.ClassInfo, "org.lwjgl.stb.STBTTFontinfo$Buffer": Internal.ClassInfo, "cofh.lib.common.item.SignItemCoFH": Internal.ClassInfo, "net.minecraft.util.Unit": Internal.ClassInfo, "java.lang.module.ModuleDescriptor": Internal.ClassInfo, "javax.swing.text.AttributeSet$FontAttribute": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.AbstractIntCollection": Internal.ClassInfo, "de.dafuqs.spectrum.items.energy.PigmentPaletteItem": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.entries.LootPoolEntry": Internal.ClassInfo, "divinerpg.items.twilight.ItemTwilightBlitz": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.GlassFrameBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.FoodEatenEventJS": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopeedge.FramedElevatedDoubleSlopeEdgeBlock": Internal.ClassInfo, "divinerpg.blocks.vanilla.BlockAyeracoSpawn": Internal.ClassInfo, "net.minecraft.client.resources.PaintingTextureManager": Internal.ClassInfo, "com.inventorypets.pets.petMeta50": Internal.ClassInfo, "appeng.api.crafting.IPatternDetails": Internal.ClassInfo, "net.minecraft.world.level.block.RailBlock": Internal.ClassInfo, "net.minecraftforge.event.server.ServerStoppingEvent": Internal.ClassInfo, "mods.railcraft.world.level.block.signal.SignalBlockRelayBoxBlock": Internal.ClassInfo, "xaero.map.capabilities.ServerWorldCapabilities": Internal.ClassInfo, "divinerpg.items.iceika.ItemEggNog": Internal.ClassInfo, "io.wispforest.owo.ui.core.Animation$Direction": Internal.ClassInfo, "cofh.thermal.core.common.item.IceChargeItem": Internal.ClassInfo, "net.mehvahdjukaar.amendments.common.block.ToolHookBlock": Internal.ClassInfo, "net.minecraft.world.level.lighting.LayerLightSectionStorage$SectionType": Internal.ClassInfo, "com.tterrag.registrate.util.nullness.NonNullConsumer": Internal.ClassInfo, "xfacthd.framedblocks.common.block.interactive.FramedWaterloggableWeightedPressurePlateBlock": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.texture.ColorRectTexture": Internal.ClassInfo, "com.tterrag.registrate.util.entry.BlockEntityEntry": Internal.ClassInfo, "com.inventorypets.pets.petHeart": Internal.ClassInfo, "java.awt.MenuComponent": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$MouseScrolled$Pre": Internal.ClassInfo, "com.google.common.cache.Cache": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.RecipeComponentWithParent": Internal.ClassInfo, "com.mojang.serialization.MapLike": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.custom.ShearsItemBuilder": Internal.ClassInfo, "de.dafuqs.fractal.interfaces.ItemGroupParent": Internal.ClassInfo, "java.util.function.IntBinaryOperator": Internal.ClassInfo, "io.wispforest.owo.ui.core.Sizing$Method": Internal.ClassInfo, "mezz.jei.api.helpers.IColorHelper": Internal.ClassInfo, "net.minecraft.world.inventory.MenuConstructor": Internal.ClassInfo, "com.tterrag.registrate.providers.RegistrateTagsProvider": Internal.ClassInfo, "java.io.DataOutputStream": Internal.ClassInfo, "de.dafuqs.spectrum.enchantments.CloversFavorEnchantment": Internal.ClassInfo, "appeng.blockentity.spatial.SpatialPylonBlockEntity": Internal.ClassInfo, "dev.latvian.mods.rhino.MemberType": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.block_flooder.BlockFlooderBlock": Internal.ClassInfo, "net.minecraft.world.level.block.AbstractBannerBlock": Internal.ClassInfo, "net.minecraft.data.PackOutput$PathProvider": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.BlockBlobFeature": Internal.ClassInfo, "appeng.helpers.patternprovider.PatternProviderReturnInventory": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.entity.EntityClassGroup": Internal.ClassInfo, "org.orecruncher.dsurround.config.BiomeTrait": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.NetherForestVegetationConfig": Internal.ClassInfo, "net.minecraft.client.ClientRecipeBook": Internal.ClassInfo, "java.awt.datatransfer.ClipboardOwner": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slope.FramedInnerThreewayCornerBlock": Internal.ClassInfo, "cc.abbie.emi_ores.mixin.accessor.BlockMatchTestAccessor": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.entity.BlockEntityInfo": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.api.wissen.ICooldownTileEntity": Internal.ClassInfo, "org.violetmoon.zeta.module.ModuleFinder": Internal.ClassInfo, "de.dafuqs.spectrum.items.DecayPlacerItem": Internal.ClassInfo, "net.minecraftforge.event.entity.living.MobSpawnEvent$FinalizeSpawn": Internal.ClassInfo, "net.minecraftforge.fml.IExtensionPoint": Internal.ClassInfo, "org.joml.Vector4fc": Internal.ClassInfo, "net.minecraft.world.item.ArmorMaterials": Internal.ClassInfo, "net.minecraft.world.level.block.HopperBlock": Internal.ClassInfo, "net.minecraft.util.random.WeightedRandomList": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.jade_vines.NephriteBlossomStemBlock": Internal.ClassInfo, "net.minecraft.world.item.BucketItem": Internal.ClassInfo, "net.minecraft.util.valueproviders.IntProviderType": Internal.ClassInfo, "java.util.Collections$SynchronizedMap": Internal.ClassInfo, "com.mna.api.spells.ICanContainSpell": Internal.ClassInfo, "de.dafuqs.spectrum.particle.SpectrumParticleTypes$1": Internal.ClassInfo, "com.gregtechceu.gtceu.api.pipenet.longdistance.LongDistanceNetwork$WorldData": Internal.ClassInfo, "net.fabricmc.fabric.impl.blockview.client.RenderDataMapConsumer": Internal.ClassInfo, "net.fabricmc.fabric.mixin.client.keybinding.KeyBindingAccessor": Internal.ClassInfo, "net.minecraft.client.multiplayer.ClientSuggestionProvider": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.callbacks.AfterEntityFallenOnBlockCallbackJS": Internal.ClassInfo, "com.blamejared.controlling.mixin.AccessInputConstantsKey": Internal.ClassInfo, "java.text.SimpleDateFormat": Internal.ClassInfo, "com.mna.items.artifice.curio.ItemAntidoteBracelet": Internal.ClassInfo, "xfacthd.atlasviewer.client.api.SourceTooltipAppender$LineConsumer": Internal.ClassInfo, "net.caffeinemc.mods.sodium.api.vertex.format.VertexFormatDescription": Internal.ClassInfo, "net.minecraft.advancements.critereon.EntityFlagsPredicate": Internal.ClassInfo, "net.minecraft.world.level.biome.Climate$DistanceMetric": Internal.ClassInfo, "dev.latvian.mods.kubejs.util.LogType": Internal.ClassInfo, "org.orecruncher.dsurround.mixinutils.IChannelHandle": Internal.ClassInfo, "xfacthd.atlasviewer.client.api.SpriteSourceMeta": Internal.ClassInfo, "com.inventorypets.pets.petMoon": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.structures.NetherFossilStructure": Internal.ClassInfo, "dev.latvian.mods.kubejs.integration.forge.jei.RemoveJEICategoriesEvent": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slab.FramedDividedPanelBlock": Internal.ClassInfo, "net.minecraftforge.client.event.RenderGuiOverlayEvent$Pre": Internal.ClassInfo, "java.util.Map$Entry": Internal.ClassInfo, "dev.latvian.mods.kubejs.registry.CustomBuilderObject": Internal.ClassInfo, "mezz.jei.api.recipe.IRecipeLookup": Internal.ClassInfo, "com.google.common.hash.HashCode": Internal.ClassInfo, "com.mna.api.items.ITieredItem": Internal.ClassInfo, "net.minecraft.world.item.DiggerItem": Internal.ClassInfo, "com.epherical.croptopia.items.GuideBookItem": Internal.ClassInfo, "io.netty.buffer.ByteBufAllocatorMetric": Internal.ClassInfo, "com.gregtechceu.gtceu.api.recipe.ui.GTRecipeTypeUI": Internal.ClassInfo, "com.mna.api.spells.base.SpellBlacklistResult": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.curio.CrystalBagItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.MinecraftEnvironmentKJS": Internal.ClassInfo, "net.minecraftforge.event.server.ServerStoppedEvent": Internal.ClassInfo, "com.gregtechceu.gtceu.api.pattern.predicates.SimplePredicate": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.callbacks.EntitySteppedOnBlockCallbackJS": Internal.ClassInfo, "net.minecraft.world.InteractionHand": Internal.ClassInfo, "net.minecraft.client.resources.model.Material": Internal.ClassInfo, "java.time.temporal.TemporalAdjuster": Internal.ClassInfo, "com.mna.api.entities.construct.ai.ConstructAITask": Internal.ClassInfo, "com.gregtechceu.gtceu.api.gui.SteamTexture": Internal.ClassInfo, "net.minecraft.world.item.ExperienceBottleItem": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.IsInWaterSensor": Internal.ClassInfo, "net.minecraft.client.renderer.texture.SpriteContents$InterpolationData": Internal.ClassInfo, "mods.railcraft.world.level.block.manipulator.ManipulatorBlock": Internal.ClassInfo, "net.minecraft.client.gui.components.toasts.ToastComponent": Internal.ClassInfo, "com.yanny.ytech.configuration.block.DryingRackBlock": Internal.ClassInfo, "dev.architectury.registry.registries.Registrar": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.worldgen.generator.veins.GeodeVeinGenerator$GeodeBlockSettings": Internal.ClassInfo, "org.spongepowered.asm.mixin.injection.callback.CallbackInfo": Internal.ClassInfo, "org.joml.Vector4ic": Internal.ClassInfo, "cofh.lib.api.item.IEnergyContainerItem": Internal.ClassInfo, "net.minecraft.ChatFormatting": Internal.ClassInfo, "com.mojang.datafixers.kinds.Applicative$Mu": Internal.ClassInfo, "xfacthd.framedblocks.common.block.rail.FramedFancyDetectorRailBlock": Internal.ClassInfo, "net.minecraft.world.level.block.TorchBlock": Internal.ClassInfo, "net.minecraft.world.level.storage.WritableLevelData": Internal.ClassInfo, "net.minecraft.server.level.ServerBossEvent": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.trunkplacers.TrunkPlacerType": Internal.ClassInfo, "net.minecraft.world.level.block.TwistingVinesBlock": Internal.ClassInfo, "net.minecraft.world.level.gameevent.DynamicGameEventListener": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingEvent$LivingJumpEvent": Internal.ClassInfo, "java.awt.image.BufferedImage": Internal.ClassInfo, "net.minecraft.world.entity.AreaEffectCloud": Internal.ClassInfo, "com.mna.api.entities.construct.ai.ConstructTask": Internal.ClassInfo, "mods.railcraft.world.item.tunnelbore.TunnelBoreHeadItem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.PosRuleTestType": Internal.ClassInfo, "snownee.lychee.mixin.ChunkMapAccess": Internal.ClassInfo, "elucent.eidolon.common.item.curio.GravityBeltItem": Internal.ClassInfo, "com.enderio.base.common.particle.RangeParticleData": Internal.ClassInfo, "com.kamth.zeldamod.item.items.MirrorShieldItem": Internal.ClassInfo, "net.minecraft.world.level.chunk.ChunkAccess": Internal.ClassInfo, "software.bernie.geckolib.core.animation.Animation$Keyframes": Internal.ClassInfo, "reborncore.common.powerSystem.RcEnergyItem": Internal.ClassInfo, "java.awt.SecondaryLoop": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.rock_candy.RockCandyItem": Internal.ClassInfo, "java.lang.reflect.Type": Internal.ClassInfo, "net.minecraft.world.level.levelgen.DensityFunction": Internal.ClassInfo, "appeng.items.tools.powered.WirelessCraftingTerminalItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.BlockLeftClickedEventJS": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.editor.ui.ToolPanel": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.LootContextUser": Internal.ClassInfo, "com.mna.blocks.worldgen.ManaweaveCacheBlock": Internal.ClassInfo, "net.minecraftforge.event.level.LevelEvent$Load": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.CasingBlock": Internal.ClassInfo, "cofh.core.common.item.CountedItem": Internal.ClassInfo, "net.minecraft.world.entity.schedule.ScheduleBuilder": Internal.ClassInfo, "xaero.map.effects.WorldMapStatusEffect": Internal.ClassInfo, "com.gregtechceu.gtceu.api.item.tool.GTHoeItem": Internal.ClassInfo, "snownee.lychee.compat.kubejs.ClickedInfoBadgeEventJS": Internal.ClassInfo, "cofh.thermal.core.common.block.LumiumGlassBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.event.EventExceptionHandler": Internal.ClassInfo, "com.tterrag.registrate.builders.EntityBuilder": Internal.ClassInfo, "net.minecraft.core.Vec3i": Internal.ClassInfo, "net.minecraft.world.level.biome.MultiNoiseBiomeSourceParameterList$Preset": Internal.ClassInfo, "net.minecraftforge.event.entity.player.SleepingTimeCheckEvent": Internal.ClassInfo, "net.minecraft.world.inventory.ItemCombinerMenu": Internal.ClassInfo, "net.minecraft.world.entity.monster.CaveSpider": Internal.ClassInfo, "net.minecraft.server.packs.PackResources": Internal.ClassInfo, "dev.latvian.mods.kubejs.integration.forge.jei.InformationJEIEventJS": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.shapes.OffsetVoxelShapeCache": Internal.ClassInfo, "net.minecraft.world.entity.animal.MushroomCow$MushroomType": Internal.ClassInfo, "com.almostreliable.lootjs.core.ILootCondition": Internal.ClassInfo, "com.mna.blocks.artifice.AffinityTinkerBlock": Internal.ClassInfo, "xfacthd.framedblocks.api.camo.CamoContainer$Factory": Internal.ClassInfo, "org.apache.logging.log4j.util.ReadOnlyStringMap": Internal.ClassInfo, "mods.railcraft.world.item.CoalCokeItem": Internal.ClassInfo, "dev.emi.emi.mixin.accessor.BakedModelManagerAccessor": Internal.ClassInfo, "com.google.common.base.CharMatcher$Or": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.jade_vines.JadeVineRootsBlock": Internal.ClassInfo, "net.minecraftforge.forgespi.locating.ForgeFeature$Bound": Internal.ClassInfo, "com.gregtechceu.gtceu.api.machine.trait.RecipeLogic": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundPlayerInfoUpdatePacket$EntryBuilder": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.gravity.FloatBlockItem": Internal.ClassInfo, "divinerpg.blocks.arcana.BlockArcaniteVinesHead": Internal.ClassInfo, "com.gregtechceu.gtceu.api.machine.trait.RecipeLogic$Status": Internal.ClassInfo, "java.time.Clock": Internal.ClassInfo, "xaero.map.executor.Executor": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.ArcaneLumosBlock": Internal.ClassInfo, "com.mna.api.entities.construct.materials.ConstructMaterialIron": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.gravity.FloatItem": Internal.ClassInfo, "appeng.blockentity.misc.CondenserBlockEntity": Internal.ClassInfo, "java.awt.event.InputMethodListener": Internal.ClassInfo, "com.yogpc.qp.machines.marker.BlockExMarker$BlockWaterlogged16Marker": Internal.ClassInfo, "java.util.Enumeration": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.UltimatePotionSplash": Internal.ClassInfo, "mods.railcraft.api.signal.TrackLocator": Internal.ClassInfo, "javax.crypto.ExemptionMechanism": Internal.ClassInfo, "org.joml.Matrix4dc": Internal.ClassInfo, "net.minecraft.world.entity.projectile.WitherSkull": Internal.ClassInfo, "org.joml.Matrix3x2d": Internal.ClassInfo, "software.bernie.geckolib.animatable.GeoItem": Internal.ClassInfo, "org.joml.Matrix3x2f": Internal.ClassInfo, "dev.latvian.mods.kubejs.server.tag.TagWrapper": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.AbyssalHeart": Internal.ClassInfo, "com.google.gson.GsonBuilder": Internal.ClassInfo, "org.apache.logging.log4j.core.lookup.StrMatcher$StringMatcher": Internal.ClassInfo, "mods.railcraft.world.level.block.track.outfitted.OutfittedTrackBlock": Internal.ClassInfo, "org.lwjgl.system.Pointer$Default": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundRotateHeadPacket": Internal.ClassInfo, "com.mna.items.constructs.parts.arms.ConstructPartHammerArmRight": Internal.ClassInfo, "appeng.me.helpers.IGridConnectedBlockEntity": Internal.ClassInfo, "com.almostreliable.lootjs.forge.filters.ForgeItemFilter": Internal.ClassInfo, "com.teampotato.doespotatotick.api.Tickable$EntityType": Internal.ClassInfo, "com.lowdragmc.lowdraglib.networking.s2c.SPacketUIWidgetUpdate": Internal.ClassInfo, "net.minecraft.world.entity.ai.gossip.GossipContainer$GossipEntry": Internal.ClassInfo, "net.minecraft.server.packs.resources.PreparableReloadListener": Internal.ClassInfo, "cc.abbie.emi_ores.mixin.accessor.SimpleStateProviderAccessor": Internal.ClassInfo, "com.gregtechceu.gtceu.common.data.machines.GCyMMachines": Internal.ClassInfo, "com.gregtechceu.gtceu.api.item.tool.GTSwordItem": Internal.ClassInfo, "org.violetmoon.zeta.item.ZetaArmorItem": Internal.ClassInfo, "mezz.jei.api.runtime.IScreenHelper": Internal.ClassInfo, "net.minecraft.util.thread.ReentrantBlockableEventLoop": Internal.ClassInfo, "software.bernie.geckolib.core.animation.AnimationController": Internal.ClassInfo, "net.minecraftforge.fml.event.IModBusEvent": Internal.ClassInfo, "io.wispforest.owo.ui.parsing.UIModel": Internal.ClassInfo, "javax.accessibility.AccessibleEditableText": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.spirit_sallow.SpiritVinesHeadBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.DoubleSpliterator": Internal.ClassInfo, "divinerpg.blocks.iceika.BlockCozybarkLeaves": Internal.ClassInfo, "net.minecraftforge.event.entity.living.BabyEntitySpawnEvent": Internal.ClassInfo, "net.minecraft.world.level.chunk.LevelChunk$PostLoadProcessor": Internal.ClassInfo, "com.inventorypets.pets.petMetaMob": Internal.ClassInfo, "elucent.eidolon.common.item.BonelordArmorItem": Internal.ClassInfo, "appeng.hooks.IBlockTool": Internal.ClassInfo, "appeng.api.util.AECableType": Internal.ClassInfo, "org.violetmoon.zeta.advancement.ManualTrigger": Internal.ClassInfo, "com.mna.effects.harmful.EffectWrithingBrambles": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.model.quad.BakedQuadView": Internal.ClassInfo, "mods.railcraft.world.level.block.detector.VillagerDetectorBlock": Internal.ClassInfo, "org.apache.logging.log4j.core.impl.LocationAwareLogEventFactory": Internal.ClassInfo, "net.minecraft.world.phys.shapes.EntityCollisionContext": Internal.ClassInfo, "dev.latvian.mods.kubejs.loot.FishingLootEventJS": Internal.ClassInfo, "javax.accessibility.AccessibleRelationSet": Internal.ClassInfo, "net.minecraft.world.entity.animal.ShoulderRidingEntity": Internal.ClassInfo, "biomesoplenty.common.block.BloodBlock": Internal.ClassInfo, "com.mna.api.capabilities.resource.SyncStatus": Internal.ClassInfo, "com.lowdragmc.lowdraglib.syncdata.rpc.RPCSender": Internal.ClassInfo, "org.joml.Matrix4fc": Internal.ClassInfo, "com.epherical.croptopia.items.Drink": Internal.ClassInfo, "com.mojang.realmsclient.dto.RealmsServer": Internal.ClassInfo, "com.mojang.brigadier.RedirectModifier": Internal.ClassInfo, "mods.railcraft.world.level.block.signal.AnalogSignalControllerBoxBlock": Internal.ClassInfo, "net.minecraft.world.entity.boss.enderdragon.phases.DragonPhaseInstance": Internal.ClassInfo, "net.minecraft.world.entity.monster.piglin.PiglinArmPose": Internal.ClassInfo, "net.minecraftforge.event.BuildCreativeModeTabContentsEvent": Internal.ClassInfo, "cofh.thermal.core.common.item.FluidCellBlockItem": Internal.ClassInfo, "vazkii.patchouli.client.book.gui.GuiBook": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.DoubleBinaryOperator": Internal.ClassInfo, "com.gregtechceu.gtceu.api.fluids.attribute.FluidAttribute": Internal.ClassInfo, "net.minecraftforge.event.OnDatapackSyncEvent": Internal.ClassInfo, "net.minecraft.world.item.InstrumentItem": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSoundPacket": Internal.ClassInfo, "appeng.block.storage.SkyStoneTankBlock": Internal.ClassInfo, "net.minecraftforge.client.event.InputEvent$MouseButton$Pre": Internal.ClassInfo, "net.mehvahdjukaar.amendments.common.IBetterJukebox": Internal.ClassInfo, "net.minecraft.world.entity.Display$BlockDisplay$BlockRenderState": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeItemStack": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.structure.DikeGateBlock": Internal.ClassInfo, "java.util.concurrent.ConcurrentHashMap$KeySetView": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.PiglinSpecificSensor": Internal.ClassInfo, "net.irisshaders.iris.texture.pbr.PBRType": Internal.ClassInfo, "net.minecraft.world.level.SpawnData$CustomSpawnRules": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.RedstoneSensorBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.Aquifer$FluidStatus": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.BiomeFilter": Internal.ClassInfo, "net.mehvahdjukaar.amendments.common.block.DirectionalCakeBlock": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.api.wissen.ITotemBlock": Internal.ClassInfo, "mods.railcraft.api.container.manipulator.ContainerManipulator": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.conditional.colored_tree.ColoredSaplingBlock": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundEntityEventPacket": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.foliageplacers.FoliagePlacerType": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.Long2ObjectSortedMap": Internal.ClassInfo, "java.util.EventObject": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.EnigmaticAmulet": Internal.ClassInfo, "net.minecraft.client.gui.narration.NarratableEntry": Internal.ClassInfo, "net.minecraft.world.item.RecordItem": Internal.ClassInfo, "com.yanny.ytech.configuration.block.GrassBedBlock": Internal.ClassInfo, "net.minecraft.world.level.block.entity.JigsawBlockEntity": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.idols.ProjectileIdolBlock": Internal.ClassInfo, "net.minecraft.client.model.HeadedModel": Internal.ClassInfo, "com.google.common.collect.ImmutableCollection$Builder": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.PrecisionCrystalItem": Internal.ClassInfo, "malte0811.ferritecore.ducks.FastMapStateHolder": Internal.ClassInfo, "mezz.jei.api.ingredients.IIngredientHelper": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.foliageplacers.SpruceFoliagePlacer": Internal.ClassInfo, "appeng.api.networking.ticking.TickingRequest": Internal.ClassInfo, "net.minecraft.world.item.SuspiciousStewItem": Internal.ClassInfo, "net.fabricmc.fabric.impl.renderer.SpriteFinderImpl$SpriteFinderAccess": Internal.ClassInfo, "net.darkhax.maxhealthfix.IHealthFixable": Internal.ClassInfo, "de.dafuqs.spectrum.energy.InkPowered": Internal.ClassInfo, "java.util.jar.Attributes": Internal.ClassInfo, "com.gregtechceu.gtceu.api.recipe.ResearchRecipeBuilder$ScannerRecipeBuilder": Internal.ClassInfo, "net.minecraftforge.common.util.NonNullFunction": Internal.ClassInfo, "net.minecraft.client.model.geom.ModelPart$Visitor": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundTeleportEntityPacket": Internal.ClassInfo, "com.gregtechceu.gtceu.api.fluids.store.FluidStorageKey": Internal.ClassInfo, "net.minecraft.util.thread.ProcessorHandle": Internal.ClassInfo, "appeng.api.implementations.items.IStorageComponent": Internal.ClassInfo, "net.minecraft.world.inventory.CartographyTableMenu": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.RecipeKJS": Internal.ClassInfo, "net.minecraft.world.level.block.entity.BlockEntityTicker": Internal.ClassInfo, "cofh.lib.common.block.RubberBlock": Internal.ClassInfo, "appeng.items.tools.fluix.FluixHoeItem": Internal.ClassInfo, "net.fabricmc.fabric.api.util.TriState": Internal.ClassInfo, "java.lang.constant.MethodTypeDesc": Internal.ClassInfo, "com.mojang.datafixers.Typed": Internal.ClassInfo, "com.mojang.authlib.yggdrasil.request.AbuseReportRequest$ClientInfo": Internal.ClassInfo, "net.minecraft.world.item.BannerItem": Internal.ClassInfo, "com.mna.blocks.tileentities.EldrinAltarTile": Internal.ClassInfo, "net.minecraft.world.entity.animal.IronGolem$Crackiness": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.ArcaciteItem": Internal.ClassInfo, "xfacthd.framedblocks.common.block.cube.FramedCollapsibleCopycatBlock": Internal.ClassInfo, "com.mna.items.relic.ScrollOfIcarianFlight": Internal.ClassInfo, "com.mna.items.constructs.parts.legs.ConstructPartRocketLegs": Internal.ClassInfo, "com.google.gson.JsonPrimitive": Internal.ClassInfo, "elucent.eidolon.common.item.curio.ResoluteBeltItem": Internal.ClassInfo, "com.mojang.authlib.minecraft.report.AbuseReportLimits": Internal.ClassInfo, "reborncore.common.blockentity.SlotConfiguration$SlotIO": Internal.ClassInfo, "net.minecraft.world.level.DataPackConfig": Internal.ClassInfo, "java.time.Month": Internal.ClassInfo, "org.joml.Vector4dc": Internal.ClassInfo, "net.minecraft.world.level.block.DropExperienceBlock": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundChunksBiomesPacket$ChunkBiomeData": Internal.ClassInfo, "java.net.ContentHandler": Internal.ClassInfo, "com.inventorypets.items.patreonHead": Internal.ClassInfo, "java.awt.event.ContainerListener": Internal.ClassInfo, "xfacthd.framedblocks.common.block.rail.FramedPoweredRailSlopeBlock": Internal.ClassInfo, "net.minecraft.world.level.chunk.PalettedContainer$Configuration": Internal.ClassInfo, "com.mna.api.particles.parameters.ParticleFloat": Internal.ClassInfo, "de.dafuqs.spectrum.entity.entity.SeatEntity": Internal.ClassInfo, "net.minecraft.world.level.block.SugarCaneBlock": Internal.ClassInfo, "cofh.core.common.item.IMultiModeItem": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.ui.Button": Internal.ClassInfo, "com.mna.effects.harmful.EffectManaBurn": Internal.ClassInfo, "de.dafuqs.spectrum.items.magic_items.GildedBookItem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blending.BlendingData": Internal.ClassInfo, "divinerpg.blocks.vanilla.BlockBoneChest": Internal.ClassInfo, "divinerpg.items.base.ItemMod": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.BlockPlacedEventJS": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.InfernalShield": Internal.ClassInfo, "java.util.function.BooleanSupplier": Internal.ClassInfo, "de.dafuqs.spectrum.mixin.client.accessors.ParticleManagerAccessor": Internal.ClassInfo, "com.mojang.authlib.minecraft.report.ReportedEntity": Internal.ClassInfo, "com.mna.effects.neutral.EffectColdDark": Internal.ClassInfo, "io.wispforest.owo.ui.util.CursorAdapter": Internal.ClassInfo, "com.yanny.ytech.configuration.block.TanningRackBlock": Internal.ClassInfo, "divinerpg.blocks.arcana.BlockHeatTrap": Internal.ClassInfo, "java.lang.Character": Internal.ClassInfo, "net.minecraft.client.gui.ComponentPath": Internal.ClassInfo, "net.minecraft.world.item.UseAnim": Internal.ClassInfo, "com.yogpc.qp.machines.ItemKey": Internal.ClassInfo, "net.minecraft.client.model.AgeableListModel": Internal.ClassInfo, "com.google.common.collect.BaseImmutableMultimap": Internal.ClassInfo, "appeng.blockentity.misc.CellWorkbenchBlockEntity": Internal.ClassInfo, "net.minecraftforge.client.event.RenderLivingEvent$Pre": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.callbacks.BlockStateRotateCallbackJS": Internal.ClassInfo, "elucent.eidolon.common.item.curio.MindShieldingPlateItem": Internal.ClassInfo, "divinerpg.blocks.base.BlockModInfiniFurnace": Internal.ClassInfo, "net.minecraft.client.renderer.texture.TextureAtlasSprite$Ticker": Internal.ClassInfo, "com.mojang.authlib.BaseAuthenticationService": Internal.ClassInfo, "net.minecraft.world.Nameable": Internal.ClassInfo, "com.kamth.zeldamod.item.armors.FireShield": Internal.ClassInfo, "net.minecraftforge.client.event.RegisterDimensionSpecialEffectsEvent": Internal.ClassInfo, "divinerpg.blocks.arcana.BlockDemonFurnace": Internal.ClassInfo, "dev.ftb.mods.ftbquests.block.entity.TaskScreenAuxBlockEntity": Internal.ClassInfo, "net.minecraft.world.item.enchantment.UntouchingEnchantment": Internal.ClassInfo, "vazkii.patchouli.client.book.AbstractReadStateHolder": Internal.ClassInfo, "io.netty.util.Constant": Internal.ClassInfo, "io.wispforest.accessories.api.AccessoriesCapability": Internal.ClassInfo, "com.probejs.jdoc.property.PropertyComment": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.integration.farmersdelight.ArcaneKnifeItem": Internal.ClassInfo, "de.dafuqs.spectrum.items.trinkets.AzureDikeAmuletItem": Internal.ClassInfo, "techreborn.items.tool.DrillItem": Internal.ClassInfo, "de.keksuccino.fancymenu.mixin.mixins.common.client.IMixinOptions": Internal.ClassInfo, "net.minecraft.world.level.block.WeatheringCopperSlabBlock": Internal.ClassInfo, "net.fabricmc.fabric.api.rendering.data.v1.RenderAttachmentBlockEntity": Internal.ClassInfo, "java.lang.invoke.TypeDescriptor$OfField": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.items.forge.ShulkerShellItem": Internal.ClassInfo, "net.minecraft.world.inventory.ItemCombinerMenuSlotDefinition": Internal.ClassInfo, "io.wispforest.owo.ui.core.Component$DismountReason": Internal.ClassInfo, "net.minecraftforge.fml.event.config.ModConfigEvent$Unloading": Internal.ClassInfo, "appeng.blockentity.grid.AENetworkPowerBlockEntity": Internal.ClassInfo, "net.minecraft.world.entity.ai.village.poi.PoiRecord": Internal.ClassInfo, "java.awt.AWTKeyStroke": Internal.ClassInfo, "com.almostreliable.lootjs.loot.LootFunctionsContainer": Internal.ClassInfo, "io.wispforest.accessories.client.gui.AbstractButtonExtension": Internal.ClassInfo, "cofh.lib.api.IDetonatable": Internal.ClassInfo, "com.mna.effects.beneficial.EffectWellspringSight": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.entity.movement_tracker.SectionedEntityMovementTracker": Internal.ClassInfo, "net.minecraft.core.BlockPos$MutableBlockPos": Internal.ClassInfo, "de.dafuqs.spectrum.items.magic_items.ampoules.MalachiteGlassAmpouleItem": Internal.ClassInfo, "dev.emi.trinkets.api.TrinketComponent": Internal.ClassInfo, "dev.latvian.mods.kubejs.misc.BasicMobEffect$Builder": Internal.ClassInfo, "dev.latvian.mods.unit.token.UnitToken": Internal.ClassInfo, "appeng.api.networking.crafting.ICraftingLink": Internal.ClassInfo, "com.mna.blocks.artifice.DisenchanterBlock": Internal.ClassInfo, "appeng.items.tools.quartz.QuartzCuttingKnifeItem": Internal.ClassInfo, "com.almostreliable.lootjs.kube.LootConditionsContainer": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.TheTwist": Internal.ClassInfo, "com.yogpc.qp.machines.advquarry.ItemAdvQuarry": Internal.ClassInfo, "net.minecraft.world.entity.projectile.ThrownTrident": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopepanelcorner.FramedExtendedCornerSlopePanelBlock": Internal.ClassInfo, "net.minecraft.world.item.enchantment.FireAspectEnchantment": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.idols.RandomTeleportingIdolBlock": Internal.ClassInfo, "com.enderio.base.common.enchantment.XPBoostEnchantment": Internal.ClassInfo, "com.mojang.blaze3d.platform.NativeImage$Format": Internal.ClassInfo, "net.minecraft.client.renderer.block.model.BlockElementRotation": Internal.ClassInfo, "io.netty.channel.Channel": Internal.ClassInfo, "xfacthd.framedblocks.api.block.cache.StateCache": Internal.ClassInfo, "com.yogpc.qp.machines.filler.FillerBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.AbstractObject2ObjectSortedMap": Internal.ClassInfo, "net.minecraft.world.item.enchantment.OxygenEnchantment": Internal.ClassInfo, "net.minecraft.world.level.chunk.ChunkStatus": Internal.ClassInfo, "com.lowdragmc.lowdraglib.networking.PacketIntLocation": Internal.ClassInfo, "org.orecruncher.dsurround.mixinutils.ISoundEngine": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.SensorBaseBlock": Internal.ClassInfo, "cofh.core.common.item.FluidContainerItem": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.boom.ModularExplosionBlockItem": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.items.AbstractMobContainerItem": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.ValidationContext": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.treedecorators.CocoaDecorator": Internal.ClassInfo, "java.net.SocketAddress": Internal.ClassInfo, "mods.railcraft.api.charge.ChargeBlock": Internal.ClassInfo, "net.minecraftforge.fluids.capability.templates.FluidTank": Internal.ClassInfo, "org.embeddedt.embeddium.api.OptionPageConstructionEvent": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.ComparatorMode": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.energy.ColorPickerBlock": Internal.ClassInfo, "divinerpg.effect.mob.armor.base.PreventFallDamageEffect": Internal.ClassInfo, "net.minecraft.server.packs.VanillaPackResources": Internal.ClassInfo, "net.minecraft.world.item.EndCrystalItem": Internal.ClassInfo, "com.mna.api.spells.targeting.SpellSource": Internal.ClassInfo, "com.mna.api.spells.targeting.SpellContext": Internal.ClassInfo, "elucent.eidolon.common.block.GhostLight": Internal.ClassInfo, "xfacthd.framedblocks.common.blockentity.special.FramedSignBlockEntity": Internal.ClassInfo, "net.minecraft.world.level.chunk.ImposterProtoChunk": Internal.ClassInfo, "net.minecraft.world.effect.AbsoptionMobEffect": Internal.ClassInfo, "net.fabricmc.fabric.api.block.v1.FabricBlockState": Internal.ClassInfo, "net.minecraft.world.level.block.state.StateDefinition": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundStopSoundPacket": Internal.ClassInfo, "net.minecraft.client.renderer.chunk.ChunkRenderDispatcher$CompiledChunk": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.item.WoodBasedBlockItem": Internal.ClassInfo, "biomesoplenty.common.block.GlowwormSilkBlock": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.entity.FluidCachingEntity": Internal.ClassInfo, "divinerpg.blocks.iceika.BlockBrittleGrass": Internal.ClassInfo, "net.minecraft.world.level.block.PowderSnowCauldronBlock": Internal.ClassInfo, "net.minecraft.util.valueproviders.ClampedNormalInt": Internal.ClassInfo, "java.net.InetSocketAddress": Internal.ClassInfo, "com.gregtechceu.gtceu.api.gui.editor.IEditableUI": Internal.ClassInfo, "net.minecraft.world.level.levelgen.DensityFunctions$BeardifierOrMarker": Internal.ClassInfo, "net.minecraft.world.level.block.Blocks": Internal.ClassInfo, "divinerpg.items.arcana.ItemCaptainsSparkler": Internal.ClassInfo, "net.minecraft.world.entity.animal.IronGolem": Internal.ClassInfo, "org.violetmoon.zeta.item.ZetaItem": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundPlayerInfoUpdatePacket$Action$Reader": Internal.ClassInfo, "net.minecraft.server.packs.PackResources$ResourceOutput": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.EnchantmentTransposer": Internal.ClassInfo, "com.mna.entities.boss.attacks.ThrownWeapon": Internal.ClassInfo, "com.tterrag.registrate.util.entry.RegistryEntry": Internal.ClassInfo, "java.lang.invoke.VarHandle$AccessMode": Internal.ClassInfo, "net.minecraft.world.level.block.MyceliumBlock": Internal.ClassInfo, "pokefenn.totemic.block.TotemTorchBlock": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.providers.score.LootScoreProviderType": Internal.ClassInfo, "net.minecraft.world.entity.animal.horse.AbstractChestedHorse": Internal.ClassInfo, "com.mna.blocks.sorcery.IllusionBlock": Internal.ClassInfo, "net.minecraft.server.packs.resources.ResourceMetadata": Internal.ClassInfo, "java.awt.image.DataBuffer": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.Double2ShortFunction": Internal.ClassInfo, "com.mna.api.blocks.tile.MultiblockTile": Internal.ClassInfo, "com.mojang.datafixers.View": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingEquipmentChangeEvent": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.WaterloggedVegetationPatchFeature": Internal.ClassInfo, "com.mojang.blaze3d.audio.Library$Pool": Internal.ClassInfo, "com.mna.items.runes.ItemRunePattern": Internal.ClassInfo, "net.minecraftforge.registries.IForgeRegistry$MissingFactory": Internal.ClassInfo, "org.apache.logging.log4j.message.ExitMessage": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.idols.InsomniaIdolBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.BlockItemBuilder": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.LongIterator": Internal.ClassInfo, "com.lowdragmc.lowdraglib.syncdata.payload.ITypedPayload": Internal.ClassInfo, "com.mna.api.spells.ComponentApplicationResult": Internal.ClassInfo, "org.apache.logging.log4j.spi.LocationAwareLogger": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.crystallarieum.CrystallarieumGrowableBlock": Internal.ClassInfo, "appeng.items.tools.powered.WirelessTerminalItem$LinkableHandler": Internal.ClassInfo, "net.minecraftforge.event.level.ChunkWatchEvent": Internal.ClassInfo, "net.minecraft.advancements.Advancement": Internal.ClassInfo, "net.fabricmc.fabric.api.blockview.v2.RenderDataBlockEntity": Internal.ClassInfo, "top.theillusivec4.curios.mixin.core.AccessorEntity": Internal.ClassInfo, "net.minecraft.commands.arguments.selector.EntitySelector": Internal.ClassInfo, "java.security.PermissionCollection": Internal.ClassInfo, "org.apache.logging.log4j.message.EntryMessage": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.api.items.IBindable": Internal.ClassInfo, "java.util.stream.LongStream$Builder": Internal.ClassInfo, "net.minecraft.world.entity.animal.Pufferfish": Internal.ClassInfo, "com.tterrag.registrate.util.nullness.NonNullBiFunction": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.DetectorBlockEventJS": Internal.ClassInfo, "net.minecraft.world.level.block.DirtPathBlock": Internal.ClassInfo, "net.minecraft.world.level.biome.Climate$TargetPoint": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.texture.ProgressTexture$FillDirection": Internal.ClassInfo, "com.gregtechceu.gtceu.data.recipe.builder.GTRecipeBuilder": Internal.ClassInfo, "it.unimi.dsi.fastutil.bytes.Byte2FloatFunction": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.lava_sponge.WetLavaSpongeItem": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.dd_deco.CrackedDragonboneBlock": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.providers.number.LootNumberProviderType": Internal.ClassInfo, "xfacthd.atlasviewer.client.mixin.MixinSpriteSource": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.FilterConfigurable": Internal.ClassInfo, "java.lang.ThreadGroup": Internal.ClassInfo, "com.mna.effects.beneficial.EffectWaterWalking": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.worldgen.generator.VeinGenerator": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.EnigmaticAmulet$AmuletColor": Internal.ClassInfo, "de.dafuqs.spectrum.items.food.beverages.VariantBeverageItem": Internal.ClassInfo, "net.minecraft.world.level.block.entity.BannerBlockEntity": Internal.ClassInfo, "net.minecraft.client.gui.spectator.SpectatorMenuItem": Internal.ClassInfo, "java.time.temporal.ValueRange": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.RootSystemConfiguration": Internal.ClassInfo, "java.awt.event.MouseWheelEvent": Internal.ClassInfo, "com.tterrag.registrate.providers.loot.RegistrateEntityLootTables": Internal.ClassInfo, "net.minecraftforge.event.entity.EntityTeleportEvent$EnderEntity": Internal.ClassInfo, "com.mojang.datafixers.types.families.Algebra": Internal.ClassInfo, "net.minecraftforge.client.extensions.IForgeVertexConsumer": Internal.ClassInfo, "java.awt.GraphicsConfiguration": Internal.ClassInfo, "net.minecraft.client.model.ShieldModel": Internal.ClassInfo, "dev.latvian.mods.kubejs.fluid.FlowingFluidBuilder": Internal.ClassInfo, "net.minecraft.world.item.FlintAndSteelItem": Internal.ClassInfo, "de.dafuqs.reverb.access.SoundSystemAccess": Internal.ClassInfo, "java.util.function.ObjDoubleConsumer": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.ComponentKJS": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeBoat": Internal.ClassInfo, "elucent.eidolon.client.particle.WispParticleType": Internal.ClassInfo, "java.util.Spliterator$OfInt": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2ReferenceFunction": Internal.ClassInfo, "xfacthd.framedblocks.common.util.DoubleBlockSoundType": Internal.ClassInfo, "de.dafuqs.spectrum.items.food.beverages.JadeWineItem": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.entity.ImprovedProjectileEntity": Internal.ClassInfo, "net.minecraft.client.gui.components.BossHealthOverlay": Internal.ClassInfo, "com.google.common.base.Predicate": Internal.ClassInfo, "org.violetmoon.zeta.event.bus.IZetaLoadEvent": Internal.ClassInfo, "io.wispforest.accessories.api.AccessoriesHolder": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.NumberComponent$FloatRange": Internal.ClassInfo, "net.minecraft.world.level.block.NyliumBlock": Internal.ClassInfo, "com.mojang.authlib.yggdrasil.response.KeyPairResponse": Internal.ClassInfo, "net.minecraft.world.entity.animal.TropicalFish$Variant": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundContainerSetSlotPacket": Internal.ClassInfo, "sun.nio.fs.UnixFileSystem": Internal.ClassInfo, "net.minecraft.CrashReportCategory": Internal.ClassInfo, "net.minecraft.world.level.biome.Biome": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.StructurePlaceSettings": Internal.ClassInfo, "com.mna.enchantments.TransitoryStep": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopepanelcorner.FramedSmallDoubleCornerSlopePanelBlock": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.events.forge.VillagerBrainEvent": Internal.ClassInfo, "dev.ftb.mods.ftbquests.item.LootCrateItem": Internal.ClassInfo, "net.minecraftforge.fml.event.lifecycle.ParallelDispatchEvent": Internal.ClassInfo, "de.dafuqs.spectrum.status_effects.SpectrumStatusEffect": Internal.ClassInfo, "appeng.crafting.CraftingLinkNexus": Internal.ClassInfo, "net.minecraft.world.scores.ScoreboardSaveData": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.RandomBlockStateMatchTest": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.client.particle.WispParticleType": Internal.ClassInfo, "com.google.common.collect.ImmutableMultimap": Internal.ClassInfo, "com.lowdragmc.lowdraglib.client.scene.ParticleManager": Internal.ClassInfo, "java.util.function.IntFunction": Internal.ClassInfo, "snownee.kiwi.mixin.ShapedRecipeAccess": Internal.ClassInfo, "net.minecraft.advancements.AdvancementRewards": Internal.ClassInfo, "net.irisshaders.batchedentityrendering.mixin.CompositeStateAccessor": Internal.ClassInfo, "com.mojang.serialization.codecs.PrimitiveCodec": Internal.ClassInfo, "net.minecraft.world.inventory.HopperMenu": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.chests.SpectrumChestBlock": Internal.ClassInfo, "appeng.api.networking.IManagedGridNode": Internal.ClassInfo, "net.minecraft.client.renderer.chunk.ChunkRenderDispatcher$RenderChunk$RebuildTask$CompileResults": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.blocks.BlockAstralDust": Internal.ClassInfo, "org.violetmoon.quark.content.world.item.AncientFruitItem": Internal.ClassInfo, "de.dafuqs.spectrum.mixin.accessors.RecipeManagerAccessor": Internal.ClassInfo, "org.apache.logging.log4j.core.util.WatchManager": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.schema.RecipeConstructor$Factory": Internal.ClassInfo, "com.kamth.zeldamod.item.items.MilkHalfItem": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.EnigmaticElytra": Internal.ClassInfo, "com.mna.effects.beneficial.EffectPossession": Internal.ClassInfo, "dev.ftb.mods.ftbquests.quest.reward.RewardClaimType": Internal.ClassInfo, "com.mna.api.spells.SpellCraftingContext": Internal.ClassInfo, "dev.architectury.event.events.client.ClientCommandRegistrationEvent$ClientCommandSourceStack": Internal.ClassInfo, "com.gregtechceu.gtceu.api.machine.MachineCoverContainer": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingDeathEvent": Internal.ClassInfo, "net.minecraft.server.level.TickingTracker": Internal.ClassInfo, "com.kamth.zeldamod.item.items.SandWandItem": Internal.ClassInfo, "xaero.map.pool.MapPool": Internal.ClassInfo, "elucent.eidolon.client.particle.BubbleParticleType": Internal.ClassInfo, "elucent.eidolon.common.item.BonechillWandItem": Internal.ClassInfo, "com.gregtechceu.gtceu.api.pipenet.longdistance.ILDEndpoint": Internal.ClassInfo, "java.awt.GraphicsConfigTemplate": Internal.ClassInfo, "net.minecraft.nbt.LongArrayTag": Internal.ClassInfo, "com.kamth.zeldamod.block.custom.CopperPegBlock": Internal.ClassInfo, "net.minecraft.client.telemetry.TelemetryPropertyMap": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.arcane.ArcaneAxeItem": Internal.ClassInfo, "net.minecraftforge.event.entity.player.AdvancementEvent$AdvancementEarnEvent": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundAcceptTeleportationPacket": Internal.ClassInfo, "net.minecraft.network.protocol.BundlerInfo$Bundler": Internal.ClassInfo, "pokefenn.totemic.item.CeremonyCheatItem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.StructureProcessorList": Internal.ClassInfo, "biomesoplenty.common.block.CloverBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.custom.SmithingTemplateItemBuilder": Internal.ClassInfo, "net.minecraft.core.HolderOwner": Internal.ClassInfo, "net.minecraft.world.level.block.state.pattern.BlockInWorld": Internal.ClassInfo, "xaero.map.effects.NoWorldMapEffect": Internal.ClassInfo, "divinerpg.items.vethea.ItemEvernight": Internal.ClassInfo, "xfacthd.framedblocks.common.block.torch.FramedSoulWallTorchBlock": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.arcanewood.ArcaneWoodAxeItem": Internal.ClassInfo, "cofh.lib.api.item.IInventoryContainerItem": Internal.ClassInfo, "net.minecraft.world.item.BannerPatternItem": Internal.ClassInfo, "net.minecraft.client.gui.components.SplashRenderer": Internal.ClassInfo, "appeng.util.LookDirection": Internal.ClassInfo, "net.minecraftforge.client.event.ContainerScreenEvent$Render": Internal.ClassInfo, "net.minecraft.world.entity.animal.Pig": Internal.ClassInfo, "mcp.mobius.waila.mixin.RandomizableContainerBlockEntityAccess": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.ui.WidgetLayout$Horizontal": Internal.ClassInfo, "java.util.TimeZone": Internal.ClassInfo, "java.util.Collection": Internal.ClassInfo, "net.minecraft.network.chat.MessageSignature": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundSetCommandBlockPacket": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.Long2DoubleFunction": Internal.ClassInfo, "io.netty.channel.nio.NioEventLoopGroup": Internal.ClassInfo, "io.netty.buffer.PoolArenaMetric": Internal.ClassInfo, "net.minecraft.world.entity.player.Player": Internal.ClassInfo, "com.gregtechceu.gtceu.api.item.DuctPipeBlockItem": Internal.ClassInfo, "net.fabricmc.fabric.api.client.screen.v1.ScreenKeyboardEvents$BeforeKeyPress": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Reference2DoubleFunction": Internal.ClassInfo, "net.minecraft.commands.Commands$CommandSelection": Internal.ClassInfo, "net.fabricmc.fabric.api.item.v1.FabricItem": Internal.ClassInfo, "com.kamth.zeldamod.item.items.BlueRingItem": Internal.ClassInfo, "java.util.Queue": Internal.ClassInfo, "xaero.map.region.Overlay": Internal.ClassInfo, "net.minecraft.server.RegistryLayer": Internal.ClassInfo, "mods.railcraft.world.level.block.RitualBlock": Internal.ClassInfo, "net.minecraft.world.item.enchantment.TridentRiptideEnchantment": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.Int2IntMap": Internal.ClassInfo, "techreborn.blocks.misc.RubberPressurePlateBlock": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenshotEvent": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.SimpleRandomSelectorFeature": Internal.ClassInfo, "io.wispforest.owo.mixin.offline.AdvancementProgressAccessor": Internal.ClassInfo, "net.minecraft.world.level.EntityGetter": Internal.ClassInfo, "com.electronwill.nightconfig.core.file.CommentedFileConfig": Internal.ClassInfo, "org.w3c.dom.Attr": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.TreeFeature": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundResourcePackPacket": Internal.ClassInfo, "xfacthd.framedblocks.common.block.pane.FramedCornerStripBlock": Internal.ClassInfo, "net.minecraft.world.item.CreativeModeTab$Builder": Internal.ClassInfo, "com.yogpc.qp.machines.module.QuarryModuleProvider$Item": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.RecipeSchemaRegistryEventJS": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.ArcaneWandItem": Internal.ClassInfo, "net.minecraft.world.level.material.PushReaction": Internal.ClassInfo, "net.minecraft.server.level.ChunkTaskPriorityQueueSorter$Message": Internal.ClassInfo, "appeng.blockentity.crafting.CraftingMonitorBlockEntity": Internal.ClassInfo, "de.dafuqs.spectrum.items.CatkinItem": Internal.ClassInfo, "software.bernie.geckolib.core.animatable.instance.AnimatableInstanceCache": Internal.ClassInfo, "net.minecraft.world.entity.decoration.ArmorStand": Internal.ClassInfo, "net.minecraft.world.entity.npc.VillagerType": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.parameters.LootContextParamSet": Internal.ClassInfo, "net.minecraft.world.level.lighting.DynamicGraphMinFixedPoint": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.curio.WissenRingItem": Internal.ClassInfo, "cofh.core.common.effect.ChilledMobEffect": Internal.ClassInfo, "net.minecraft.world.entity.animal.FrogVariant": Internal.ClassInfo, "net.minecraft.ReportedException": Internal.ClassInfo, "net.minecraft.world.item.crafting.CraftingRecipe": Internal.ClassInfo, "net.minecraft.world.level.block.BaseCoralWallFanBlock": Internal.ClassInfo, "net.minecraft.client.renderer.Rect2i": Internal.ClassInfo, "net.irisshaders.iris.mixin.texture.SpriteContentsAnimatedTextureAccessor": Internal.ClassInfo, "com.yogpc.qp.machines.module.QuarryModuleProvider$Block": Internal.ClassInfo, "biomesoplenty.common.block.HairBlock": Internal.ClassInfo, "com.inventorypets.items.holidayCookie": Internal.ClassInfo, "net.minecraftforge.client.event.RegisterShadersEvent": Internal.ClassInfo, "com.yanny.ytech.configuration.MaterialType": Internal.ClassInfo, "net.minecraft.client.renderer.DimensionSpecialEffects": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.items.CandyItem": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerEvent$PlayerChangedDimensionEvent": Internal.ClassInfo, "dev.latvian.mods.rhino.util.ValueUnwrapper": Internal.ClassInfo, "net.minecraft.world.item.MinecartItem": Internal.ClassInfo, "it.unimi.dsi.fastutil.booleans.Boolean2FloatFunction": Internal.ClassInfo, "elucent.eidolon.common.item.curio.EnervatingRingItem": Internal.ClassInfo, "net.akoto090.nothingcore.entity.custom.PlateBlock": Internal.ClassInfo, "dev.latvian.mods.unit.function.FunctionFactory$Arg3": Internal.ClassInfo, "net.minecraft.client.multiplayer.ClientAdvancements": Internal.ClassInfo, "net.minecraft.network.protocol.status.ServerStatus$Favicon": Internal.ClassInfo, "net.minecraftforge.event.furnace.FurnaceFuelBurnTimeEvent": Internal.ClassInfo, "net.mehvahdjukaar.amendments.common.block.WallLanternBlock": Internal.ClassInfo, "com.yogpc.qp.machines.module.FilterModuleItem": Internal.ClassInfo, "com.tterrag.registrate.builders.ItemBuilder": Internal.ClassInfo, "java.net.InetAddress": Internal.ClassInfo, "com.google.common.collect.RegularImmutableList": Internal.ClassInfo, "appeng.blockentity.spatial.SpatialIOPortBlockEntity": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.Short2BooleanFunction": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.AscensionAmulet": Internal.ClassInfo, "io.wispforest.owo.ui.core.Positioning$Type": Internal.ClassInfo, "dev.ftb.mods.ftbteams.api.property.TeamProperty": Internal.ClassInfo, "de.dafuqs.spectrum.items.conditional.FourLeafCloverItem": Internal.ClassInfo, "net.minecraftforge.fml.config.IConfigEvent": Internal.ClassInfo, "com.mna.items.artifice.charms.ItemCancelFatalFallCharm": Internal.ClassInfo, "org.apache.maven.artifact.metadata.ArtifactMetadata": Internal.ClassInfo, "java.awt.dnd.DropTargetDropEvent": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.FluidStorageBaseItem": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.effects.BlazingStrengthEffect": Internal.ClassInfo, "dev.latvian.mods.unit.function.FunctionFactory$Arg1": Internal.ClassInfo, "dev.latvian.mods.unit.function.FunctionFactory$Arg2": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.fluids.SoftFluid$Builder": Internal.ClassInfo, "de.dafuqs.spectrum.items.armor.BedrockArmorItem": Internal.ClassInfo, "mezz.jei.api.gui.builder.IIngredientAcceptor": Internal.ClassInfo, "dev.shwg.smoothswapping.mixin.SimpleInventoryAccessor": Internal.ClassInfo, "net.minecraft.world.level.block.SculkBehaviour": Internal.ClassInfo, "net.minecraft.world.inventory.BeaconMenu": Internal.ClassInfo, "java.awt.font.LineMetrics": Internal.ClassInfo, "xaero.map.graphics.renderer.multitexture.MultiTextureRenderTypeRenderer": Internal.ClassInfo, "java.io.FilterOutputStream": Internal.ClassInfo, "divinerpg.items.vethea.ItemVethean": Internal.ClassInfo, "com.mna.items.manaweaving.ItemManaweavingPattern": Internal.ClassInfo, "com.inventorypets.pets.petGhast": Internal.ClassInfo, "org.violetmoon.quark.api.event.UsageTickerEvent": Internal.ClassInfo, "net.minecraft.client.gui.spectator.SpectatorMenu": Internal.ClassInfo, "snownee.lychee.core.input.ItemHolderCollection$InWorld": Internal.ClassInfo, "com.mna.items.constructs.parts.torso.ConstructPartManaTorso": Internal.ClassInfo, "org.joml.Vector3dc": Internal.ClassInfo, "appeng.blockentity.storage.DriveBlockEntity": Internal.ClassInfo, "net.minecraft.world.item.crafting.BannerDuplicateRecipe": Internal.ClassInfo, "net.minecraft.world.level.biome.MobSpawnSettings$Builder": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.gui.options.OptionImpact": Internal.ClassInfo, "com.gregtechceu.gtceu.api.recipe.content.ContentModifier": Internal.ClassInfo, "com.inventorypets.worldgen.NetherDungeonStructure": Internal.ClassInfo, "net.minecraftforge.client.model.generators.ModelFile": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.RecipeComponentBuilderMap": Internal.ClassInfo, "net.minecraft.world.level.biome.BiomeResolver": Internal.ClassInfo, "com.google.common.collect.ImmutableSet$Builder": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.item.BlockTypeBasedItem": Internal.ClassInfo, "io.netty.util.concurrent.ProgressiveFuture": Internal.ClassInfo, "appeng.decorative.solid.QuartzGlassBlock": Internal.ClassInfo, "com.inventorypets.blocks.cloudBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.registry.RegistryCallback": Internal.ClassInfo, "com.mna.blocks.artifice.ArcanaAltarBlock": Internal.ClassInfo, "net.minecraftforge.client.event.CustomizeGuiOverlayEvent$DebugText": Internal.ClassInfo, "java.awt.BufferCapabilities": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.items.BubbleBlockItem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.HugeFungusFeature": Internal.ClassInfo, "com.google.common.reflect.TypeToken$TypeSet": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.MendingMixture": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.VillagerHostilesSensor": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.farming.ExtraTickFarmlandBlock": Internal.ClassInfo, "java.io.DataOutput": Internal.ClassInfo, "net.minecraft.world.entity.monster.Illusioner": Internal.ClassInfo, "net.minecraft.world.scores.PlayerTeam": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.ChorusPlantFeature": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.conditional.colored_tree.ColoredLogBlock": Internal.ClassInfo, "de.dafuqs.spectrum.energy.InkPoweredStatusEffectInstance": Internal.ClassInfo, "net.fabricmc.fabric.api.renderer.v1.mesh.QuadView": Internal.ClassInfo, "vectorwing.farmersdelight.common.item.RiceItem": Internal.ClassInfo, "java.awt.PageAttributes$MediaType": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.BlockAgeProcessor": Internal.ClassInfo, "com.mojang.datafixers.util.Pair": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.material.properties.BlastProperty$GasTier": Internal.ClassInfo, "com.kamth.zeldamod.item.masks.MajoraMask": Internal.ClassInfo, "net.minecraft.world.entity.ai.village.poi.PoiManager$Occupancy": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.DripstoneClusterFeature": Internal.ClassInfo, "dev.architectury.hooks.level.biome.SpawnProperties": Internal.ClassInfo, "org.joml.Vector3fc": Internal.ClassInfo, "net.minecraft.world.item.enchantment.SweepingEdgeEnchantment": Internal.ClassInfo, "net.minecraftforge.event.entity.living.MobEffectEvent": Internal.ClassInfo, "net.minecraft.world.level.block.PowderSnowBlock": Internal.ClassInfo, "mods.railcraft.world.level.block.charge.BatteryBlock": Internal.ClassInfo, "com.mna.effects.beneficial.EffectTrueInvisibility": Internal.ClassInfo, "net.minecraft.world.level.block.WetSpongeBlock": Internal.ClassInfo, "net.minecraft.world.inventory.CraftingMenu": Internal.ClassInfo, "org.apache.logging.log4j.core.config.LoggerConfig": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.redstone.RedstoneCalculatorBlock$CalculationMode": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.tag.TagPrefix": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.CountConfiguration": Internal.ClassInfo, "net.minecraftforge.client.model.generators.MultiPartBlockStateBuilder": Internal.ClassInfo, "net.minecraft.util.random.WeightedEntry$IntrusiveBase": Internal.ClassInfo, "com.enderio.base.common.event.EIOChestLootEvent": Internal.ClassInfo, "de.dafuqs.spectrum.items.MysteriousLocketItem": Internal.ClassInfo, "net.minecraft.nbt.StringTag": Internal.ClassInfo, "net.minecraft.client.gui.components.events.AbstractContainerEventHandler": Internal.ClassInfo, "com.kamth.zeldamod.item.armors.PegasusBoots": Internal.ClassInfo, "com.mna.blocks.ritual.ChimeriteCrystalBlock": Internal.ClassInfo, "com.mna.blocks.decoration.SimpleRotationalBlock": Internal.ClassInfo, "net.minecraft.world.entity.animal.allay.Allay": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slope.FramedPrismCornerBlock": Internal.ClassInfo, "snownee.lychee.core.LycheeContext": Internal.ClassInfo, "org.w3c.dom.EntityReference": Internal.ClassInfo, "dev.architectury.registry.level.biome.BiomeModifications$BiomeContext": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundChatSessionUpdatePacket": Internal.ClassInfo, "net.minecraftforge.client.event.RenderLevelStageEvent": Internal.ClassInfo, "net.minecraft.client.DebugQueryHandler": Internal.ClassInfo, "net.minecraft.world.item.crafting.FireworkStarFadeRecipe": Internal.ClassInfo, "net.minecraftforge.forgespi.language.IModLanguageProvider$IModLanguageLoader": Internal.ClassInfo, "com.gregtechceu.gtceu.api.block.MaterialPipeBlock": Internal.ClassInfo, "net.minecraft.world.inventory.DataSlot": Internal.ClassInfo, "net.minecraft.world.item.crafting.SuspiciousStewRecipe": Internal.ClassInfo, "dev.latvian.mods.kubejs.typings.desc.ObjectDescJS$Entry": Internal.ClassInfo, "net.minecraft.world.level.levelgen.SurfaceRules$Condition": Internal.ClassInfo, "de.dafuqs.spectrum.energy.InkStorageItem$Drainability": Internal.ClassInfo, "com.mna.effects.beneficial.EffectPilgrim": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.PointedDripstoneConfiguration": Internal.ClassInfo, "appeng.api.networking.crafting.ICraftingSubmitResult": Internal.ClassInfo, "software.bernie.geckolib.animatable.SingletonGeoAnimatable": Internal.ClassInfo, "divinerpg.blocks.base.BlockModGlass": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerXpEvent$PickupXp": Internal.ClassInfo, "appeng.blockentity.spatial.SpatialPylonBlockEntity$ClientState": Internal.ClassInfo, "net.minecraft.network.syncher.EntityDataSerializer$1": Internal.ClassInfo, "net.minecraft.world.level.redstone.NeighborUpdater": Internal.ClassInfo, "mods.railcraft.api.item.SpikeMaulTarget": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.EndAnchor": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopepanel.FramedFlatExtendedDoubleSlopePanelCornerBlock": Internal.ClassInfo, "net.minecraft.world.level.pathfinder.PathComputationType": Internal.ClassInfo, "appeng.block.spatial.SpatialPylonBlock": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.redstone.RedstoneGravityBlock": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.items.SafeItem": Internal.ClassInfo, "net.minecraft.world.entity.monster.AbstractIllager$IllagerArmPose": Internal.ClassInfo, "io.netty.util.concurrent.MultithreadEventExecutorGroup": Internal.ClassInfo, "com.almostreliable.lootjs.loot.AddAttributesFunction$Modifier$Builder": Internal.ClassInfo, "org.violetmoon.zeta.util.ZetaEffect": Internal.ClassInfo, "com.inventorypets.pets.petChicken": Internal.ClassInfo, "net.minecraft.tags.TagBuilder": Internal.ClassInfo, "com.mna.items.artifice.ItemPilgrimStaff": Internal.ClassInfo, "mezz.jei.api.runtime.IJeiRuntime": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeItem": Internal.ClassInfo, "de.dafuqs.spectrum.enchantments.SpectrumEnchantment": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.StairsShape": Internal.ClassInfo, "net.minecraft.client.renderer.RenderStateShard$TexturingStateShard": Internal.ClassInfo, "net.minecraft.world.item.ArmorMaterial": Internal.ClassInfo, "org.joml.Vector3ic": Internal.ClassInfo, "net.minecraft.client.Minecraft": Internal.ClassInfo, "appeng.helpers.IConfigInvHost": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.custom.MultipartShapedBlockBuilder": Internal.ClassInfo, "com.kamth.zeldamod.item.items.WaterBombItem": Internal.ClassInfo, "net.minecraft.client.telemetry.TelemetryEventType$Builder": Internal.ClassInfo, "org.violetmoon.zeta.registry.CraftingExtensionsRegistry": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.painter.Painter": Internal.ClassInfo, "org.embeddedt.embeddium.api.eventbus.EventHandlerRegistrar": Internal.ClassInfo, "pokefenn.totemic.block.TipiBlock": Internal.ClassInfo, "divinerpg.blocks.vethea.BlockKarosAltar": Internal.ClassInfo, "net.fabricmc.fabric.mixin.client.rendering.DimensionEffectsAccessor": Internal.ClassInfo, "com.inventorypets.items.nuggetEmerald": Internal.ClassInfo, "appeng.api.networking.crafting.ICraftingSimulationRequester": Internal.ClassInfo, "mezz.jei.api.helpers.IModIdHelper": Internal.ClassInfo, "dev.latvian.mods.kubejs.entity.LivingEntityDeathEventJS": Internal.ClassInfo, "com.gregtechceu.gtceu.common.block.CableBlock": Internal.ClassInfo, "mezz.jei.api.gui.ingredient.IRecipeSlotTooltipCallback": Internal.ClassInfo, "com.mojang.blaze3d.audio.Channel": Internal.ClassInfo, "net.minecraft.world.level.biome.Climate$RTree": Internal.ClassInfo, "reborncore.common.fluid.RebornFluidBlock": Internal.ClassInfo, "org.violetmoon.quark.content.mobs.item.DiamondHeartItem": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.Element": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerEvent$SaveToFile": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.chests.RestockingChestBlock": Internal.ClassInfo, "io.wispforest.accessories.mixin.client.ModelPartAccessor": Internal.ClassInfo, "software.bernie.geckolib.network.SerializableDataTicket": Internal.ClassInfo, "net.minecraftforge.forgespi.locating.IModFile": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2CharFunction": Internal.ClassInfo, "appeng.items.parts.ColoredPartItem": Internal.ClassInfo, "com.mna.items.sorcery.bound.ItemBoundBow": Internal.ClassInfo, "com.enderio.base.common.item.tool.LevitationStaffItem": Internal.ClassInfo, "mods.railcraft.world.level.block.signal.DistantSignalBlock": Internal.ClassInfo, "de.dafuqs.spectrum.explosion.ExplosionModifierType": Internal.ClassInfo, "net.minecraft.world.level.levelgen.SurfaceRules$Context": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.modular.IUIHolder": Internal.ClassInfo, "java.util.ImmutableCollections$AbstractImmutableMap": Internal.ClassInfo, "net.minecraft.world.level.chunk.PalettedContainerRO$PackedData": Internal.ClassInfo, "net.minecraft.world.inventory.ItemCombinerMenuSlotDefinition$SlotDefinition": Internal.ClassInfo, "net.minecraft.world.entity.monster.Zombie": Internal.ClassInfo, "net.minecraft.world.level.block.LadderBlock": Internal.ClassInfo, "dev.latvian.mods.rhino.ConstProperties": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slab.FramedMasonryCornerSegmentBlock": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.structure.StatueBlock": Internal.ClassInfo, "techreborn.blocks.machine.tier0.IronFurnaceBlock": Internal.ClassInfo, "net.minecraftforge.client.extensions.IForgePoseStack": Internal.ClassInfo, "appeng.block.networking.CableBusBlock": Internal.ClassInfo, "net.minecraft.world.item.enchantment.Enchantment$Rarity": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.potion_workshop.PotionWorkshopBlock": Internal.ClassInfo, "com.mna.items.base.IHellfireItem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.VerticalAnchor$BelowTop": Internal.ClassInfo, "cc.abbie.emi_ores.mixin.accessor.UniformHeightAccessor": Internal.ClassInfo, "xfacthd.framedblocks.common.block.cube.FramedMiniCubeBlock": Internal.ClassInfo, "com.google.gson.internal.Excluder": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.world.interests.RegionBasedStorageSectionExtended": Internal.ClassInfo, "com.kamth.zeldamod.item.masks.GoronMask": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.GolemHeart": Internal.ClassInfo, "com.aizistral.nochatreports.common.core.ServerDataExtension": Internal.ClassInfo, "net.minecraft.client.renderer.texture.atlas.SpriteSource$SpriteSupplier": Internal.ClassInfo, "net.minecraft.world.entity.animal.horse.Markings": Internal.ClassInfo, "elucent.eidolon.common.block.PillarBlockBase": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.animation.Animation": Internal.ClassInfo, "xfacthd.framedblocks.api.block.cache.IStateCacheAccessor": Internal.ClassInfo, "net.minecraft.world.level.levelgen.synth.NormalNoise$NoiseParameters": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.integration.farmersdelight.InnocentWoodKnifeItem": Internal.ClassInfo, "net.minecraft.core.HolderGetter": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.entity.IExtraClientSpawnData": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.DoublePredicate": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.texture.TransformTexture": Internal.ClassInfo, "vectorwing.farmersdelight.common.item.ConsumableItem": Internal.ClassInfo, "com.gregtechceu.gtceu.api.pipenet.longdistance.ILDNetworkPart": Internal.ClassInfo, "org.violetmoon.zeta.config.type.EntitySpawnConfig": Internal.ClassInfo, "com.mna.items.ritual.ItemPractitionersPatch": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.WissenCrystallizerBlock": Internal.ClassInfo, "appeng.util.IConfigManagerListener": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.DummySensor": Internal.ClassInfo, "net.minecraft.client.multiplayer.ServerData": Internal.ClassInfo, "net.minecraft.world.food.FoodProperties": Internal.ClassInfo, "reborncore.common.blockentity.FluidConfiguration$FluidConfig": Internal.ClassInfo, "appeng.items.parts.FacadeItem": Internal.ClassInfo, "net.minecraft.world.level.block.CauldronBlock": Internal.ClassInfo, "net.minecraft.network.chat.ChatType$Bound": Internal.ClassInfo, "java.util.function.ToIntFunction": Internal.ClassInfo, "com.mojang.blaze3d.shaders.BlendMode": Internal.ClassInfo, "org.orecruncher.dsurround.effects.entity.EntityEffectInfo": Internal.ClassInfo, "dev.ftb.mods.ftbquests.quest.loot.RewardTable": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.material.IMaterialRegistryManager": Internal.ClassInfo, "com.gregtechceu.gtceu.core.mixins.ae2.GenericStackInvAccessor": Internal.ClassInfo, "net.minecraft.client.gui.components.LerpingBossEvent": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.Short2ObjectMap": Internal.ClassInfo, "appeng.api.config.LockCraftingMode": Internal.ClassInfo, "xfacthd.framedblocks.common.block.stairs.FramedStairsBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.LakeFeature$Configuration": Internal.ClassInfo, "org.jgrapht.Graph": Internal.ClassInfo, "net.minecraft.world.level.block.ConduitBlock": Internal.ClassInfo, "techreborn.init.TRContent$StorageUnit": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.schema.minecraft.ShapedRecipeSchema$ShapedRecipeJS": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.map.markers.MapBlockMarker": Internal.ClassInfo, "net.minecraftforge.event.level.BlockEvent$BlockToolModificationEvent": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.UnholyGrail": Internal.ClassInfo, "fuzs.swordblockingmechanics.mixin.client.accessor.ItemInHandRendererAccessor": Internal.ClassInfo, "com.mna.effects.beneficial.EffectManaShield": Internal.ClassInfo, "net.minecraft.world.damagesource.DamageSources": Internal.ClassInfo, "techreborn.blocks.storage.energy.EnergyStorageBlock": Internal.ClassInfo, "io.netty.buffer.ByteBufAllocator": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.Long2IntMap": Internal.ClassInfo, "org.violetmoon.zeta.recipe.IZetaCondition": Internal.ClassInfo, "com.mna.enchantments.auras.Aura": Internal.ClassInfo, "xaero.map.MapRunner": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.fusion_shrine.FusionShrineBlock": Internal.ClassInfo, "net.minecraft.data.recipes.RecipeBuilder": Internal.ClassInfo, "net.minecraft.world.entity.npc.Villager": Internal.ClassInfo, "de.dafuqs.spectrum.items.tools.BedrockCrossbowItem": Internal.ClassInfo, "it.unimi.dsi.fastutil.floats.Float2IntFunction": Internal.ClassInfo, "java.awt.Window$Type": Internal.ClassInfo, "com.mna.items.artifice.ItemSpectralElytra": Internal.ClassInfo, "top.theillusivec4.curios.api.type.capability.ICurio$DropRule": Internal.ClassInfo, "dynamic_fps.impl.util.duck.DuckSoundEngine": Internal.ClassInfo, "io.wispforest.owo.ui.core.Animatable": Internal.ClassInfo, "com.mna.effects.harmful.EffectIcarianFlight": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.CreativeWissenStorageBlock": Internal.ClassInfo, "shcm.shsupercm.forge.citresewn.mixin.core.NbtCompoundAccessor": Internal.ClassInfo, "net.minecraft.world.level.block.CandleCakeBlock": Internal.ClassInfo, "com.mojang.datafixers.DSL$TypeReference": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.effect.MorSporesEffect": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.melon.AttachedGlisteringStemBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.api.pipenet.IPipeType": Internal.ClassInfo, "org.violetmoon.zeta.event.play.ZFurnaceFuelBurnTime": Internal.ClassInfo, "net.minecraft.commands.CommandBuildContext$MissingTagAccessPolicy": Internal.ClassInfo, "javax.swing.text.StyleConstants$CharacterConstants": Internal.ClassInfo, "xfacthd.framedblocks.common.block.AbstractFramedDoubleBlock": Internal.ClassInfo, "snownee.lychee.core.def.LocationPredicateHelper": Internal.ClassInfo, "net.minecraft.world.entity.animal.Fox$Type": Internal.ClassInfo, "com.mna.blocks.decoration.ClayMugBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.floats.FloatPredicate": Internal.ClassInfo, "dev.onyxstudios.cca.internal.item.ItemCaller": Internal.ClassInfo, "divinerpg.items.base.block.ItemBoneChest": Internal.ClassInfo, "net.minecraft.world.item.crafting.RecipeManager$CachedCheck": Internal.ClassInfo, "java.lang.module.ModuleDescriptor$Exports": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.weathering.WeatheringStairsBlock": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.entity.EquipmentEntity": Internal.ClassInfo, "java.awt.event.InputEvent": Internal.ClassInfo, "com.mna.blocks.artifice.TransitoryTunnelBlock": Internal.ClassInfo, "dev.latvian.mods.unit.UnitContext": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.StringComponent": Internal.ClassInfo, "net.minecraft.world.entity.animal.horse.Llama": Internal.ClassInfo, "de.dafuqs.spectrum.status_effects.FrenzyStatusEffect": Internal.ClassInfo, "java.util.concurrent.atomic.AtomicBoolean": Internal.ClassInfo, "org.violetmoon.quark.content.tools.item.TrowelItem": Internal.ClassInfo, "com.gregtechceu.gtceu.integration.kjs.events.GTRegistryEventJS": Internal.ClassInfo, "net.minecraftforge.client.event.RenderTooltipEvent": Internal.ClassInfo, "net.minecraft.world.level.block.entity.TickingBlockEntity": Internal.ClassInfo, "com.mna.effects.beneficial.EffectUndeadFrostWalker": Internal.ClassInfo, "com.mna.items.base.IRadialInventorySelect": Internal.ClassInfo, "org.lwjgl.system.Pointer": Internal.ClassInfo, "com.mojang.math.OctahedralGroup": Internal.ClassInfo, "net.minecraft.nbt.FloatTag": Internal.ClassInfo, "net.irisshaders.iris.mixin.ProgramTypeAccessor": Internal.ClassInfo, "com.mojang.blaze3d.shaders.Program": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopeslab.FramedElevatedDoubleSlopeSlabBlock": Internal.ClassInfo, "java.lang.AbstractStringBuilder": Internal.ClassInfo, "de.dafuqs.spectrum.items.energy.ArtistsPaletteItem": Internal.ClassInfo, "dev.gigaherz.graph3.Mergeable$Dummy": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerEvent$ItemSmeltedEvent": Internal.ClassInfo, "appeng.block.crafting.PatternProviderBlock": Internal.ClassInfo, "xaero.map.biome.BlockTintProvider": Internal.ClassInfo, "com.mna.effects.neutral.EffectDampenMagic": Internal.ClassInfo, "com.mna.blocks.utility.FillerBlock": Internal.ClassInfo, "com.inventorypets.pets.petSiamese": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.StructureMode": Internal.ClassInfo, "net.minecraftforge.common.IPlantable": Internal.ClassInfo, "divinerpg.items.vanilla.ItemBurningSword": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.enchantments.CeaselessEnchantment": Internal.ClassInfo, "cofh.lib.api.block.IWrenchable": Internal.ClassInfo, "net.minecraft.network.chat.SignedMessageValidator": Internal.ClassInfo, "net.minecraft.world.level.block.CommandBlock": Internal.ClassInfo, "net.fabricmc.fabric.api.renderer.v1.render.RenderContext$QuadTransform": Internal.ClassInfo, "appeng.block.networking.CrystalResonanceGeneratorBlock": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundContainerSetDataPacket": Internal.ClassInfo, "appeng.helpers.AEMultiBlockEntity": Internal.ClassInfo, "java.util.BitSet": Internal.ClassInfo, "net.minecraft.client.renderer.chunk.ChunkRenderDispatcher": Internal.ClassInfo, "com.gregtechceu.gtceu.common.block.MinerPipeBlock": Internal.ClassInfo, "techreborn.items.tool.vanilla.TRAxeItem": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.conditional.CloakedOreBlock": Internal.ClassInfo, "divinerpg.blocks.arcana.BlockAcceleron": Internal.ClassInfo, "net.minecraft.world.entity.projectile.ThrowableItemProjectile": Internal.ClassInfo, "org.apache.logging.log4j.message.FlowMessage": Internal.ClassInfo, "com.lowdragmc.lowdraglib.syncdata.blockentity.IAutoSyncBlockEntity": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.entity.BlockEntityCallback": Internal.ClassInfo, "mezz.jei.api.runtime.IJeiKeyMapping": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundResourcePackPacket$Action": Internal.ClassInfo, "com.gregtechceu.gtceu.api.recipe.GTRecipeType$ICustomScannerLogic": Internal.ClassInfo, "net.minecraft.client.searchtree.SearchRegistry$Key": Internal.ClassInfo, "xfacthd.framedblocks.common.block.special.FramingSawBlock": Internal.ClassInfo, "net.minecraftforge.client.extensions.IForgeMinecraft": Internal.ClassInfo, "net.irisshaders.iris.fantastic.PhasedParticleEngine": Internal.ClassInfo, "net.minecraft.world.entity.ai.navigation.PathNavigation": Internal.ClassInfo, "net.minecraftforge.eventbus.api.EventPriority": Internal.ClassInfo, "de.dafuqs.spectrum.entity.entity.ShootingStarEntity": Internal.ClassInfo, "net.minecraft.world.level.LightLayer": Internal.ClassInfo, "net.minecraft.server.TickTask": Internal.ClassInfo, "net.minecraft.world.item.crafting.FireworkRocketRecipe": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.placement.RandomSpreadStructurePlacement": Internal.ClassInfo, "appeng.blockentity.misc.InscriberBlockEntity": Internal.ClassInfo, "net.minecraft.world.entity.animal.horse.Horse": Internal.ClassInfo, "net.minecraft.client.renderer.texture.SpriteContents": Internal.ClassInfo, "mods.railcraft.world.level.block.track.outfitted.ReversibleOutfittedTrackBlock": Internal.ClassInfo, "divinerpg.blocks.iceika.BlockIceikaFire": Internal.ClassInfo, "com.kamth.zeldamod.item.armors.ZoraTunic": Internal.ClassInfo, "com.mna.api.capabilities.resource.ICastingResource": Internal.ClassInfo, "dev.latvian.mods.rhino.util.CustomJavaToJsWrapper": Internal.ClassInfo, "net.minecraft.world.item.enchantment.SwiftSneakEnchantment": Internal.ClassInfo, "net.minecraft.world.level.levelgen.LegacyRandomSource": Internal.ClassInfo, "mezz.jei.api.helpers.IJeiHelpers": Internal.ClassInfo, "net.minecraft.world.entity.Display": Internal.ClassInfo, "divinerpg.recipe.ArcaniumExtractorRecipe$Type": Internal.ClassInfo, "software.bernie.geckolib.core.state.BoneSnapshot": Internal.ClassInfo, "net.minecraft.world.level.SignalGetter": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.FoodBuilder": Internal.ClassInfo, "de.dafuqs.spectrum.items.tools.SplitDamageItem": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.editor.ui.ConfigPanel$Tab": Internal.ClassInfo, "divinerpg.items.vanilla.ItemTeleportationStar": Internal.ClassInfo, "net.minecraftforge.client.model.generators.ModelProvider": Internal.ClassInfo, "net.fabricmc.fabric.api.loot.v2.FabricLootTableBuilder": Internal.ClassInfo, "net.minecraft.world.item.Rarity": Internal.ClassInfo, "net.minecraft.world.level.biome.Climate$ParameterList": Internal.ClassInfo, "dev.architectury.event.events.common.ChatEvent$ChatComponent": Internal.ClassInfo, "net.minecraft.util.profiling.ProfileResults": Internal.ClassInfo, "net.minecraft.world.level.levelgen.carver.CarvingContext": Internal.ClassInfo, "net.minecraft.world.level.block.CandleBlock": Internal.ClassInfo, "com.mojang.serialization.ListBuilder": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.material.properties.OreProperty": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slope.FramedDividedSlopeBlock": Internal.ClassInfo, "net.minecraft.world.level.block.LightBlock": Internal.ClassInfo, "cofh.thermal.lib.common.block.DynamoBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.floats.Float2ByteFunction": Internal.ClassInfo, "de.dafuqs.revelationary.mixin.client.AccessorClientAdvancementManager": Internal.ClassInfo, "com.mojang.brigadier.tree.ArgumentCommandNode": Internal.ClassInfo, "com.mna.api.blocks.IRequirePlayerReference": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2LongFunction": Internal.ClassInfo, "java.util.ResourceBundle": Internal.ClassInfo, "net.minecraft.world.entity.monster.Stray": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.util.TreeNode": Internal.ClassInfo, "mods.railcraft.world.item.PairingToolItem": Internal.ClassInfo, "dev.ftb.mods.ftbquests.quest.ProgressionMode": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.ingredientaction.IngredientActionFilter": Internal.ClassInfo, "com.mojang.authlib.yggdrasil.ServicesKeyType": Internal.ClassInfo, "de.dafuqs.reverb.sound.SoundEffects": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.WissenTranslatorBlock": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.fluids.SoftFluid$TintMethod": Internal.ClassInfo, "com.mna.api.spells.SpellCastingResult": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.MonsterCharm": Internal.ClassInfo, "mods.railcraft.world.level.block.signal.SelfAttachableSignalBoxBlock": Internal.ClassInfo, "java.util.stream.LongStream": Internal.ClassInfo, "java.util.Properties": Internal.ClassInfo, "de.dafuqs.spectrum.interfaces.PlayerOwnedWithName": Internal.ClassInfo, "net.minecraft.world.entity.boss.enderdragon.phases.AbstractDragonSittingPhase": Internal.ClassInfo, "io.netty.util.ByteProcessor": Internal.ClassInfo, "net.minecraft.world.level.block.SculkCatalystBlock": Internal.ClassInfo, "xaero.map.region.MapRegion": Internal.ClassInfo, "dev.ftb.mods.ftbquests.block.DetectorBlock": Internal.ClassInfo, "net.minecraft.network.syncher.SynchedEntityData": Internal.ClassInfo, "net.fabricmc.fabric.api.client.screen.v1.ScreenKeyboardEvents$AfterKeyRelease": Internal.ClassInfo, "java.time.temporal.ChronoUnit": Internal.ClassInfo, "net.minecraftforge.event.TickEvent$RenderTickEvent": Internal.ClassInfo, "dev.latvian.mods.kubejs.event.EventJS": Internal.ClassInfo, "io.wispforest.accessories.api.EquipmentChecking": Internal.ClassInfo, "de.dafuqs.spectrum.items.CookbookItem": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerWakeUpEvent": Internal.ClassInfo, "net.minecraft.world.entity.monster.ElderGuardian": Internal.ClassInfo, "dev.latvian.mods.rhino.util.SpecialEquality": Internal.ClassInfo, "de.dafuqs.spectrum.enchantments.SniperEnchantment": Internal.ClassInfo, "com.mna.items.worldgen.ItemWakebloom": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemBuilder$ReleaseUsingCallback": Internal.ClassInfo, "com.mna.api.particles.MAParticleType": Internal.ClassInfo, "java.nio.file.WatchKey": Internal.ClassInfo, "com.gregtechceu.gtceu.common.pipelike.cable.EnergyRoutePath": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.CrackedEndPortalFrameBlock$EndPortalFrameEye": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.ServerPlayerKJS": Internal.ClassInfo, "mezz.jei.api.runtime.IIngredientManager": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingAttackEvent": Internal.ClassInfo, "net.minecraft.network.protocol.status.ServerStatus": Internal.ClassInfo, "it.unimi.dsi.fastutil.chars.CharIterable": Internal.ClassInfo, "mezz.jei.api.recipe.IRecipeCategoriesLookup": Internal.ClassInfo, "com.mna.items.ritual.MoteItem": Internal.ClassInfo, "com.mna.items.constructs.parts.torso.ConstructPartBasicTorso": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.FabulousScroll": Internal.ClassInfo, "com.gregtechceu.gtceu.common.pipelike.item.ItemPipeType": Internal.ClassInfo, "java.nio.file.attribute.FileAttributeView": Internal.ClassInfo, "net.minecraft.world.level.levelgen.DensityFunction$FunctionContext": Internal.ClassInfo, "io.wispforest.owo.ui.base.BaseComponent": Internal.ClassInfo, "net.minecraft.resources.RegistryOps$RegistryInfoLookup": Internal.ClassInfo, "de.dafuqs.spectrum.items.food.FreigeistItem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.NopProcessor": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.item.IThirdPersonSpecialItemRenderer": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.RandomTickCallbackJS": Internal.ClassInfo, "techreborn.items.tool.industrial.NanosaberItem": Internal.ClassInfo, "cofh.core.util.filter.IFilterableItem": Internal.ClassInfo, "net.minecraft.core.particles.BlockParticleOption": Internal.ClassInfo, "net.minecraft.world.level.levelgen.NoiseChunk$CacheAllInCell": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemModificationEventJS": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.redstone.BlockBreakerBlock": Internal.ClassInfo, "java.awt.Dimension": Internal.ClassInfo, "vectorwing.farmersdelight.common.item.FuelBlockItem": Internal.ClassInfo, "mods.railcraft.world.level.block.track.AbandonedTrackBlock": Internal.ClassInfo, "me.srrapero720.embeddiumplus.foundation.leaves_culling.ICulleableLeaves": Internal.ClassInfo, "net.mehvahdjukaar.polytone.slotify.ScreenModifier": Internal.ClassInfo, "java.util.SortedMap": Internal.ClassInfo, "dev.ftb.mods.ftbquests.api.QuestFile": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.events.forge.FireConsumeBlockEvent": Internal.ClassInfo, "net.minecraft.world.level.block.StainedGlassPaneBlock": Internal.ClassInfo, "mods.railcraft.api.track.LockingTrack": Internal.ClassInfo, "com.inventorypets.pets.petPingot": Internal.ClassInfo, "mods.railcraft.world.level.block.CreosoteLiquidBlock": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.BlazingCore": Internal.ClassInfo, "java.awt.PageAttributes$PrintQualityType": Internal.ClassInfo, "net.minecraft.server.level.ServerChunkCache": Internal.ClassInfo, "com.mna.items.ritual.ItemThaumaturgicLink": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.LongList": Internal.ClassInfo, "com.inventorypets.items.mugEggNog": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.Double2ObjectFunction": Internal.ClassInfo, "java.util.concurrent.atomic.AtomicReference": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.SerializerType": Internal.ClassInfo, "net.minecraft.client.renderer.block.BlockRenderDispatcher": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.BlueIceFeature": Internal.ClassInfo, "dev.latvian.mods.kubejs.integration.forge.jei.JEISubtypesEventJS": Internal.ClassInfo, "net.minecraft.world.level.ClipContext": Internal.ClassInfo, "de.dafuqs.spectrum.mixin.accessors.SlimeEntityAccessor": Internal.ClassInfo, "net.minecraft.world.level.border.WorldBorder": Internal.ClassInfo, "net.minecraft.world.level.levelgen.heightproviders.TrapezoidHeight": Internal.ClassInfo, "dev.architectury.utils.Env": Internal.ClassInfo, "net.minecraftforge.event.entity.living.MobEffectEvent$Expired": Internal.ClassInfo, "com.gregtechceu.gtceu.api.pattern.BlockPattern": Internal.ClassInfo, "net.minecraft.client.gui.screens.recipebook.RecipeCollection": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.NetherSaltItem": Internal.ClassInfo, "java.io.OutputStream": Internal.ClassInfo, "com.kamth.zeldamod.item.items.MittsItem2": Internal.ClassInfo, "net.minecraft.client.color.block.BlockTintCache": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetBorderWarningDistancePacket": Internal.ClassInfo, "mods.railcraft.world.level.block.track.outfitted.TransitionTrackBlock": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.RailShape": Internal.ClassInfo, "net.minecraft.world.entity.Display$ItemDisplay": Internal.ClassInfo, "com.gregtechceu.gtceu.api.item.armor.ArmorComponentItem": Internal.ClassInfo, "com.enderio.api.capability.StoredEntityData": Internal.ClassInfo, "appeng.parts.automation.PlaneConnections": Internal.ClassInfo, "net.fabricmc.fabric.api.renderer.v1.material.MaterialView": Internal.ClassInfo, "com.inventorypets.items.itemGift": Internal.ClassInfo, "xaero.map.region.LeveledRegion": Internal.ClassInfo, "net.minecraft.server.packs.repository.PackSource": Internal.ClassInfo, "com.inventorypets.pets.petMetaSpecial": Internal.ClassInfo, "divinerpg.items.arcana.ItemDivineAccumulator": Internal.ClassInfo, "net.minecraft.world.entity.Display$TextDisplay$Align": Internal.ClassInfo, "net.minecraft.stats.ServerStatsCounter": Internal.ClassInfo, "net.minecraft.world.level.block.NetherPortalBlock": Internal.ClassInfo, "net.minecraft.server.players.GameProfileCache$GameProfileInfo": Internal.ClassInfo, "techreborn.blocks.misc.BlockRefinedIronFence": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.foliageplacers.AcaciaFoliagePlacer": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.config.ConfigCallback": Internal.ClassInfo, "divinerpg.blocks.arcana.BlockArcanaPortalFrame": Internal.ClassInfo, "xfacthd.framedblocks.common.data.doubleblock.CamoGetter": Internal.ClassInfo, "com.mojang.blaze3d.preprocessor.GlslPreprocessor": Internal.ClassInfo, "malte0811.ferritecore.fastmap.FastMapKey": Internal.ClassInfo, "net.minecraft.network.chat.HoverEvent$ItemStackInfo": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.ForbiddenAxe": Internal.ClassInfo, "xfacthd.framedblocks.common.block.interactive.FramedLargeButtonBlock": Internal.ClassInfo, "mods.railcraft.world.item.SeasonsCrowbarItem": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetCameraPacket": Internal.ClassInfo, "net.minecraft.world.level.block.entity.BeehiveBlockEntity": Internal.ClassInfo, "java.util.EnumSet": Internal.ClassInfo, "com.enderio.machines.common.item.FluidTankItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.custom.ArmorItemBuilder$Boots": Internal.ClassInfo, "com.mojang.datafixers.types.Type$FieldNotFoundException": Internal.ClassInfo, "net.minecraft.advancements.critereon.EntitySubPredicate$Type": Internal.ClassInfo, "com.yogpc.qp.machines.marker.BlockMarker": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingHealEvent": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.rule.blockentity.RuleBlockEntityModifierType": Internal.ClassInfo, "appeng.api.parts.IFacadePart": Internal.ClassInfo, "net.minecraft.util.profiling.ProfilerFiller": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.DoubleList": Internal.ClassInfo, "com.aizistral.etherium.items.EtheriumSword": Internal.ClassInfo, "net.fabricmc.fabric.impl.datagen.DataGeneratorExtension": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.LootTable$Builder": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.blocks.BlockEndAnchor": Internal.ClassInfo, "cofh.thermal.core.common.item.EnergyCellBlockItem": Internal.ClassInfo, "net.fabricmc.fabric.impl.client.model.loading.ModelLoadingEventDispatcher": Internal.ClassInfo, "com.yogpc.qp.machines.EnchantableItem": Internal.ClassInfo, "net.minecraft.world.item.crafting.BlastingRecipe": Internal.ClassInfo, "com.mojang.datafixers.types.templates.TypeTemplate": Internal.ClassInfo, "net.minecraft.world.item.crafting.SmithingTrimRecipe$Serializer": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.BlockStateMatchTest": Internal.ClassInfo, "net.irisshaders.iris.texture.pbr.PBRDumpable": Internal.ClassInfo, "com.mojang.brigadier.builder.ArgumentBuilder": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundHorseScreenOpenPacket": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.conditional.resonant_lily.PottedResonantLilyBlock": Internal.ClassInfo, "de.dafuqs.spectrum.items.tools.RazorFalchionItem": Internal.ClassInfo, "appeng.blockentity.crafting.PatternProviderBlockEntity": Internal.ClassInfo, "techreborn.blocks.misc.BlockRubberLeaves": Internal.ClassInfo, "techreborn.blocks.misc.BlockMachineFrame": Internal.ClassInfo, "net.minecraft.world.level.block.entity.LecternBlockEntity": Internal.ClassInfo, "fuzs.puzzleslib.mixin.accessor.LootTableForgeAccessor": Internal.ClassInfo, "com.inventorypets.items.solsticeHelmet": Internal.ClassInfo, "net.minecraft.world.level.dimension.end.EndDragonFight": Internal.ClassInfo, "net.minecraft.world.entity.animal.Dolphin": Internal.ClassInfo, "net.minecraft.client.MouseHandler": Internal.ClassInfo, "com.gregtechceu.gtceu.api.machine.feature.IRedstoneSignalMachine": Internal.ClassInfo, "net.minecraft.client.gui.components.Button": Internal.ClassInfo, "appeng.block.networking.ControllerBlock$ControllerRenderType": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.Double2DoubleFunction": Internal.ClassInfo, "appeng.items.tools.powered.PortableCellItem": Internal.ClassInfo, "net.minecraft.advancements.critereon.EntitySubPredicate": Internal.ClassInfo, "net.minecraft.world.effect.MobEffectInstance": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundBlockEventPacket": Internal.ClassInfo, "net.minecraftforge.common.world.ModifiableStructureInfo": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.SpringConfiguration": Internal.ClassInfo, "com.mna.items.sorcery.ItemAnimusDust": Internal.ClassInfo, "java.awt.event.MouseEvent": Internal.ClassInfo, "com.gregtechceu.gtceu.api.block.MetaMachineBlock": Internal.ClassInfo, "net.minecraftforge.event.RegisterGameTestsEvent": Internal.ClassInfo, "appeng.api.util.DimensionalBlockPos": Internal.ClassInfo, "net.minecraft.client.gui.navigation.FocusNavigationEvent$ArrowNavigation": Internal.ClassInfo, "net.minecraft.world.level.block.AmethystClusterBlock": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.fluid.MudFluidBlock": Internal.ClassInfo, "net.minecraft.world.entity.animal.Bucketable": Internal.ClassInfo, "com.yungnickyoung.minecraft.yungsapi.mixin.accessor.ListPoolElementAccessor": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.SaltLanternItem": Internal.ClassInfo, "appeng.items.tools.NetworkToolItem": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.block.BlockStateFlagHolder": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$KeyInput": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.FrogAttackablesSensor": Internal.ClassInfo, "org.apache.maven.artifact.repository.ArtifactRepositoryPolicy": Internal.ClassInfo, "mods.railcraft.world.level.block.detector.ItemDetectorBlock": Internal.ClassInfo, "org.w3c.dom.DOMStringList": Internal.ClassInfo, "com.mojang.serialization.DynamicOps": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.map.ExpandedMapData": Internal.ClassInfo, "de.dafuqs.spectrum.items.tools.SpectrumPickaxeItem": Internal.ClassInfo, "net.fabricmc.fabric.impl.blockrenderlayer.ExtendedChunkRenderTypeSet": Internal.ClassInfo, "org.lwjgl.system.Struct": Internal.ClassInfo, "dev.latvian.mods.kubejs.integration.forge.jei.RemoveJEIRecipesEvent": Internal.ClassInfo, "io.wispforest.accessories.api.slot.SlotReference": Internal.ClassInfo, "net.minecraft.world.inventory.SmithingMenu": Internal.ClassInfo, "com.gregtechceu.gtceu.api.registry.registrate.MachineBuilder": Internal.ClassInfo, "com.gregtechceu.gtceu.api.item.LaserPipeBlockItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.custom.BasicBlockJS$Builder": Internal.ClassInfo, "java.util.UUID": Internal.ClassInfo, "net.minecraft.world.level.block.entity.CommandBlockEntity$Mode": Internal.ClassInfo, "com.gregtechceu.gtceu.api.item.tool.behavior.IToolBehavior": Internal.ClassInfo, "com.kamth.zeldamod.item.items.SuperLeafItem": Internal.ClassInfo, "com.inventorypets.pets.petJuggernaut": Internal.ClassInfo, "java.lang.constant.DynamicConstantDesc": Internal.ClassInfo, "dev.emi.trinkets.api.SlotReference": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.Double2LongFunction": Internal.ClassInfo, "appeng.me.cluster.implementations.SpatialPylonCluster$Axis": Internal.ClassInfo, "org.orecruncher.dsurround.mixins.audio.MixinSoundManagerAccessor": Internal.ClassInfo, "com.google.common.collect.Maps$IteratorBasedAbstractMap": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.pools.EmptyPoolElement": Internal.ClassInfo, "net.minecraft.world.item.crafting.SimpleCraftingRecipeSerializer": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$KeyReleased$Pre": Internal.ClassInfo, "com.inventorypets.pets.petSatedDoubleChest": Internal.ClassInfo, "fuzs.puzzleslib.mixin.client.accessor.BlockColorsForgeAccessor": Internal.ClassInfo, "reborncore.common.powerSystem.RcEnergyTier": Internal.ClassInfo, "appeng.block.misc.MysteriousCubeBlock": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.ArcanumOreBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.stateproviders.BlockStateProviderType": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.MorItem": Internal.ClassInfo, "net.fabricmc.fabric.impl.lookup.block.ServerWorldCache": Internal.ClassInfo, "org.w3c.dom.Node": Internal.ClassInfo, "com.probejs.jdoc.property.AbstractProperty": Internal.ClassInfo, "com.google.common.collect.ForwardingCollection": Internal.ClassInfo, "xfacthd.framedblocks.common.block.torch.FramedRedstoneWallTorchBlock": Internal.ClassInfo, "mods.railcraft.world.module.ContainerModule": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.entities.BombEntity$BombType": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.ColorableBlock": Internal.ClassInfo, "net.minecraft.world.level.block.SaplingBlock": Internal.ClassInfo, "mods.railcraft.api.core.NetworkSerializable": Internal.ClassInfo, "mcp.mobius.waila.mixin.ChiseledBookShelfBlockAccess": Internal.ClassInfo, "javax.security.auth.Subject": Internal.ClassInfo, "net.minecraft.client.telemetry.WorldSessionTelemetryManager": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.ForbiddenFruit": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingFallEvent": Internal.ClassInfo, "net.minecraft.world.level.block.entity.CommandBlockEntity": Internal.ClassInfo, "shcm.shsupercm.forge.citresewn.pack.cits.CITArmor$Cached": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.custom.RecordItemJS$Builder": Internal.ClassInfo, "net.minecraft.stats.StatsCounter": Internal.ClassInfo, "net.minecraft.world.entity.monster.SpellcasterIllager": Internal.ClassInfo, "com.tterrag.registrate.providers.RegistrateTagsProvider$IntrinsicImpl": Internal.ClassInfo, "net.minecraft.data.DataProvider": Internal.ClassInfo, "net.minecraft.world.entity.monster.Slime": Internal.ClassInfo, "divinerpg.blocks.vethea.BlockQuadroticAltar": Internal.ClassInfo, "net.minecraft.world.item.crafting.TippedArrowRecipe": Internal.ClassInfo, "com.epherical.croptopia.items.SeedItem": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.ArcanumItem": Internal.ClassInfo, "appeng.crafting.pattern.StonecuttingPatternItem": Internal.ClassInfo, "de.dafuqs.arrowhead.api.ArrowheadCrossbow": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.material.properties.HazardProperty$ProtectionType": Internal.ClassInfo, "appeng.api.storage.cells.ICellWorkbenchItem": Internal.ClassInfo, "net.minecraft.client.OptionInstance$CaptionBasedToString": Internal.ClassInfo, "mods.railcraft.world.level.block.detector.AdvancedDetectorBlock": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.EnigmaticEye": Internal.ClassInfo, "appeng.helpers.InterfaceLogic": Internal.ClassInfo, "com.mna.blocks.artifice.StudyDeskBlock": Internal.ClassInfo, "com.lowdragmc.lowdraglib.client.scene.WorldSceneRenderer$VertexConsumerWrapper": Internal.ClassInfo, "net.minecraft.util.valueproviders.TrapezoidFloat": Internal.ClassInfo, "divinerpg.items.vethea.ItemVetheanBow": Internal.ClassInfo, "org.violetmoon.zeta.config.type.IConfigType": Internal.ClassInfo, "net.minecraft.world.item.enchantment.EnchantmentCategory": Internal.ClassInfo, "net.minecraft.world.item.BedItem": Internal.ClassInfo, "de.dafuqs.spectrum.helpers.SchedulerMap$Callback": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$MouseScrolled$Post": Internal.ClassInfo, "appeng.client.render.cablebus.CableCoreType": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetBorderWarningDelayPacket": Internal.ClassInfo, "org.violetmoon.zeta.recipe.IZetaConditionSerializer": Internal.ClassInfo, "appeng.helpers.IPriorityHost": Internal.ClassInfo, "cofh.thermal.core.common.item.LightningChargeItem": Internal.ClassInfo, "com.gregtechceu.gtceu.api.machine.multiblock.CleanroomType": Internal.ClassInfo, "java.io.PrintWriter": Internal.ClassInfo, "mcp.mobius.waila.mixin.EntityAccess": Internal.ClassInfo, "com.mna.effects.neutral.EffectManaStunt": Internal.ClassInfo, "divinerpg.items.arcana.ItemCollector": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.config.EnumConfig": Internal.ClassInfo, "appeng.block.qnb.QuantumLinkChamberBlock": Internal.ClassInfo, "de.keksuccino.fancymenu.util.rendering.AspectRatio": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingConversionEvent$Post": Internal.ClassInfo, "net.minecraft.world.item.enchantment.DiggingEnchantment": Internal.ClassInfo, "java.awt.Component": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.ObjectBidirectionalIterator": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.FireworksJS$Shape": Internal.ClassInfo, "net.irisshaders.batchedentityrendering.mixin.ChunkBufferBuilderPackAccessor": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundInteractPacket": Internal.ClassInfo, "org.violetmoon.zetaimplforge.mixin.mixins.client.AccessorBlockColors": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.render.texture.SpriteContentsExtended": Internal.ClassInfo, "techreborn.items.UpgraderItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.integration.forge.jei.HideCustomJEIEventJS": Internal.ClassInfo, "com.enderio.api.conduit.IExtendedConduitData": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.api.items.IAdvancedPotionItem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.rule.blockentity.AppendStatic": Internal.ClassInfo, "appeng.api.networking.ticking.ITickManager": Internal.ClassInfo, "mods.railcraft.world.item.tunnelbore.TunnelBoreItem": Internal.ClassInfo, "com.yungnickyoung.minecraft.yungsapi.mixin.accessor.FeaturePoolElementAccessor": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.client.particle.KarmaParticleType": Internal.ClassInfo, "net.minecraft.world.level.block.BedBlock": Internal.ClassInfo, "java.lang.module.ModuleReader": Internal.ClassInfo, "divinerpg.items.vanilla.ItemArmorPouch": Internal.ClassInfo, "mods.railcraft.world.level.block.track.ElevatorTrackBlock": Internal.ClassInfo, "mods.railcraft.api.carts.TunnelBoreHead": Internal.ClassInfo, "net.minecraft.world.item.GlowInkSacItem": Internal.ClassInfo, "com.inventorypets.pets.petQuantumCrystalMonster": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decoration.AlternatePlayerOnlyGlassBlock": Internal.ClassInfo, "net.minecraft.world.level.timers.TimerQueue": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.ui.WidgetLayout": Internal.ClassInfo, "net.minecraft.network.syncher.EntityDataSerializer": Internal.ClassInfo, "net.minecraft.world.entity.ai.goal.RandomStrollGoal": Internal.ClassInfo, "net.minecraft.world.level.levelgen.SurfaceRules$SurfaceRule": Internal.ClassInfo, "de.dafuqs.spectrum.items.PrioritizedEntityInteraction": Internal.ClassInfo, "xfacthd.framedblocks.common.block.IComplexSlopeSource": Internal.ClassInfo, "net.minecraftforge.common.world.BiomeModifier": Internal.ClassInfo, "divinerpg.items.arcana.ItemShadowSaber": Internal.ClassInfo, "net.minecraft.world.level.block.PumpkinBlock": Internal.ClassInfo, "net.minecraft.client.telemetry.TelemetryPropertyMap$Builder": Internal.ClassInfo, "com.kamth.zeldamod.item.items.BluePotionItem": Internal.ClassInfo, "techreborn.blocks.misc.RubberButtonBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.Double2IntFunction": Internal.ClassInfo, "com.mna.items.ItemGuideBook": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blending.BlendingData$HeightConsumer": Internal.ClassInfo, "net.minecraft.world.entity.vehicle.MinecartChest": Internal.ClassInfo, "de.dafuqs.spectrum.items.magic_items.EverpromiseRibbonItem": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.RecallPotion": Internal.ClassInfo, "net.minecraft.network.chat.FormattedText$StyledContentConsumer": Internal.ClassInfo, "java.lang.AutoCloseable": Internal.ClassInfo, "net.minecraft.core.Registry": Internal.ClassInfo, "elucent.eidolon.common.item.curio.TerminusMirrorItem": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.texture.AnimationTexture": Internal.ClassInfo, "net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.Short2ByteFunction": Internal.ClassInfo, "malte0811.ferritecore.mixin.blockstatecache.DiscreteVSAccess": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.gen.filter.mob.MobFilter": Internal.ClassInfo, "java.util.stream.IntStream$Builder": Internal.ClassInfo, "divinerpg.blocks.base.BlockModSapling": Internal.ClassInfo, "net.minecraft.world.level.block.entity.SpawnerBlockEntity": Internal.ClassInfo, "vectorwing.farmersdelight.common.item.CookingPotItem": Internal.ClassInfo, "com.enderio.base.common.block.glass.GlassLighting": Internal.ClassInfo, "com.mojang.realmsclient.dto.RealmsServerPlayerList": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.Short2ObjectFunction": Internal.ClassInfo, "net.minecraft.world.level.portal.PortalForcer": Internal.ClassInfo, "net.minecraft.data.recipes.CraftingRecipeBuilder": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.RandomFeatureConfiguration": Internal.ClassInfo, "appeng.util.inv.InternalInventoryHost": Internal.ClassInfo, "net.minecraftforge.client.model.generators.ModelFile$ExistingModelFile": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.callbacks.BlockStateMirrorCallbackJS": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundUpdateMobEffectPacket": Internal.ClassInfo, "com.yogpc.qp.machines.module.ExpModuleItem": Internal.ClassInfo, "com.google.common.reflect.TypeCapture": Internal.ClassInfo, "xfacthd.framedblocks.common.block.cube.FramedRedstoneBlock": Internal.ClassInfo, "net.minecraft.world.level.lighting.LevelLightEngine": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.custom.ItemToolTierRegistryEventJS": Internal.ClassInfo, "net.minecraftforge.common.data.LanguageProvider": Internal.ClassInfo, "org.violetmoon.zeta.registry.ZetaRegistry": Internal.ClassInfo, "cofh.lib.common.block.GunpowderBlock": Internal.ClassInfo, "appeng.block.AEBaseBlockItem": Internal.ClassInfo, "mods.railcraft.world.level.block.track.ReinforcedTrackBlock": Internal.ClassInfo, "appeng.debug.ItemGenBlockEntity": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundOpenSignEditorPacket": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.state.BlockStatePredicate": Internal.ClassInfo, "io.netty.channel.WriteBufferWaterMark": Internal.ClassInfo, "net.minecraft.world.level.block.HugeMushroomBlock": Internal.ClassInfo, "java.awt.GraphicsDevice": Internal.ClassInfo, "com.epherical.croptopia.items.CropItem": Internal.ClassInfo, "net.minecraft.world.level.storage.ServerLevelData": Internal.ClassInfo, "dev.latvian.mods.kubejs.typings.desc.TypeDescJS": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decoration.CushionedCarpetBlock": Internal.ClassInfo, "net.minecraftforge.network.NetworkDirection": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.MultiblockCrafter": Internal.ClassInfo, "divinerpg.blocks.base.BlockModLeaves": Internal.ClassInfo, "appeng.block.misc.InscriberBlock": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.api.alchemy.IFluidItem": Internal.ClassInfo, "net.fabricmc.fabric.impl.networking.client.ClientPlayNetworkAddon": Internal.ClassInfo, "software.bernie.geckolib.core.keyframe.event.data.SoundKeyframeData": Internal.ClassInfo, "net.minecraft.client.renderer.PostChain": Internal.ClassInfo, "io.wispforest.owo.util.pond.OwoSlotExtension": Internal.ClassInfo, "net.minecraft.world.entity.boss.enderdragon.phases.DragonHoverPhase": Internal.ClassInfo, "divinerpg.blocks.arcana.BlockArcanaDoor": Internal.ClassInfo, "mezz.jei.api.gui.drawable.IDrawableAnimated": Internal.ClassInfo, "net.minecraft.world.level.block.StemBlock": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.conditional.MermaidsGemItem": Internal.ClassInfo, "vazkii.patchouli.common.item.ItemModBook": Internal.ClassInfo, "org.apache.logging.log4j.spi.AbstractLogger": Internal.ClassInfo, "com.mojang.blaze3d.font.GlyphProvider": Internal.ClassInfo, "javax.accessibility.AccessibleAction": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.enchantments.NemesisCurse": Internal.ClassInfo, "com.yungnickyoung.minecraft.yungsapi.mixin.accessor.BoundingBoxAccessor": Internal.ClassInfo, "cofh.lib.api.item.IContainerItem": Internal.ClassInfo, "net.minecraft.BlockUtil$FoundRectangle": Internal.ClassInfo, "org.violetmoon.zeta.network.ZetaNetworkDirection": Internal.ClassInfo, "io.netty.util.concurrent.EventExecutorGroup": Internal.ClassInfo, "de.dafuqs.spectrum.items.trinkets.GleamingPinItem": Internal.ClassInfo, "org.violetmoon.zeta.api.IMutableAdvancement": Internal.ClassInfo, "net.minecraftforge.event.entity.EntityStruckByLightningEvent": Internal.ClassInfo, "xaero.map.graphics.renderer.multitexture.MultiTextureRenderTypeRendererProvider": Internal.ClassInfo, "appeng.api.networking.spatial.ISpatialService": Internal.ClassInfo, "org.apache.logging.log4j.core.util.FileWatcher": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decoration.CardinalFacingBlock": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.effect.WissenAuraEffect": Internal.ClassInfo, "com.mojang.blaze3d.shaders.Program$Type": Internal.ClassInfo, "net.minecraft.world.entity.EntitySelector": Internal.ClassInfo, "com.google.common.collect.Table": Internal.ClassInfo, "snownee.lychee.core.recipe.ItemShapelessRecipe": Internal.ClassInfo, "com.kamth.zeldamod.block.custom.EyeSwitchBlock": Internal.ClassInfo, "com.aizistral.etherium.blocks.BlockEtherium": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.structure.PreservationRoundelBlock": Internal.ClassInfo, "com.mojang.authlib.yggdrasil.request.AbuseReportRequest": Internal.ClassInfo, "javax.sound.sampled.AudioFormat": Internal.ClassInfo, "net.minecraftforge.fluids.FluidType": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerInteractEvent$RightClickItem": Internal.ClassInfo, "net.minecraft.client.gui.Gui$HeartType": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.Double2ByteFunction": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.CreativeSteamStorageBlock": Internal.ClassInfo, "com.mojang.blaze3d.shaders.EffectProgram": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.FluidLogging$SpectrumFluidDrainable": Internal.ClassInfo, "techreborn.blocks.misc.BlockComputerCube": Internal.ClassInfo, "net.minecraft.client.gui.screens.worldselection.WorldOpenFlows": Internal.ClassInfo, "top.theillusivec4.curios.api.type.capability.ICurio": Internal.ClassInfo, "net.minecraft.client.resources.metadata.animation.AnimationMetadataSection": Internal.ClassInfo, "com.tterrag.registrate.builders.MenuBuilder$MenuFactory": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.OreConfiguration": Internal.ClassInfo, "it.unimi.dsi.fastutil.bytes.ByteBinaryOperator": Internal.ClassInfo, "mezz.jei.api.recipe.transfer.IRecipeTransferError": Internal.ClassInfo, "cpw.mods.jarhandling.impl.SimpleJarMetadata": Internal.ClassInfo, "java.util.ImmutableCollections$Set12": Internal.ClassInfo, "net.minecraft.world.entity.projectile.ThrownEnderpearl": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.forge.ItemDestroyedEventJS": Internal.ClassInfo, "org.violetmoon.zeta.advancement.ManualTrigger$Instance": Internal.ClassInfo, "net.minecraft.advancements.critereon.EntityPredicate": Internal.ClassInfo, "fuzs.puzzleslib.mixin.accessor.BlockAccessor": Internal.ClassInfo, "net.minecraftforge.client.model.ForgeFaceData": Internal.ClassInfo, "reborncore.common.recipes.IUpgradeHandler": Internal.ClassInfo, "net.minecraft.world.level.saveddata.maps.MapDecoration": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundKeepAlivePacket": Internal.ClassInfo, "net.minecraft.world.level.storage.DimensionDataStorage": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.TwistedMirror": Internal.ClassInfo, "net.minecraft.world.level.lighting.LayerLightSectionStorage": Internal.ClassInfo, "mods.railcraft.world.level.block.StrengthenedGlassBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.RecipesEventJS": Internal.ClassInfo, "org.violetmoon.zeta.util.handler.FuelHandler": Internal.ClassInfo, "com.mojang.brigadier.exceptions.DynamicCommandExceptionType": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.BlockStateKJS": Internal.ClassInfo, "net.minecraftforge.event.level.BlockEvent$BreakEvent": Internal.ClassInfo, "net.minecraft.world.level.levelgen.Heightmap$Types": Internal.ClassInfo, "appeng.items.contents.NetworkToolMenuHost": Internal.ClassInfo, "net.minecraft.server.ServerFunctionManager$TraceCallbacks": Internal.ClassInfo, "net.mehvahdjukaar.amendments.common.block.CeilingBannerBlock": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.items.SugarCubeItem": Internal.ClassInfo, "net.minecraft.core.Direction$Plane": Internal.ClassInfo, "net.minecraft.client.resources.metadata.animation.AnimationFrame": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.AlchemyPotionItem": Internal.ClassInfo, "reborncore.api.IListInfoProvider": Internal.ClassInfo, "appeng.api.features.IGridLinkableHandler": Internal.ClassInfo, "net.minecraft.world.level.block.entity.EnchantmentTableBlockEntity": Internal.ClassInfo, "net.minecraft.client.gui.Gui": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.enchantments.SorrowCurse": Internal.ClassInfo, "net.minecraft.world.item.enchantment.DigDurabilityEnchantment": Internal.ClassInfo, "net.minecraft.world.level.LevelSimulatedReader": Internal.ClassInfo, "fzzyhmstrs.emi_loot.mixins.EntityFlagsPredicateAccessor": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate": Internal.ClassInfo, "net.minecraft.world.entity.projectile.LargeFireball": Internal.ClassInfo, "mods.railcraft.world.level.block.track.outfitted.ThrottleTrackBlock": Internal.ClassInfo, "dev.ftb.mods.ftbteams.api.property.TeamPropertyType": Internal.ClassInfo, "de.dafuqs.spectrum.items.trinkets.TakeOffBeltItem": Internal.ClassInfo, "fzzyhmstrs.emi_loot.mixins.DistancePredicateAccessor": Internal.ClassInfo, "com.inventorypets.pets.petMetaPeaceful": Internal.ClassInfo, "appeng.api.storage.cells.CellState": Internal.ClassInfo, "com.yogpc.qp.machines.advquarry.BlockAdvQuarry": Internal.ClassInfo, "dev.latvian.mods.kubejs.player.PlayerAdvancementEventJS": Internal.ClassInfo, "java.util.stream.Collector$Characteristics": Internal.ClassInfo, "net.minecraft.client.renderer.texture.SpriteContents$Ticker": Internal.ClassInfo, "net.minecraft.world.entity.Display$FloatInterpolator": Internal.ClassInfo, "elucent.eidolon.client.particle.GlowingSlashParticleType": Internal.ClassInfo, "com.gregtechceu.gtceu.core.mixins.ITrunkPlacerTypeAccessor": Internal.ClassInfo, "java.security.Provider$Service": Internal.ClassInfo, "net.minecraft.world.level.levelgen.NoiseSettings": Internal.ClassInfo, "de.dafuqs.spectrum.items.conditional.CloakedItem": Internal.ClassInfo, "com.mna.effects.harmful.EffectChill": Internal.ClassInfo, "net.minecraft.world.level.storage.LevelResource": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.curio.MushroomCapItem": Internal.ClassInfo, "me.jellysquid.mods.sodium.mixin.features.textures.animations.upload.SpriteContentsAccessor": Internal.ClassInfo, "net.minecraft.client.multiplayer.ClientChunkCache": Internal.ClassInfo, "cofh.core.common.item.ArmorItemCoFH": Internal.ClassInfo, "mezz.jei.api.recipe.IFocusFactory": Internal.ClassInfo, "net.minecraft.world.entity.monster.Shulker": Internal.ClassInfo, "com.mna.effects.harmful.EffectSunder": Internal.ClassInfo, "mods.railcraft.world.level.block.track.outfitted.CouplerTrackBlock": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.shooting_star.ShootingStar$Type": Internal.ClassInfo, "com.mna.api.entities.construct.materials.ConstructMaterialStone": Internal.ClassInfo, "elucent.eidolon.common.block.HandBlock": Internal.ClassInfo, "snownee.lychee.core.recipe.type.ItemShapelessRecipeType": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingExperienceDropEvent": Internal.ClassInfo, "net.minecraft.client.renderer.texture.Tickable": Internal.ClassInfo, "com.mna.blocks.artifice.WellspringPillarBlock": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundMoveVehiclePacket": Internal.ClassInfo, "net.minecraft.world.item.WritableBookItem": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetPassengersPacket": Internal.ClassInfo, "net.minecraft.stats.Stat": Internal.ClassInfo, "dev.latvian.mods.kubejs.script.ConsoleLine$SourceLine": Internal.ClassInfo, "it.unimi.dsi.fastutil.bytes.Byte2ObjectFunction": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.AbstractObject2ObjectMap": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.world.WorldRendererExtended": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundClientCommandPacket": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.RedstonePoweredBlock": Internal.ClassInfo, "mezz.jei.api.runtime.config.IJeiConfigManager": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.AbstractLongCollection": Internal.ClassInfo, "net.akoto090.nothingcore.entity.custom.MudItem": Internal.ClassInfo, "java.time.chrono.Era": Internal.ClassInfo, "com.yogpc.qp.machines.module.QuarryModuleProvider": Internal.ClassInfo, "xfacthd.framedblocks.common.block.cube.FramedCollapsibleBlock": Internal.ClassInfo, "net.minecraft.world.level.chunk.Palette": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingEntityUseItemEvent$Stop": Internal.ClassInfo, "mezz.jei.api.gui.builder.IRecipeLayoutBuilder": Internal.ClassInfo, "mods.railcraft.world.level.block.entity.track.CouplerTrackBlockEntity$Mode": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundSetStructureBlockPacket": Internal.ClassInfo, "com.aizistral.omniconfig.wrappers.Omniconfig$StringParameter": Internal.ClassInfo, "net.minecraft.world.entity.vehicle.Boat$Type": Internal.ClassInfo, "com.kamth.zeldamod.block.custom.PrimoHeartFlowerBlock": Internal.ClassInfo, "appeng.block.networking.ControllerBlock": Internal.ClassInfo, "java.util.Spliterator$OfDouble": Internal.ClassInfo, "cofh.lib.common.effect.CustomParticleMobEffect": Internal.ClassInfo, "net.minecraft.client.gui.screens.inventory.AbstractContainerScreen": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.items.RopeArrowItem": Internal.ClassInfo, "appeng.block.networking.WirelessAccessPointBlock$State": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.Short2ShortFunction": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.Short2ObjectMap$Entry": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.WissenStorageBaseItem": Internal.ClassInfo, "net.minecraftforge.data.event.GatherDataEvent": Internal.ClassInfo, "com.gregtechceu.gtceu.core.mixins.IHolderReferenceAccessor": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.editor.ui.ResourcePanel": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.schema.RecipeConstructor": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.providers.nbt.LootNbtProviderType": Internal.ClassInfo, "net.minecraft.world.level.levelgen.Aquifer": Internal.ClassInfo, "net.minecraft.client.StringSplitter$LinePosConsumer": Internal.ClassInfo, "org.violetmoon.zeta.network.ZetaHandshakeMessage": Internal.ClassInfo, "java.awt.LayoutManager": Internal.ClassInfo, "net.minecraft.util.SignatureUpdater": Internal.ClassInfo, "net.minecraftforge.forgespi.language.ILifecycleEvent": Internal.ClassInfo, "net.fabricmc.fabric.api.renderer.v1.material.BlendMode": Internal.ClassInfo, "org.violetmoon.quark.content.tools.item.PathfindersQuillItem": Internal.ClassInfo, "com.sonicether.soundphysics.mixin.ChannelAccessor": Internal.ClassInfo, "net.minecraft.world.level.border.WorldBorder$Settings": Internal.ClassInfo, "net.fabricmc.fabric.api.rendering.data.v1.RenderAttachedBlockView": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.config.FluidConfig": Internal.ClassInfo, "java.awt.event.FocusEvent$Cause": Internal.ClassInfo, "com.inventorypets.items.windowsMojave": Internal.ClassInfo, "appeng.blockentity.grid.AENetworkInvBlockEntity": Internal.ClassInfo, "com.inventorypets.pets.petDubstep": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopepanelcorner.FramedExtendedDoubleCornerSlopePanelBlock": Internal.ClassInfo, "com.kamth.zeldamod.item.masks.NightMask": Internal.ClassInfo, "divinerpg.blocks.iceika.BlockWinterberryVinesBody": Internal.ClassInfo, "appeng.parts.AEBasePart": Internal.ClassInfo, "com.mna.api.entities.construct.IConstruct": Internal.ClassInfo, "appeng.api.inventories.ISegmentedInventory": Internal.ClassInfo, "net.irisshaders.iris.texture.pbr.loader.AtlasPBRLoader$PBRTextureAtlasSprite": Internal.ClassInfo, "de.dafuqs.spectrum.items.tools.BedrockAxeItem": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.DesolationRing": Internal.ClassInfo, "dev.latvian.mods.kubejs.bindings.KMath": Internal.ClassInfo, "com.mna.blocks.artifice.RunicLightBlock": Internal.ClassInfo, "dev.latvian.mods.rhino.mod.util.JsonSerializable": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.items.QuiverItem$Data": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.AxisAlignedLinearPosTest": Internal.ClassInfo, "techreborn.items.ScrapBoxItem": Internal.ClassInfo, "net.minecraft.util.valueproviders.ConstantFloat": Internal.ClassInfo, "com.mojang.serialization.CompressorHolder": Internal.ClassInfo, "elucent.eidolon.client.particle.RuneParticleData": Internal.ClassInfo, "com.inventorypets.blocks.stoneSpawn": Internal.ClassInfo, "net.minecraft.server.packs.metadata.MetadataSectionSerializer": Internal.ClassInfo, "net.minecraftforge.event.AddReloadListenerEvent": Internal.ClassInfo, "me.steinborn.krypton.mod.shared.WorldEntityByChunkAccess": Internal.ClassInfo, "com.mojang.datafixers.OpticFinder": Internal.ClassInfo, "net.minecraft.world.entity.ai.attributes.RangedAttribute": Internal.ClassInfo, "com.mna.api.entities.construct.IConstructConstruction": Internal.ClassInfo, "shcm.shsupercm.forge.citresewn.pack.cits.CITEnchantment": Internal.ClassInfo, "xfacthd.framedblocks.api.block.AbstractFramedBlock": Internal.ClassInfo, "net.caffeinemc.mods.sodium.api.vertex.buffer.VertexBufferWriter": Internal.ClassInfo, "de.dafuqs.spectrum.items.trinkets.CottonCloudBootsItem": Internal.ClassInfo, "appeng.api.storage.AEKeyFilter": Internal.ClassInfo, "net.minecraftforge.event.entity.player.FillBucketEvent": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.CrackedEndPortalFrameBlock": Internal.ClassInfo, "xfacthd.framedblocks.api.block.IFramedBlock": Internal.ClassInfo, "java.util.concurrent.locks.ReadWriteLock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.SeaPickleFeature": Internal.ClassInfo, "net.minecraftforge.client.model.geometry.BlockGeometryBakingContext$VisibilityData": Internal.ClassInfo, "dev.latvian.mods.kubejs.script.PlatformWrapper$ModInfo": Internal.ClassInfo, "com.mna.blocks.artifice.OcculusBlock": Internal.ClassInfo, "net.minecraft.world.level.block.ChestBlock": Internal.ClassInfo, "appeng.helpers.patternprovider.PatternProviderLogic": Internal.ClassInfo, "mcp.mobius.waila.mixin.BossHealthOverlayAccess": Internal.ClassInfo, "org.violetmoon.zeta.config.ValueDefinition": Internal.ClassInfo, "net.minecraft.world.entity.ai.behavior.BehaviorControl": Internal.ClassInfo, "com.inventorypets.blocks.netherSpawn": Internal.ClassInfo, "net.minecraft.world.entity.schedule.Schedule": Internal.ClassInfo, "com.mna.network.messages.BaseMessage": Internal.ClassInfo, "net.minecraft.world.level.saveddata.maps.MapDecoration$Type": Internal.ClassInfo, "com.mna.items.manaweaving.ItemManaweaverWand": Internal.ClassInfo, "com.inventorypets.pets.petSnowGolem": Internal.ClassInfo, "com.lowdragmc.lowdraglib.side.fluid.FluidStack": Internal.ClassInfo, "net.minecraft.world.entity.ai.goal.WrappedGoal": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeMenuType": Internal.ClassInfo, "dev.architectury.fluid.FluidStack": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundDamageEventPacket": Internal.ClassInfo, "divinerpg.blocks.vethea.BlockKarosHeatTile": Internal.ClassInfo, "net.minecraft.world.level.chunk.PalettedContainer$CountConsumer": Internal.ClassInfo, "com.inventorypets.items.nuggetLapis": Internal.ClassInfo, "com.mojang.serialization.codecs.PairMapCodec": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.tag.TagPrefix$Conditions": Internal.ClassInfo, "net.minecraft.world.entity.animal.Ocelot": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.ui.ContextMenuItem": Internal.ClassInfo, "divinerpg.effect.mob.GroglinBountyEffect": Internal.ClassInfo, "appeng.block.storage.ChestBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.api.cover.CoverBehavior": Internal.ClassInfo, "pokefenn.totemic.api.totem.TotemEffect": Internal.ClassInfo, "dev.latvian.mods.kubejs.player.KubeJSInventoryListener": Internal.ClassInfo, "net.minecraft.world.entity.player.ProfileKeyPair": Internal.ClassInfo, "net.minecraft.world.entity.Entity$MovementEmission": Internal.ClassInfo, "appeng.crafting.inv.ListCraftingInventory": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.client.arcanemicon.ArcanemiconGui": Internal.ClassInfo, "net.minecraft.client.Minecraft$ChatStatus": Internal.ClassInfo, "net.minecraft.util.profiling.metrics.MetricCategory": Internal.ClassInfo, "java.util.ImmutableCollections$MapN": Internal.ClassInfo, "net.minecraft.client.model.geom.builders.CubeDeformation": Internal.ClassInfo, "de.dafuqs.spectrum.items.food.StarCandyItem": Internal.ClassInfo, "com.gregtechceu.gtceu.api.machine.multiblock.PartAbility": Internal.ClassInfo, "dev.latvian.mods.kubejs.loot.EntityLootEventJS": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.dd_deco.BlackslagVegetationBlock": Internal.ClassInfo, "net.minecraftforge.client.textures.ForgeTextureMetadata$Serializer": Internal.ClassInfo, "io.wispforest.accessories.api.SoundEventData": Internal.ClassInfo, "net.minecraft.core.particles.ParticleType": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.material.properties.PropertyKey$EmptyProperty": Internal.ClassInfo, "net.minecraft.client.renderer.ChunkBufferBuilderPack": Internal.ClassInfo, "net.fabricmc.fabric.impl.lookup.block.BlockApiCacheImpl": Internal.ClassInfo, "com.mojang.blaze3d.vertex.VertexFormat$Mode": Internal.ClassInfo, "net.minecraftforge.fml.ModLoadingStage": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundOpenScreenPacket": Internal.ClassInfo, "com.gregtechceu.gtceu.api.item.tool.ToolDefinitionBuilder": Internal.ClassInfo, "me.jellysquid.mods.lithium.mixin.world.combined_heightmap_update.HeightmapAccessor": Internal.ClassInfo, "net.minecraft.world.scores.criteria.ObjectiveCriteria$RenderType": Internal.ClassInfo, "com.mojang.datafixers.optics.Optic": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decoration.RadiantGlassBlock": Internal.ClassInfo, "xaero.map.world.MapDimension": Internal.ClassInfo, "net.minecraft.world.level.block.PinkPetalsBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.chars.CharIterator": Internal.ClassInfo, "net.minecraftforge.event.entity.player.AdvancementEvent": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.texture.ResourceBorderTexture": Internal.ClassInfo, "net.minecraft.world.level.block.SweetBerryBushBlock": Internal.ClassInfo, "mezz.jei.api.runtime.IClickableIngredient": Internal.ClassInfo, "com.enderio.api.misc.ColorControl": Internal.ClassInfo, "net.fabricmc.fabric.api.event.Event": Internal.ClassInfo, "net.minecraft.client.renderer.RenderStateShard$LineStateShard": Internal.ClassInfo, "software.bernie.geckolib.core.animation.Animation": Internal.ClassInfo, "net.minecraft.util.valueproviders.FloatProvider": Internal.ClassInfo, "net.minecraftforge.client.textures.ForgeTextureMetadata": Internal.ClassInfo, "me.jellysquid.mods.lithium.mixin.chunk.entity_class_groups.ServerEntityManagerAccessor": Internal.ClassInfo, "net.minecraftforge.eventbus.api.Event": Internal.ClassInfo, "net.minecraft.world.inventory.MerchantMenu": Internal.ClassInfo, "com.mna.items.base.IItemWithGui": Internal.ClassInfo, "org.apache.logging.log4j.spi.LoggerRegistry": Internal.ClassInfo, "com.inventorypets.pets.petMenorah": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundEntityTagQuery": Internal.ClassInfo, "net.minecraftforge.energy.EnergyStorage": Internal.ClassInfo, "de.dafuqs.spectrum.mixin.accessors.MapStateAccessor": Internal.ClassInfo, "com.lothrazar.simpletomb.item.GraveKeyItem": Internal.ClassInfo, "com.google.common.base.Function": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.editor.ui.MenuPanel": Internal.ClassInfo, "com.google.common.collect.ImmutableMap": Internal.ClassInfo, "net.minecraft.advancements.critereon.InventoryChangeTrigger$TriggerInstance": Internal.ClassInfo, "net.minecraft.client.renderer.RenderType$OutlineProperty": Internal.ClassInfo, "mcp.mobius.waila.mixed.IShearable": Internal.ClassInfo, "com.mojang.datafixers.kinds.App": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.api.crystalritual.CrystalRitualArea": Internal.ClassInfo, "net.minecraft.world.entity.vehicle.Boat$Status": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.jade_vines.JadeVinePlantBlock": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.TheInfinitum": Internal.ClassInfo, "net.minecraft.client.multiplayer.chat.LoggedChatEvent": Internal.ClassInfo, "net.minecraft.world.entity.animal.Bee": Internal.ClassInfo, "java.awt.JobAttributes$DefaultSelectionType": Internal.ClassInfo, "net.minecraft.world.level.biome.Climate$RTree$Leaf": Internal.ClassInfo, "mods.railcraft.world.level.block.signal.DualSignalBlock": Internal.ClassInfo, "de.dafuqs.spectrum.energy.InkStorageItem": Internal.ClassInfo, "net.minecraftforge.client.model.generators.BlockModelBuilder": Internal.ClassInfo, "divinerpg.items.vanilla.ItemTomato": Internal.ClassInfo, "com.mna.api.blocks.tile.IEldrinConsumerTile": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.api.wissen.IWissenWandControlledTileEntity": Internal.ClassInfo, "net.minecraftforge.event.enchanting.EnchantmentLevelSetEvent": Internal.ClassInfo, "java.text.ParsePosition": Internal.ClassInfo, "io.wispforest.accessories.api.Accessory": Internal.ClassInfo, "appeng.block.networking.EnergyCellBlock": Internal.ClassInfo, "java.util.Deque": Internal.ClassInfo, "com.mna.items.sorcery.bound.ItemBoundAxe": Internal.ClassInfo, "net.minecraftforge.event.server.ServerStartingEvent": Internal.ClassInfo, "net.minecraftforge.client.event.sound.SoundEvent$SoundSourceEvent": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.BlackstoneReplaceProcessor": Internal.ClassInfo, "com.google.common.collect.ImmutableMultiset$Builder": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerInteractEvent$EntityInteractSpecific": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.parameters.LootContextParam": Internal.ClassInfo, "net.minecraft.world.level.chunk.PalettedContainer$Strategy": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.redstone.PlayerDetectorBlock": Internal.ClassInfo, "com.inventorypets.pets.petDirt": Internal.ClassInfo, "org.violetmoon.zeta.item.ext.IZetaItemExtensions": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blockpredicates.StateTestingPredicate": Internal.ClassInfo, "com.gregtechceu.gtceu.api.pipenet.IMaterialPipeType": Internal.ClassInfo, "org.violetmoon.zeta.capability.ZetaCapability": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.AbstractInt2ObjectMap": Internal.ClassInfo, "net.minecraftforge.registries.DeferredRegister": Internal.ClassInfo, "com.inventorypets.items.siameseGift": Internal.ClassInfo, "io.netty.channel.ChannelFuture": Internal.ClassInfo, "java.text.DateFormatSymbols": Internal.ClassInfo, "net.minecraft.world.level.block.StonecutterBlock": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.Insignia": Internal.ClassInfo, "org.violetmoon.zetaimplforge.client.IZetaForgeItemStuff": Internal.ClassInfo, "net.minecraft.world.entity.animal.Bee$BaseBeeGoal": Internal.ClassInfo, "io.wispforest.owo.ui.core.Component$FocusSource": Internal.ClassInfo, "net.minecraft.world.level.block.DirectionalBlock": Internal.ClassInfo, "com.mna.items.artifice.ItemWitherguardAmulet": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.entries.EntryGroup$Builder": Internal.ClassInfo, "net.minecraft.world.entity.npc.VillagerDataHolder": Internal.ClassInfo, "net.minecraft.world.item.enchantment.MultiShotEnchantment": Internal.ClassInfo, "net.minecraft.network.chat.LastSeenMessages$Update": Internal.ClassInfo, "mods.railcraft.world.entity.vehicle.locomotive.Locomotive$Mode": Internal.ClassInfo, "divinerpg.blocks.base.BlockModSoulTrap": Internal.ClassInfo, "snownee.kiwi.mixin.forge.ItemColorsAccess": Internal.ClassInfo, "it.unimi.dsi.fastutil.bytes.Byte2BooleanFunction": Internal.ClassInfo, "net.minecraftforge.client.extensions.IForgeGuiGraphics": Internal.ClassInfo, "net.minecraft.world.level.block.BeehiveBlock": Internal.ClassInfo, "appeng.blockentity.AEBaseBlockEntity": Internal.ClassInfo, "net.minecraft.world.item.DoubleHighBlockItem": Internal.ClassInfo, "divinerpg.blocks.arcana.BlockPinfly": Internal.ClassInfo, "net.minecraft.world.level.block.SpreadingSnowyDirtBlock": Internal.ClassInfo, "net.minecraft.data.PackOutput": Internal.ClassInfo, "mezz.jei.library.runtime.JeiRuntime": Internal.ClassInfo, "net.minecraft.world.level.block.SuspiciousEffectHolder": Internal.ClassInfo, "dev.latvian.mods.kubejs.registry.RegistryEventJS": Internal.ClassInfo, "it.unimi.dsi.fastutil.booleans.Boolean2ShortFunction": Internal.ClassInfo, "dev.ftb.mods.ftbquests.events.QuestProgressEventData": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.WissenAltarBlock": Internal.ClassInfo, "terrablender.api.RegionType": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.PureRedstoneBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.DensityFunction$ContextProvider": Internal.ClassInfo, "dev.emi.trinkets.api.TrinketItem": Internal.ClassInfo, "biomesoplenty.common.block.HugeCloverPetalBlock": Internal.ClassInfo, "java.awt.Frame": Internal.ClassInfo, "xfacthd.framedblocks.common.block.pillar.FramedHalfPillarBlock": Internal.ClassInfo, "de.dafuqs.spectrum.items.trinkets.ExtraReachGlovesItem": Internal.ClassInfo, "net.minecraft.world.item.DyeableHorseArmorItem": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.fluid.MidnightSolutionFluidBlock": Internal.ClassInfo, "java.math.MathContext": Internal.ClassInfo, "io.wispforest.accessories.api.DropRule": Internal.ClassInfo, "mezz.jei.api.runtime.config.IJeiConfigValue": Internal.ClassInfo, "dev.onyxstudios.cca.api.v3.component.ComponentContainer": Internal.ClassInfo, "com.enderio.api.conduit.IClientConduitData": Internal.ClassInfo, "net.minecraft.network.syncher.EntityDataAccessor": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.conditional.colored_tree.ColoredWoodBlock": Internal.ClassInfo, "appeng.debug.ChunkLoaderBlockEntity": Internal.ClassInfo, "io.wispforest.accessories.impl.ExpandedSimpleContainer": Internal.ClassInfo, "net.minecraft.world.item.alchemy.Potion": Internal.ClassInfo, "java.time.ZoneId": Internal.ClassInfo, "com.mna.effects.harmful.EffectMindControl": Internal.ClassInfo, "net.fabricmc.fabric.impl.registry.sync.RemappableRegistry": Internal.ClassInfo, "net.minecraft.world.level.block.BambooStalkBlock": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.PlacedItemBlock": Internal.ClassInfo, "java.lang.StringBuilder": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundForgetLevelChunkPacket": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.Structure$GenerationStub": Internal.ClassInfo, "xfacthd.framedblocks.common.block.special.PoweredFramingSawBlock": Internal.ClassInfo, "dev.emi.trinkets.api.TrinketInventory": Internal.ClassInfo, "xaero.map.gui.message.render.MessageBoxRenderer": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.MutableArmorTier": Internal.ClassInfo, "org.apache.logging.log4j.core.jmx.RingBufferAdminMBean": Internal.ClassInfo, "com.kamth.zeldamod.item.items.SlingshotItem": Internal.ClassInfo, "net.minecraftforge.event.entity.player.ArrowLooseEvent": Internal.ClassInfo, "org.apache.logging.log4j.spi.LoggerContext": Internal.ClassInfo, "divinerpg.recipe.InfusionTableRecipe$Type": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.api.quack.IAbyssalHeartBearer": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.BambooLeaves": Internal.ClassInfo, "software.bernie.geckolib.core.animation.AnimationController$CustomKeyframeHandler": Internal.ClassInfo, "de.dafuqs.spectrum.items.CraftingTabletItem": Internal.ClassInfo, "techreborn.items.tool.industrial.IndustrialJackhammerItem": Internal.ClassInfo, "net.minecraft.data.worldgen.BootstapContext": Internal.ClassInfo, "net.minecraft.client.CameraType": Internal.ClassInfo, "de.dafuqs.spectrum.items.trinkets.AzureDikeTrinketItem": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.math.PixelBuffer": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetBorderSizePacket": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.Short2LongFunction": Internal.ClassInfo, "java.awt.image.Raster": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.placement.StructurePlacement$ExclusionZone": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.tileentity.ExposedTileSimpleInventory": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.util.sorting.VertexSorters$AbstractVertexSorter": Internal.ClassInfo, "net.minecraft.client.renderer.texture.TextureAtlasSprite": Internal.ClassInfo, "de.dafuqs.spectrum.items.tools.AoEBreakingTool": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.VinesFeature": Internal.ClassInfo, "de.dafuqs.spectrum.items.magic_items.BuildingStaffItem": Internal.ClassInfo, "appeng.api.parts.ICustomCableConnection": Internal.ClassInfo, "de.dafuqs.spectrum.registries.SpectrumItems$8": Internal.ClassInfo, "net.blay09.mods.balm.api.event.BalmEvent": Internal.ClassInfo, "de.dafuqs.spectrum.registries.SpectrumItems$6": Internal.ClassInfo, "de.dafuqs.spectrum.registries.SpectrumItems$7": Internal.ClassInfo, "net.minecraft.world.entity.player.StackedContents": Internal.ClassInfo, "de.dafuqs.spectrum.registries.SpectrumItems$4": Internal.ClassInfo, "net.minecraft.world.level.chunk.StructureAccess": Internal.ClassInfo, "mods.railcraft.api.track.TrackType$EventHandler": Internal.ClassInfo, "de.dafuqs.spectrum.registries.SpectrumItems$5": Internal.ClassInfo, "de.dafuqs.spectrum.registries.SpectrumItems$2": Internal.ClassInfo, "de.dafuqs.spectrum.registries.SpectrumItems$3": Internal.ClassInfo, "de.dafuqs.spectrum.registries.SpectrumItems$1": Internal.ClassInfo, "java.awt.ComponentOrientation": Internal.ClassInfo, "net.minecraftforge.event.level.ExplosionEvent$Detonate": Internal.ClassInfo, "xfacthd.framedblocks.common.block.stairs.FramedSlopedStairsBlock": Internal.ClassInfo, "xfacthd.framedblocks.api.shapes.ShapeProvider": Internal.ClassInfo, "net.minecraft.advancements.critereon.EntityPredicate$Builder": Internal.ClassInfo, "mcp.mobius.waila.mixin.NoteBlockAccess": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decoration.ColoredPressurePlateBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.api.recipe.modifier.RecipeModifier": Internal.ClassInfo, "xaero.map.task.MapRunnerTask": Internal.ClassInfo, "net.mehvahdjukaar.amendments.common.block.DyeCauldronBlock": Internal.ClassInfo, "net.minecraft.network.protocol.game.VecDeltaCodec": Internal.ClassInfo, "net.minecraft.world.level.chunk.BulkSectionAccess": Internal.ClassInfo, "net.minecraft.world.item.Items": Internal.ClassInfo, "com.gregtechceu.gtceu.core.mixins.LootPoolAccessor": Internal.ClassInfo, "net.blay09.mods.kuma.mixin.KeyMappingAccessor": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.foliageplacers.CherryFoliagePlacer": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.widget.SlotWidget": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.ui.Widget$DrawLayer": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundSignUpdatePacket": Internal.ClassInfo, "de.dafuqs.spectrum.items.magic_items.NaturesStaffItem": Internal.ClassInfo, "net.minecraft.world.level.biome.AmbientParticleSettings": Internal.ClassInfo, "vectorwing.farmersdelight.common.item.KnifeItem": Internal.ClassInfo, "divinerpg.items.base.DivineShield": Internal.ClassInfo, "dev.latvian.mods.kubejs.util.NBTIOWrapper": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$Render$Pre": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.ArcaneWorkbenchBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.gui.chest.ChestMenuInventoryClickEvent": Internal.ClassInfo, "elucent.eidolon.common.block.HerbBlockBase": Internal.ClassInfo, "java.lang.ThreadLocal": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.Double2FloatFunction": Internal.ClassInfo, "java.awt.Image": Internal.ClassInfo, "xfacthd.framedblocks.api.predicate.fullface.FullFacePredicate": Internal.ClassInfo, "java.awt.dnd.DragSource": Internal.ClassInfo, "com.enderio.base.common.enchantment.EIOBaseEnchantment": Internal.ClassInfo, "com.kamth.zeldamod.block.custom.ShockSwitchBlock": Internal.ClassInfo, "net.minecraft.client.player.inventory.Hotbar": Internal.ClassInfo, "com.gregtechceu.gtceu.api.capability.recipe.RecipeCapability": Internal.ClassInfo, "com.enderio.api.capability.IMultiCapabilityItem": Internal.ClassInfo, "java.nio.channels.SeekableByteChannel": Internal.ClassInfo, "divinerpg.items.base.ItemModSword": Internal.ClassInfo, "techreborn.blocks.machine.tier0.IronAlloyFurnaceBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.ShortSpliterator": Internal.ClassInfo, "net.minecraft.client.renderer.chunk.VisibilitySet": Internal.ClassInfo, "net.minecraftforge.fluids.IFluidTank": Internal.ClassInfo, "appeng.integration.abstraction.IAEFacade": Internal.ClassInfo, "dev.latvian.mods.rhino.mod.util.CountingMap": Internal.ClassInfo, "org.violetmoon.zeta.module.ZetaModule": Internal.ClassInfo, "dev.ftb.mods.ftbquests.quest.QuestObject": Internal.ClassInfo, "net.minecraftforge.client.event.EntityRenderersEvent": Internal.ClassInfo, "net.minecraft.util.KeyDispatchDataCodec": Internal.ClassInfo, "vazkii.patchouli.client.book.BookEntry": Internal.ClassInfo, "divinerpg.blocks.arcana.BlockModAltar": Internal.ClassInfo, "io.netty.buffer.PooledByteBufAllocatorMetric": Internal.ClassInfo, "net.minecraft.world.level.biome.BiomeSpecialEffects$GrassColorModifier$ColorModifier": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2FloatOpenHashMap": Internal.ClassInfo, "com.mojang.datafixers.kinds.K2": Internal.ClassInfo, "net.minecraft.world.level.block.CarvedPumpkinBlock": Internal.ClassInfo, "com.mojang.datafixers.kinds.K1": Internal.ClassInfo, "net.minecraft.world.inventory.ShulkerBoxMenu": Internal.ClassInfo, "net.minecraft.world.entity.MobCategory": Internal.ClassInfo, "mcp.mobius.waila.mixin.KeyMappingAccess": Internal.ClassInfo, "net.minecraftforge.client.extensions.common.IClientMobEffectExtensions": Internal.ClassInfo, "java.lang.constant.DirectMethodHandleDesc$Kind": Internal.ClassInfo, "net.minecraft.data.DataGenerator": Internal.ClassInfo, "io.wispforest.owo.ui.event.MouseUp": Internal.ClassInfo, "com.mna.items.constructs.parts.arms.ConstructPartFishingArmLeft": Internal.ClassInfo, "net.raphimc.immediatelyfast.injection.interfaces.IBufferBuilder": Internal.ClassInfo, "xfacthd.framedblocks.common.block.cube.FramedStorageBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.api.pattern.util.RelativeDirection": Internal.ClassInfo, "net.minecraftforge.event.entity.living.ShieldBlockEvent": Internal.ClassInfo, "org.w3c.dom.NodeList": Internal.ClassInfo, "java.lang.module.ModuleDescriptor$Provides": Internal.ClassInfo, "com.lowdragmc.lowdraglib.utils.TrackedDummyWorld": Internal.ClassInfo, "it.unimi.dsi.fastutil.bytes.Byte2ShortFunction": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.BlockPredicateFilter": Internal.ClassInfo, "divinerpg.items.arcana.ItemAttractor": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slope.FramedInnerPrismCornerBlock": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.AlchemyBoilerBlock": Internal.ClassInfo, "io.wispforest.owo.mixin.ui.SimpleRegistryAccessor": Internal.ClassInfo, "dev.ftb.mods.ftbquests.quest.ChapterImage": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.DataSenderKJS": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetCarriedItemPacket": Internal.ClassInfo, "net.minecraft.world.level.entity.EntityTickList": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerXpEvent$XpChange": Internal.ClassInfo, "org.violetmoon.quark.content.tools.item.AncientTomeItem": Internal.ClassInfo, "net.minecraft.world.level.block.entity.CampfireBlockEntity": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.structures.OceanRuinStructure$Type": Internal.ClassInfo, "net.minecraft.nbt.TagVisitor": Internal.ClassInfo, "java.util.function.DoublePredicate": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerEvent$PlayerRespawnEvent": Internal.ClassInfo, "net.minecraft.commands.CommandBuildContext$Configurable": Internal.ClassInfo, "de.dafuqs.spectrum.items.tools.GreatswordItem": Internal.ClassInfo, "com.mna.effects.particles.EffectWithCustomClientParticles": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.block.WaterBlock": Internal.ClassInfo, "appeng.debug.PhantomNodeBlock": Internal.ClassInfo, "java.awt.geom.Rectangle2D": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.ui.WidgetLayout$_Simple": Internal.ClassInfo, "mods.railcraft.world.level.block.track.outfitted.BoosterTrackBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.material.info.MaterialFlag": Internal.ClassInfo, "com.inventorypets.pets.petFlyingSaddle": Internal.ClassInfo, "mezz.jei.api.recipe.RecipeType": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.TotemBaseBlock": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.ui.Widget": Internal.ClassInfo, "divinerpg.effect.mob.WarmthEffect": Internal.ClassInfo, "net.minecraft.world.level.saveddata.maps.MapBanner": Internal.ClassInfo, "appeng.client.render.effects.ParticleTypes$2": Internal.ClassInfo, "appeng.client.render.effects.ParticleTypes$1": Internal.ClassInfo, "mods.railcraft.world.level.block.signal.BlockSignalBlock": Internal.ClassInfo, "mods.railcraft.world.level.block.tank.SteelTankWallBlock": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.items.AltimeterItem": Internal.ClassInfo, "net.minecraft.server.ServerAdvancementManager": Internal.ClassInfo, "net.minecraft.world.level.block.WitherWallSkullBlock": Internal.ClassInfo, "net.minecraft.network.chat.HoverEvent$Action": Internal.ClassInfo, "net.minecraft.world.item.HangingSignItem": Internal.ClassInfo, "net.minecraftforge.fml.event.lifecycle.InterModProcessEvent": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.ObjectBidirectionalIterable": Internal.ClassInfo, "net.minecraft.world.level.block.SoundType": Internal.ClassInfo, "com.mna.api.entities.construct.IConstructDiagnostics$Status": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.fluids.FluidContainerList$Category": Internal.ClassInfo, "com.probejs.jdoc.java.type.ITypeInfo": Internal.ClassInfo, "com.mojang.blaze3d.vertex.VertexFormatElement$Type": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.entries.SequentialEntry$Builder": Internal.ClassInfo, "net.minecraft.world.level.levelgen.DensityFunction$NoiseHolder": Internal.ClassInfo, "net.minecraft.world.entity.LerpingModel": Internal.ClassInfo, "com.inventorypets.pets.petNetherPortal": Internal.ClassInfo, "mods.railcraft.world.level.block.CrusherMultiblockBlock": Internal.ClassInfo, "net.minecraftforge.client.event.RegisterClientCommandsEvent": Internal.ClassInfo, "java.time.format.ResolverStyle": Internal.ClassInfo, "io.wispforest.owo.ui.core.Animation$Composed": Internal.ClassInfo, "java.util.function.ObjIntConsumer": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.BellAttachType": Internal.ClassInfo, "xaero.map.world.MapConnectionManager": Internal.ClassInfo, "dev.latvian.mods.kubejs.fluid.FluidStackJS": Internal.ClassInfo, "net.fabricmc.fabric.impl.gamerule.RuleKeyExtensions": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.gui.options.OptionFlag": Internal.ClassInfo, "de.dafuqs.spectrum.items.EmptyFluidEntityBucketItem": Internal.ClassInfo, "net.irisshaders.iris.api.v0.item.IrisItemLightProvider": Internal.ClassInfo, "net.minecraftforge.client.extensions.common.IClientItemExtensions": Internal.ClassInfo, "net.minecraft.world.level.block.ComposterBlock": Internal.ClassInfo, "com.mna.effects.harmful.EffectConfuse": Internal.ClassInfo, "net.minecraft.client.resources.model.BakedModel": Internal.ClassInfo, "net.fabricmc.fabric.impl.networking.AbstractChanneledNetworkAddon": Internal.ClassInfo, "net.minecraft.client.gui.navigation.ScreenAxis": Internal.ClassInfo, "net.minecraftforge.forgespi.locating.IModFile$Type": Internal.ClassInfo, "net.raphimc.immediatelyfast.injection.interfaces.IMapRenderer": Internal.ClassInfo, "dev.latvian.mods.kubejs.misc.ParticleTypeBuilder": Internal.ClassInfo, "net.minecraft.network.PacketListener": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.LootParams": Internal.ClassInfo, "io.netty.channel.DefaultEventLoopGroup": Internal.ClassInfo, "com.gregtechceu.gtceu.integration.kjs.recipe.GTRecipeSchema$GTRecipeJS": Internal.ClassInfo, "com.mna.enchantments.staves.DurationModifier": Internal.ClassInfo, "net.minecraft.world.entity.animal.horse.Llama$Variant": Internal.ClassInfo, "com.gregtechceu.gtceu.api.item.tool.aoe.AoESymmetrical": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.world.chunk.ChunkHolderExtended": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.conditional.resonant_lily.ResonantLilyBlock": Internal.ClassInfo, "net.minecraft.world.entity.monster.Guardian": Internal.ClassInfo, "mods.railcraft.world.level.block.entity.RailcraftBlockEntity": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopepanel.FramedFlatExtendedSlopePanelCornerBlock": Internal.ClassInfo, "net.minecraft.client.resources.sounds.SoundInstance$Attenuation": Internal.ClassInfo, "java.awt.dnd.DragSourceContext": Internal.ClassInfo, "net.minecraft.world.entity.EquipmentSlot": Internal.ClassInfo, "com.kamth.zeldamod.item.items.LightArrowItem": Internal.ClassInfo, "net.minecraft.world.entity.ai.Brain": Internal.ClassInfo, "net.minecraft.world.level.chunk.storage.RegionBitmap": Internal.ClassInfo, "org.violetmoon.zeta.event.bus.IZetaPlayEvent": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopeslab.FramedFlatSlopeSlabCornerBlock": Internal.ClassInfo, "net.minecraft.world.level.chunk.ChunkGeneratorStructureState": Internal.ClassInfo, "divinerpg.enchant.InsulationEnchant": Internal.ClassInfo, "net.fabricmc.fabric.impl.registry.sync.RemappableRegistry$RemapMode": Internal.ClassInfo, "com.mna.api.items.IFactionSpecific": Internal.ClassInfo, "com.yogpc.qp.machines.controller.BlockController": Internal.ClassInfo, "java.io.ObjectOutput": Internal.ClassInfo, "java.util.regex.MatchResult": Internal.ClassInfo, "dev.latvian.mods.rhino.ClassShutter": Internal.ClassInfo, "java.lang.Enum": Internal.ClassInfo, "net.minecraft.world.item.DyeableArmorItem": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.EnchanterPearl": Internal.ClassInfo, "java.awt.event.WindowListener": Internal.ClassInfo, "net.mehvahdjukaar.amendments.common.block.LiquidCauldronBlock": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slope.FramedHalfSlopeBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.NoiseGeneratorSettings": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.ui.Theme": Internal.ClassInfo, "net.minecraftforge.registries.IdMappingEvent$IdRemapping": Internal.ClassInfo, "mods.railcraft.world.item.FueledFireboxBlockItem": Internal.ClassInfo, "net.fabricmc.fabric.api.transfer.v1.storage.SlottedStorage": Internal.ClassInfo, "net.minecraft.world.entity.Display$TextDisplay$LineSplitter": Internal.ClassInfo, "tfar.craftingstation.CraftingStationBlock": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.curio.ArcanumRingItem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.stateproviders.NoiseBasedStateProvider": Internal.ClassInfo, "com.gregtechceu.gtceu.api.item.IComponentItem": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.util.TreeBuilder": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.foliageplacers.FancyFoliagePlacer": Internal.ClassInfo, "dev.architectury.extensions.injected.InjectedItemPropertiesExtension": Internal.ClassInfo, "net.minecraft.world.level.levelgen.BitRandomSource": Internal.ClassInfo, "org.violetmoon.zeta.block.ext.BlockExtensionFactory": Internal.ClassInfo, "com.mna.effects.harmful.EffectAsphyxiate": Internal.ClassInfo, "java.util.NavigableSet": Internal.ClassInfo, "pokefenn.totemic.block.totem.TotemBaseBlock": Internal.ClassInfo, "net.minecraft.client.multiplayer.chat.report.ReportEnvironment$Server": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.foliageplacers.MegaPineFoliagePlacer": Internal.ClassInfo, "net.minecraft.util.AbortableIterationConsumer$Continuation": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.LightCasingBlock": Internal.ClassInfo, "de.keksuccino.fancymenu.mixin.mixins.common.client.IMixinButton": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.boom.ThreatConfluxBlock": Internal.ClassInfo, "java.net.URLStreamHandler": Internal.ClassInfo, "mods.railcraft.world.entity.vehicle.locomotive.Locomotive$Speed": Internal.ClassInfo, "java.awt.event.HierarchyListener": Internal.ClassInfo, "de.dafuqs.spectrum.enchantments.BigCatchEnchantment": Internal.ClassInfo, "net.minecraft.network.chat.PlayerChatMessage": Internal.ClassInfo, "elucent.eidolon.common.block.IncenseBurnerBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2ObjectLinkedOpenHashMap": Internal.ClassInfo, "net.minecraft.world.inventory.ContainerLevelAccess": Internal.ClassInfo, "net.minecraft.world.level.NaturalSpawner$SpawnState": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.structures.JungleTempleStructure": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.schema.RecipeOptional": Internal.ClassInfo, "vazkii.patchouli.mixin.client.AccessorClientAdvancements": Internal.ClassInfo, "de.dafuqs.spectrum.recipe.fluid_converting.FluidConvertingRecipe": Internal.ClassInfo, "org.embeddedt.modernfix.duck.ISafeBlockGetter": Internal.ClassInfo, "elucent.eidolon.common.item.SappingSwordItem": Internal.ClassInfo, "appeng.items.tools.fluix.FluixSwordItem": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.ingredient.IIngredientSlot": Internal.ClassInfo, "appeng.helpers.patternprovider.PatternContainer": Internal.ClassInfo, "java.net.ContentHandlerFactory": Internal.ClassInfo, "net.minecraft.world.level.block.ObserverBlock": Internal.ClassInfo, "net.minecraft.world.level.block.BlastFurnaceBlock": Internal.ClassInfo, "net.minecraftforge.client.event.RegisterKeyMappingsEvent": Internal.ClassInfo, "dev.architectury.core.fluid.ArchitecturyFluidAttributes": Internal.ClassInfo, "com.mna.enchantments.Returning": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.custom.BasicItemJS$Builder": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.HunterGuidebook": Internal.ClassInfo, "mods.railcraft.world.level.block.track.outfitted.ActivatorTrackBlock": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingBreatheEvent": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.RandomPatchFeature": Internal.ClassInfo, "com.gregtechceu.gtceu.data.recipe.builder.GTRecipeBuilder$ResearchRecipeEntry": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.LootTable": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.worldgen.BiomeWeightModifier": Internal.ClassInfo, "net.minecraft.world.item.EggItem": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.jade_vines.NephriteBlossomBulbBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.ExplosionEventJS": Internal.ClassInfo, "net.minecraft.world.level.block.BaseFireBlock": Internal.ClassInfo, "com.enderio.base.common.item.capacitors.FixedCapacitorItem": Internal.ClassInfo, "io.wispforest.owo.mixin.ServerPlayNetworkHandlerAccessor": Internal.ClassInfo, "javax.swing.text.StyleConstants$FontConstants": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.TheCube": Internal.ClassInfo, "appeng.api.implementations.IPowerChannelState": Internal.ClassInfo, "net.mehvahdjukaar.polytone.mixins.forge.CreativeTabAccessor": Internal.ClassInfo, "mods.railcraft.world.level.block.track.outfitted.LockingTrackBlock": Internal.ClassInfo, "org.violetmoon.zeta.advancement.AdvancementModifierRegistry": Internal.ClassInfo, "net.minecraft.world.item.AxeItem": Internal.ClassInfo, "biomesoplenty.common.block.SnowblossomLeavesBlock": Internal.ClassInfo, "com.mna.items.sorcery.ItemCrystalPhylactery": Internal.ClassInfo, "net.minecraftforge.event.entity.living.MobEffectEvent$Added": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.NumberComponent$LongRange": Internal.ClassInfo, "com.gregtechceu.gtceu.api.machine.feature.IFancyUIMachine": Internal.ClassInfo, "com.gregtechceu.gtceu.api.block.IFilterType": Internal.ClassInfo, "appeng.items.materials.NamePressItem": Internal.ClassInfo, "net.fabricmc.fabric.mixin.renderer.client.BakedModelMixin": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.LangEventJS$Key": Internal.ClassInfo, "snownee.lychee.block_crushing.BlockCrushingContext": Internal.ClassInfo, "java.util.Arrays$ArrayList": Internal.ClassInfo, "org.violetmoon.zeta.module.ZetaLoadModuleAnnotationData": Internal.ClassInfo, "java.awt.Color": Internal.ClassInfo, "net.minecraft.client.telemetry.TelemetryEventSender": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.ItemStackKJS": Internal.ClassInfo, "net.minecraft.world.inventory.RecipeBookMenu": Internal.ClassInfo, "techreborn.blocks.misc.RubberTrapdoorBlock": Internal.ClassInfo, "com.yogpc.qp.machines.placer.PlacerBlock": Internal.ClassInfo, "snownee.lychee.random_block_ticking.RandomBlockTickingRecipe": Internal.ClassInfo, "de.dafuqs.spectrum.items.energy.InkFlaskItem": Internal.ClassInfo, "appeng.api.parts.IPartCollisionHelper": Internal.ClassInfo, "xaero.map.message.basic.ClientboundRulesPacket": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundRecipeBookSeenRecipePacket": Internal.ClassInfo, "mods.railcraft.world.level.block.track.outfitted.OneWayTrackBlock": Internal.ClassInfo, "net.minecraft.world.entity.monster.Husk": Internal.ClassInfo, "cofh.core.common.item.IAugmentableItem": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.LightSensorBlock": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.entity.EquipmentEntity$EquipmentTrackingEntity": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.RarityFilter": Internal.ClassInfo, "com.probejs.jdoc.java.MethodInfo$ParamInfo": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.GuardianHeart": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.particle_spawner.AbstractParticleSpawnerBlock": Internal.ClassInfo, "dev.ftb.mods.ftbquests.quest.reward.Reward": Internal.ClassInfo, "net.fabricmc.fabric.mixin.event.interaction.client.KeyBindingAccessor": Internal.ClassInfo, "de.dafuqs.spectrum.recipe.GatedSpectrumRecipe": Internal.ClassInfo, "net.minecraft.world.level.LevelSimulatedRW": Internal.ClassInfo, "net.fabricmc.fabric.mixin.gamerule.GameRulesAccessor": Internal.ClassInfo, "net.minecraft.world.item.crafting.RecipeType": Internal.ClassInfo, "com.inventorypets.items.windows31": Internal.ClassInfo, "net.minecraft.client.renderer.RenderStateShard": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.WeightedPlacedFeature": Internal.ClassInfo, "com.mna.api.cantrips.ICantrip": Internal.ClassInfo, "techreborn.items.DynamicCellItem": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.items.BlackboardItem": Internal.ClassInfo, "net.minecraft.world.level.block.BarrelBlock": Internal.ClassInfo, "com.mna.items.constructs.parts.arms.ConstructPartHammerArmLeft": Internal.ClassInfo, "snownee.kiwi.mixin.RecipeManagerAccess": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSectionBlocksUpdatePacket": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.api.wissen.IWissenItem": Internal.ClassInfo, "de.dafuqs.spectrum.status_effects.StackableStatusEffect": Internal.ClassInfo, "com.gregtechceu.gtceu.api.pipenet.LevelPipeNet": Internal.ClassInfo, "net.minecraft.world.entity.projectile.ThrownPotion": Internal.ClassInfo, "net.minecraft.util.FormattedCharSink": Internal.ClassInfo, "net.minecraft.client.sounds.SoundManager$Preparations": Internal.ClassInfo, "io.wispforest.owo.client.screens.SyncedProperty": Internal.ClassInfo, "net.fabricmc.fabric.impl.networking.DisconnectPacketSource": Internal.ClassInfo, "reborncore.common.misc.MultiBlockBreakingTool": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.custom.FallingBlockBuilder": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.upgrade.Upgradeable": Internal.ClassInfo, "net.minecraft.client.renderer.debug.StructureRenderer": Internal.ClassInfo, "com.gregtechceu.gtceu.api.item.tool.GTShovelItem": Internal.ClassInfo, "net.minecraft.world.level.GameType": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer$Builder": Internal.ClassInfo, "com.yogpc.qp.machines.placer.RemotePlacerBlock": Internal.ClassInfo, "net.minecraft.server.packs.resources.CloseableResourceManager": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.AlchemyMachineBlock": Internal.ClassInfo, "appeng.items.tools.powered.EntropyManipulatorItem": Internal.ClassInfo, "net.minecraft.world.entity.ai.goal.GoalSelector": Internal.ClassInfo, "mods.railcraft.integrations.jei.JeiSearchable": Internal.ClassInfo, "mods.railcraft.world.level.block.track.outfitted.BufferStopTrackBlock": Internal.ClassInfo, "mods.railcraft.world.item.CrackedFirestoneItem": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.render.SodiumWorldRenderer": Internal.ClassInfo, "mods.railcraft.world.level.block.entity.multiblock.BlockPredicate": Internal.ClassInfo, "mods.railcraft.world.item.TrackUndercutterCartItem": Internal.ClassInfo, "elucent.eidolon.registries.EidolonRecipes$1": Internal.ClassInfo, "de.dafuqs.spectrum.explosion.ExplosionArchetype": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundBlockUpdatePacket": Internal.ClassInfo, "io.wispforest.owo.ui.core.Color": Internal.ClassInfo, "net.minecraft.world.level.block.Mirror": Internal.ClassInfo, "de.dafuqs.spectrum.items.DamageAwareItem": Internal.ClassInfo, "xfacthd.framedblocks.common.block.prism.FramedDoubleSlopedPrismBlock": Internal.ClassInfo, "java.awt.Container": Internal.ClassInfo, "elucent.eidolon.common.item.ResearchNotesItem": Internal.ClassInfo, "org.lwjgl.system.StructBuffer": Internal.ClassInfo, "net.minecraft.world.entity.LightningBolt": Internal.ClassInfo, "org.embeddedt.modernfix.world.StrongholdLocationCache": Internal.ClassInfo, "reborncore.common.crafting.RebornRecipeType": Internal.ClassInfo, "appeng.thirdparty.fabric.MutableQuadView": Internal.ClassInfo, "org.orecruncher.dsurround.config.data.AcousticConfig": Internal.ClassInfo, "divinerpg.items.arcana.ItemReflector": Internal.ClassInfo, "java.time.format.TextStyle": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.Long2ObjectFunction": Internal.ClassInfo, "net.minecraft.world.entity.monster.warden.Warden": Internal.ClassInfo, "dev.latvian.mods.kubejs.integration.forge.jei.JEISubtypesEventJS$Interpreter": Internal.ClassInfo, "elucent.eidolon.registries.EidolonRecipes$5": Internal.ClassInfo, "elucent.eidolon.registries.EidolonRecipes$4": Internal.ClassInfo, "elucent.eidolon.registries.EidolonRecipes$3": Internal.ClassInfo, "cofh.thermal.core.common.block.HardenedGlassBlock": Internal.ClassInfo, "com.electronwill.nightconfig.core.CommentedConfig": Internal.ClassInfo, "elucent.eidolon.registries.EidolonRecipes$2": Internal.ClassInfo, "net.fabricmc.fabric.api.networking.v1.ServerPlayNetworking$PlayChannelHandler": Internal.ClassInfo, "xaero.map.pool.buffer.PoolTextureDirectBufferUnit": Internal.ClassInfo, "elucent.eidolon.registries.EidolonRecipes$9": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.integration.quark.CartographersQuillItem": Internal.ClassInfo, "java.util.TreeMap": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.arcane.ArcaneBowItem": Internal.ClassInfo, "elucent.eidolon.registries.EidolonRecipes$8": Internal.ClassInfo, "elucent.eidolon.registries.EidolonRecipes$7": Internal.ClassInfo, "elucent.eidolon.registries.EidolonRecipes$6": Internal.ClassInfo, "dev.ftb.mods.ftbquests.block.TaskScreenBlock$Aux": Internal.ClassInfo, "net.minecraft.world.level.entity.EntitySectionStorage": Internal.ClassInfo, "software.bernie.geckolib.core.animatable.model.CoreGeoModel": Internal.ClassInfo, "com.kamth.zeldamod.block.custom.PorkBlock": Internal.ClassInfo, "com.mna.blocks.artifice.ElementalSentryBlock": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerInteractEvent$EntityInteract": Internal.ClassInfo, "org.apache.logging.log4j.core.config.CronScheduledFuture": Internal.ClassInfo, "appeng.block.misc.VibrationChamberBlock": Internal.ClassInfo, "net.minecraft.nbt.TagType": Internal.ClassInfo, "mezz.jei.api.runtime.IBookmarkOverlay": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.treedecorators.TreeDecoratorType": Internal.ClassInfo, "elucent.eidolon.common.potion.UndeathEffect": Internal.ClassInfo, "xfacthd.framedblocks.common.block.stairs.FramedVerticalSlopedStairsBlock": Internal.ClassInfo, "net.minecraft.world.inventory.AbstractFurnaceMenu": Internal.ClassInfo, "io.netty.channel.MultithreadEventLoopGroup": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.config.ListConfig": Internal.ClassInfo, "com.gregtechceu.gtceu.api.capability.ICleanroomReceiver": Internal.ClassInfo, "net.minecraft.world.entity.projectile.SmallFireball": Internal.ClassInfo, "com.google.common.collect.ImmutableEnumMap": Internal.ClassInfo, "com.gregtechceu.gtceu.api.blockentity.PipeBlockEntity": Internal.ClassInfo, "net.minecraft.server.packs.repository.Pack$Info": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.MinecraftServerKJS": Internal.ClassInfo, "com.gregtechceu.gtceu.common.data.GTBlocks": Internal.ClassInfo, "appeng.items.misc.PaintBallItem": Internal.ClassInfo, "net.minecraft.world.level.ClipBlockStateContext": Internal.ClassInfo, "com.mojang.serialization.MapEncoder": Internal.ClassInfo, "net.minecraft.world.level.entity.TransientEntitySectionManager": Internal.ClassInfo, "reborncore.common.blockentity.SlotConfiguration$SlotConfigHolder": Internal.ClassInfo, "net.minecraftforge.common.world.ClimateSettingsBuilder": Internal.ClassInfo, "java.awt.JobAttributes$DialogType": Internal.ClassInfo, "net.minecraft.core.Holder$Reference$Type": Internal.ClassInfo, "mods.railcraft.world.module.BaseModule": Internal.ClassInfo, "net.minecraft.world.level.entity.Visibility": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.dd_deco.BristleSproutsBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.UnderwaterMagmaConfiguration": Internal.ClassInfo, "net.fabricmc.fabric.api.renderer.v1.model.SpriteFinder": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundBossEventPacket$Handler": Internal.ClassInfo, "net.mehvahdjukaar.amendments.common.block.AbstractCandleSkullBlock": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundMerchantOffersPacket": Internal.ClassInfo, "net.minecraft.world.item.crafting.SmokingRecipe": Internal.ClassInfo, "java.nio.charset.CharsetEncoder": Internal.ClassInfo, "com.tterrag.registrate.builders.FluidBuilder": Internal.ClassInfo, "com.mna.items.constructs.parts.arms.ConstructPartFishingArmRight": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.client.particle.GenericParticleData": Internal.ClassInfo, "net.minecraft.world.item.SimpleFoiledItem": Internal.ClassInfo, "net.fabricmc.fabric.mixin.networking.accessor.ServerPlayNetworkHandlerAccessor": Internal.ClassInfo, "javax.swing.text.TabStop": Internal.ClassInfo, "java.io.DataInputStream": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.api.quack.IProperShieldUser": Internal.ClassInfo, "mods.railcraft.world.level.block.signal.SignalReceiverBoxBlock": Internal.ClassInfo, "com.google.common.base.Supplier": Internal.ClassInfo, "de.dafuqs.spectrum.items.tools.BedrockPickaxeItem": Internal.ClassInfo, "mods.railcraft.world.level.block.charge.ChargeBlock": Internal.ClassInfo, "org.violetmoon.quark.content.tools.base.RuneColor": Internal.ClassInfo, "net.minecraft.advancements.critereon.MinMaxBounds$BoundsFactory": Internal.ClassInfo, "mods.railcraft.world.level.block.post.PostBlock": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetScorePacket": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeBlockState": Internal.ClassInfo, "net.minecraft.world.level.ColorResolver": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.treedecorators.TrunkVineDecorator": Internal.ClassInfo, "io.netty.channel.ChannelHandlerContext": Internal.ClassInfo, "com.mna.blocks.FacingBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.api.recipe.RecipeCondition": Internal.ClassInfo, "xaero.map.pool.PoolUnit": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.Short2BooleanMap": Internal.ClassInfo, "net.minecraft.world.entity.ai.behavior.PositionTracker": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.core.misc.VillagerBrainEventInternal": Internal.ClassInfo, "net.minecraft.world.level.chunk.storage.SectionStorage": Internal.ClassInfo, "cofh.thermal.core.common.block.LumiumBlock": Internal.ClassInfo, "net.minecraft.network.chat.TextColor": Internal.ClassInfo, "com.enderio.base.common.item.tool.PoweredToggledItem": Internal.ClassInfo, "net.minecraftforge.client.event.RenderLevelStageEvent$Stage": Internal.ClassInfo, "techreborn.blocks.machine.tier1.PlayerDetectorBlock$PlayerDetectorType": Internal.ClassInfo, "net.minecraft.server.bossevents.CustomBossEvent": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.ProbabilityFeatureConfiguration": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.CrystalGrowthBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.floats.Float2LongFunction": Internal.ClassInfo, "cc.abbie.emi_ores.mixin.accessor.TagMatchTestAccessor": Internal.ClassInfo, "com.gregtechceu.gtceu.common.pipelike.fluidpipe.FluidPipeNet": Internal.ClassInfo, "com.gregtechceu.gtceu.api.item.tool.GTToolType$ToolConstructor": Internal.ClassInfo, "com.enderio.conduits.common.items.ConduitBlockItem": Internal.ClassInfo, "com.yogpc.qp.machines.marker.BlockExMarker": Internal.ClassInfo, "com.tterrag.registrate.builders.AbstractBuilder": Internal.ClassInfo, "net.minecraft.world.level.block.entity.DropperBlockEntity": Internal.ClassInfo, "xfacthd.framedblocks.common.block.stairs.FramedLadderBlock": Internal.ClassInfo, "elucent.eidolon.common.item.curio.GlassHandItem": Internal.ClassInfo, "com.lowdragmc.lowdraglib.syncdata.ISubscription": Internal.ClassInfo, "biomesoplenty.common.block.FoliageBlockBOP": Internal.ClassInfo, "java.awt.dnd.DropTarget": Internal.ClassInfo, "com.gregtechceu.gtceu.common.block.FusionCasingBlock": Internal.ClassInfo, "mods.railcraft.world.level.block.track.ForceTrackBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemCraftedEventJS": Internal.ClassInfo, "it.unimi.dsi.fastutil.chars.CharUnaryOperator": Internal.ClassInfo, "com.tterrag.registrate.util.CreativeModeTabModifier": Internal.ClassInfo, "dev.ftb.mods.ftbquests.block.entity.ITaskScreen": Internal.ClassInfo, "mezz.jei.api.ingredients.subtypes.UidContext": Internal.ClassInfo, "net.minecraft.world.entity.monster.Vex": Internal.ClassInfo, "dev.latvian.mods.rhino.util.wrap.TypeWrapperFactory$Simple": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.stateproviders.DualNoiseProvider": Internal.ClassInfo, "net.minecraftforge.event.entity.EntityJoinLevelEvent": Internal.ClassInfo, "snownee.lychee.core.contextual.CustomCondition$Test": Internal.ClassInfo, "com.inventorypets.pets.petSlime": Internal.ClassInfo, "com.google.common.collect.SparseImmutableTable": Internal.ClassInfo, "java.nio.file.Watchable": Internal.ClassInfo, "mezz.jei.api.gui.IRecipeLayoutDrawable": Internal.ClassInfo, "net.minecraft.world.entity.animal.Cat": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.BlockBuilderProvider": Internal.ClassInfo, "net.minecraft.world.inventory.tooltip.TooltipComponent": Internal.ClassInfo, "net.minecraft.server.level.FullChunkStatus": Internal.ClassInfo, "net.minecraft.world.item.EnderpearlItem": Internal.ClassInfo, "net.minecraftforge.fml.LogicalSide": Internal.ClassInfo, "net.minecraft.world.level.ExplosionDamageCalculator": Internal.ClassInfo, "net.minecraft.client.sounds.WeighedSoundEvents": Internal.ClassInfo, "java.lang.reflect.AnnotatedType": Internal.ClassInfo, "net.minecraft.world.level.block.StainedGlassBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.AbstractObject2ObjectFunction": Internal.ClassInfo, "java.awt.PageAttributes$OriginType": Internal.ClassInfo, "dev.latvian.mods.rhino.WrapFactory": Internal.ClassInfo, "pokefenn.totemic.item.music.JingleDressItem": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.items.FluteItem": Internal.ClassInfo, "java.awt.geom.RectangularShape": Internal.ClassInfo, "divinerpg.client.particle.options.ParticleColouredType": Internal.ClassInfo, "mods.railcraft.season.Season": Internal.ClassInfo, "dev.architectury.event.EventResult": Internal.ClassInfo, "com.aizistral.etherium.items.EtheriumPickaxe": Internal.ClassInfo, "net.minecraft.world.entity.npc.VillagerTrades$ItemListing": Internal.ClassInfo, "mods.railcraft.api.track.PoweredTrack": Internal.ClassInfo, "net.minecraft.world.item.armortrim.TrimPattern": Internal.ClassInfo, "elucent.eidolon.client.particle.GenericParticleData": Internal.ClassInfo, "net.minecraft.world.level.block.ChorusPlantBlock": Internal.ClassInfo, "net.minecraft.server.packs.resources.IoSupplier": Internal.ClassInfo, "appeng.thirdparty.fabric.QuadView": Internal.ClassInfo, "net.minecraft.tags.TagKey": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.foliageplacers.BlobFoliagePlacer": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$KeyPressed$Pre": Internal.ClassInfo, "com.gregtechceu.gtceu.api.gui.fancy.IFancyTooltip": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.IntIterator": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.client.sound.TileEntitySoundInstance": Internal.ClassInfo, "java.util.function.ToIntBiFunction": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.material.info.MaterialIconSet": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.AxolotlAttackablesSensor": Internal.ClassInfo, "com.inventorypets.items.easterEgg": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerDestroyItemEvent": Internal.ClassInfo, "appeng.parts.automation.AnnihilationPlanePart": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.SurfaceRelativeThresholdFilter": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.LongConsumer": Internal.ClassInfo, "pokefenn.totemic.item.music.RattleItem": Internal.ClassInfo, "net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity$AnimationStatus": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.ui.IOpenableScreen": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blending.BlendingData$DensityConsumer": Internal.ClassInfo, "io.netty.util.ByteProcessor$IndexOfProcessor": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.ai.pathing.BlockStatePathingCache": Internal.ClassInfo, "net.minecraft.network.chat.MessageSignature$Packed": Internal.ClassInfo, "mods.railcraft.world.level.block.signal.DualDistantSignalBlock": Internal.ClassInfo, "net.minecraft.util.valueproviders.ConstantInt": Internal.ClassInfo, "com.mna.effects.harmful.EffectLacerate": Internal.ClassInfo, "mezz.jei.api.gui.drawable.IDrawableStatic": Internal.ClassInfo, "net.minecraft.world.level.dimension.end.EndDragonFight$Data": Internal.ClassInfo, "net.minecraft.data.recipes.FinishedRecipe": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.arcane.ArcaneScytheItem": Internal.ClassInfo, "net.minecraft.world.entity.vehicle.MinecartTNT": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.stateproviders.RuleBasedBlockStateProvider": Internal.ClassInfo, "com.gregtechceu.gtceu.api.gui.fancy.ConfiguratorPanel": Internal.ClassInfo, "com.mojang.brigadier.AmbiguityConsumer": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.AltarOfDroughtBlock": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.SoulCompass": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.idols.EntitySummoningIdolBlock": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.PetGuidebook": Internal.ClassInfo, "java.awt.event.ContainerEvent": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.pools.StructurePoolElement": Internal.ClassInfo, "com.aizistral.etherium.items.EtheriumShovel": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.structures.RuinedPortalStructure": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetChunkCacheCenterPacket": Internal.ClassInfo, "com.mna.api.entities.construct.materials.ConstructMaterialWickerwood": Internal.ClassInfo, "com.mojang.serialization.codecs.ListCodec": Internal.ClassInfo, "net.minecraftforge.network.NetworkEvent$ClientCustomPayloadEvent": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.RecipeComponentValue": Internal.ClassInfo, "appeng.api.networking.IGridVisitor": Internal.ClassInfo, "net.minecraft.world.level.block.AbstractCandleBlock": Internal.ClassInfo, "appeng.debug.ItemGenBlock": Internal.ClassInfo, "com.mojang.realmsclient.dto.RealmsWorldOptions": Internal.ClassInfo, "net.mehvahdjukaar.amendments.reg.ModBlockProperties$BlockAttachment": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingConversionEvent$Pre": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.item.additional_placements.BlockPlacerItem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.trunkplacers.BendingTrunkPlacer": Internal.ClassInfo, "com.mna.effects.beneficial.EffectBriarthornBarrier": Internal.ClassInfo, "com.mna.items.runes.ItemRuneMarking": Internal.ClassInfo, "com.mojang.serialization.codecs.UnboundedMapCodec": Internal.ClassInfo, "net.minecraft.client.User": Internal.ClassInfo, "software.bernie.geckolib.core.animation.RawAnimation": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.SimpleRandomFeatureConfiguration": Internal.ClassInfo, "java.nio.CharBuffer": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.icon.ImageIcon": Internal.ClassInfo, "com.mna.items.artifice.ItemRecipeCopyBook$Modes": Internal.ClassInfo, "com.lowdragmc.lowdraglib.syncdata.field.FieldManagedStorage": Internal.ClassInfo, "dev.onyxstudios.cca.api.v3.component.ComponentProvider": Internal.ClassInfo, "divinerpg.blocks.twilight.BlockPinkGlowbone": Internal.ClassInfo, "com.tterrag.registrate.util.DataIngredient": Internal.ClassInfo, "java.awt.event.ComponentEvent": Internal.ClassInfo, "com.mojang.blaze3d.shaders.Uniform": Internal.ClassInfo, "net.minecraft.world.item.enchantment.EnchantmentInstance": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.config.ConfigWithVariants": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundRecipePacket$State": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.world.blockentity.BlockEntityGetter": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.block.BlockCountingSection": Internal.ClassInfo, "net.minecraftforge.energy.IEnergyStorage": Internal.ClassInfo, "net.minecraft.world.entity.animal.MushroomCow": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundBlockDestructionPacket": Internal.ClassInfo, "net.minecraft.world.level.block.StairBlock": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decoration.GlowBlock": Internal.ClassInfo, "net.minecraft.client.renderer.debug.LightSectionDebugRenderer": Internal.ClassInfo, "com.enderio.base.common.item.misc.BrokenSpawnerItem": Internal.ClassInfo, "net.minecraft.world.level.block.ChangeOverTimeBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.worldgen.generator.veins.ClassicVeinGenerator$Layer$Builder": Internal.ClassInfo, "de.dafuqs.spectrum.items.tools.FerociousBidentItem": Internal.ClassInfo, "it.unimi.dsi.fastutil.Hash": Internal.ClassInfo, "net.minecraft.client.gui.components.toasts.Toast$Visibility": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.arcane.ArcanePickaxeItem": Internal.ClassInfo, "mods.railcraft.world.level.block.ForceTrackEmitterBlock": Internal.ClassInfo, "net.minecraft.client.multiplayer.ClientPacketListener": Internal.ClassInfo, "biomesoplenty.common.block.HangingCobwebBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.AbstractObjectCollection": Internal.ClassInfo, "it.unimi.dsi.fastutil.bytes.Byte2DoubleFunction": Internal.ClassInfo, "mods.railcraft.world.level.block.tank.TankValveBlock": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.RevelationTome$TomeType": Internal.ClassInfo, "com.lowdragmc.lowdraglib.networking.c2s.CPacketUIClientAction": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.EngravedWisestoneBlock": Internal.ClassInfo, "mods.railcraft.world.item.TrackRemoverCartItem": Internal.ClassInfo, "net.minecraftforge.client.event.RenderTooltipEvent$Color": Internal.ClassInfo, "dev.latvian.mods.kubejs.misc.EnchantmentBuilder$DamageBonusFunction": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.rule.blockentity.Clear": Internal.ClassInfo, "java.beans.PropertyChangeEvent": Internal.ClassInfo, "com.yogpc.qp.machines.module.ReplacerModule": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Reference2ObjectFunction": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.TheJudgement": Internal.ClassInfo, "cofh.core.common.block.EntityBlockActive4Way": Internal.ClassInfo, "fzzyhmstrs.emi_loot.mixins.EntityEffectPredicateAccessor": Internal.ClassInfo, "net.minecraft.client.model.geom.ModelLayerLocation": Internal.ClassInfo, "io.wispforest.owo.ui.event.FocusLost": Internal.ClassInfo, "techreborn.items.tool.vanilla.TRPickaxeItem": Internal.ClassInfo, "java.nio.file.WatchService": Internal.ClassInfo, "com.kamth.zeldamod.item.items.BoomerangItem": Internal.ClassInfo, "java.lang.constant.ClassDesc": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.client.model.ModelDataKey": Internal.ClassInfo, "techreborn.items.FrequencyTransmitterItem": Internal.ClassInfo, "mods.railcraft.world.item.RailcraftItems$1": Internal.ClassInfo, "net.minecraft.world.entity.animal.AbstractSchoolingFish": Internal.ClassInfo, "net.minecraftforge.fml.event.config.ModConfigEvent": Internal.ClassInfo, "java.nio.channels.GatheringByteChannel": Internal.ClassInfo, "net.minecraft.world.level.block.MultifaceSpreader$SpreadPredicate": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundLevelChunkPacketData": Internal.ClassInfo, "com.enderio.machines.common.item.BoundSoulBlockItem": Internal.ClassInfo, "com.mojang.authlib.minecraft.MinecraftProfileTexture$Type": Internal.ClassInfo, "de.dafuqs.spectrum.items.tools.MalachiteBidentItem": Internal.ClassInfo, "appeng.decorative.solid.NotSoMysteriousCubeBlock": Internal.ClassInfo, "com.yogpc.qp.machines.filler.FillerEntity": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundContainerClickPacket": Internal.ClassInfo, "divinerpg.items.vethea.ItemDreamFlint": Internal.ClassInfo, "net.fabricmc.fabric.api.client.screen.v1.ScreenMouseEvents$BeforeMouseClick": Internal.ClassInfo, "biomesoplenty.common.block.GlowingMossBlock": Internal.ClassInfo, "io.wispforest.accessories.mixin.LivingEntityAccessor": Internal.ClassInfo, "com.mna.items.sorcery.VellumItem": Internal.ClassInfo, "com.lowdragmc.lowdraglib.utils.Builder": Internal.ClassInfo, "org.apache.commons.lang3.tuple.Pair": Internal.ClassInfo, "net.fabricmc.fabric.api.event.registry.RegistryEntryRemovedCallback": Internal.ClassInfo, "net.minecraft.world.level.block.TorchflowerCropBlock": Internal.ClassInfo, "java.time.Duration": Internal.ClassInfo, "net.minecraftforge.client.event.RenderGuiOverlayEvent": Internal.ClassInfo, "net.irisshaders.iris.vertices.BlockSensitiveBufferBuilder": Internal.ClassInfo, "net.minecraft.core.HolderSet$ListBacked": Internal.ClassInfo, "java.time.ZoneOffset": Internal.ClassInfo, "org.apache.commons.lang3.tuple.Triple": Internal.ClassInfo, "java.awt.dnd.DropTargetContext": Internal.ClassInfo, "net.minecraft.util.random.WeightedEntry": Internal.ClassInfo, "appeng.block.spatial.SpatialAnchorBlock": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerEvent$PlayerLoggedInEvent": Internal.ClassInfo, "com.mojang.serialization.MapCodec": Internal.ClassInfo, "net.minecraftforge.common.world.ModifiableStructureInfo$StructureInfo": Internal.ClassInfo, "org.apache.maven.repository.legacy.metadata.ArtifactMetadata": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.trunkplacers.TrunkPlacer": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.Double2CharFunction": Internal.ClassInfo, "divinerpg.blocks.base.BlockModDoor": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.api.crystal.PolishingType": Internal.ClassInfo, "cofh.core.client.particle.options.BiColorParticleOptions": Internal.ClassInfo, "dev.emi.emi.mixin.accessor.HandledScreenAccessor": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.IntSpliterator": Internal.ClassInfo, "com.epherical.croptopia.mixin.LootTableAccessor": Internal.ClassInfo, "divinerpg.blocks.base.BlockModPortal$Size": Internal.ClassInfo, "io.netty.util.concurrent.EventExecutor": Internal.ClassInfo, "net.minecraft.world.entity.ai.navigation.WaterBoundPathNavigation": Internal.ClassInfo, "lol.bai.badpackets.impl.handler.ClientPacketHandler$Holder": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.CaveSurface": Internal.ClassInfo, "com.mojang.blaze3d.vertex.VertexFormat$IndexType": Internal.ClassInfo, "net.minecraft.world.entity.EntityType": Internal.ClassInfo, "appeng.debug.DebugCardItem": Internal.ClassInfo, "net.minecraft.advancements.Criterion": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundLevelEventPacket": Internal.ClassInfo, "java.util.Locale$IsoCountryCode": Internal.ClassInfo, "io.wispforest.owo.ui.core.Insets": Internal.ClassInfo, "com.enderio.base.common.item.capacitors.LootCapacitorItem": Internal.ClassInfo, "net.minecraft.client.searchtree.SearchTree": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.custom.ShovelItemBuilder": Internal.ClassInfo, "net.minecraft.world.level.block.ChorusFlowerBlock": Internal.ClassInfo, "appeng.api.implementations.items.ISpatialStorageCell": Internal.ClassInfo, "divinerpg.items.arcana.ItemGrenade": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.util.deduplication.LithiumInternerWrapper": Internal.ClassInfo, "net.irisshaders.iris.texture.pbr.PBRAtlasHolder": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.gen.properties.AddOreProperties": Internal.ClassInfo, "appeng.blockentity.grid.AENetworkBlockEntity": Internal.ClassInfo, "net.fabricmc.fabric.impl.lookup.item.ItemApiLookupImpl": Internal.ClassInfo, "cofh.core.common.effect.EnergyChargeMobEffect": Internal.ClassInfo, "dev.ftb.mods.ftbquests.quest.Quest": Internal.ClassInfo, "java.lang.invoke.VarHandle$VarHandleDesc": Internal.ClassInfo, "appeng.blockentity.misc.VibrationChamberBlockEntity": Internal.ClassInfo, "net.minecraft.client.renderer.entity.layers.RenderLayer": Internal.ClassInfo, "net.minecraft.world.level.levelgen.carver.CanyonCarverConfiguration": Internal.ClassInfo, "net.minecraft.world.level.chunk.DataLayer": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.fluid.LiquidCrystalFluidBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.floats.FloatCollection": Internal.ClassInfo, "de.dafuqs.spectrum.items.CreativeOnlyItem": Internal.ClassInfo, "net.minecraft.client.server.IntegratedServer": Internal.ClassInfo, "java.util.function.LongUnaryOperator": Internal.ClassInfo, "net.minecraft.world.level.block.SmallDripleafBlock": Internal.ClassInfo, "java.time.DayOfWeek": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundLevelChunkPacketData$BlockEntityTagOutput": Internal.ClassInfo, "com.gregtechceu.gtceu.api.pattern.Predicates": Internal.ClassInfo, "it.unimi.dsi.fastutil.floats.FloatConsumer": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.CustomWallSignBlock": Internal.ClassInfo, "net.minecraft.world.level.block.FireBlock": Internal.ClassInfo, "java.util.ListIterator": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.curio.ArcaciteAmuletItem": Internal.ClassInfo, "software.bernie.geckolib.core.keyframe.event.data.ParticleKeyframeData": Internal.ClassInfo, "net.minecraft.client.gui.navigation.ScreenDirection": Internal.ClassInfo, "elucent.eidolon.mixin.AbstractContainerMenuMixin": Internal.ClassInfo, "com.gregtechceu.gtceu.api.recipe.GTRecipe": Internal.ClassInfo, "appeng.api.networking.storage.IStorageService": Internal.ClassInfo, "net.minecraft.world.item.HoneyBottleItem": Internal.ClassInfo, "javax.accessibility.AccessibleRelation": Internal.ClassInfo, "net.minecraftforge.registries.IForgeRegistryModifiable": Internal.ClassInfo, "com.mojang.realmsclient.gui.task.DataFetcher": Internal.ClassInfo, "com.mna.items.sorcery.ItemTornJournalPage": Internal.ClassInfo, "net.minecraftforge.client.extensions.IAbstractWidgetExtension": Internal.ClassInfo, "com.gregtechceu.gtceu.client.renderer.block.PipeBlockRenderer": Internal.ClassInfo, "appeng.block.misc.CondenserBlock": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundMovePlayerPacket": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decoration.CushionBlock": Internal.ClassInfo, "de.dafuqs.spectrum.items.food.ClottedCreamItem": Internal.ClassInfo, "com.mna.items.ritual.ItemWorldCharm": Internal.ClassInfo, "mods.railcraft.api.charge.Charge$ZapEffectProvider": Internal.ClassInfo, "org.embeddedt.embeddium.api.eventbus.EventHandlerRegistrar$Handler": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.trunkplacers.FancyTrunkPlacer": Internal.ClassInfo, "java.nio.file.FileSystem": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.Short2CharFunction": Internal.ClassInfo, "java.awt.event.WindowEvent": Internal.ClassInfo, "de.dafuqs.spectrum.items.magic_items.BlockFlooderItem": Internal.ClassInfo, "com.mna.items.sorcery.ItemSpellRecipe": Internal.ClassInfo, "net.minecraft.world.item.crafting.RecipeManager": Internal.ClassInfo, "elucent.eidolon.common.block.NecroticFocusBlock": Internal.ClassInfo, "net.minecraftforge.client.event.RenderLevelStageEvent$RegisterStageEvent": Internal.ClassInfo, "org.apache.logging.log4j.core.lookup.StrLookup": Internal.ClassInfo, "java.util.Spliterator": Internal.ClassInfo, "net.minecraft.world.level.block.FlowerPotBlock": Internal.ClassInfo, "net.minecraftforge.fml.InterModComms$IMCMessage": Internal.ClassInfo, "com.gregtechceu.gtceu.client.renderer.cover.ICoverableRenderer": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.EngravedWisestoneItem": Internal.ClassInfo, "net.minecraft.client.resources.language.LanguageInfo": Internal.ClassInfo, "net.minecraft.world.entity.MobSpawnType": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.api.monogram.Monogram": Internal.ClassInfo, "net.minecraft.world.damagesource.DamageType": Internal.ClassInfo, "net.minecraft.client.particle.TextureSheetParticle": Internal.ClassInfo, "java.util.Stack": Internal.ClassInfo, "net.minecraft.world.level.block.BasePressurePlateBlock": Internal.ClassInfo, "net.minecraftforge.client.event.RenderTooltipEvent$Pre": Internal.ClassInfo, "java.util.concurrent.ConcurrentMap": Internal.ClassInfo, "de.dafuqs.spectrum.items.ItemWithGlint": Internal.ClassInfo, "net.minecraft.client.renderer.entity.LivingEntityRenderer": Internal.ClassInfo, "com.tterrag.registrate.util.entry.ItemEntry": Internal.ClassInfo, "net.minecraftforge.event.CommandEvent": Internal.ClassInfo, "dev.latvian.mods.kubejs.entity.CheckLivingEntitySpawnEventJS": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.block.TrackedBlockStatePredicate": Internal.ClassInfo, "com.gregtechceu.gtceu.api.gui.fancy.PageSwitcher": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decoration.ColoredFenceGateBlock": Internal.ClassInfo, "net.minecraftforge.client.event.RenderLivingEvent$Post": Internal.ClassInfo, "net.minecraft.world.level.block.PipeBlock": Internal.ClassInfo, "net.minecraftforge.event.TickEvent$ServerTickEvent": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.worldgen.generator.veins.GeodeVeinGenerator": Internal.ClassInfo, "net.fabricmc.fabric.impl.registry.sync.ListenableRegistry": Internal.ClassInfo, "appeng.api.networking.ticking.TickRateModulation": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.worldgen.IWorldGenLayer": Internal.ClassInfo, "dev.latvian.mods.rhino.RhinoException": Internal.ClassInfo, "net.minecraft.world.entity.ai.memory.NearestVisibleLivingEntities": Internal.ClassInfo, "dev.latvian.mods.kubejs.loot.ChestLootEventJS": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundChatCommandPacket": Internal.ClassInfo, "javax.accessibility.AccessibleStateSet": Internal.ClassInfo, "com.mna.enchantments.ManaRepair": Internal.ClassInfo, "com.mna.api.items.IPhylacteryItem": Internal.ClassInfo, "dev.ftb.mods.ftbquests.quest.DefaultChapterGroup": Internal.ClassInfo, "de.dafuqs.spectrum.items.SpectrumMusicDiscItem": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.Long2LongFunction": Internal.ClassInfo, "fzzyhmstrs.emi_loot.mixins.EffectDataAccessor": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.OutputItem": Internal.ClassInfo, "java.util.concurrent.locks.Condition": Internal.ClassInfo, "mods.railcraft.world.level.block.manipulator.FluidUnloaderBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2IntMap$FastEntrySet": Internal.ClassInfo, "net.minecraft.network.chat.ChatType$BoundNetwork": Internal.ClassInfo, "java.util.Comparator": Internal.ClassInfo, "xaero.map.server.player.ServerPlayerData": Internal.ClassInfo, "elucent.eidolon.api.spells.Sign": Internal.ClassInfo, "com.yogpc.qp.machines.PowerTile": Internal.ClassInfo, "mods.railcraft.world.level.block.signal.SignalCapacitorBoxBlock": Internal.ClassInfo, "java.awt.BufferCapabilities$FlipContents": Internal.ClassInfo, "com.mna.blocks.artifice.CoffinBlock": Internal.ClassInfo, "com.inventorypets.items.petAchieveItem50": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.objects.CooldownMap": Internal.ClassInfo, "java.util.DoubleSummaryStatistics": Internal.ClassInfo, "net.minecraft.world.item.PickaxeItem": Internal.ClassInfo, "mods.railcraft.world.level.block.tank.SteelTankValveBlock": Internal.ClassInfo, "divinerpg.blocks.vanilla.BlockAyeracoBeam": Internal.ClassInfo, "org.orecruncher.dsurround.sound.ISoundFactory": Internal.ClassInfo, "io.wispforest.owo.nbt.NbtKey": Internal.ClassInfo, "net.minecraft.world.entity.animal.CatVariant": Internal.ClassInfo, "xfacthd.framedblocks.common.data.FramedToolType": Internal.ClassInfo, "appeng.items.tools.MemoryCardItem": Internal.ClassInfo, "net.minecraft.server.level.ChunkHolder$ChunkLoadingFailure": Internal.ClassInfo, "net.minecraft.world.level.block.WeatheringCopperFullBlock": Internal.ClassInfo, "appeng.api.networking.IInWorldGridNodeHost": Internal.ClassInfo, "java.net.InterfaceAddress": Internal.ClassInfo, "com.gregtechceu.gtceu.common.data.GTMachines": Internal.ClassInfo, "com.inventorypets.pets.petMeta100": Internal.ClassInfo, "net.minecraft.client.multiplayer.chat.report.ChatReportBuilder$CannotBuildReason": Internal.ClassInfo, "com.inventorypets.items.petAchieveItem60": Internal.ClassInfo, "org.apache.logging.log4j.core.LifeCycle2": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundBlockEntityTagQuery": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.pastel_network.network.PastelNetwork": Internal.ClassInfo, "net.mehvahdjukaar.amendments.common.IBellConnections$BellConnection": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.client.particle.CubeParticleType": Internal.ClassInfo, "net.minecraft.world.level.block.NoteBlock": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopepanelcorner.FramedInverseDoubleCornerSlopePanelBlock": Internal.ClassInfo, "net.minecraftforge.network.HandshakeMessages$LoginIndexedMessage": Internal.ClassInfo, "com.inventorypets.pets.petGrave": Internal.ClassInfo, "com.inventorypets.worldgen.SeaCaveStructure": Internal.ClassInfo, "com.gregtechceu.gtceu.core.mixins.AbstractRegistrateAccessor": Internal.ClassInfo, "net.minecraft.client.StringSplitter$WidthProvider": Internal.ClassInfo, "cofh.lib.common.block.TntBlockCoFH": Internal.ClassInfo, "divinerpg.items.base.ItemModAxe": Internal.ClassInfo, "net.minecraft.world.level.block.PoweredRailBlock": Internal.ClassInfo, "com.inventorypets.pets.petMetaAOE": Internal.ClassInfo, "net.minecraft.nbt.StreamTagVisitor$ValueResult": Internal.ClassInfo, "org.orecruncher.dsurround.runtime.audio.effects.EffectData": Internal.ClassInfo, "cofh.thermal.core.common.item.WrenchItem": Internal.ClassInfo, "mods.railcraft.world.level.block.tank.IronTankValveBlock": Internal.ClassInfo, "net.minecraftforge.fml.ModContainer": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.Int2ReferenceFunction": Internal.ClassInfo, "biomesoplenty.common.block.BlackstoneDecorationBlock": Internal.ClassInfo, "divinerpg.blocks.vethea.BlockLightCrystal": Internal.ClassInfo, "net.minecraft.world.item.DispensibleContainerItem": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.client.particle.ArcaneWoodLeafParticleType": Internal.ClassInfo, "net.minecraft.server.level.ChunkMap": Internal.ClassInfo, "de.dafuqs.spectrum.items.tools.GlassCrestCrossbowItem": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundChunksBiomesPacket": Internal.ClassInfo, "vectorwing.farmersdelight.common.item.MilkBottleItem": Internal.ClassInfo, "com.mna.items.artifice.ItemDowsingRod": Internal.ClassInfo, "de.dafuqs.spectrum.enchantments.ImprovedCriticalEnchantment": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.BedrockAnvilBlock": Internal.ClassInfo, "divinerpg.items.vanilla.ItemAnchor": Internal.ClassInfo, "io.wispforest.owo.util.pond.OwoScreenExtension": Internal.ClassInfo, "com.yogpc.qp.machines.quarry.QuarryItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.GameRulesKJS": Internal.ClassInfo, "net.fabricmc.fabric.impl.transfer.item.ItemVariantCache": Internal.ClassInfo, "divinerpg.blocks.base.BlockModPortal": Internal.ClassInfo, "net.minecraft.client.gui.components.spectator.SpectatorGui": Internal.ClassInfo, "techreborn.blocks.generator.GenericGeneratorBlock": Internal.ClassInfo, "com.aizistral.omniconfig.wrappers.Omniconfig$DoubleParameter": Internal.ClassInfo, "com.kamth.zeldamod.effect.WaterHopping": Internal.ClassInfo, "xaero.map.region.MapTile": Internal.ClassInfo, "appeng.helpers.externalstorage.GenericStackInv": Internal.ClassInfo, "net.minecraft.client.particle.SpriteSet": Internal.ClassInfo, "java.awt.Window": Internal.ClassInfo, "net.minecraft.world.level.block.ChiseledBookShelfBlock": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.innocentwood.InnocentWoodHoeItem": Internal.ClassInfo, "net.minecraft.client.renderer.ItemModelShaper": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.core.mixins.accessor.BrainAccessor": Internal.ClassInfo, "net.minecraft.world.level.storage.LevelStorageSource$LevelDirectory": Internal.ClassInfo, "io.wispforest.owo.mixin.ScreenHandlerInvoker": Internal.ClassInfo, "java.io.File": Internal.ClassInfo, "net.minecraftforge.event.level.ChunkEvent": Internal.ClassInfo, "net.minecraft.core.dispenser.DispenseItemBehavior": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundLockDifficultyPacket": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundPlayerActionPacket$Action": Internal.ClassInfo, "net.minecraft.client.gui.screens.inventory.tooltip.ClientTooltipComponent": Internal.ClassInfo, "net.minecraft.client.gui.components.Renderable": Internal.ClassInfo, "java.time.format.DecimalStyle": Internal.ClassInfo, "org.apache.logging.log4j.spi.LoggerContextShutdownAware": Internal.ClassInfo, "net.minecraft.util.OptionEnum": Internal.ClassInfo, "com.mojang.blaze3d.font.SheetGlyphInfo": Internal.ClassInfo, "org.violetmoon.quark.content.tools.item.SeedPouchItem": Internal.ClassInfo, "com.mna.api.entities.construct.ConstructSlot": Internal.ClassInfo, "net.minecraft.world.entity.ambient.Bat": Internal.ClassInfo, "net.minecraft.network.chat.ChatTypeDecoration$Parameter": Internal.ClassInfo, "com.lowdragmc.lowdraglib.syncdata.IFieldUpdateListener": Internal.ClassInfo, "mezz.jei.api.helpers.IStackHelper": Internal.ClassInfo, "net.minecraftforge.network.NetworkEvent$PacketDispatcher": Internal.ClassInfo, "dev.ftb.mods.ftbquests.quest.reward.RewardType": Internal.ClassInfo, "com.inventorypets.items.petAchieveItem10": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundPlayerInputPacket": Internal.ClassInfo, "net.minecraftforge.client.settings.IKeyConflictContext": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeLivingEntity": Internal.ClassInfo, "net.minecraft.client.GuiMessageTag": Internal.ClassInfo, "com.mojang.authlib.minecraft.UserApiService$UserFlag": Internal.ClassInfo, "com.mna.blocks.artifice.FluidJugBlock": Internal.ClassInfo, "malte0811.ferritecore.mixin.blockstatecache.ArrayVSAccess": Internal.ClassInfo, "it.unimi.dsi.fastutil.floats.Float2BooleanFunction": Internal.ClassInfo, "net.minecraft.client.renderer.debug.GameTestDebugRenderer": Internal.ClassInfo, "com.mojang.serialization.DataResult$Mu": Internal.ClassInfo, "com.inventorypets.pets.petMooshroom": Internal.ClassInfo, "java.lang.Byte": Internal.ClassInfo, "net.fabricmc.fabric.api.screenhandler.v1.FabricScreenHandlerFactory": Internal.ClassInfo, "net.minecraft.network.chat.SignedMessageChain$Encoder": Internal.ClassInfo, "net.minecraft.world.level.GameRules$Key": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.api.alchemy.ISteamItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.generator.DataJsonGenerator": Internal.ClassInfo, "com.kamth.zeldamod.item.items.ScattershotItem": Internal.ClassInfo, "divinerpg.items.base.block.ItemPresentBox": Internal.ClassInfo, "org.apache.logging.log4j.core.Filter": Internal.ClassInfo, "net.minecraft.world.entity.ai.behavior.Behavior": Internal.ClassInfo, "net.minecraft.commands.Commands": Internal.ClassInfo, "net.fabricmc.fabric.impl.itemgroup.FabricItemGroup": Internal.ClassInfo, "net.minecraft.world.item.InkSacItem": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decoration.CushionedFacingBlock": Internal.ClassInfo, "net.minecraft.advancements.critereon.DistancePredicate": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.PlayerSelector": Internal.ClassInfo, "com.inventorypets.items.petAchieveItem20": Internal.ClassInfo, "net.minecraft.world.entity.projectile.AbstractHurtingProjectile": Internal.ClassInfo, "com.yanny.ytech.configuration.mob_effect.LuckyStoneMobEffect": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundDisconnectPacket": Internal.ClassInfo, "dev.latvian.mods.rhino.Symbol": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundUpdateAdvancementsPacket": Internal.ClassInfo, "xaero.map.biome.BiomeGetter": Internal.ClassInfo, "java.time.OffsetDateTime": Internal.ClassInfo, "com.mna.enchantments.staves.Bludgeoning": Internal.ClassInfo, "com.inventorypets.items.windowsMe": Internal.ClassInfo, "org.violetmoon.zeta.item.ZetaSpawnEggItem": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.texture.ResourceTexture": Internal.ClassInfo, "net.minecraftforge.event.level.NoteBlockEvent$Play": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.enchanter.ExtendedEnchantable": Internal.ClassInfo, "com.enderio.base.common.block.ReinforcedObsidianBlock": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.dd_deco.SmallDragonjagBlock": Internal.ClassInfo, "net.minecraft.world.BossEvent": Internal.ClassInfo, "net.minecraft.world.entity.animal.sniffer.Sniffer$State": Internal.ClassInfo, "net.minecraft.world.level.levelgen.carver.CarverConfiguration": Internal.ClassInfo, "de.dafuqs.spectrum.mixin.client.accessors.RenderLayerAccessor": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.BasaltColumnsFeature": Internal.ClassInfo, "vectorwing.farmersdelight.common.item.KelpRollItem": Internal.ClassInfo, "snownee.lychee.item_inside.ItemInsideRecipeType$Cache": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.render.viewport.ViewportProvider": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopepanel.FramedFlatStackedSlopePanelCornerBlock": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.fluids.SoftFluidTank": Internal.ClassInfo, "java.awt.datatransfer.Transferable": Internal.ClassInfo, "net.minecraft.client.renderer.debug.BeeDebugRenderer$HiveInfo": Internal.ClassInfo, "com.inventorypets.items.petAchieveItem30": Internal.ClassInfo, "com.mna.effects.harmful.EffectMindVision": Internal.ClassInfo, "com.google.gson.JsonElement": Internal.ClassInfo, "com.tterrag.registrate.providers.RegistrateRecipeProvider": Internal.ClassInfo, "org.orecruncher.dsurround.config.data.BlockEffectConfigRule": Internal.ClassInfo, "net.blay09.mods.balm.api.event.client.screen.ScreenInitEvent": Internal.ClassInfo, "sun.awt.SunHints$Value": Internal.ClassInfo, "net.minecraft.world.damagesource.DamageSource": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.AbstractLongSet": Internal.ClassInfo, "dev.latvian.mods.kubejs.command.ArgumentTypeWrappers": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.modular.ModularUIGuiContainer": Internal.ClassInfo, "net.minecraftforge.client.event.RenderGuiEvent": Internal.ClassInfo, "net.minecraft.util.valueproviders.BiasedToBottomInt": Internal.ClassInfo, "net.minecraft.world.level.block.BellBlock": Internal.ClassInfo, "divinerpg.items.arcana.ItemLaVekor": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemTooltipEventJS$StaticTooltipHandlerFromJS": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.icon.MutableColor4I": Internal.ClassInfo, "dev.ftb.mods.ftbquests.item.QuestBookItem": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerEvent$BreakSpeed": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blockpredicates.AllOfPredicate": Internal.ClassInfo, "net.fabricmc.fabric.impl.networking.ChannelInfoHolder": Internal.ClassInfo, "net.minecraft.core.HolderLookup": Internal.ClassInfo, "com.inventorypets.items.petAchieveItem40": Internal.ClassInfo, "dev.architectury.registry.registries.options.RegistrarOption": Internal.ClassInfo, "vectorwing.farmersdelight.common.registry.ModRecipeTypes$1": Internal.ClassInfo, "net.minecraft.world.level.LevelSettings": Internal.ClassInfo, "net.minecraft.network.protocol.BundlerInfo$Provider": Internal.ClassInfo, "net.minecraft.world.level.block.PlayerHeadBlock": Internal.ClassInfo, "com.llamalad7.mixinextras.injector.wrapoperation.Operation": Internal.ClassInfo, "net.minecraftforge.common.world.StructureSettingsBuilder$StructureSpawnOverrideBuilder": Internal.ClassInfo, "net.minecraft.commands.CommandFunction": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.SteamCasingBlock": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.effect.IrritationEffect": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeRawTagBuilder": Internal.ClassInfo, "org.violetmoon.zeta.recipe.FlagIngredient": Internal.ClassInfo, "net.minecraft.client.resources.model.ModelState": Internal.ClassInfo, "java.nio.MappedByteBuffer": Internal.ClassInfo, "net.minecraft.client.gui.Font": Internal.ClassInfo, "appeng.api.util.AECableVariant": Internal.ClassInfo, "com.mna.api.spells.base.IModifiedSpellPart": Internal.ClassInfo, "com.enderio.base.common.item.misc.MaterialItem": Internal.ClassInfo, "com.almostreliable.lootjs.kube.LootEntryWrapper": Internal.ClassInfo, "net.minecraft.client.tutorial.TutorialStepInstance": Internal.ClassInfo, "net.minecraft.util.StringRepresentable": Internal.ClassInfo, "net.minecraftforge.client.extensions.common.IClientBlockExtensions": Internal.ClassInfo, "net.minecraft.server.level.WorldGenRegion": Internal.ClassInfo, "org.violetmoon.zeta.util.RegistryUtil": Internal.ClassInfo, "net.minecraftforge.event.village.VillagerTradesEvent": Internal.ClassInfo, "de.keksuccino.fancymenu.mixin.mixins.common.client.IMixinAbstractWidget": Internal.ClassInfo, "net.fabricmc.fabric.api.transfer.v1.item.InventoryStorage": Internal.ClassInfo, "com.mojang.realmsclient.dto.ReflectionBasedSerialization": Internal.ClassInfo, "net.minecraft.world.entity.Interaction": Internal.ClassInfo, "com.mojang.blaze3d.platform.WindowEventHandler": Internal.ClassInfo, "appeng.blockentity.misc.GrowthAcceleratorBlockEntity": Internal.ClassInfo, "net.minecraft.world.entity.ai.control.JumpControl": Internal.ClassInfo, "net.minecraftforge.forgespi.language.IModLanguageProvider": Internal.ClassInfo, "xaero.map.gui.ExportScreen": Internal.ClassInfo, "net.irisshaders.iris.compat.sodium.mixin.vertex_format.CommonVertexAttributeAccessor": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.AstralBreaker": Internal.ClassInfo, "java.lang.Thread": Internal.ClassInfo, "net.minecraft.world.level.block.entity.SkullBlockEntity": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.Serializer": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemBuilder$UseCallback": Internal.ClassInfo, "net.minecraft.client.renderer.entity.EntityRenderDispatcher": Internal.ClassInfo, "xaero.map.region.texture.BranchTextureRenderer": Internal.ClassInfo, "net.minecraft.client.renderer.block.model.ItemOverride": Internal.ClassInfo, "dev.architectury.event.forge.EventHandlerImplCommon$LevelEventAttachment": Internal.ClassInfo, "net.minecraft.world.level.block.RodBlock": Internal.ClassInfo, "net.minecraft.world.level.block.CeilingHangingSignBlock": Internal.ClassInfo, "com.inventorypets.pets.petPig": Internal.ClassInfo, "mods.railcraft.world.level.block.manipulator.CartDispenserBlock": Internal.ClassInfo, "com.almostreliable.lootjs.kube.builder.LootActionsBuilderJS": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.redstone.RedstoneTimerBlock$TimingStep": Internal.ClassInfo, "com.yanny.ytech.configuration.item.LionManItem": Internal.ClassInfo, "net.minecraft.world.entity.ai.memory.MemoryModuleType": Internal.ClassInfo, "dev.latvian.mods.kubejs.util.ScheduledEvents": Internal.ClassInfo, "net.minecraft.world.level.block.entity.SculkShriekerBlockEntity": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.arcanewood.ArcaneWoodScytheItem": Internal.ClassInfo, "java.nio.charset.CharsetDecoder": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.stateproviders.RotatedBlockProvider": Internal.ClassInfo, "com.mna.blocks.artifice.WardingCandleBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.ShortIterable": Internal.ClassInfo, "com.almostreliable.lootjs.kube.wrapper.IntervalJS": Internal.ClassInfo, "appeng.items.misc.WrappedGenericStack": Internal.ClassInfo, "com.gregtechceu.gtceu.common.block.BatteryBlock": Internal.ClassInfo, "top.theillusivec4.curios.api.type.inventory.ICurioStacksHandler": Internal.ClassInfo, "appeng.items.tools.powered.ColorApplicatorItem": Internal.ClassInfo, "com.gregtechceu.gtceu.api.fluids.store.FluidStorage$FluidEntry": Internal.ClassInfo, "javax.crypto.SecretKey": Internal.ClassInfo, "net.minecraft.CrashReport": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.StructurePieceAccessor": Internal.ClassInfo, "java.util.random.RandomGenerator": Internal.ClassInfo, "net.minecraft.world.item.SignApplicator": Internal.ClassInfo, "java.lang.invoke.MethodHandle": Internal.ClassInfo, "com.mna.items.food.ItemClayMug": Internal.ClassInfo, "me.jellysquid.mods.lithium.mixin.chunk.entity_class_groups.ServerWorldAccessor": Internal.ClassInfo, "net.minecraft.advancements.CriterionProgress": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.tileentity.TileSimpleInventory": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.jade_vines.JadeVineBulbBlock": Internal.ClassInfo, "java.awt.image.ImageConsumer": Internal.ClassInfo, "divinerpg.blocks.vethea.BlockLunicAltar": Internal.ClassInfo, "net.minecraft.client.sounds.ChannelAccess": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.DoubleIterator": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.ClientPlayerKJS": Internal.ClassInfo, "net.minecraft.util.ProgressListener": Internal.ClassInfo, "elucent.eidolon.common.item.SoulfireWandItem": Internal.ClassInfo, "org.embeddedt.embeddium.api.OptionGroupConstructionEvent": Internal.ClassInfo, "net.minecraft.world.level.block.entity.BeehiveBlockEntity$BeeReleaseStatus": Internal.ClassInfo, "de.keksuccino.drippyloadingscreen.mixin.mixins.common.client.IMixinMinecraft": Internal.ClassInfo, "net.minecraftforge.client.event.CustomizeGuiOverlayEvent$Chat": Internal.ClassInfo, "net.minecraft.network.chat.SignableCommand": Internal.ClassInfo, "de.dafuqs.spectrum.items.food.beverages.RepriseItem": Internal.ClassInfo, "net.minecraft.advancements.critereon.BlockPredicate": Internal.ClassInfo, "snownee.lychee.mixin.CraftingMenuAccess": Internal.ClassInfo, "net.minecraftforge.common.world.BiomeSpecialEffectsBuilder": Internal.ClassInfo, "xaero.map.MapWriter": Internal.ClassInfo, "elucent.eidolon.client.particle.SignParticleData": Internal.ClassInfo, "cc.abbie.emi_ores.mixin.accessor.NoiseProviderAccessor": Internal.ClassInfo, "java.util.ImmutableCollections$List12": Internal.ClassInfo, "net.minecraft.client.gui.narration.NarratedElementType": Internal.ClassInfo, "org.apache.logging.log4j.core.impl.LocationAware": Internal.ClassInfo, "techreborn.blocks.storage.item.StorageUnitBlock": Internal.ClassInfo, "io.netty.channel.SimpleChannelInboundHandler": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.entity.pushable.BlockCachingEntity": Internal.ClassInfo, "com.inventorypets.items.startButton": Internal.ClassInfo, "com.mna.blocks.artifice.RedstoneSpellTriggerBlock": Internal.ClassInfo, "mods.railcraft.api.signal.entity.MonitoringSignalEntity": Internal.ClassInfo, "com.inventorypets.items.nuggetObsidian": Internal.ClassInfo, "com.kamth.zeldamod.item.items.LeafItem": Internal.ClassInfo, "appeng.api.networking.crafting.ICraftingCPU": Internal.ClassInfo, "de.dafuqs.spectrum.status_effects.AscensionStatusEffect": Internal.ClassInfo, "xaero.map.gui.dropdown.IDropDownContainer": Internal.ClassInfo, "net.irisshaders.iris.texture.pbr.PBRSpriteHolder": Internal.ClassInfo, "vazkii.patchouli.api.IComponentProcessor": Internal.ClassInfo, "com.gregtechceu.gtceu.common.effect.GTPoisonEffect": Internal.ClassInfo, "com.yogpc.qp.machines.advpump.ItemAdvPump": Internal.ClassInfo, "mods.railcraft.world.level.block.track.outfitted.EmbarkingTrackBlock": Internal.ClassInfo, "com.inventorypets.pets.petBrewingStand": Internal.ClassInfo, "net.minecraft.world.item.crafting.CustomRecipe": Internal.ClassInfo, "dev.ftb.mods.ftbquests.quest.Chapter": Internal.ClassInfo, "de.dafuqs.spectrum.items.ItemWithTooltip": Internal.ClassInfo, "cofh.core.common.effect.ShockedMobEffect": Internal.ClassInfo, "com.yanny.ytech.configuration.block.BronzeAnvilBlock": Internal.ClassInfo, "com.mna.blocks.sorcery.InscriptionTableBlock": Internal.ClassInfo, "de.dafuqs.spectrum.enchantments.ExuberanceEnchantment": Internal.ClassInfo, "net.minecraft.util.valueproviders.IntProvider": Internal.ClassInfo, "net.minecraft.client.renderer.debug.BrainDebugRenderer$PoiInfo": Internal.ClassInfo, "xfacthd.framedblocks.api.camo.ContainerType": Internal.ClassInfo, "net.minecraftforge.forgespi.language.IModFileInfo$LanguageSpec": Internal.ClassInfo, "mods.railcraft.world.level.block.steamboiler.FireboxBlock": Internal.ClassInfo, "java.lang.reflect.Method": Internal.ClassInfo, "com.mna.items.artifice.charms.CharmBaseItem": Internal.ClassInfo, "com.aizistral.omniconfig.wrappers.Omniconfig$PerhapsParameter": Internal.ClassInfo, "java.util.ImmutableCollections$SetN": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.ingredientaction.CustomIngredientActionCallback": Internal.ClassInfo, "techreborn.blocks.misc.BlockStorage": Internal.ClassInfo, "java.util.Locale$LanguageRange": Internal.ClassInfo, "com.mna.api.spells.SpellReagent": Internal.ClassInfo, "org.apache.maven.artifact.versioning.ArtifactVersion": Internal.ClassInfo, "techreborn.blocks.storage.energy.InterdimensionalSUBlock": Internal.ClassInfo, "com.mojang.brigadier.arguments.ArgumentType": Internal.ClassInfo, "net.minecraftforge.common.capabilities.Capability": Internal.ClassInfo, "net.minecraft.world.item.ItemCooldowns": Internal.ClassInfo, "net.minecraft.world.item.crafting.StonecutterRecipe": Internal.ClassInfo, "com.mna.api.spells.base.ISpellDefinition": Internal.ClassInfo, "dev.latvian.mods.kubejs.script.data.DataPackEventJS": Internal.ClassInfo, "snownee.lychee.dripstone_dripping.DripstoneRecipeType": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decoration.EtherealGlassBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.common.block.ItemPipeBlock": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.dd_deco.BlackSludgePlantBlock": Internal.ClassInfo, "xfacthd.framedblocks.common.block.door.FramedTrapDoorBlock": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopepanel.FramedInverseDoubleSlopePanelBlock": Internal.ClassInfo, "net.minecraft.world.level.block.LanternBlock": Internal.ClassInfo, "divinerpg.effect.mob.GruzzorlugTargetEffect": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decoration.ColoredFenceBlock": Internal.ClassInfo, "net.minecraft.world.item.Tier": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.items.SlingshotItem": Internal.ClassInfo, "net.minecraft.world.level.block.SporeBlossomBlock": Internal.ClassInfo, "net.minecraft.client.renderer.PostPass": Internal.ClassInfo, "software.bernie.geckolib.core.animation.AnimationController$SoundKeyframeHandler": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundTagQueryPacket": Internal.ClassInfo, "java.awt.image.BufferedImageOp": Internal.ClassInfo, "net.minecraft.world.phys.HitResult$Type": Internal.ClassInfo, "net.minecraft.network.syncher.SynchedEntityData$DataValue": Internal.ClassInfo, "net.fabricmc.fabric.api.client.screen.v1.ScreenMouseEvents$AfterMouseScroll": Internal.ClassInfo, "com.mna.items.armor.DemonArmorItem": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.CrystalSeedBlock": Internal.ClassInfo, "com.google.common.collect.ImmutableList": Internal.ClassInfo, "dev.latvian.mods.kubejs.bindings.JavaWrapper": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopepanelcorner.FramedInverseDoubleCornerSlopePanelWallBlock": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.SteamSensorBlock": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.block.entity.inventory_comparator_tracking.ComparatorTracker": Internal.ClassInfo, "net.minecraft.world.entity.PowerableMob": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.ui.WidgetLayout$Padding": Internal.ClassInfo, "de.dafuqs.spectrum.items.MysteriousCompassItem": Internal.ClassInfo, "net.minecraftforge.client.model.generators.IGeneratedBlockState": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.structure.TreasureChestBlock": Internal.ClassInfo, "net.minecraft.client.gui.screens.worldselection.CreateWorldScreen": Internal.ClassInfo, "net.minecraft.client.model.geom.ModelPart$Cube": Internal.ClassInfo, "snownee.lychee.core.recipe.LycheeRecipe$Serializer": Internal.ClassInfo, "org.orecruncher.dsurround.mixinutils.ISourceContext": Internal.ClassInfo, "net.minecraft.server.packs.resources.ResourceManagerReloadListener": Internal.ClassInfo, "java.text.DecimalFormat": Internal.ClassInfo, "fzzyhmstrs.emi_loot.mixins.LightPredicateAccessor": Internal.ClassInfo, "net.minecraft.client.resources.model.ModelResourceLocation": Internal.ClassInfo, "net.fabricmc.fabric.api.client.screen.v1.ScreenEvents$Remove": Internal.ClassInfo, "io.wispforest.owo.ui.core.VerticalAlignment": Internal.ClassInfo, "xaero.map.graphics.TextureUploader": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.ConfiguredFeature": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.AstralDust": Internal.ClassInfo, "com.gregtechceu.gtceu.api.item.tool.IGTToolDefinition": Internal.ClassInfo, "dev.latvian.mods.rhino.Function": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.HoveringTomeStandBlock": Internal.ClassInfo, "net.fabricmc.fabric.api.item.v1.FabricItemStack": Internal.ClassInfo, "com.yanny.ytech.configuration.block.PrimitiveSmelterBlock": Internal.ClassInfo, "de.dafuqs.spectrum.interfaces.PlayerEntityAccessor": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.GlowstoneFeature": Internal.ClassInfo, "net.minecraft.world.item.Tiers": Internal.ClassInfo, "net.minecraft.world.inventory.ResultContainer": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slab.FramedSlabEdgeBlock": Internal.ClassInfo, "biomesoplenty.common.block.DriedSaltBlock": Internal.ClassInfo, "net.minecraft.server.packs.repository.RepositorySource": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.schema.RecipeSchema": Internal.ClassInfo, "com.mojang.authlib.GameProfileRepository": Internal.ClassInfo, "java.nio.channels.FileChannel$MapMode": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.worldgen.generator.veins.ClassicVeinGenerator$Layer": Internal.ClassInfo, "cofh.lib.api.item.ICoFHItem": Internal.ClassInfo, "lol.bai.badpackets.impl.handler.ClientPacketHandler": Internal.ClassInfo, "net.minecraftforge.event.level.LevelEvent": Internal.ClassInfo, "net.fabricmc.fabric.mixin.gamerule.GameRulesIntRuleAccessor": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap": Internal.ClassInfo, "net.irisshaders.batchedentityrendering.impl.TransparencyType": Internal.ClassInfo, "java.awt.Event": Internal.ClassInfo, "net.minecraft.world.item.CreativeModeTab$Row": Internal.ClassInfo, "com.google.gson.ExclusionStrategy": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.items.BombItem": Internal.ClassInfo, "java.text.NumberFormat$Style": Internal.ClassInfo, "net.minecraft.world.damagesource.DamageScaling": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.entity.block_tracking.SectionedBlockChangeTracker": Internal.ClassInfo, "com.yanny.ytech.configuration.item.MaterialArrowItem": Internal.ClassInfo, "io.wispforest.owo.mixin.ui.access.BlockEntityAccessor": Internal.ClassInfo, "net.minecraft.world.item.crafting.RecipeType$1": Internal.ClassInfo, "net.minecraft.world.item.crafting.RecipeType$2": Internal.ClassInfo, "dev.latvian.mods.kubejs.loot.GenericLootEventJS": Internal.ClassInfo, "net.minecraftforge.client.event.ContainerScreenEvent": Internal.ClassInfo, "com.mojang.serialization.MapDecoder": Internal.ClassInfo, "java.lang.Exception": Internal.ClassInfo, "net.minecraft.world.level.levelgen.flat.FlatLayerInfo": Internal.ClassInfo, "de.dafuqs.spectrum.status_effects.EffectProlongingStatusEffect": Internal.ClassInfo, "de.dafuqs.spectrum.enchantments.RazingEnchantment": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeAdvancementBuilder": Internal.ClassInfo, "java.beans.PropertyChangeListener": Internal.ClassInfo, "net.minecraft.world.level.block.GravelBlock": Internal.ClassInfo, "io.netty.util.concurrent.ProgressivePromise": Internal.ClassInfo, "net.minecraft.advancements.critereon.MinMaxBounds": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.pedestal.PedestalBlock": Internal.ClassInfo, "java.lang.reflect.AnnotatedElement": Internal.ClassInfo, "com.google.common.cache.CacheStats": Internal.ClassInfo, "net.minecraft.world.level.block.CoralWallFanBlock": Internal.ClassInfo, "org.orecruncher.dsurround.config.data.BiomeConfigRule": Internal.ClassInfo, "org.embeddedt.modernfix.forge.mixin.bugfix.entity_pose_stack.PoseStackAccessor": Internal.ClassInfo, "com.mojang.authlib.minecraft.report.ReportChatMessage": Internal.ClassInfo, "org.apache.logging.log4j.core.lookup.LookupResult": Internal.ClassInfo, "com.gregtechceu.gtceu.api.item.RendererBlockItem": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.ArcanumGrowthBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.predicate.BlockEntityPredicate": Internal.ClassInfo, "net.minecraft.world.level.block.CartographyTableBlock": Internal.ClassInfo, "io.wispforest.owo.util.pond.OwoScreenHandlerExtension": Internal.ClassInfo, "net.minecraft.world.item.crafting.ShapelessRecipe$Serializer": Internal.ClassInfo, "com.mojang.blaze3d.audio.SoundBuffer": Internal.ClassInfo, "io.wispforest.owo.ui.core.Surface": Internal.ClassInfo, "mods.railcraft.world.level.block.track.outfitted.DetectorTrackBlock$Mode": Internal.ClassInfo, "java.lang.module.ResolvedModule": Internal.ClassInfo, "net.minecraft.advancements.critereon.LightPredicate": Internal.ClassInfo, "com.kamth.zeldamod.block.custom.HeartFlowerBlock": Internal.ClassInfo, "net.minecraft.core.Rotations": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.IntIterable": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.InputReplacementTransformer$Replacement": Internal.ClassInfo, "dev.latvian.mods.kubejs.fluid.FluidBlockBuilder": Internal.ClassInfo, "dev.ftb.mods.ftbquests.quest.loot.EntityWeight": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.BlockStateComponent": Internal.ClassInfo, "appeng.block.crafting.CraftingMonitorBlock": Internal.ClassInfo, "fzzyhmstrs.emi_loot.mixins.BlockPredicateAccessor": Internal.ClassInfo, "net.minecraft.world.ticks.TickContainerAccess": Internal.ClassInfo, "reborncore.api.blockentity.IUpgrade": Internal.ClassInfo, "org.violetmoon.zeta.module.ZetaLoadModule": Internal.ClassInfo, "divinerpg.items.vanilla.ItemThrowingStar": Internal.ClassInfo, "dev.latvian.mods.rhino.GeneratedClassLoader": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.api.events.EndPortalActivatedEvent": Internal.ClassInfo, "mods.railcraft.world.level.block.SteamOvenBlock$Type": Internal.ClassInfo, "appeng.api.util.AECableSize": Internal.ClassInfo, "java.awt.font.GlyphVector": Internal.ClassInfo, "divinerpg.items.base.ItemModThrowable": Internal.ClassInfo, "com.mna.items.relic.ItemAstroBlade": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.ReplaceBlobsFeature": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.texture.IGuiTexture": Internal.ClassInfo, "techreborn.init.TRContent$Cables": Internal.ClassInfo, "net.minecraft.world.level.ChunkPos": Internal.ClassInfo, "appeng.me.cluster.IAECluster": Internal.ClassInfo, "net.minecraft.world.level.block.SkullBlock$Type": Internal.ClassInfo, "io.wispforest.owo.ui.core.Animation$Finished": Internal.ClassInfo, "net.minecraft.world.level.block.PotatoBlock": Internal.ClassInfo, "net.minecraft.client.searchtree.SearchRegistry": Internal.ClassInfo, "mezz.jei.api.gui.handlers.IGuiProperties": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2IntMap": Internal.ClassInfo, "com.mna.blocks.tileentities.EldrinAltarTile$ActiveCrystal": Internal.ClassInfo, "de.keksuccino.fancymenu.mixin.mixins.common.client.IMixinScreen": Internal.ClassInfo, "net.minecraft.world.entity.monster.CrossbowAttackMob": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.painter.PaintEventJS": Internal.ClassInfo, "net.minecraft.client.particle.ParticleEngine": Internal.ClassInfo, "net.irisshaders.iris.mixin.LightTextureAccessor": Internal.ClassInfo, "com.mojang.blaze3d.vertex.VertexSorting$DistanceFunction": Internal.ClassInfo, "net.minecraft.world.level.block.SpawnerBlock": Internal.ClassInfo, "com.mojang.datafixers.kinds.Kind1": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingChangeTargetEvent$ILivingTargetType": Internal.ClassInfo, "net.minecraft.world.entity.LivingEntity": Internal.ClassInfo, "techreborn.items.UpgradeItem": Internal.ClassInfo, "net.minecraft.world.item.SaddleItem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.pools.ListPoolElement": Internal.ClassInfo, "com.mna.api.entities.construct.materials.ConstructMaterialWood": Internal.ClassInfo, "net.minecraft.world.item.TippedArrowItem": Internal.ClassInfo, "divinerpg.world.structure.HighestCeilingType": Internal.ClassInfo, "net.minecraft.client.gui.components.CycleButton$ValueListSupplier": Internal.ClassInfo, "net.minecraft.world.entity.boss.enderdragon.phases.DragonStrafePlayerPhase": Internal.ClassInfo, "io.netty.channel.ChannelPromise": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.AfterRecipesLoadedEventJS": Internal.ClassInfo, "net.minecraftforge.forgespi.language.IModInfo$Ordering": Internal.ClassInfo, "java.lang.invoke.MethodHandleInfo": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.client.particle.TrailParticleType": Internal.ClassInfo, "net.minecraft.client.renderer.LightTexture": Internal.ClassInfo, "java.text.DateFormat": Internal.ClassInfo, "net.minecraft.world.level.storage.PrimaryLevelData$SpecialWorldProperty": Internal.ClassInfo, "java.lang.module.ModuleDescriptor$Opens": Internal.ClassInfo, "net.minecraft.advancements.RequirementsStrategy": Internal.ClassInfo, "net.minecraft.world.item.crafting.CraftingBookCategory": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.treedecorators.TreeDecorator": Internal.ClassInfo, "org.orecruncher.dsurround.lib.IMatcher": Internal.ClassInfo, "xaero.map.gui.IScreenBase": Internal.ClassInfo, "net.minecraftforge.client.event.ContainerScreenEvent$Render$Foreground": Internal.ClassInfo, "net.minecraft.world.level.block.entity.BarrelBlockEntity": Internal.ClassInfo, "com.mna.api.particles.parameters.ParticleBoolean": Internal.ClassInfo, "mods.railcraft.world.level.block.charge.DisposableBatteryBlock": Internal.ClassInfo, "com.kamth.zeldamod.block.custom.WisdomFlameBlock": Internal.ClassInfo, "org.apache.logging.log4j.core.ErrorHandler": Internal.ClassInfo, "de.dafuqs.spectrum.items.tools.PreenchantedMultiToolItem": Internal.ClassInfo, "dev.shadowsoffire.placebo.registry.RegistryEvent$RegistryWrapper": Internal.ClassInfo, "net.fabricmc.fabric.mixin.gamerule.GameRulesBooleanRuleAccessor": Internal.ClassInfo, "snownee.lychee.util.CommonProxy$1": Internal.ClassInfo, "biomesoplenty.common.block.WebbingBlock": Internal.ClassInfo, "cofh.thermal.core.init.registries.TCoreBlocks$5": Internal.ClassInfo, "cofh.thermal.core.init.registries.TCoreBlocks$4": Internal.ClassInfo, "de.dafuqs.spectrum.enchantments.IndestructibleEnchantment": Internal.ClassInfo, "cofh.thermal.core.init.registries.TCoreBlocks$1": Internal.ClassInfo, "cofh.thermal.core.init.registries.TCoreBlocks$3": Internal.ClassInfo, "mods.railcraft.world.level.block.manipulator.FluidLoaderBlock": Internal.ClassInfo, "cofh.thermal.core.init.registries.TCoreBlocks$2": Internal.ClassInfo, "io.netty.buffer.PoolChunkMetric": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.conditional.colored_tree.ColoredStrippedLogBlock": Internal.ClassInfo, "com.mna.api.recipes.IRunescribeRecipe": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.LivingEntityKJS": Internal.ClassInfo, "software.bernie.geckolib.core.animatable.GeoAnimatable": Internal.ClassInfo, "com.inventorypets.pets.petApple": Internal.ClassInfo, "java.util.regex.Pattern": Internal.ClassInfo, "net.minecraft.world.level.StructureManager": Internal.ClassInfo, "java.awt.Rectangle": Internal.ClassInfo, "de.dafuqs.spectrum.enchantments.TightGripEnchantment": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decay.FailingBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.RecipeComponent": Internal.ClassInfo, "org.violetmoon.zeta.block.ext.IZetaBlockExtensions": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.items.CageItem": Internal.ClassInfo, "appeng.blockentity.ServerTickingBlockEntity": Internal.ClassInfo, "mezz.jei.api.gui.ingredient.ICraftingGridHelper": Internal.ClassInfo, "net.minecraft.client.renderer.debug.BrainDebugRenderer$BrainDump": Internal.ClassInfo, "mezz.jei.api.gui.ingredient.IRecipeSlotDrawable": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blockpredicates.BlockPredicateType": Internal.ClassInfo, "net.minecraftforge.common.world.BiomeModifier$Phase": Internal.ClassInfo, "net.minecraft.client.resources.SkinManager$SkinTextureCallback": Internal.ClassInfo, "xfacthd.framedblocks.api.blueprint.BlueprintCopyBehaviour": Internal.ClassInfo, "net.minecraft.world.level.material.Fluid": Internal.ClassInfo, "com.lowdragmc.lowdraglib.syncdata.managed.IRef": Internal.ClassInfo, "com.mna.items.sorcery.ItemSpellBook": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.core.misc.IMapDataPacketExtension": Internal.ClassInfo, "com.tterrag.registrate.providers.RegistrateItemModelProvider": Internal.ClassInfo, "java.util.LongSummaryStatistics": Internal.ClassInfo, "dev.latvian.mods.kubejs.script.PlatformWrapper": Internal.ClassInfo, "dev.latvian.mods.rhino.mod.util.color.SimpleColor": Internal.ClassInfo, "java.awt.geom.Line2D": Internal.ClassInfo, "dev.architectury.extensions.injected.InjectedBucketItemExtension": Internal.ClassInfo, "biomesoplenty.common.block.StringyCobwebBlock": Internal.ClassInfo, "com.epherical.croptopia.mixin.LootPoolBuilderAccessor": Internal.ClassInfo, "appeng.blockentity.crafting.MolecularAssemblerBlockEntity": Internal.ClassInfo, "net.minecraft.world.entity.Targeting": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.util.TreeBuilder$Menu": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slope.FramedVerticalDoubleHalfSlopeBlock": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.editor.configurator.ConfiguratorGroup": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.conditional.RadiatingEnderBlock": Internal.ClassInfo, "java.awt.event.InputMethodEvent": Internal.ClassInfo, "net.minecraft.world.item.crafting.Recipe": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.item.additional_placements.AdditionalItemPlacement": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.LootTablesKJS": Internal.ClassInfo, "com.mna.effects.harmful.EffectHeatwave": Internal.ClassInfo, "mods.railcraft.world.level.block.track.outfitted.GatedTrackBlock": Internal.ClassInfo, "com.mojang.serialization.Keyable": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundInteractPacket$Handler": Internal.ClassInfo, "techreborn.items.tool.DebugToolItem": Internal.ClassInfo, "net.minecraftforge.event.entity.living.MobEffectEvent$Remove": Internal.ClassInfo, "java.io.InputStream": Internal.ClassInfo, "net.irisshaders.iris.fantastic.ParticleRenderingPhase": Internal.ClassInfo, "net.minecraft.world.ticks.ScheduledTick": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.events.IFireConsumeBlockEvent": Internal.ClassInfo, "net.minecraft.world.level.block.FenceGateBlock": Internal.ClassInfo, "net.minecraft.world.phys.AABB": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundSwingPacket": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.widget.TabContainer": Internal.ClassInfo, "de.keksuccino.fancymenu.mixin.mixins.common.client.IMixinMinecraft": Internal.ClassInfo, "divinerpg.items.twilight.ItemTwilightClock": Internal.ClassInfo, "org.orecruncher.dsurround.mixins.core.MixinClientChunkMap": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.core.ItemFTBL": Internal.ClassInfo, "net.minecraft.world.item.GameMasterBlockItem": Internal.ClassInfo, "xfacthd.framedblocks.common.block.rail.FramedDetectorRailSlopeBlock": Internal.ClassInfo, "appeng.api.networking.energy.IEnergyService": Internal.ClassInfo, "java.util.Map": Internal.ClassInfo, "com.inventorypets.pets.petSaddle": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.placement.ConcentricRingsStructurePlacement": Internal.ClassInfo, "com.gregtechceu.gtceu.api.gui.fancy.FancyMachineUIWidget$NavigationEntry": Internal.ClassInfo, "net.minecraft.client.renderer.entity.EntityRenderer": Internal.ClassInfo, "net.fabricmc.fabric.api.networking.v1.PacketType": Internal.ClassInfo, "xfacthd.framedblocks.common.block.prism.FramedSlopedPrismBlock": Internal.ClassInfo, "net.minecraft.server.level.DistanceManager": Internal.ClassInfo, "net.minecraft.world.inventory.RecipeBookType": Internal.ClassInfo, "net.minecraftforge.client.model.generators.BlockStateProvider$ConfiguredModelList": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundPlayerActionPacket": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.treedecorators.AttachedToLeavesDecorator": Internal.ClassInfo, "xfacthd.framedblocks.common.block.pane.FramedHorizontalPaneBlock": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.ingredient.IGhostIngredientTarget": Internal.ClassInfo, "snownee.lychee.core.ItemShapelessContext$Builder": Internal.ClassInfo, "java.util.stream.Stream": Internal.ClassInfo, "com.gregtechceu.gtceu.common.pipelike.fluidpipe.LevelFluidPipeNet": Internal.ClassInfo, "net.minecraft.world.entity.Marker": Internal.ClassInfo, "net.mehvahdjukaar.polytone.slotify.SimpleSprite": Internal.ClassInfo, "com.gregtechceu.gtceu.api.fluids.attribute.FluidAttributes": Internal.ClassInfo, "com.blamejared.controlling.mixin.AccessScreen": Internal.ClassInfo, "com.mojang.datafixers.util.Function8": Internal.ClassInfo, "net.minecraft.commands.CommandSourceStack": Internal.ClassInfo, "com.mojang.datafixers.util.Function9": Internal.ClassInfo, "org.violetmoon.zeta.registry.VariantRegistry": Internal.ClassInfo, "xaero.map.file.worldsave.WorldDataHandler$Result": Internal.ClassInfo, "com.mojang.datafixers.util.Function4": Internal.ClassInfo, "com.mojang.datafixers.util.Function5": Internal.ClassInfo, "com.mojang.datafixers.util.Function6": Internal.ClassInfo, "com.mojang.datafixers.util.Function7": Internal.ClassInfo, "de.dafuqs.spectrum.energy.color.CompoundColor": Internal.ClassInfo, "de.keksuccino.fancymenu.util.resource.PlayableResource": Internal.ClassInfo, "appeng.crafting.pattern.CraftingPatternItem": Internal.ClassInfo, "net.minecraft.world.level.storage.LevelData": Internal.ClassInfo, "com.mojang.datafixers.util.Function3": Internal.ClassInfo, "org.lwjgl.system.NativeResource": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.ComponentValueMap": Internal.ClassInfo, "net.minecraft.world.entity.Display$TextDisplay$CachedLine": Internal.ClassInfo, "net.minecraftforge.client.model.generators.BlockStateProvider": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.spirit_sallow.SpiritVines": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.ui.CursorType": Internal.ClassInfo, "net.minecraft.data.loot.BlockLootSubProvider": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.StructureSet$StructureSelectionEntry": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetDisplayObjectivePacket": Internal.ClassInfo, "reborncore.common.BaseBlock": Internal.ClassInfo, "appeng.block.storage.SkyChestBlock$SkyChestType": Internal.ClassInfo, "net.minecraft.world.level.block.TntBlock": Internal.ClassInfo, "com.almostreliable.lootjs.filters.ResourceLocationFilter": Internal.ClassInfo, "net.minecraft.world.item.CreativeModeTab$Type": Internal.ClassInfo, "net.minecraft.advancements.critereon.NbtPredicate": Internal.ClassInfo, "org.orecruncher.dsurround.mixins.audio.MixinSoundBuffer": Internal.ClassInfo, "appeng.blockentity.networking.CableBusBlockEntity": Internal.ClassInfo, "com.aizistral.etherium.items.EtheriumArmor": Internal.ClassInfo, "net.minecraft.world.level.gameevent.vibrations.VibrationInfo": Internal.ClassInfo, "dev.latvian.mods.kubejs.entity.RayTraceResultJS": Internal.ClassInfo, "net.minecraft.world.level.block.DoorBlock": Internal.ClassInfo, "net.minecraft.world.level.block.entity.BrewingStandBlockEntity": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.custom.ShapedBlockBuilder": Internal.ClassInfo, "com.lowdragmc.lowdraglib.syncdata.IManagedStorage": Internal.ClassInfo, "com.probejs.jdoc.ISerde": Internal.ClassInfo, "net.fabricmc.fabric.impl.content.registry.FireBlockHooks": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingDropsEvent": Internal.ClassInfo, "divinerpg.blocks.vethea.BlockInfusionTable": Internal.ClassInfo, "com.chailotl.particular.mixin.InvokerLivingEntity": Internal.ClassInfo, "net.minecraft.client.gui.font.glyphs.BakedGlyph$Effect": Internal.ClassInfo, "de.dafuqs.spectrum.items.food.DrinkItem": Internal.ClassInfo, "xfacthd.atlasviewer.client.api.SourceTooltipAppender": Internal.ClassInfo, "com.gregtechceu.gtceu.api.gui.widget.EnumSelectorWidget$SelectableEnum": Internal.ClassInfo, "com.chailotl.inventory_sort.mixin.AccessorHandledScreen": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.render.vertex.buffer.ExtendedBufferBuilder": Internal.ClassInfo, "com.inventorypets.worldgen.SkyDungeonStructure": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.DoubleCollection": Internal.ClassInfo, "com.mna.effects.interfaces.IDoubleTapEndEarly": Internal.ClassInfo, "com.kamth.zeldamod.item.items.DrinkItem": Internal.ClassInfo, "org.violetmoon.zeta.recipe.IZetaIngredient": Internal.ClassInfo, "io.netty.util.AbstractConstant": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.Short2DoubleFunction": Internal.ClassInfo, "mods.railcraft.world.level.block.track.outfitted.PoweredOutfittedTrackBlock": Internal.ClassInfo, "net.minecraftforge.client.IArmPoseTransformer": Internal.ClassInfo, "java.awt.image.WritableRenderedImage": Internal.ClassInfo, "dev.latvian.mods.kubejs.platform.forge.ingredient.KubeJSIngredient": Internal.ClassInfo, "com.inventorypets.pets.petIronGolem": Internal.ClassInfo, "net.minecraft.world.entity.raid.Raid": Internal.ClassInfo, "com.probejs.jdoc.java.ConstructorInfo": Internal.ClassInfo, "com.mna.effects.beneficial.SimpleBeneficialEffect": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2ByteFunction": Internal.ClassInfo, "it.unimi.dsi.fastutil.booleans.BooleanConsumer": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.LootContext$EntityTarget": Internal.ClassInfo, "java.util.concurrent.ConcurrentHashMap": Internal.ClassInfo, "cofh.thermal.core.common.item.DivingArmorItem": Internal.ClassInfo, "com.tterrag.registrate.builders.BuilderCallback": Internal.ClassInfo, "net.minecraft.util.profiling.ResultField": Internal.ClassInfo, "net.minecraft.world.entity.animal.Cow": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.creativetab.CreativeTabEvent": Internal.ClassInfo, "com.mna.effects.beneficial.EffectBurningRage": Internal.ClassInfo, "net.minecraft.world.inventory.Slot": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blending.Blender": Internal.ClassInfo, "com.inventorypets.pets.petLoot": Internal.ClassInfo, "mods.railcraft.world.level.block.SteamTurbineBlock$Type": Internal.ClassInfo, "net.minecraft.world.entity.animal.Cod": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.BoundingBox": Internal.ClassInfo, "divinerpg.items.iceika.ItemWinterberry": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundRecipeBookChangeSettingsPacket": Internal.ClassInfo, "reborncore.common.crafting.ingredient.RebornIngredient": Internal.ClassInfo, "net.minecraft.client.gui.screens.worldselection.WorldCreationUiState$SelectedGameMode": Internal.ClassInfo, "net.minecraft.world.entity.ai.gossip.GossipType": Internal.ClassInfo, "net.blay09.mods.balm.mixin.ScreenAccessor": Internal.ClassInfo, "net.irisshaders.batchedentityrendering.impl.DrawCallTrackingRenderBuffers": Internal.ClassInfo, "org.jgrapht.graph.IntrusiveEdge": Internal.ClassInfo, "divinerpg.effect.mob.HeavyAirEffect": Internal.ClassInfo, "software.bernie.geckolib.core.keyframe.event.SoundKeyframeEvent": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.Int2ObjectMap$Entry": Internal.ClassInfo, "com.mojang.blaze3d.vertex.BufferBuilder": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.KelpFeature": Internal.ClassInfo, "snownee.lychee.mixin.LocationPredicateAccess": Internal.ClassInfo, "java.util.concurrent.CompletableFuture": Internal.ClassInfo, "net.minecraftforge.common.crafting.AbstractIngredient": Internal.ClassInfo, "net.minecraft.world.item.PotionItem": Internal.ClassInfo, "javax.crypto.Cipher": Internal.ClassInfo, "de.dafuqs.spectrum.items.trinkets.SevenLeagueBootsItem": Internal.ClassInfo, "com.tterrag.registrate.builders.EnchantmentBuilder": Internal.ClassInfo, "divinerpg.blocks.base.BlockModDoublePlant": Internal.ClassInfo, "team.reborn.energy.api.base.SimpleBatteryItem": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopeedge.FramedSlopeEdgeBlock$ShapeKey": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.FillLayerFeature": Internal.ClassInfo, "appeng.api.networking.events.statistics.GridChunkEvent$GridChunkAdded": Internal.ClassInfo, "mods.railcraft.world.level.block.manipulator.TrainDispenserBlock": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundServerDataPacket": Internal.ClassInfo, "dev.ftb.mods.ftbquests.integration.RecipeModHelper$Components": Internal.ClassInfo, "com.kamth.zeldamod.item.masks.FierceMask": Internal.ClassInfo, "net.minecraft.world.entity.projectile.EyeOfEnder": Internal.ClassInfo, "net.minecraft.world.level.PathNavigationRegion": Internal.ClassInfo, "shcm.shsupercm.forge.citresewn.pack.cits.CITEnchantment$Cached": Internal.ClassInfo, "org.slf4j.Logger": Internal.ClassInfo, "biomesoplenty.common.block.SpanishMossBottomBlock": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundUpdateTagsPacket": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.rootplacers.AboveRootPlacement": Internal.ClassInfo, "net.minecraft.world.level.levelgen.WorldgenRandom": Internal.ClassInfo, "net.minecraftforge.entity.PartEntity": Internal.ClassInfo, "com.mojang.authlib.yggdrasil.response.Response": Internal.ClassInfo, "net.minecraftforge.client.event.RegisterColorHandlersEvent$Item": Internal.ClassInfo, "net.minecraft.advancements.AdvancementRewards$Builder": Internal.ClassInfo, "net.minecraft.world.level.block.AnvilBlock": Internal.ClassInfo, "com.google.common.collect.ImmutableMap$Builder": Internal.ClassInfo, "com.inventorypets.pets.petWolf": Internal.ClassInfo, "com.gregtechceu.gtceu.common.pipelike.duct.DuctPipeType": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.ObjectListIterator": Internal.ClassInfo, "com.gregtechceu.gtceu.common.pipelike.fluidpipe.FluidPipeType": Internal.ClassInfo, "xaero.map.region.BranchLeveledRegion": Internal.ClassInfo, "divinerpg.effect.mob.armor.base.PoisonProtectionEffect": Internal.ClassInfo, "appeng.api.implementations.items.MemoryCardMessages": Internal.ClassInfo, "com.mojang.authlib.minecraft.MinecraftProfileTexture": Internal.ClassInfo, "divinerpg.items.base.ItemModBow": Internal.ClassInfo, "com.gregtechceu.gtceu.api.gui.fancy.TitleBarWidget": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.arcanewood.ArcaneWoodPickaxeItem": Internal.ClassInfo, "net.minecraft.data.BlockFamily$Variant": Internal.ClassInfo, "software.bernie.geckolib.core.object.PlayState": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.ChemicalHelper": Internal.ClassInfo, "xfacthd.framedblocks.common.block.rail.FramedFancyPoweredRailSlopeBlock": Internal.ClassInfo, "net.minecraft.server.Services": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.FracturedCrystalItem": Internal.ClassInfo, "net.minecraft.client.renderer.MultiBufferSource$BufferSource": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.config.ResourceConfigValue": Internal.ClassInfo, "com.mna.blocks.decoration.ParticleEmitterBlock": Internal.ClassInfo, "net.fabricmc.fabric.api.transfer.v1.storage.Storage": Internal.ClassInfo, "net.minecraft.server.packs.PackType": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.core.misc.IExtendedItem": Internal.ClassInfo, "appeng.api.implementations.blockentities.IMEChest": Internal.ClassInfo, "divinerpg.blocks.twilight.BlockTwilightFlower": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$MouseDragged": Internal.ClassInfo, "java.util.regex.Matcher": Internal.ClassInfo, "java.text.FieldPosition": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.WithAttachedData": Internal.ClassInfo, "net.minecraft.world.level.block.TallGrassBlock": Internal.ClassInfo, "com.aizistral.omniconfig.ConfigCategory": Internal.ClassInfo, "appeng.api.util.AEColor": Internal.ClassInfo, "com.gregtechceu.gtceu.api.gui.editor.EditableMachineUI": Internal.ClassInfo, "com.lowdragmc.lowdraglib.side.fluid.IFluidStorage": Internal.ClassInfo, "divinerpg.blocks.vethea.BlockNightmareBed": Internal.ClassInfo, "com.mna.blocks.sorcery.SpectralAnvilBlock": Internal.ClassInfo, "com.lowdragmc.lowdraglib.core.mixins.accessor.SlotAccessor": Internal.ClassInfo, "divinerpg.items.base.ItemDivineArmor": Internal.ClassInfo, "xfacthd.framedblocks.common.block.stairs.FramedDividedStairsBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.BlockColumnConfiguration": Internal.ClassInfo, "net.minecraft.client.renderer.LevelRenderer": Internal.ClassInfo, "com.kamth.zeldamod.block.custom.MasterSwordPedestalBlock": Internal.ClassInfo, "mods.railcraft.world.level.block.CrusherMultiblockBlock$Type": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.worldgen.generator.indicators.SurfaceIndicatorGenerator": Internal.ClassInfo, "net.minecraftforge.event.level.BlockEvent$NeighborNotifyEvent": Internal.ClassInfo, "de.dafuqs.spectrum.items.tools.GlassArrowItem": Internal.ClassInfo, "net.minecraftforge.network.NetworkEvent$Context": Internal.ClassInfo, "com.mna.items.constructs.parts.head.ConstructPartHornHead": Internal.ClassInfo, "net.minecraft.network.protocol.status.ServerStatus$Version": Internal.ClassInfo, "xaero.map.highlight.AbstractHighlighter": Internal.ClassInfo, "net.minecraft.world.entity.animal.horse.ZombieHorse": Internal.ClassInfo, "net.minecraft.world.entity.projectile.EvokerFangs": Internal.ClassInfo, "vazkii.patchouli.client.book.EntryDisplayState": Internal.ClassInfo, "net.minecraft.world.entity.monster.Phantom$AttackPhase": Internal.ClassInfo, "reborncore.common.blockentity.MachineBaseBlockEntity": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.api.light.ILightTileEntity": Internal.ClassInfo, "it.unimi.dsi.fastutil.Hash$Strategy": Internal.ClassInfo, "cofh.thermal.core.common.item.XpCrystalItem": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.material.registry.MaterialRegistry": Internal.ClassInfo, "com.mna.items.armor.ISetItem": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.weathering.Weathering$WeatheringLevel": Internal.ClassInfo, "net.minecraft.server.ServerScoreboard": Internal.ClassInfo, "net.minecraft.world.level.GameRules$Value": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.LayerConfiguration": Internal.ClassInfo, "net.minecraft.world.entity.ReputationEventHandler": Internal.ClassInfo, "org.apache.logging.log4j.core.script.ScriptManager": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Reference2LongFunction": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.placement.StructurePlacement": Internal.ClassInfo, "com.inventorypets.items.solsticeLeggings": Internal.ClassInfo, "de.dafuqs.spectrum.items.magic_items.KnowledgeGemItem": Internal.ClassInfo, "io.wispforest.owo.util.EventStream": Internal.ClassInfo, "xaero.map.biome.BiomeColorCalculator": Internal.ClassInfo, "com.mna.items.constructs.ItemMagicBroom": Internal.ClassInfo, "com.mna.effects.interfaces.IInputDisable$InputMask": Internal.ClassInfo, "mcp.mobius.waila.mixin.MultiPlayerGameModeAccess": Internal.ClassInfo, "net.minecraftforge.forgespi.language.IModFileInfo": Internal.ClassInfo, "net.minecraft.network.chat.Component": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.furniture.DiagonalBlock": Internal.ClassInfo, "com.lowdragmc.lowdraglib.networking.s2c.SPacketRPCMethodPayload": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.VariantBlockStateGenerator$Variant": Internal.ClassInfo, "dev.latvian.mods.kubejs.generator.AssetJsonGenerator": Internal.ClassInfo, "com.mna.effects.interfaces.INoCreeperLingering": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerInteractEvent$LeftClickEmpty": Internal.ClassInfo, "techreborn.items.armor.TRArmourItem": Internal.ClassInfo, "com.inventorypets.blocks.cloudSpawn": Internal.ClassInfo, "java.awt.event.MouseMotionListener": Internal.ClassInfo, "net.minecraft.world.level.entity.PersistentEntitySectionManager": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.dd_deco.DoomBloomBlock": Internal.ClassInfo, "com.mojang.brigadier.exceptions.CommandSyntaxException": Internal.ClassInfo, "com.mna.items.artifice.ItemTransitoryTunnel": Internal.ClassInfo, "com.mna.items.artifice.charms.ItemCancelFireCharm": Internal.ClassInfo, "de.dafuqs.spectrum.enchantments.InertiaEnchantment": Internal.ClassInfo, "pokefenn.totemic.item.CreativeMedicineBagItem": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.ui.WidgetLayout$Vertical": Internal.ClassInfo, "com.almostreliable.lootjs.filters.ItemFilter": Internal.ClassInfo, "dev.ftb.mods.ftbquests.quest.QuestObjectType": Internal.ClassInfo, "net.minecraft.util.valueproviders.SampledFloat": Internal.ClassInfo, "cofh.core.client.particle.options.CoFHParticleOptions": Internal.ClassInfo, "com.gregtechceu.gtceu.api.gui.fancy.TooltipsPanel": Internal.ClassInfo, "com.gregtechceu.gtceu.api.pipenet.IAttachData": Internal.ClassInfo, "net.minecraft.data.tags.IntrinsicHolderTagsProvider$IntrinsicTagAppender": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.config.ImageResourceConfig": Internal.ClassInfo, "net.minecraft.client.OptionInstance$CycleableValueSet$ValueSetter": Internal.ClassInfo, "net.minecraft.world.level.GameRules$IntegerValue": Internal.ClassInfo, "cofh.lib.util.recipes.SerializableRecipeType": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slab.FramedAdjustableDoubleBlock": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopeslab.FramedInverseDoubleSlopeSlabBlock": Internal.ClassInfo, "net.mehvahdjukaar.amendments.common.block.ModCauldronBlock": Internal.ClassInfo, "net.minecraftforge.client.model.generators.ModelBuilder$FaceRotation": Internal.ClassInfo, "appeng.debug.CubeGeneratorBlock": Internal.ClassInfo, "divinerpg.items.twilight.ItemForbiddenFruit": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.AndRecipeComponent": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.MonsterRoomFeature": Internal.ClassInfo, "com.mna.items.sorcery.bound.IBoundItem": Internal.ClassInfo, "com.mojang.blaze3d.shaders.Effect": Internal.ClassInfo, "net.minecraft.world.level.biome.BiomeSpecialEffects$Builder": Internal.ClassInfo, "org.lwjgl.system.CustomBuffer": Internal.ClassInfo, "com.mojang.authlib.UserAuthentication": Internal.ClassInfo, "org.violetmoon.zeta.api.IAdvancementModifier": Internal.ClassInfo, "com.mna.blocks.sorcery.SpectralLadderBlock": Internal.ClassInfo, "de.dafuqs.spectrum.mixin.accessors.MooshroomEntityAccessor": Internal.ClassInfo, "appeng.hooks.AEToolItem": Internal.ClassInfo, "net.darkhax.attributefix.mixin.AccessorRangedAttribute": Internal.ClassInfo, "appeng.api.orientation.BlockOrientation": Internal.ClassInfo, "com.mna.enchantments.Beheading": Internal.ClassInfo, "com.almostreliable.lootjs.kube.LootModificationEventJS": Internal.ClassInfo, "net.minecraft.world.inventory.GrindstoneMenu": Internal.ClassInfo, "net.minecraftforge.client.extensions.common.IClientFluidTypeExtensions": Internal.ClassInfo, "com.google.common.collect.ForwardingObject": Internal.ClassInfo, "appeng.api.stacks.AmountFormat": Internal.ClassInfo, "com.mna.effects.beneficial.EffectCircleOfPower": Internal.ClassInfo, "de.keksuccino.fancymenu.util.resource.resources.audio.PlayableResourceWithAudio": Internal.ClassInfo, "auviotre.enigmatic.addon.items.NightScroll": Internal.ClassInfo, "org.apache.logging.log4j.spi.LoggerContextShutdownEnabled": Internal.ClassInfo, "com.gregtechceu.gtceu.api.recipe.lookup.GTRecipeLookup": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.api.knowledge.Research": Internal.ClassInfo, "com.mojang.blaze3d.platform.DisplayData": Internal.ClassInfo, "net.irisshaders.batchedentityrendering.impl.RenderBuffersExt": Internal.ClassInfo, "net.minecraft.network.chat.ClickEvent$Action": Internal.ClassInfo, "fzzyhmstrs.emi_loot.mixins.ItemPredicateAccessor": Internal.ClassInfo, "com.gregtechceu.gtceu.api.registry.registrate.MultiblockMachineBuilder": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.present.PresentBlockEntity": Internal.ClassInfo, "snownee.lychee.core.recipe.LycheeCounter": Internal.ClassInfo, "com.google.common.reflect.Parameter": Internal.ClassInfo, "net.minecraft.world.level.storage.LevelSummary": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.functions.CopyNameFunction$NameSource": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.worldgen.GTLayerPattern": Internal.ClassInfo, "net.minecraft.world.inventory.ContainerSynchronizer": Internal.ClassInfo, "net.minecraft.world.effect.MobEffectCategory": Internal.ClassInfo, "com.gregtechceu.gtceu.api.recipe.content.IContentSerializer": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.config.ConfigValue": Internal.ClassInfo, "de.dafuqs.spectrum.items.trinkets.PuffCircletItem": Internal.ClassInfo, "net.minecraft.util.valueproviders.ClampedNormalFloat": Internal.ClassInfo, "xaero.map.region.MapTileChunk": Internal.ClassInfo, "it.unimi.dsi.fastutil.chars.Char2ObjectFunction": Internal.ClassInfo, "org.orecruncher.dsurround.mixins.core.MixinClientWorldProperties": Internal.ClassInfo, "divinerpg.blocks.base.BlockModMobCage": Internal.ClassInfo, "com.yanny.ytech.configuration.item.ShellBeadsItem": Internal.ClassInfo, "org.apache.logging.log4j.ThreadContext$ContextStack": Internal.ClassInfo, "com.gregtechceu.gtceu.common.block.explosive.GTExplosiveBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.painter.screen.PaintScreenEventJS": Internal.ClassInfo, "com.mna.items.constructs.parts.legs.ConstructPartReinforcedLegs": Internal.ClassInfo, "mezz.jei.api.helpers.IPlatformFluidHelper": Internal.ClassInfo, "com.lowdragmc.lowdraglib.utils.BlockPosFace": Internal.ClassInfo, "net.minecraft.world.entity.ai.village.ReputationEventType": Internal.ClassInfo, "com.inventorypets.pets.petHouse": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.redstone.EnderGlassBlock": Internal.ClassInfo, "net.minecraft.world.item.FireworkRocketItem": Internal.ClassInfo, "net.minecraft.world.level.block.LightningRodBlock": Internal.ClassInfo, "java.util.function.IntUnaryOperator": Internal.ClassInfo, "mods.railcraft.api.charge.ChargeStorage$State": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundPlayerInfoUpdatePacket$Action$Writer": Internal.ClassInfo, "vazkii.patchouli.mixin.client.AccessorKeyMapping": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.model.color.interop.ItemColorsExtended": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.schema.RecipeSchemaType": Internal.ClassInfo, "net.minecraftforge.common.util.NonNullSupplier": Internal.ClassInfo, "org.apache.logging.log4j.core.async.AsyncLoggerConfig": Internal.ClassInfo, "appeng.api.implementations.menuobjects.IMenuItem": Internal.ClassInfo, "com.electronwill.nightconfig.core.Config$Entry": Internal.ClassInfo, "java.lang.Integer": Internal.ClassInfo, "elucent.eidolon.util.TargetMode": Internal.ClassInfo, "com.mna.api.blocks.DirectionalPoint": Internal.ClassInfo, "net.minecraft.client.searchtree.SearchRegistry$TreeBuilderSupplier": Internal.ClassInfo, "io.wispforest.owo.ui.core.OwoUIDrawContext": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.editor.annotation.LDLRegister": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Reference2ByteFunction": Internal.ClassInfo, "org.apache.logging.log4j.core.config.Node": Internal.ClassInfo, "com.mna.items.constructs.parts.arms.ConstructPartGrabberArmLeft": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.items.FlagItem": Internal.ClassInfo, "de.dafuqs.spectrum.status_effects.LifeDrainStatusEffect": Internal.ClassInfo, "net.minecraft.world.level.pathfinder.Target": Internal.ClassInfo, "org.joml.Vector3i": Internal.ClassInfo, "org.joml.Vector3f": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.NetherForestVegetationFeature": Internal.ClassInfo, "org.joml.Vector3d": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.Short2IntFunction": Internal.ClassInfo, "com.inventorypets.pets.petMetaYouTuber": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.ui.Panel": Internal.ClassInfo, "com.inventorypets.pets.petMetaFan": Internal.ClassInfo, "questsadditions.mixinutils.IMixinQuest": Internal.ClassInfo, "pokefenn.totemic.item.TotemBaseItem": Internal.ClassInfo, "divinerpg.items.arcana.ItemAquamarine": Internal.ClassInfo, "cc.abbie.emi_ores.mixin.accessor.HeightRangePlacementAccessor": Internal.ClassInfo, "com.mna.items.relic.ItemRunicMalus": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetEntityMotionPacket": Internal.ClassInfo, "me.jellysquid.mods.lithium.api.inventory.LithiumDefaultedList": Internal.ClassInfo, "java.io.Serializable": Internal.ClassInfo, "com.gregtechceu.gtceu.api.machine.feature.IInteractedMachine": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.Short2FloatFunction": Internal.ClassInfo, "com.mna.api.spells.SpellPartTags": Internal.ClassInfo, "org.joml.Vector2i": Internal.ClassInfo, "mods.railcraft.world.item.WorldSpikeMinecartItem": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.ShortIterator": Internal.ClassInfo, "net.minecraftforge.client.textures.ITextureAtlasSpriteLoader": Internal.ClassInfo, "techreborn.blocks.transformers.BlockEVTransformer": Internal.ClassInfo, "cofh.core.common.item.EnergyContainerItem": Internal.ClassInfo, "techreborn.items.tool.JackhammerItem": Internal.ClassInfo, "org.joml.Vector2f": Internal.ClassInfo, "com.inventorypets.items.solsticeSword": Internal.ClassInfo, "org.joml.Vector2d": Internal.ClassInfo, "java.awt.dnd.DropTargetListener": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.LootParams$Builder": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopepanelcorner.FramedLargeInnerCornerSlopePanelBlock": Internal.ClassInfo, "org.apache.logging.log4j.core.config.ConfigurationSource": Internal.ClassInfo, "com.enderio.base.common.item.tool.SoulVialItem": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.editor.ui.ConfigPanel": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slope.FramedDoublePrismCornerBlock": Internal.ClassInfo, "reborncore.api.items.ArmorBlockEntityTicker": Internal.ClassInfo, "net.minecraft.world.inventory.AbstractContainerMenu": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.config.NumberConfig": Internal.ClassInfo, "java.time.LocalDateTime": Internal.ClassInfo, "net.minecraft.world.entity.ai.behavior.Behavior$Status": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerInteractEvent$LeftClickBlock": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetSubtitleTextPacket": Internal.ClassInfo, "java.util.function.Supplier": Internal.ClassInfo, "net.minecraft.core.RegistryAccess$1FrozenAccess": Internal.ClassInfo, "net.minecraft.server.level.ServerPlayer": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.IchorBottle": Internal.ClassInfo, "com.yanny.ytech.configuration.block.BrickChimneyBlock": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeFluidState": Internal.ClassInfo, "cofh.core.common.item.ItemCoFH": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.Structure$StructureSettings": Internal.ClassInfo, "net.minecraftforge.fml.event.lifecycle.InterModEnqueueEvent": Internal.ClassInfo, "net.minecraft.world.level.block.state.StateDefinition$Builder": Internal.ClassInfo, "net.minecraft.world.item.crafting.BookCloningRecipe": Internal.ClassInfo, "org.apache.logging.log4j.core.jmx.RingBufferAdmin": Internal.ClassInfo, "elucent.eidolon.common.item.curio.WardedMailItem": Internal.ClassInfo, "com.mojang.authlib.minecraft.report.AbuseReport": Internal.ClassInfo, "dev.latvian.mods.kubejs.entity.EntityPotionEffectsJS": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.MappingRecipeComponent": Internal.ClassInfo, "org.jgrapht.graph.DefaultEdge": Internal.ClassInfo, "divinerpg.items.base.ItemModHoe": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decay.FadingBlock": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$Init$Post": Internal.ClassInfo, "net.akoto090.nothingcore.entity.custom.PlateItem": Internal.ClassInfo, "mods.railcraft.world.level.block.signal.DualTokenSignalBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.script.ScriptType": Internal.ClassInfo, "net.minecraftforge.server.permission.nodes.PermissionType": Internal.ClassInfo, "org.joml.Vector4i": Internal.ClassInfo, "net.minecraft.server.ServerFunctionLibrary": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.BlockComponent": Internal.ClassInfo, "net.minecraft.world.level.dimension.end.DragonRespawnAnimation": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.IntSet": Internal.ClassInfo, "org.joml.Vector4f": Internal.ClassInfo, "com.yanny.ytech.configuration.block.AqueductHydratorBlock": Internal.ClassInfo, "org.joml.Vector4d": Internal.ClassInfo, "com.kamth.zeldamod.item.items.AncientArrowItem": Internal.ClassInfo, "divinerpg.blocks.arcana.BlockArcanaPortal": Internal.ClassInfo, "org.apache.commons.lang3.mutable.MutableInt": Internal.ClassInfo, "net.minecraft.client.gui.font.glyphs.BakedGlyph": Internal.ClassInfo, "net.irisshaders.iris.helpers.VertexBufferHelper": Internal.ClassInfo, "de.dafuqs.spectrum.items.tools.WorkstaffItem": Internal.ClassInfo, "net.minecraft.nbt.IntTag": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.ui.BaseScreen": Internal.ClassInfo, "dev.architectury.hooks.level.biome.GenerationProperties": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.AbstractLong2ObjectMap": Internal.ClassInfo, "appeng.helpers.IMouseWheelItem": Internal.ClassInfo, "com.mna.effects.beneficial.EffectBulwark": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.FluidLogging$State": Internal.ClassInfo, "net.mehvahdjukaar.polytone.mixins.forge.ModifiableBiomeAccessor": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.pools.SinglePoolElement": Internal.ClassInfo, "xfacthd.framedblocks.common.block.torch.FramedTorchBlock": Internal.ClassInfo, "com.mojang.datafixers.types.templates.TaggedChoice$TaggedChoiceType": Internal.ClassInfo, "appeng.block.misc.InterfaceBlock": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.enchantments.SlayerEnchantment": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.CarvingMaskPlacement": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decay.ForfeitureBlock": Internal.ClassInfo, "mods.railcraft.world.item.RoutingTableBookItem": Internal.ClassInfo, "net.minecraft.core.Direction8": Internal.ClassInfo, "vazkii.patchouli.client.book.BookCategory": Internal.ClassInfo, "appeng.items.tools.powered.AbstractPortableCell": Internal.ClassInfo, "com.mna.blocks.sorcery.SpectralStonecutterBlock": Internal.ClassInfo, "io.netty.buffer.AbstractByteBufAllocator": Internal.ClassInfo, "java.util.function.DoubleToIntFunction": Internal.ClassInfo, "fzzyhmstrs.emi_loot.mixins.StatePredicateAccessor": Internal.ClassInfo, "java.awt.image.renderable.RenderContext": Internal.ClassInfo, "net.minecraft.world.entity.ai.control.MoveControl$Operation": Internal.ClassInfo, "net.minecraftforge.client.event.ViewportEvent": Internal.ClassInfo, "java.awt.Paint": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.ScatteredOreFeature": Internal.ClassInfo, "com.electronwill.nightconfig.core.file.FileNotFoundAction": Internal.ClassInfo, "com.mna.recipes.ItemAndPatternRecipe": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slope.FramedThreewayCornerBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.VerticalAnchor": Internal.ClassInfo, "software.bernie.geckolib.core.animation.AnimationController$State": Internal.ClassInfo, "java.awt.Toolkit": Internal.ClassInfo, "xfacthd.framedblocks.common.item.FramedBlueprintItem": Internal.ClassInfo, "net.minecraftforge.registries.IForgeRegistry$ValidateCallback": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.IronRing": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.dd_deco.SnappingIvyBlock": Internal.ClassInfo, "cofh.thermal.lib.common.item.InventoryContainerItemAugmentable": Internal.ClassInfo, "net.mehvahdjukaar.polytone.mixins.accessor.DustParticleOptionAccessor": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.util.ClickData": Internal.ClassInfo, "net.fabricmc.fabric.api.lookup.v1.item.ItemApiLookup$ItemApiProvider": Internal.ClassInfo, "net.minecraft.server.players.ServerOpListEntry": Internal.ClassInfo, "com.google.gson.FieldNamingPolicy": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.AlchemyFurnaceBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemTintFunction": Internal.ClassInfo, "com.kamth.zeldamod.item.items.RedRingItem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.SnowAndFreezeFeature": Internal.ClassInfo, "snownee.kiwi.mixin.HoeItemAccess": Internal.ClassInfo, "net.irisshaders.iris.texture.SpriteContentsExtension": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.config.IntConfig": Internal.ClassInfo, "com.kamth.zeldamod.item.items.FeatherItem": Internal.ClassInfo, "de.dafuqs.spectrum.items.trinkets.WhispyCircletItem": Internal.ClassInfo, "java.io.PrintStream": Internal.ClassInfo, "dev.shadowsoffire.placebo.mixin.AbstractContainerMenuInvoker": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.crystallarieum.CrystallarieumBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemEntityInteractedEventJS": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopepanelcorner.FramedExtendedCornerSlopePanelWallBlock": Internal.ClassInfo, "dev.architectury.hooks.level.biome.BiomeProperties": Internal.ClassInfo, "java.lang.module.ModuleDescriptor$Builder": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.boom.ThreatConfluxItem": Internal.ClassInfo, "com.mna.items.artifice.ItemEnderDisk": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.custom.CropBlockBuilder": Internal.ClassInfo, "net.minecraft.commands.CommandBuildContext": Internal.ClassInfo, "net.irisshaders.iris.mixin.rendertype.RenderStateShardAccessor": Internal.ClassInfo, "com.mojang.blaze3d.vertex.Tesselator": Internal.ClassInfo, "net.minecraft.world.entity.animal.horse.AbstractHorse": Internal.ClassInfo, "xaero.map.world.MapConnectionNode": Internal.ClassInfo, "net.blay09.mods.balm.api.event.client.screen.ScreenMouseEvent$Click": Internal.ClassInfo, "net.minecraft.client.renderer.chunk.ChunkRenderDispatcher$RenderChunk$ChunkCompileTask": Internal.ClassInfo, "com.mojang.realmsclient.gui.RealmsDataFetcher": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.render.chunk.map.ChunkTracker$ChunkEventHandler": Internal.ClassInfo, "net.minecraftforge.registries.MissingMappingsEvent": Internal.ClassInfo, "com.kamth.zeldamod.item.masks.ZoraMask": Internal.ClassInfo, "java.awt.event.FocusListener": Internal.ClassInfo, "net.minecraftforge.event.TagsUpdatedEvent$UpdateCause": Internal.ClassInfo, "com.mna.items.constructs.parts.arms.ConstructPartBladeArmLeft": Internal.ClassInfo, "net.minecraft.network.chat.MessageSignatureCache": Internal.ClassInfo, "net.minecraft.core.Direction$AxisDirection": Internal.ClassInfo, "com.google.gson.ToNumberStrategy": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.idols.MilkingIdolBlock": Internal.ClassInfo, "snownee.lychee.mixin.IntsAccess": Internal.ClassInfo, "de.dafuqs.spectrum.items.magic_items.EnderSpliceItem": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.QuotePlayer": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.predicates.AllOfCondition$Builder": Internal.ClassInfo, "net.minecraft.world.entity.projectile.ShulkerBullet": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.LootGenerator": Internal.ClassInfo, "mezz.jei.api.runtime.IEditModeConfig$HideMode": Internal.ClassInfo, "cofh.thermal.core.common.fluid.RedstoneFluid$FluidBlock": Internal.ClassInfo, "net.minecraft.world.damagesource.CombatTracker": Internal.ClassInfo, "xaero.map.MapLimiter": Internal.ClassInfo, "net.fabricmc.fabric.api.recipe.v1.ingredient.CustomIngredient": Internal.ClassInfo, "net.minecraftforge.fml.DeferredWorkQueue": Internal.ClassInfo, "net.minecraft.world.item.trading.Merchant": Internal.ClassInfo, "com.lowdragmc.lowdraglib.client.scene.ISceneBlockRenderHook": Internal.ClassInfo, "net.minecraft.world.entity.TraceableEntity": Internal.ClassInfo, "net.minecraft.core.IdMapper": Internal.ClassInfo, "net.minecraft.world.level.levelgen.WorldOptions": Internal.ClassInfo, "net.minecraftforge.common.capabilities.RegisterCapabilitiesEvent": Internal.ClassInfo, "net.minecraft.world.entity.monster.Creeper": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.Int2CharFunction": Internal.ClassInfo, "net.minecraft.world.item.enchantment.Enchantment": Internal.ClassInfo, "dev.shadowsoffire.placebo.registry.RegistryEvent$Register": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.WissenSensorBlock": Internal.ClassInfo, "io.wispforest.owo.mixin.ui.layers.HandledScreenAccessor": Internal.ClassInfo, "net.mehvahdjukaar.dummmmmmy.common.TargetDummyItem": Internal.ClassInfo, "net.minecraft.world.level.block.GrassBlock": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.FuelItem": Internal.ClassInfo, "mods.railcraft.world.level.block.track.outfitted.LockingModeController": Internal.ClassInfo, "net.minecraft.world.level.block.BrewingStandBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.RuleTest": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopepanelcorner.FramedStackedCornerSlopePanelBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.integration.kjs.recipe.components.ContentJS": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingEntityUseItemEvent$Finish": Internal.ClassInfo, "net.minecraft.client.particle.ParticleProvider$Sprite": Internal.ClassInfo, "mods.railcraft.world.level.block.worldspike.WorldSpikeBlock": Internal.ClassInfo, "appeng.blockentity.misc.PaintSplotchesBlockEntity": Internal.ClassInfo, "com.kamth.zeldamod.item.items.IceRodItem": Internal.ClassInfo, "java.util.jar.Attributes$Name": Internal.ClassInfo, "snownee.lychee.compat.kubejs.CustomActionEventJS": Internal.ClassInfo, "java.lang.String": Internal.ClassInfo, "net.minecraft.client.resources.sounds.AbstractSoundInstance": Internal.ClassInfo, "net.minecraft.world.level.gameevent.PositionSource": Internal.ClassInfo, "com.mna.blocks.runeforging.PedestalBlock": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.tileentity.ArcanePedestalTileEntity": Internal.ClassInfo, "java.lang.invoke.VarHandle": Internal.ClassInfo, "net.fabricmc.fabric.mixin.rendering.data.WorldViewMixin": Internal.ClassInfo, "io.wispforest.owo.ui.event.MouseDown": Internal.ClassInfo, "biomesoplenty.common.block.HighGrassPlantBlock": Internal.ClassInfo, "net.minecraft.commands.arguments.EntityAnchorArgument$Anchor": Internal.ClassInfo, "java.awt.MenuContainer": Internal.ClassInfo, "biomesoplenty.common.block.OvergrownSandBlock": Internal.ClassInfo, "mods.railcraft.world.level.block.track.outfitted.DetectorTrackBlock": Internal.ClassInfo, "net.minecraft.client.gui.components.events.GuiEventListener": Internal.ClassInfo, "net.minecraft.world.level.block.CaveVinesBlock": Internal.ClassInfo, "net.minecraft.world.level.block.SnowyDirtBlock": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.gui.options.OptionGroup": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.present.PresentBlock$WrappingPaper": Internal.ClassInfo, "net.minecraft.world.entity.Display$ItemDisplay$ItemRenderState": Internal.ClassInfo, "net.minecraftforge.event.entity.player.AttackEntityEvent": Internal.ClassInfo, "net.minecraft.client.renderer.entity.RenderLayerParent": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.FluidComponents$1": Internal.ClassInfo, "net.minecraft.world.entity.projectile.LlamaSpit": Internal.ClassInfo, "divinerpg.effect.mob.armor.base.MarkerEffect": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.InSquarePlacement": Internal.ClassInfo, "io.netty.buffer.PoolSubpageMetric": Internal.ClassInfo, "it.unimi.dsi.fastutil.booleans.Boolean2LongFunction": Internal.ClassInfo, "net.minecraft.world.item.ScaffoldingBlockItem": Internal.ClassInfo, "net.minecraft.world.inventory.MenuType": Internal.ClassInfo, "net.minecraft.world.entity.LivingEntity$Fallsounds": Internal.ClassInfo, "com.inventorypets.pets.petDoubleChest": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Reference2FloatFunction": Internal.ClassInfo, "com.gregtechceu.gtceu.api.item.forge.GTBucketItem": Internal.ClassInfo, "appeng.api.networking.crafting.ICraftingPlan": Internal.ClassInfo, "net.minecraft.client.renderer.debug.VillageSectionsDebugRenderer": Internal.ClassInfo, "dev.latvian.mods.kubejs.misc.VillagerTypeBuilder": Internal.ClassInfo, "xfacthd.framedblocks.common.data.property.StairsType": Internal.ClassInfo, "it.unimi.dsi.fastutil.bytes.ByteIterable": Internal.ClassInfo, "java.awt.dnd.DragGestureRecognizer": Internal.ClassInfo, "xaero.map.region.MapBlock": Internal.ClassInfo, "appeng.api.config.Actionable": Internal.ClassInfo, "xfacthd.framedblocks.common.block.IFramedDoubleBlock": Internal.ClassInfo, "io.wispforest.owo.client.screens.OwoScreenHandler": Internal.ClassInfo, "net.minecraft.world.item.crafting.SmithingTransformRecipe": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopeedge.FramedElevatedSlopeEdgeBlock": Internal.ClassInfo, "net.minecraft.world.item.crafting.SingleItemRecipe$Serializer$SingleItemMaker": Internal.ClassInfo, "com.mojang.serialization.Compressable": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LootingLevelEvent": Internal.ClassInfo, "net.minecraft.client.resources.model.ModelBakery": Internal.ClassInfo, "net.minecraft.world.level.block.entity.DecoratedPotBlockEntity$Decorations": Internal.ClassInfo, "net.minecraftforge.client.event.TextureStitchEvent$Post": Internal.ClassInfo, "net.minecraftforge.client.event.RegisterNamedRenderTypesEvent": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.widget.DraggableScrollableWidgetGroup": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$MouseButtonReleased$Pre": Internal.ClassInfo, "dev.latvian.mods.kubejs.misc.EnchantmentBuilder": Internal.ClassInfo, "com.mna.items.artifice.ItemHellfireTrident": Internal.ClassInfo, "it.unimi.dsi.fastutil.floats.FloatIterable": Internal.ClassInfo, "xaero.map.effects.NoCaveMapsEffect": Internal.ClassInfo, "net.minecraftforge.client.event.EntityRenderersEvent$RegisterRenderers": Internal.ClassInfo, "java.awt.image.VolatileImage": Internal.ClassInfo, "java.security.Principal": Internal.ClassInfo, "it.unimi.dsi.fastutil.chars.CharBidirectionalIterator": Internal.ClassInfo, "java.awt.Graphics": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.FluidComponents$2": Internal.ClassInfo, "com.mna.items.constructs.parts.legs.ConstructPartEnderLegs": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeBlockEntity": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.TerrainAdjustment": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.predicates.ConditionUserBuilder": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.placement.RandomSpreadType": Internal.ClassInfo, "appeng.api.parts.BusSupport": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.editor.data.resource.Resource": Internal.ClassInfo, "com.gregtechceu.gtceu.api.recipe.GTRecipeType": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.predicate.BlockIDPredicate": Internal.ClassInfo, "com.tterrag.registrate.builders.EnchantmentBuilder$EnchantmentFactory": Internal.ClassInfo, "net.minecraft.world.level.block.LecternBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.api.machine.trait.IRecipeHandlerTrait": Internal.ClassInfo, "net.minecraft.world.effect.InstantenousMobEffect": Internal.ClassInfo, "xfacthd.framedblocks.common.block.stairs.FramedVerticalDoubleStairsBlock": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundCustomPayloadPacket": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.OutputReplacementTransformer$Replacement": Internal.ClassInfo, "me.srrapero720.embeddiumplus.mixins.impl.borderless.accessors.MainWindowAccessor": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.items.WrenchItem": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.core.misc.IHoldingPlayerExtension": Internal.ClassInfo, "elucent.eidolon.common.item.CodexItem": Internal.ClassInfo, "com.almostreliable.lootjs.loot.AddAttributesFunction$Modifier": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.ArcaneLumosBlock$Colors": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.redstone.RedstoneCalculatorBlock": Internal.ClassInfo, "com.mna.items.runes.MarkBookItem": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.api.items.ITaintable": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.Sensing": Internal.ClassInfo, "reborncore.api.blockentity.IMachineGuiHandler": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.StructureSpawnOverride": Internal.ClassInfo, "dev.ftb.mods.ftbquests.quest.reward.RewardAutoClaim": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.SteamExtractorBlock": Internal.ClassInfo, "net.minecraft.client.particle.ParticleEngine$SpriteParticleRegistration": Internal.ClassInfo, "divinerpg.items.base.ItemHealingSword": Internal.ClassInfo, "divinerpg.effect.mob.FreezeReductionEffect": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.structure.PreservationControllerBlock": Internal.ClassInfo, "appeng.api.implementations.menuobjects.ItemMenuHost": Internal.ClassInfo, "net.minecraft.client.resources.metadata.animation.AnimationMetadataSection$FrameOutput": Internal.ClassInfo, "xfacthd.framedblocks.common.block.rail.FramedRailSlopeBlock": Internal.ClassInfo, "net.minecraft.world.level.chunk.CarvingMask": Internal.ClassInfo, "mods.railcraft.api.charge.ChargeBlock$ConnectType": Internal.ClassInfo, "java.util.concurrent.TimeUnit": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.IngredientSupplierKJS": Internal.ClassInfo, "com.mna.items.artifice.curio.ItemEldrinBracelet": Internal.ClassInfo, "net.minecraftforge.event.level.BlockEvent": Internal.ClassInfo, "net.minecraft.client.color.block.BlockColors": Internal.ClassInfo, "net.minecraftforge.client.model.generators.VariantBlockStateBuilder": Internal.ClassInfo, "net.minecraft.world.item.HorseArmorItem": Internal.ClassInfo, "net.minecraft.core.FrontAndTop": Internal.ClassInfo, "com.mojang.blaze3d.vertex.BufferVertexConsumer": Internal.ClassInfo, "dev.architectury.registry.registries.RegistrarManager": Internal.ClassInfo, "java.awt.dnd.DragSourceEvent": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.structure.InvisibleWallBlock": Internal.ClassInfo, "net.minecraft.world.entity.EntityType$Builder": Internal.ClassInfo, "net.minecraft.util.profiling.metrics.ProfilerMeasured": Internal.ClassInfo, "be.florens.expandability.api.forge.PlayerSwimEvent": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slab.FramedCheckeredSlabSegmentBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate$StructureEntityInfo": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.stateproviders.NoiseProvider": Internal.ClassInfo, "xaero.map.server.MinecraftServerData": Internal.ClassInfo, "com.kamth.zeldamod.item.armors.DragonScale": Internal.ClassInfo, "dev.emi.emi.mixin.accessor.ItemRendererAccessor": Internal.ClassInfo, "net.minecraft.server.players.PlayerList": Internal.ClassInfo, "net.minecraft.world.entity.animal.TropicalFish$Pattern": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.worldgen.GTLayerPattern$Layer$Builder": Internal.ClassInfo, "net.minecraft.world.entity.projectile.FireworkRocketEntity": Internal.ClassInfo, "org.violetmoon.quark.mixin.mixins.accessor.AccessorMerchantOffer": Internal.ClassInfo, "net.minecraft.world.item.crafting.SmithingTrimRecipe": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundPlayerCommandPacket": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingEntityUseItemEvent$Tick": Internal.ClassInfo, "java.nio.channels.spi.AbstractInterruptibleChannel": Internal.ClassInfo, "techreborn.blocks.storage.energy.LSUStorageBlock": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.ExperienceSensorBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.worldgen.bedrockore.BedrockOreDefinition$Builder": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.block.IConvertableHorse": Internal.ClassInfo, "net.minecraft.client.gui.screens.worldselection.WorldCreationContext$DimensionsUpdater": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.ItemKJS": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.SpringFeature": Internal.ClassInfo, "org.apache.logging.log4j.util.StringBuilderFormattable": Internal.ClassInfo, "net.minecraft.world.entity.vehicle.AbstractMinecart$Type": Internal.ClassInfo, "appeng.api.networking.crafting.CraftingSubmitErrorCode": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.api.crystal.CrystalStat": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.BooleanComponent": Internal.ClassInfo, "techreborn.blocks.misc.BlockNuke": Internal.ClassInfo, "net.minecraft.world.level.block.CampfireBlock": Internal.ClassInfo, "net.minecraft.advancements.critereon.StatePropertiesPredicate$PropertyMatcher": Internal.ClassInfo, "appeng.items.tools.quartz.QuartzAxeItem": Internal.ClassInfo, "net.minecraftforge.fluids.FluidStack": Internal.ClassInfo, "com.mna.entities.attributes.AttributePerceptionDistance": Internal.ClassInfo, "net.minecraft.client.model.PlayerModel": Internal.ClassInfo, "net.minecraft.server.packs.resources.Resource": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundUseItemPacket": Internal.ClassInfo, "net.minecraftforge.common.crafting.IIngredientSerializer": Internal.ClassInfo, "org.apache.logging.log4j.message.FlowMessageFactory": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundChangeDifficultyPacket": Internal.ClassInfo, "net.minecraftforge.event.entity.player.SleepingLocationCheckEvent": Internal.ClassInfo, "appeng.items.tools.quartz.QuartzSpadeItem": Internal.ClassInfo, "com.kamth.zeldamod.item.items.GliderItem": Internal.ClassInfo, "de.dafuqs.spectrum.interfaces.PlayerOwned": Internal.ClassInfo, "de.dafuqs.fractal.api.ItemSubGroup": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.rootplacers.RootPlacer": Internal.ClassInfo, "appeng.util.ConfigInventory": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.custom.HandheldItemBuilder": Internal.ClassInfo, "com.mna.items.sorcery.bound.ItemBoundShield": Internal.ClassInfo, "net.minecraft.world.level.Explosion$BlockInteraction": Internal.ClassInfo, "dev.latvian.mods.kubejs.forge.GenericForgeEventConsumer": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.material.properties.RotorProperty": Internal.ClassInfo, "com.google.common.collect.UnmodifiableListIterator": Internal.ClassInfo, "com.kamth.zeldamod.item.items.LightningArrowItem": Internal.ClassInfo, "com.gregtechceu.gtceu.api.machine.MultiblockMachineDefinition": Internal.ClassInfo, "org.apache.logging.log4j.core.async.EventRoute": Internal.ClassInfo, "net.minecraft.world.level.block.entity.BrushableBlockEntity": Internal.ClassInfo, "mods.railcraft.api.core.Ownable": Internal.ClassInfo, "appeng.block.crafting.MolecularAssemblerBlock": Internal.ClassInfo, "net.minecraft.client.renderer.GameRenderer": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.conditional.colored_tree.ColoredTree": Internal.ClassInfo, "xaero.map.message.WorldMapMessage": Internal.ClassInfo, "com.gregtechceu.gtceu.api.sound.AutoReleasedSound": Internal.ClassInfo, "com.mna.items.sorcery.PhylacteryStaffItem": Internal.ClassInfo, "malte0811.ferritecore.ducks.BlockStateCacheAccess": Internal.ClassInfo, "elucent.eidolon.common.item.IRechargeableWand": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.ModelGenerator$Element": Internal.ClassInfo, "com.lowdragmc.lowdraglib.core.mixins.accessor.AbstractContainerMenuAccessor": Internal.ClassInfo, "snownee.lychee.core.ActionRuntime": Internal.ClassInfo, "com.mna.api.items.IShowHud": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate$Palette": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.IntList": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.Long2ReferenceFunction": Internal.ClassInfo, "net.fabricmc.fabric.api.client.command.v2.FabricClientCommandSource": Internal.ClassInfo, "org.apache.logging.log4j.core.config.CustomLevelConfig": Internal.ClassInfo, "net.minecraft.client.renderer.block.model.FaceBakery": Internal.ClassInfo, "org.violetmoon.zeta.util.handler.RequiredModTooltipHandler": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.BlockTintFunction": Internal.ClassInfo, "net.minecraftforge.event.entity.EntityTeleportEvent$ChorusFruit": Internal.ClassInfo, "java.awt.geom.Point2D": Internal.ClassInfo, "cofh.core.common.enchantment.HoldingEnchantment": Internal.ClassInfo, "net.minecraft.server.PlayerAdvancements": Internal.ClassInfo, "com.gregtechceu.gtceu.api.registry.GTRegistry$String": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundBossEventPacket": Internal.ClassInfo, "net.minecraft.server.packs.resources.SimplePreparableReloadListener": Internal.ClassInfo, "de.dafuqs.spectrum.items.magic_items.ConstructorsStaffItem": Internal.ClassInfo, "com.inventorypets.pets.petFurnace": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.EnderRing": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.enchantments.WrathEnchantment": Internal.ClassInfo, "net.fabricmc.fabric.api.renderer.v1.mesh.QuadEmitter": Internal.ClassInfo, "org.violetmoon.zeta.util.ZetaSide": Internal.ClassInfo, "com.yanny.ytech.configuration.block.MachineBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2FloatMap": Internal.ClassInfo, "java.util.Locale": Internal.ClassInfo, "java.lang.Short": Internal.ClassInfo, "org.violetmoon.zeta.module.ZetaCategory": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.creativetab.CreativeTabContentSupplier": Internal.ClassInfo, "net.minecraft.world.item.ArrowItem": Internal.ClassInfo, "java.util.PrimitiveIterator$OfInt": Internal.ClassInfo, "dev.latvian.mods.rhino.regexp.RegExp": Internal.ClassInfo, "elucent.eidolon.client.particle.SlashParticleType": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.client.particle.InnocenceWoodLeafParticleType": Internal.ClassInfo, "com.mna.blocks.artifice.MagiciansWorkbenchBlock": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.generic.ItemBaseFood": Internal.ClassInfo, "com.mojang.serialization.Decoder$Boxed": Internal.ClassInfo, "net.minecraftforge.common.IMinecartCollisionHandler": Internal.ClassInfo, "java.awt.image.RenderedImage": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.InventoryKJS": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.AdultSensor": Internal.ClassInfo, "net.minecraftforge.event.level.NoteBlockEvent": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeBucketPickup": Internal.ClassInfo, "net.minecraft.world.item.ShearsItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.ExplosionEventJS$After": Internal.ClassInfo, "com.yogpc.qp.machines.marker.BlockExMarker$BlockWaterloggedFlexMarker": Internal.ClassInfo, "appeng.blockentity.misc.CrankBlockEntity": Internal.ClassInfo, "com.mojang.datafixers.TypedOptic": Internal.ClassInfo, "divinerpg.items.vethea.ItemVetheanDisk": Internal.ClassInfo, "net.minecraft.world.entity.item.ItemEntity": Internal.ClassInfo, "com.mna.api.entities.construct.ConstructMaterial": Internal.ClassInfo, "net.minecraft.world.level.pathfinder.NodeEvaluator": Internal.ClassInfo, "net.minecraft.client.renderer.RenderStateShard$EmptyTextureStateShard": Internal.ClassInfo, "net.minecraft.client.renderer.RenderType$CompositeState": Internal.ClassInfo, "com.mojang.serialization.codecs.RecordCodecBuilder": Internal.ClassInfo, "net.minecraft.world.level.levelgen.WorldDimensions": Internal.ClassInfo, "org.apache.logging.log4j.core.Layout": Internal.ClassInfo, "net.minecraft.world.entity.monster.Skeleton": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.DoubleComparator": Internal.ClassInfo, "com.mna.items.artifice.curio.ItemCritImmunityAmulet": Internal.ClassInfo, "net.minecraft.server.players.UserWhiteList": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.amphora.AmphoraBlock": Internal.ClassInfo, "net.minecraft.core.Position": Internal.ClassInfo, "net.minecraft.client.main.GameConfig$GameData": Internal.ClassInfo, "elucent.eidolon.common.item.curio.BasicRingItem": Internal.ClassInfo, "java.util.OptionalInt": Internal.ClassInfo, "fzzyhmstrs.emi_loot.mixins.EntityPredicateAccessor": Internal.ClassInfo, "net.minecraft.advancements.critereon.FluidPredicate": Internal.ClassInfo, "shcm.shsupercm.forge.citresewn.mixin.cititem.JsonUnbakedModelAccessor": Internal.ClassInfo, "elucent.eidolon.registries.EidolonRecipes$10": Internal.ClassInfo, "mezz.jei.api.gui.ingredient.IRecipeSlotView": Internal.ClassInfo, "org.violetmoon.zeta.item.ZetaDoubleHighBlockItem": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.LongListIterator": Internal.ClassInfo, "com.gregtechceu.gtceu.api.recipe.lookup.Branch": Internal.ClassInfo, "xfacthd.framedblocks.common.block.door.FramedDoorBlock": Internal.ClassInfo, "net.irisshaders.iris.mixin.texture.SpriteContentsTickerAccessor": Internal.ClassInfo, "java.awt.im.InputMethodRequests": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.NoteBlockInstrument": Internal.ClassInfo, "net.minecraftforge.fluids.ForgeFlowingFluid$Flowing": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.mob_head.SpectrumWallSkullBlock": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.factory.HeldItemUIFactory$HeldItemHolder": Internal.ClassInfo, "de.dafuqs.arrowhead.api.ArrowheadBow": Internal.ClassInfo, "com.gregtechceu.gtceu.api.block.OreBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.rootplacers.RootPlacerType": Internal.ClassInfo, "java.time.zone.ZoneOffsetTransitionRule$TimeDefinition": Internal.ClassInfo, "xfacthd.framedblocks.common.block.door.FramedGateBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemModelPropertiesEventJS": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.block.entity.inventory_change_tracking.InventoryChangeTracker": Internal.ClassInfo, "org.violetmoon.quark.content.tools.item.PickarangItem": Internal.ClassInfo, "net.minecraft.world.level.portal.PortalInfo": Internal.ClassInfo, "org.violetmoon.zeta.network.ZetaMessageSerializer": Internal.ClassInfo, "xaero.map.region.texture.RegionTexture": Internal.ClassInfo, "divinerpg.items.arcana.ItemArcanaPoweredSword": Internal.ClassInfo, "org.violetmoon.zeta.world.EntitySpawnHandler$TrackedSpawnConfig": Internal.ClassInfo, "com.yogpc.qp.machines.PowerConfig": Internal.ClassInfo, "reborncore.common.blockentity.SlotConfiguration$ExtractConfig": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.editor.ui.Editor": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.RainBannerPatternItem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.Feature": Internal.ClassInfo, "com.mna.items.constructs.parts.arms.ConstructPartBladeArmRight": Internal.ClassInfo, "net.minecraft.world.entity.monster.Enemy": Internal.ClassInfo, "net.minecraft.client.renderer.block.model.BlockElement": Internal.ClassInfo, "com.google.common.collect.ImmutableTable": Internal.ClassInfo, "com.mna.items.ritual.PractitionersPouchPatches": Internal.ClassInfo, "net.minecraft.client.gui.components.toasts.Toast": Internal.ClassInfo, "com.mna.blocks.decoration.BrazierBlock": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.NearestBedSensor": Internal.ClassInfo, "xfacthd.framedblocks.common.data.doubleblock.SolidityCheck": Internal.ClassInfo, "net.minecraftforge.event.entity.EntityTeleportEvent": Internal.ClassInfo, "appeng.items.tools.fluix.FluixAxeItem": Internal.ClassInfo, "com.google.common.cache.LoadingCache": Internal.ClassInfo, "techreborn.blocks.misc.RubberDoorBlock": Internal.ClassInfo, "net.minecraft.client.renderer.debug.BeeDebugRenderer$BeeInfo": Internal.ClassInfo, "divinerpg.blocks.vethea.BlockDreamLamp": Internal.ClassInfo, "dev.latvian.mods.kubejs.player.InventoryChangedEventJS": Internal.ClassInfo, "de.dafuqs.spectrum.items.trinkets.CircletOfArroganceItem": Internal.ClassInfo, "net.minecraft.world.level.block.entity.BannerPattern": Internal.ClassInfo, "java.security.SecureRandom": Internal.ClassInfo, "appeng.blockentity.CommonTickingBlockEntity": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.fluids.SoftFluid": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.entities.goals.ISuppEvoker": Internal.ClassInfo, "me.jellysquid.mods.sodium.mixin.features.textures.animations.upload.SpriteContentsAnimationAccessor": Internal.ClassInfo, "mezz.jei.api.gui.handlers.IGhostIngredientHandler": Internal.ClassInfo, "net.minecraft.client.resources.sounds.TickableSoundInstance": Internal.ClassInfo, "com.mna.items.artifice.HealingPoulticeItem": Internal.ClassInfo, "appeng.debug.EnergyGeneratorBlockEntity": Internal.ClassInfo, "java.lang.reflect.Executable": Internal.ClassInfo, "biomesoplenty.common.block.YellowAutumnLeavesBlock": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.TotemOfDisenchantBlock": Internal.ClassInfo, "com.mojang.realmsclient.gui.task.DataFetcher$Subscription": Internal.ClassInfo, "net.minecraft.world.entity.ai.village.poi.PoiSection": Internal.ClassInfo, "reborncore.common.util.RebornInventory": Internal.ClassInfo, "net.minecraft.world.entity.decoration.GlowItemFrame": Internal.ClassInfo, "net.minecraft.client.telemetry.TelemetryProperty$Exporter": Internal.ClassInfo, "com.lowdragmc.lowdraglib.syncdata.AccessorOp": Internal.ClassInfo, "net.minecraft.world.effect.HealthBoostMobEffect": Internal.ClassInfo, "com.mna.blocks.artifice.EldrinFumeBlock": Internal.ClassInfo, "org.joml.Matrix3x2dc": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.HugeFungusConfiguration": Internal.ClassInfo, "net.minecraft.world.item.enchantment.DamageEnchantment": Internal.ClassInfo, "org.apache.commons.lang3.function.TriFunction": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.trunkplacers.MegaJungleTrunkPlacer": Internal.ClassInfo, "com.aizistral.etherium.items.EtheriumScraps": Internal.ClassInfo, "org.violetmoon.quark.mixin.mixins.accessor.AccessorTemptingSensor": Internal.ClassInfo, "com.inventorypets.items.patreonShirt": Internal.ClassInfo, "net.minecraft.world.item.FireChargeItem": Internal.ClassInfo, "appeng.debug.ReplicatorCardItem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.VegetationPatchConfiguration": Internal.ClassInfo, "net.minecraft.world.entity.monster.SpellcasterIllager$IllagerSpell": Internal.ClassInfo, "net.minecraft.world.item.DyeableLeatherItem": Internal.ClassInfo, "com.mojang.blaze3d.vertex.DefaultedVertexConsumer": Internal.ClassInfo, "java.awt.GraphicsDevice$WindowTranslucency": Internal.ClassInfo, "net.minecraft.client.renderer.entity.EntityRendererProvider": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingEntityUseItemEvent$Start": Internal.ClassInfo, "net.minecraftforge.client.event.InputEvent": Internal.ClassInfo, "java.awt.dnd.DragSourceListener": Internal.ClassInfo, "mods.railcraft.world.level.block.post.Column": Internal.ClassInfo, "net.minecraft.data.tags.TagsProvider$TagAppender": Internal.ClassInfo, "com.mna.blocks.artifice.RefractionLensBlock": Internal.ClassInfo, "com.yogpc.qp.machines.QPBlock$QPBlockItem": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.dd_deco.BlackslagBlock": Internal.ClassInfo, "fuzs.puzzleslib.mixin.accessor.ForgeRegistryForgeAccessor": Internal.ClassInfo, "elucent.eidolon.common.potion.BlessedEffect": Internal.ClassInfo, "net.minecraft.world.entity.monster.MagmaCube": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.GeodeFeature": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.pieces.StructurePieceSerializationContext": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundContainerButtonClickPacket": Internal.ClassInfo, "net.minecraft.world.level.block.state.BlockBehaviour$StatePredicate": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundRenameItemPacket": Internal.ClassInfo, "io.netty.channel.MessageSizeEstimator$Handle": Internal.ClassInfo, "net.minecraftforge.event.entity.living.PotionColorCalculationEvent": Internal.ClassInfo, "dev.latvian.mods.rhino.ErrorReporter": Internal.ClassInfo, "com.gregtechceu.gtceu.api.blockentity.IPaintable": Internal.ClassInfo, "appeng.helpers.Splotch": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.foliageplacers.MegaJungleFoliagePlacer": Internal.ClassInfo, "appeng.block.networking.CreativeEnergyCellBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.OrRecipeComponent": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.painter.PainterObject": Internal.ClassInfo, "org.joml.Matrix3x2fc": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decay.RuinBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.worldgen.generator.veins.StandardVeinGenerator": Internal.ClassInfo, "java.nio.channels.CompletionHandler": Internal.ClassInfo, "it.unimi.dsi.fastutil.chars.CharComparator": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.items.EndermanHeadItem": Internal.ClassInfo, "org.violetmoon.zeta.registry.CreativeTabManager$AppendsUniquely": Internal.ClassInfo, "mods.railcraft.world.item.CartItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.RecipeComponentBuilder": Internal.ClassInfo, "net.minecraft.advancements.critereon.LocationPredicate": Internal.ClassInfo, "net.minecraft.server.packs.resources.ResourceProvider": Internal.ClassInfo, "snownee.lychee.core.recipe.BlockKeyRecipe": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.mob_head.SpectrumSkullBlock": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.gemstone.SpectrumBuddingBlock": Internal.ClassInfo, "net.minecraft.client.model.geom.builders.CubeDefinition": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.rock_candy.RockCandy": Internal.ClassInfo, "com.gregtechceu.gtceu.common.block.DuctPipeBlock": Internal.ClassInfo, "cofh.core.common.block.SignalAirBlock": Internal.ClassInfo, "java.util.function.IntConsumer": Internal.ClassInfo, "net.minecraft.server.players.UserWhiteListEntry": Internal.ClassInfo, "java.util.AbstractList": Internal.ClassInfo, "de.dafuqs.spectrum.mixin.accessors.FluidBlockAccessor": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.parameters.LootContextParamSet$Builder": Internal.ClassInfo, "net.fabricmc.fabric.api.renderer.v1.mesh.Mesh": Internal.ClassInfo, "com.inventorypets.pets.petCheetah": Internal.ClassInfo, "de.dafuqs.revelationary.api.revelations.WorldRendererAccessor": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundContainerClosePacket": Internal.ClassInfo, "com.electronwill.nightconfig.core.io.ConfigParser": Internal.ClassInfo, "net.minecraft.world.entity.player.ProfilePublicKey$Data": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.AbstractObjectList": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.rootplacers.MangroveRootPlacer": Internal.ClassInfo, "net.mehvahdjukaar.polytone.mixins.accessor.SheepAccessor": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopepanel.FramedFlatDoubleSlopePanelCornerBlock": Internal.ClassInfo, "divinerpg.blocks.base.BlockStatue": Internal.ClassInfo, "net.minecraft.world.level.levelgen.NoiseChunk$FlatCache": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundSeenAdvancementsPacket": Internal.ClassInfo, "com.mna.recipes.runeforging.RunescribingRecipe": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopeslab.FramedStackedSlopeSlabBlock": Internal.ClassInfo, "appeng.blockentity.powersink.AEBasePoweredBlockEntity": Internal.ClassInfo, "net.minecraftforge.client.extensions.IForgeDimensionSpecialEffects": Internal.ClassInfo, "java.awt.datatransfer.DataFlavor": Internal.ClassInfo, "appeng.decorative.solid.BuddingCertusQuartzBlock": Internal.ClassInfo, "net.minecraft.network.chat.LocalChatSession": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.editor.runtime.AnnotationDetector$Wrapper": Internal.ClassInfo, "divinerpg.enchant.RiveEnchant": Internal.ClassInfo, "net.fabricmc.fabric.api.lookup.v1.item.ItemApiLookup": Internal.ClassInfo, "com.mojang.brigadier.exceptions.SimpleCommandExceptionType": Internal.ClassInfo, "net.minecraft.world.level.levelgen.flat.FlatLevelGeneratorPreset": Internal.ClassInfo, "java.lang.constant.ConstantDesc": Internal.ClassInfo, "de.dafuqs.spectrum.items.tools.BedrockSwordItem": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundMoveVehiclePacket": Internal.ClassInfo, "net.minecraft.client.renderer.chunk.ChunkRenderDispatcher$ChunkTaskResult": Internal.ClassInfo, "com.yogpc.qp.machines.bookmover.BookMoverBlock": Internal.ClassInfo, "xfacthd.framedblocks.common.block.cube.FramedGlowingCube": Internal.ClassInfo, "net.minecraftforge.client.event.TextureStitchEvent": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.conditional.FourLeafCloverBlock": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$MouseButtonReleased": Internal.ClassInfo, "com.kamth.zeldamod.item.masks.KeatonMask": Internal.ClassInfo, "com.mna.blocks.manaweaving.ManaweaveProjectorBlock": Internal.ClassInfo, "net.minecraft.world.scores.criteria.ObjectiveCriteria": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.trunkplacers.StraightTrunkPlacer": Internal.ClassInfo, "de.keksuccino.konkrete.events.ScreenTickEvent": Internal.ClassInfo, "com.probejs.jdoc.document.DocumentConstructor": Internal.ClassInfo, "mods.railcraft.world.item.tunnelbore.DiamondTunnelBoreHeadItem": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundDisguisedChatPacket": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetTitlesAnimationPacket": Internal.ClassInfo, "net.fabricmc.fabric.api.block.v1.FabricBlock": Internal.ClassInfo, "dev.latvian.mods.rhino.IdFunctionCall": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.client.particle.SteamParticleType": Internal.ClassInfo, "com.mojang.datafixers.types.Type$Mu": Internal.ClassInfo, "org.apache.logging.log4j.util.TriConsumer": Internal.ClassInfo, "net.minecraft.advancements.critereon.MobEffectsPredicate$MobEffectInstancePredicate": Internal.ClassInfo, "java.nio.file.attribute.AttributeView": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundLoginPacket": Internal.ClassInfo, "divinerpg.items.arcana.ItemArcaniteBlaster": Internal.ClassInfo, "net.minecraft.server.packs.repository.PackCompatibility": Internal.ClassInfo, "appeng.block.AEBaseEntityBlock": Internal.ClassInfo, "org.apache.logging.log4j.core.util.Builder": Internal.ClassInfo, "net.minecraftforge.forgespi.language.ModFileScanData$ClassData": Internal.ClassInfo, "net.minecraftforge.client.model.generators.ModelBuilder$ElementBuilder": Internal.ClassInfo, "com.mna.blocks.sorcery.SpectralWebBlock": Internal.ClassInfo, "xfacthd.framedblocks.common.block.torch.FramedRedstoneTorchBlock": Internal.ClassInfo, "net.fabricmc.fabric.mixin.content.registry.AxeItemAccessor": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundUpdateEnabledFeaturesPacket": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.AvariceScroll": Internal.ClassInfo, "appeng.crafting.execution.ElapsedTimeTracker": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.integration.quark.CartographersQuillItem$State": Internal.ClassInfo, "net.minecraft.client.renderer.ItemInHandRenderer": Internal.ClassInfo, "net.minecraft.client.telemetry.events.GameLoadTimesEvent$Measurement": Internal.ClassInfo, "net.minecraft.world.item.LeadItem": Internal.ClassInfo, "net.minecraft.client.renderer.block.BlockModelShaper": Internal.ClassInfo, "me.steinborn.krypton.mixin.shared.fastchunkentityaccess.EntityTrackingSectionAccessor": Internal.ClassInfo, "cofh.lib.api.ITNTFactory": Internal.ClassInfo, "com.yanny.ytech.configuration.item.BasketItem": Internal.ClassInfo, "com.gregtechceu.gtceu.api.pipenet.Node": Internal.ClassInfo, "net.minecraft.world.level.block.state.BlockBehaviour$Properties": Internal.ClassInfo, "com.lowdragmc.lowdraglib.client.shader.uniform.UniformCache": Internal.ClassInfo, "elucent.eidolon.common.item.curio.BasicBeltItem": Internal.ClassInfo, "techreborn.items.tool.vanilla.TRSwordItem": Internal.ClassInfo, "appeng.worldgen.meteorite.MeteoriteStructure": Internal.ClassInfo, "dev.latvian.mods.rhino.mod.wrapper.UUIDWrapper": Internal.ClassInfo, "org.apache.logging.slf4j.Log4jLogger": Internal.ClassInfo, "com.probejs.jdoc.document.AbstractDocumentBase": Internal.ClassInfo, "net.minecraft.world.level.biome.Climate$ParameterPoint": Internal.ClassInfo, "net.minecraft.world.level.block.SculkShriekerBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.material.stack.MaterialStack": Internal.ClassInfo, "io.wispforest.owo.nbt.NbtCarrier": Internal.ClassInfo, "net.minecraft.world.level.CommonLevelAccessor": Internal.ClassInfo, "com.lowdragmc.lowdraglib.core.mixins.accessor.ParticleEngineAccessor": Internal.ClassInfo, "cpw.mods.jarhandling.SecureJar$Status": Internal.ClassInfo, "net.minecraft.world.entity.Attackable": Internal.ClassInfo, "mods.railcraft.world.level.block.signal.SignalControllerBoxBlock": Internal.ClassInfo, "com.mojang.serialization.DynamicLike": Internal.ClassInfo, "de.dafuqs.spectrum.mixin.accessors.WorldRendererAccessor": Internal.ClassInfo, "net.minecraft.world.item.ItemNameBlockItem": Internal.ClassInfo, "net.minecraft.world.flag.FeatureFlagSet": Internal.ClassInfo, "com.gregtechceu.gtceu.api.pattern.util.PatternMatchContext": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingEvent$LivingVisibilityEvent": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.CoralClawFeature": Internal.ClassInfo, "net.minecraft.world.level.block.entity.BedBlockEntity": Internal.ClassInfo, "net.minecraftforge.common.world.ModifiableBiomeInfo": Internal.ClassInfo, "net.minecraft.network.chat.HoverEvent$EntityTooltipInfo": Internal.ClassInfo, "de.dafuqs.spectrum.items.tools.MultiToolItem": Internal.ClassInfo, "com.lowdragmc.lowdraglib.utils.Rect": Internal.ClassInfo, "com.gregtechceu.gtceu.api.capability.recipe.IFilteredHandler": Internal.ClassInfo, "net.minecraftforge.registries.ForgeRegistry": Internal.ClassInfo, "net.minecraft.server.network.TextFilter": Internal.ClassInfo, "net.minecraft.world.item.crafting.CampfireCookingRecipe": Internal.ClassInfo, "net.minecraft.world.level.biome.Climate$RTree$Node": Internal.ClassInfo, "com.mojang.datafixers.types.Type": Internal.ClassInfo, "java.time.temporal.TemporalAccessor": Internal.ClassInfo, "net.minecraft.client.model.geom.builders.MeshDefinition": Internal.ClassInfo, "sun.awt.SunHints$Key": Internal.ClassInfo, "com.mojang.datafixers.kinds.Functor": Internal.ClassInfo, "java.util.function.ToLongBiFunction": Internal.ClassInfo, "divinerpg.blocks.base.BlockModDirt": Internal.ClassInfo, "appeng.items.tools.powered.ChargedStaffItem": Internal.ClassInfo, "org.apache.maven.artifact.resolver.filter.ArtifactFilter": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.curio.LeatherBeltItem": Internal.ClassInfo, "mods.railcraft.world.level.block.entity.track.CouplerTrackBlockEntity": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.material.properties.DustProperty": Internal.ClassInfo, "net.minecraft.world.level.block.DoubleBlockCombiner$BlockType": Internal.ClassInfo, "com.mna.items.artifice.charms.ItemContingencyCharm$ContingencyEvent": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundLightUpdatePacket": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.AbstractObject2IntMap": Internal.ClassInfo, "net.minecraft.world.level.WorldDataConfiguration": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.ShortComparator": Internal.ClassInfo, "net.minecraft.world.level.block.SmokerBlock": Internal.ClassInfo, "appeng.api.stacks.AEKey": Internal.ClassInfo, "com.epherical.croptopia.mixin.LootPoolAccessor": Internal.ClassInfo, "com.lowdragmc.lowdraglib.syncdata.blockentity.IRPCBlockEntity": Internal.ClassInfo, "appeng.api.stacks.AEItemKey": Internal.ClassInfo, "net.raphimc.immediatelyfast.feature.map_atlas_generation.MapAtlasTexture": Internal.ClassInfo, "divinerpg.items.arcana.ItemGeneralsStaff": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.NumberComponent$DoubleRange": Internal.ClassInfo, "com.inventorypets.items.candyCane": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSystemChatPacket": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.ExplosionAware": Internal.ClassInfo, "com.mna.recipes.AMRecipeBase": Internal.ClassInfo, "biomesoplenty.common.block.MapleLeavesBlock": Internal.ClassInfo, "com.lowdragmc.lowdraglib.jei.IngredientIO": Internal.ClassInfo, "net.minecraftforge.event.level.NoteBlockEvent$Note": Internal.ClassInfo, "java.awt.event.MouseWheelListener": Internal.ClassInfo, "net.minecraft.core.particles.ParticleTypes$1": Internal.ClassInfo, "io.netty.util.concurrent.Future": Internal.ClassInfo, "net.minecraft.world.effect.AttackDamageMobEffect": Internal.ClassInfo, "net.minecraft.world.level.chunk.CarvingMask$Mask": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.redstone.BlockLightDetectorBlock": Internal.ClassInfo, "com.mna.blocks.worldgen.MASandFlowerBlock": Internal.ClassInfo, "net.minecraft.world.entity.item.FallingBlockEntity": Internal.ClassInfo, "com.google.gson.JsonObject": Internal.ClassInfo, "net.minecraft.client.gui.narration.NarrationSupplier": Internal.ClassInfo, "net.minecraft.client.renderer.debug.PathfindingRenderer": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decoration.SparklestoneBlock": Internal.ClassInfo, "de.dafuqs.spectrum.items.trinkets.PotionPendantItem": Internal.ClassInfo, "net.minecraft.client.renderer.OutlineBufferSource": Internal.ClassInfo, "java.util.AbstractCollection": Internal.ClassInfo, "net.minecraft.world.level.BlockGetter": Internal.ClassInfo, "reborncore.common.blockentity.RedstoneConfiguration": Internal.ClassInfo, "java.awt.event.ComponentListener": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.LootPool$Builder": Internal.ClassInfo, "com.mna.effects.interfaces.IInputDisable": Internal.ClassInfo, "net.minecraft.client.RecipeBookCategories": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.gen.filter.biome.BiomeFilter": Internal.ClassInfo, "java.util.zip.ZipFile": Internal.ClassInfo, "com.yanny.ytech.configuration.mob_effect.LionHeartMobEffect": Internal.ClassInfo, "vazkii.patchouli.client.book.BookContents": Internal.ClassInfo, "appeng.items.tools.quartz.QuartzSwordItem": Internal.ClassInfo, "software.bernie.geckolib.core.animation.AnimationProcessor$QueuedAnimation": Internal.ClassInfo, "divinerpg.blocks.twilight.BlockTwilightGrass": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.worldgen.WaySignStructure": Internal.ClassInfo, "net.fabricmc.fabric.api.recipe.v1.ingredient.FabricIngredient": Internal.ClassInfo, "net.minecraft.world.item.TooltipFlag$Default": Internal.ClassInfo, "com.gregtechceu.gtceu.common.block.LaserPipeBlock": Internal.ClassInfo, "mezz.jei.api.recipe.IFocus": Internal.ClassInfo, "divinerpg.items.arcana.ItemMeriksMissile": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.icon.Drawable": Internal.ClassInfo, "java.io.DataInput": Internal.ClassInfo, "net.minecraft.stats.RecipeBookSettings": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.LoreInscriber": Internal.ClassInfo, "com.yogpc.qp.machines.ItemConverter": Internal.ClassInfo, "com.lowdragmc.lowdraglib.syncdata.managed.MultiManagedStorage": Internal.ClassInfo, "net.minecraft.world.entity.animal.AbstractFish": Internal.ClassInfo, "net.minecraft.world.entity.animal.PolarBear": Internal.ClassInfo, "net.minecraft.server.MinecraftServer$ServerResourcePackInfo": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blending.BlendingData$BiomeConsumer": Internal.ClassInfo, "org.w3c.dom.ProcessingInstruction": Internal.ClassInfo, "net.minecraft.server.bossevents.CustomBossEvents": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.spirit_sallow.OminousSaplingBlock": Internal.ClassInfo, "net.minecraft.client.gui.screens.Overlay": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.structures.MineshaftStructure": Internal.ClassInfo, "reborncore.common.fluid.container.ItemFluidInfo": Internal.ClassInfo, "java.util.function.Function": Internal.ClassInfo, "java.util.function.BiPredicate": Internal.ClassInfo, "com.inventorypets.pets.petMagmaCube": Internal.ClassInfo, "xfacthd.framedblocks.common.data.CornerSlopePanelShape": Internal.ClassInfo, "com.gregtechceu.gtceu.api.machine.multiblock.IBatteryData": Internal.ClassInfo, "com.gregtechceu.gtceu.core.mixins.IngredientAccessor": Internal.ClassInfo, "java.lang.Boolean": Internal.ClassInfo, "appeng.block.storage.IOPortBlock": Internal.ClassInfo, "divinerpg.items.base.ItemHealingFood": Internal.ClassInfo, "divinerpg.blocks.vanilla.BlockRandomItemDropper": Internal.ClassInfo, "java.awt.Component$BaselineResizeBehavior": Internal.ClassInfo, "com.mna.items.artifice.ItemThaumaturgicCompass": Internal.ClassInfo, "de.dafuqs.spectrum.items.food.beverages.SuspiciousBrewItem": Internal.ClassInfo, "org.w3c.dom.UserDataHandler": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopeedge.FramedStackedSlopeEdgeBlock": Internal.ClassInfo, "java.security.PublicKey": Internal.ClassInfo, "java.security.AlgorithmParameters": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.ImplementedInventory": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.cinderhearth.CinderhearthBlockEntity$CinderHearthStructureType": Internal.ClassInfo, "net.minecraft.world.entity.boss.enderdragon.phases.DragonDeathPhase": Internal.ClassInfo, "com.mna.items.armor.IBrokenArmorReplaceable": Internal.ClassInfo, "com.google.common.collect.ForwardingMultimap": Internal.ClassInfo, "net.minecraft.server.packs.repository.Pack$ResourcesSupplier": Internal.ClassInfo, "net.minecraft.world.entity.animal.axolotl.Axolotl": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.NearestLivingEntitySensor": Internal.ClassInfo, "net.minecraft.world.level.chunk.PalettedContainer$Data": Internal.ClassInfo, "net.minecraftforge.common.world.MobSpawnSettingsBuilder": Internal.ClassInfo, "net.minecraft.data.loot.EntityLootSubProvider": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.widget.PhantomFluidWidget": Internal.ClassInfo, "net.minecraft.world.item.CreativeModeTab$DisplayItemsGenerator": Internal.ClassInfo, "dev.ftb.mods.ftbquests.quest.reward.RewardType$GuiProvider": Internal.ClassInfo, "dev.emi.emi.mixin.accessor.ShovelItemAccessor": Internal.ClassInfo, "net.minecraft.client.telemetry.TelemetryEventInstance": Internal.ClassInfo, "org.apache.logging.log4j.Level": Internal.ClassInfo, "cofh.thermal.core.common.item.RedprintItem": Internal.ClassInfo, "xfacthd.framedblocks.api.camo.CamoContainer": Internal.ClassInfo, "net.minecraft.world.entity.MobType": Internal.ClassInfo, "mezz.jei.api.helpers.IGuiHelper": Internal.ClassInfo, "cofh.core.common.item.InventoryContainerItem": Internal.ClassInfo, "com.mna.api.spells.parts.Modifier": Internal.ClassInfo, "com.electronwill.nightconfig.core.io.ConfigWriter": Internal.ClassInfo, "net.minecraft.world.level.chunk.ChunkSource": Internal.ClassInfo, "net.minecraft.world.entity.monster.AbstractSkeleton": Internal.ClassInfo, "com.mna.effects.neutral.EffectChoosingWellspring": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.generic.GenericBlockItem": Internal.ClassInfo, "xfacthd.framedblocks.common.block.torch.FramedSoulTorchBlock": Internal.ClassInfo, "net.minecraft.world.level.block.GlazedTerracottaBlock": Internal.ClassInfo, "divinerpg.blocks.base.BlockModBookshelf": Internal.ClassInfo, "divinerpg.blocks.base.BlockModGate": Internal.ClassInfo, "java.util.function.LongToIntFunction": Internal.ClassInfo, "com.epherical.croptopia.items.CroptopiaSaplingItem": Internal.ClassInfo, "com.kamth.zeldamod.effect.MajoraEffect": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.VoidStartPlatformFeature": Internal.ClassInfo, "net.minecraft.world.level.biome.BiomeGenerationSettings": Internal.ClassInfo, "org.orecruncher.dsurround.mixins.core.MixinClientChunkManager": Internal.ClassInfo, "appeng.block.networking.ControllerBlock$ControllerBlockState": Internal.ClassInfo, "java.util.Spliterator$OfPrimitive": Internal.ClassInfo, "com.mna.items.armor.BrokenMageArmor": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundSeenAdvancementsPacket$Action": Internal.ClassInfo, "net.minecraft.network.chat.ChatTypeDecoration": Internal.ClassInfo, "com.gregtechceu.gtceu.api.pattern.error.PatternStringError": Internal.ClassInfo, "com.mna.items.sorcery.ItemCrystalOfMemories": Internal.ClassInfo, "xfacthd.framedblocks.common.block.prism.FramedDoublePrismBlock": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.WallSide": Internal.ClassInfo, "com.yogpc.qp.machines.module.ReplacerBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.common.block.GTWallHangingSignBlock": Internal.ClassInfo, "elucent.eidolon.common.item.ReaperScytheItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.MessageSenderKJS": Internal.ClassInfo, "java.awt.event.KeyListener": Internal.ClassInfo, "com.gregtechceu.gtceu.integration.kjs.builders.block.CoilBlockBuilder": Internal.ClassInfo, "net.fabricmc.fabric.impl.biome.MultiNoiseSamplerHooks": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.BlockPileFeature": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$MouseButtonPressed": Internal.ClassInfo, "com.probejs.jdoc.java.ClassInfo": Internal.ClassInfo, "net.minecraft.server.players.ServerOpList": Internal.ClassInfo, "com.yogpc.qp.machines.module.RepeatTickModuleItem": Internal.ClassInfo, "elucent.eidolon.common.block.HorizontalWaterloggableBlock": Internal.ClassInfo, "net.minecraft.world.level.block.EnderChestBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.api.pipenet.IRoutePath": Internal.ClassInfo, "appeng.client.render.effects.LightningArcParticleData": Internal.ClassInfo, "appeng.blockentity.crafting.CraftingBlockEntity": Internal.ClassInfo, "java.net.URLConnection": Internal.ClassInfo, "mezz.jei.api.runtime.config.IJeiConfigCategory": Internal.ClassInfo, "net.minecraft.world.item.enchantment.ArrowKnockbackEnchantment": Internal.ClassInfo, "snownee.lychee.core.recipe.type.LycheeRecipeType": Internal.ClassInfo, "dev.latvian.mods.kubejs.fluid.InputFluid": Internal.ClassInfo, "net.minecraftforge.event.level.BlockEvent$EntityPlaceEvent": Internal.ClassInfo, "java.lang.module.ModuleDescriptor$Opens$Modifier": Internal.ClassInfo, "biomesoplenty.common.block.TallFlowerBlockBOP": Internal.ClassInfo, "io.wispforest.owo.ui.util.FocusHandler": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.SinglePieceStructure": Internal.ClassInfo, "java.lang.ModuleLayer$Controller": Internal.ClassInfo, "net.minecraft.world.level.block.state.BlockBehaviour$BlockStateBase": Internal.ClassInfo, "net.minecraft.world.phys.shapes.ArrayVoxelShape": Internal.ClassInfo, "io.wispforest.accessories.pond.ContainerScreenExtension": Internal.ClassInfo, "java.lang.RuntimeException": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.MultipartBlockStateGenerator": Internal.ClassInfo, "com.probejs.jdoc.document.DocumentField": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.ModelGenerator$Face": Internal.ClassInfo, "de.dafuqs.spectrum.items.magic_items.BagOfHoldingItem": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.FluidPipeBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.featuresize.ThreeLayersFeatureSize": Internal.ClassInfo, "reborncore.common.blockentity.SlotConfiguration$SlotConfig": Internal.ClassInfo, "net.minecraft.advancements.critereon.MobEffectsPredicate": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.RecipeJS": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.bottomless_bundle.BottomlessBundleItem": Internal.ClassInfo, "net.minecraft.world.level.block.entity.TrappedChestBlockEntity": Internal.ClassInfo, "net.minecraft.world.item.enchantment.KnockbackEnchantment": Internal.ClassInfo, "appeng.api.upgrades.IUpgradeableItem": Internal.ClassInfo, "java.awt.RenderingHints$Key": Internal.ClassInfo, "reborncore.common.fluid.container.FluidInstance": Internal.ClassInfo, "dev.latvian.mods.kubejs.bindings.IngredientWrapper": Internal.ClassInfo, "org.violetmoon.quark.mixin.mixins.accessor.AccessorBlockItem": Internal.ClassInfo, "net.minecraft.client.renderer.texture.TextureAtlas": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.items.TimberFrameItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.integration.forge.jei.HideJEIEventJS": Internal.ClassInfo, "mods.railcraft.world.item.tunnelbore.BronzeTunnelBoreHeadItem": Internal.ClassInfo, "net.minecraft.client.gui.navigation.ScreenPosition": Internal.ClassInfo, "net.minecraft.network.PacketSendListener": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slab.FramedCheckeredCubeSegmentBlock": Internal.ClassInfo, "divinerpg.blocks.vethea.BlockDreamGrass": Internal.ClassInfo, "mods.railcraft.world.level.block.CokeOvenBricksBlock": Internal.ClassInfo, "net.minecraft.world.item.enchantment.MendingEnchantment": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.set.wood.WoodType": Internal.ClassInfo, "it.unimi.dsi.fastutil.bytes.ByteIterator": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2FloatFunction": Internal.ClassInfo, "dev.architectury.registry.registries.DeferredSupplier": Internal.ClassInfo, "net.minecraftforge.event.entity.SpawnPlacementRegisterEvent": Internal.ClassInfo, "xfacthd.framedblocks.common.block.cube.FramedOneWayWindowBlock": Internal.ClassInfo, "java.lang.Math": Internal.ClassInfo, "net.fabricmc.fabric.impl.attachment.AttachmentTargetImpl": Internal.ClassInfo, "me.jellysquid.mods.sodium.mixin.core.render.VertexFormatAccessor": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.MultifaceGrowthConfiguration": Internal.ClassInfo, "net.minecraft.world.item.crafting.AbstractCookingRecipe": Internal.ClassInfo, "net.minecraftforge.fluids.capability.IFluidHandler$FluidAction": Internal.ClassInfo, "com.electronwill.nightconfig.core.utils.WriterSupplier": Internal.ClassInfo, "com.gregtechceu.gtceu.common.block.OpticalPipeBlock": Internal.ClassInfo, "com.mojang.authlib.yggdrasil.ServicesKeySet": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blockpredicates.MatchingBlockTagPredicate": Internal.ClassInfo, "top.theillusivec4.caelus.api.RenderCapeEvent": Internal.ClassInfo, "net.minecraft.client.gui.GuiGraphics": Internal.ClassInfo, "net.minecraft.commands.SharedSuggestionProvider$ElementSuggestionType": Internal.ClassInfo, "com.gregtechceu.gtceu.common.data.GCyMBlocks": Internal.ClassInfo, "net.minecraft.server.ServerFunctionManager": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.block.entity.inventory_change_tracking.InventoryChangeEmitter": Internal.ClassInfo, "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": Internal.ClassInfo, "com.mna.items.artifice.curio.ItemProjectileAmulet": Internal.ClassInfo, "net.minecraft.world.entity.ai.attributes.AttributeSupplier$Builder": Internal.ClassInfo, "it.unimi.dsi.fastutil.floats.FloatIterator": Internal.ClassInfo, "appeng.api.inventories.ItemTransfer": Internal.ClassInfo, "io.netty.channel.ChannelOutboundBuffer": Internal.ClassInfo, "divinerpg.blocks.vethea.BlockWreckAltar": Internal.ClassInfo, "org.orecruncher.dsurround.mixinutils.IBiomeExtended": Internal.ClassInfo, "net.minecraft.world.entity.boss.EnderDragonPart": Internal.ClassInfo, "com.kamth.zeldamod.item.masks.FairyMask": Internal.ClassInfo, "reborncore.common.fluid.RebornFluid": Internal.ClassInfo, "com.enderio.base.common.item.misc.EnderiosItem": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundDeleteChatPacket": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundTakeItemEntityPacket": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.IntPredicate": Internal.ClassInfo, "net.minecraft.client.ResourceLoadStateTracker": Internal.ClassInfo, "snownee.kiwi.mixin.ShovelItemAccess": Internal.ClassInfo, "java.awt.color.ColorSpace": Internal.ClassInfo, "com.inventorypets.pets.petPoliticallyCorrect": Internal.ClassInfo, "com.mojang.blaze3d.vertex.PoseStack": Internal.ClassInfo, "net.minecraft.client.color.item.ItemColors": Internal.ClassInfo, "com.yogpc.qp.machines.module.ReplacerModuleItem": Internal.ClassInfo, "net.minecraftforge.event.ItemStackedOnOtherEvent": Internal.ClassInfo, "net.mehvahdjukaar.polytone.slotify.WidgetModifier": Internal.ClassInfo, "net.minecraftforge.client.ExtendedServerListData": Internal.ClassInfo, "java.awt.DisplayMode": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.arcane.ArcaneSwordItem": Internal.ClassInfo, "net.minecraft.world.item.crafting.ShapedRecipe$Serializer": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.blocks.BlockMassiveLamp": Internal.ClassInfo, "net.minecraft.world.item.DebugStickItem": Internal.ClassInfo, "snownee.lychee.core.post.CustomAction$Apply": Internal.ClassInfo, "divinerpg.items.vethea.ItemNightmareBed": Internal.ClassInfo, "org.violetmoon.quark.addons.oddities.item.BackpackItem": Internal.ClassInfo, "net.minecraft.world.entity.animal.Fox": Internal.ClassInfo, "appeng.block.qnb.QnbFormedState": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.stateproviders.SimpleStateProvider": Internal.ClassInfo, "appeng.block.qnb.QuantumRingBlock": Internal.ClassInfo, "de.dafuqs.spectrum.registries.SpectrumBlocks$6": Internal.ClassInfo, "de.dafuqs.spectrum.registries.SpectrumBlocks$5": Internal.ClassInfo, "de.dafuqs.spectrum.registries.SpectrumBlocks$4": Internal.ClassInfo, "techreborn.items.armor.NanoSuitItem": Internal.ClassInfo, "net.minecraft.world.entity.monster.Blaze": Internal.ClassInfo, "com.mna.blocks.runeforging.RunescribingTableBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.painter.screen.AlignMode": Internal.ClassInfo, "net.irisshaders.iris.texture.pbr.TextureAtlasExtension": Internal.ClassInfo, "com.google.common.collect.SetMultimap": Internal.ClassInfo, "com.mojang.realmsclient.dto.RealmsServerPing": Internal.ClassInfo, "mods.railcraft.world.level.block.entity.multiblock.MultiblockBlockEntity$UnresolvedMembership": Internal.ClassInfo, "io.netty.channel.ChannelConfig": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.InnocentWoodLeavesBlock": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.LootDataResolver": Internal.ClassInfo, "de.dafuqs.spectrum.registries.SpectrumBlocks$3": Internal.ClassInfo, "de.dafuqs.spectrum.registries.SpectrumBlocks$2": Internal.ClassInfo, "de.dafuqs.spectrum.registries.SpectrumBlocks$1": Internal.ClassInfo, "appeng.block.spatial.SpatialIOPortBlock": Internal.ClassInfo, "net.minecraft.world.level.biome.MultiNoiseBiomeSourceParameterList": Internal.ClassInfo, "de.dafuqs.spectrum.items.food.EnchantedStarCandyItem": Internal.ClassInfo, "mods.railcraft.api.container.manipulator.ModifiableSlotAccessor": Internal.ClassInfo, "net.minecraft.core.particles.ParticleOptions$Deserializer": Internal.ClassInfo, "com.mojang.brigadier.context.CommandContextBuilder": Internal.ClassInfo, "appeng.me.cluster.implementations.QuantumCluster": Internal.ClassInfo, "java.awt.Cursor": Internal.ClassInfo, "de.dafuqs.spectrum.recipe.GatedStackSpectrumRecipe": Internal.ClassInfo, "org.embeddedt.modernfix.duck.IChunkGenerator": Internal.ClassInfo, "com.mna.api.blocks.ISpellInteractibleBlock": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.api.arcaneenchantment.IArcaneItem": Internal.ClassInfo, "net.minecraft.client.model.geom.EntityModelSet": Internal.ClassInfo, "mezz.jei.api.runtime.IIngredientManager$IIngredientListener": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemPickedUpEventJS": Internal.ClassInfo, "net.minecraft.world.item.BundleItem": Internal.ClassInfo, "de.dafuqs.spectrum.items.trinkets.AttackRingItem": Internal.ClassInfo, "java.lang.Long": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slope.FramedDoubleThreewayCornerBlock": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.pedestal.PedestalBlockItem": Internal.ClassInfo, "net.minecraft.world.item.enchantment.TridentChannelingEnchantment": Internal.ClassInfo, "net.minecraft.server.players.StoredUserEntry": Internal.ClassInfo, "top.theillusivec4.curios.api.event.DropRulesEvent": Internal.ClassInfo, "it.unimi.dsi.fastutil.chars.Char2CharFunction": Internal.ClassInfo, "java.awt.MenuShortcut": Internal.ClassInfo, "fzzyhmstrs.emi_loot.mixins.EntityEquipmentPredicateAccessor": Internal.ClassInfo, "com.mna.blocks.sorcery.PulseBlock": Internal.ClassInfo, "net.minecraft.world.level.block.entity.JukeboxBlockEntity": Internal.ClassInfo, "xaero.map.server.level.LevelMapProperties": Internal.ClassInfo, "com.gregtechceu.gtceu.common.pipelike.optical.OpticalPipeProperties": Internal.ClassInfo, "xaero.map.region.LeveledRegionManager": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeMobEffect": Internal.ClassInfo, "mods.railcraft.world.item.GogglesItem$Aura": Internal.ClassInfo, "com.gregtechceu.gtceu.api.fluids.store.FluidStorage": Internal.ClassInfo, "mods.railcraft.api.track.ArrowDirection": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.custom.CropBlockBuilder$SurviveCallback": Internal.ClassInfo, "net.minecraft.client.NarratorStatus": Internal.ClassInfo, "org.apache.logging.log4j.Logger": Internal.ClassInfo, "com.kamth.zeldamod.block.custom.SwordPedestalBlock": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.functions.LootItemFunction$Builder": Internal.ClassInfo, "net.minecraft.nbt.EndTag": Internal.ClassInfo, "net.minecraftforge.event.entity.item.ItemEvent": Internal.ClassInfo, "net.minecraftforge.common.util.MutableHashedLinkedMap$BasicStrategy": Internal.ClassInfo, "appeng.util.ConfigManager": Internal.ClassInfo, "java.awt.Polygon": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.rule.blockentity.RuleBlockEntityModifier": Internal.ClassInfo, "net.minecraft.core.HolderSet$Named": Internal.ClassInfo, "de.dafuqs.spectrum.recipe.GatedRecipe": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.SeagrassFeature": Internal.ClassInfo, "net.minecraft.world.level.lighting.LayerLightEventListener": Internal.ClassInfo, "software.bernie.geckolib.core.keyframe.event.data.CustomInstructionKeyframeData": Internal.ClassInfo, "net.minecraft.world.level.block.entity.SculkCatalystBlockEntity$CatalystListener": Internal.ClassInfo, "net.minecraft.world.level.lighting.LightEventListener": Internal.ClassInfo, "net.minecraft.world.level.block.RepeaterBlock": Internal.ClassInfo, "org.apache.logging.log4j.core.layout.ByteBufferDestination": Internal.ClassInfo, "net.minecraftforge.eventbus.api.GenericEvent": Internal.ClassInfo, "net.minecraft.world.level.levelgen.carver.ConfiguredWorldCarver": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.block.IRecolorable": Internal.ClassInfo, "techreborn.items.tool.industrial.IndustrialChainsawItem": Internal.ClassInfo, "com.mojang.datafixers.util.Either$Right": Internal.ClassInfo, "net.minecraft.world.level.block.entity.DispenserBlockEntity": Internal.ClassInfo, "com.gregtechceu.gtceu.api.pipenet.PipeNet": Internal.ClassInfo, "java.awt.Stroke": Internal.ClassInfo, "org.apache.logging.log4j.message.MessageFactory": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.ui.ContextMenu": Internal.ClassInfo, "mezz.jei.api.recipe.IRecipeManager": Internal.ClassInfo, "java.nio.channels.ScatteringByteChannel": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.mob_head.SpectrumSkullBlockItem": Internal.ClassInfo, "java.nio.file.WatchEvent": Internal.ClassInfo, "de.dafuqs.spectrum.items.trinkets.ExtraMiningSpeedRingItem": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.predicates.LootItemCondition": Internal.ClassInfo, "com.inventorypets.pets.petSatedChest": Internal.ClassInfo, "net.minecraftforge.client.model.data.ModelData": Internal.ClassInfo, "net.minecraft.world.level.block.SculkVeinBlock": Internal.ClassInfo, "org.jgrapht.GraphIterables": Internal.ClassInfo, "com.kamth.zeldamod.block.custom.LockedChestBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blockpredicates.NotPredicate": Internal.ClassInfo, "net.minecraft.world.ticks.TickPriority": Internal.ClassInfo, "mods.railcraft.world.level.block.detector.PlayerDetectorBlock": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerContainerEvent$Close": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Reference2BooleanFunction": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.BlockWithTooltip": Internal.ClassInfo, "net.minecraft.world.entity.Mob": Internal.ClassInfo, "reborncore.common.util.NBTSerializable": Internal.ClassInfo, "dev.ftb.mods.ftbquests.quest.task.TaskType": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.KnowledgeSrollItem": Internal.ClassInfo, "com.yanny.ytech.configuration.item.VenusOfHohleFelsItem": Internal.ClassInfo, "net.minecraft.nbt.DoubleTag": Internal.ClassInfo, "net.minecraft.world.item.ShieldItem": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.ScytheItem": Internal.ClassInfo, "elucent.eidolon.client.particle.SmokeParticleType": Internal.ClassInfo, "java.util.function.BiFunction": Internal.ClassInfo, "net.minecraft.world.level.block.SoulFireBlock": Internal.ClassInfo, "biomesoplenty.common.block.BrimstoneFumaroleBlock": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopeslab.FramedFlatStackedSlopeSlabCornerBlock": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopeslab.FramedCompoundSlopeSlabBlock": Internal.ClassInfo, "dev.architectury.impl.ItemPropertiesExtensionImpl": Internal.ClassInfo, "it.unimi.dsi.fastutil.booleans.Boolean2IntFunction": Internal.ClassInfo, "com.mna.effects.neutral.EffectLift": Internal.ClassInfo, "com.gregtechceu.gtceu.common.data.GTMedicalConditions": Internal.ClassInfo, "dev.latvian.mods.kubejs.util.ConsoleJS": Internal.ClassInfo, "com.google.gson.Gson": Internal.ClassInfo, "xfacthd.framedblocks.common.block.stairs.FramedVerticalStairsBlock$ShapeKey": Internal.ClassInfo, "io.netty.util.concurrent.OrderedEventExecutor": Internal.ClassInfo, "java.util.function.LongPredicate": Internal.ClassInfo, "net.minecraft.world.level.block.StandingSignBlock": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.entities.dispenser_minecart.ILevelEventRedirect": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decoration.GemstoneChimeBlock": Internal.ClassInfo, "net.minecraft.client.particle.SingleQuadParticle": Internal.ClassInfo, "javax.security.auth.Destroyable": Internal.ClassInfo, "cofh.core.common.block.GlowAirBlock": Internal.ClassInfo, "com.github.minecraftschurlimods.potionbundles.AbstractPotionBundle": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.AbstractLong2ObjectSortedMap": Internal.ClassInfo, "com.gregtechceu.gtceu.api.registry.GTRegistry": Internal.ClassInfo, "net.minecraft.data.loot.packs.VanillaBlockLoot": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.dd_deco.RottenGroundBlock": Internal.ClassInfo, "net.minecraft.network.chat.ChatType": Internal.ClassInfo, "xfacthd.framedblocks.common.block.FramedBlock": Internal.ClassInfo, "com.lowdragmc.lowdraglib.client.scene.WorldSceneRenderer": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.client.sound.CrystalSoundInstance": Internal.ClassInfo, "com.mna.api.items.TieredItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.misc.CustomStatBuilder": Internal.ClassInfo, "com.kamth.zeldamod.block.custom.StaminaFruitBlock": Internal.ClassInfo, "com.mna.api.entities.construct.ai.parameter.ConstructParameterTypes": Internal.ClassInfo, "net.minecraft.world.level.block.entity.BlockEntityType": Internal.ClassInfo, "net.minecraft.core.particles.ParticleGroup": Internal.ClassInfo, "pokefenn.totemic.item.MedicineBagItem": Internal.ClassInfo, "xfacthd.framedblocks.common.block.sign.AbstractFramedSignBlock": Internal.ClassInfo, "io.wispforest.owo.mixin.itemgroup.ItemGroupAccessor": Internal.ClassInfo, "snownee.lychee.core.Job": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemBuilder": Internal.ClassInfo, "net.minecraft.server.players.IpBanListEntry": Internal.ClassInfo, "com.yogpc.qp.machines.marker.BlockExMarker$WaterloggedMarker": Internal.ClassInfo, "biomesoplenty.common.block.SpiderEggBlock": Internal.ClassInfo, "net.minecraftforge.registries.IForgeRegistry$ClearCallback": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundSetJigsawBlockPacket": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.Double2BooleanFunction": Internal.ClassInfo, "com.google.common.collect.AbstractMultimap": Internal.ClassInfo, "techreborn.items.armor.BatpackItem": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.jade_vines.GerminatedJadeVineBulbItem": Internal.ClassInfo, "net.fabricmc.fabric.api.transfer.v1.transaction.Transaction$Lifecycle": Internal.ClassInfo, "net.minecraft.client.renderer.block.model.BlockModel": Internal.ClassInfo, "net.minecraftforge.event.level.ChunkDataEvent$Load": Internal.ClassInfo, "com.mna.enchantments.Fireproof": Internal.ClassInfo, "mezz.jei.api.recipe.IRecipeCatalystLookup": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.editor.data.Resources": Internal.ClassInfo, "net.minecraft.world.level.block.MossBlock": Internal.ClassInfo, "mods.railcraft.charge.ChargeCartStorageImpl": Internal.ClassInfo, "net.minecraft.core.LayeredRegistryAccess": Internal.ClassInfo, "net.minecraft.world.entity.ai.Brain$MemoryValue": Internal.ClassInfo, "java.awt.font.TextHitInfo": Internal.ClassInfo, "com.inventorypets.pets.petBlackHole": Internal.ClassInfo, "xfacthd.framedblocks.common.block.sign.FramedWallSignBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.api.gui.fancy.IFancyUIProvider": Internal.ClassInfo, "divinerpg.blocks.base.BlockModLightFence": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.ModelGenerator": Internal.ClassInfo, "dev.emi.emi.mixin.accessor.DrawContextAccessor": Internal.ClassInfo, "java.util.stream.LongStream$LongMapMultiConsumer": Internal.ClassInfo, "org.violetmoon.zeta.config.type.IBiomeConfig": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.block.ILightable": Internal.ClassInfo, "reborncore.common.blockentity.RedstoneConfiguration$Element": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemStackKey": Internal.ClassInfo, "cofh.core.client.particle.types.ColorParticleType": Internal.ClassInfo, "appeng.items.materials.MaterialItem": Internal.ClassInfo, "org.w3c.dom.CharacterData": Internal.ClassInfo, "net.minecraft.world.ticks.ContainerSingleItem": Internal.ClassInfo, "top.theillusivec4.curios.api.SlotResult": Internal.ClassInfo, "snownee.lychee.mixin.RecipeManagerAccess": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.upgrade.UpgradeBlock": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundUpdateAttributesPacket$AttributeSnapshot": Internal.ClassInfo, "net.minecraft.world.item.KnowledgeBookItem": Internal.ClassInfo, "mods.railcraft.api.item.MinecartFactory": Internal.ClassInfo, "xfacthd.framedblocks.common.block.interactive.FramedWaterloggablePressurePlateBlock": Internal.ClassInfo, "biomesoplenty.common.block.BrambleLeavesBlock": Internal.ClassInfo, "io.netty.util.ByteProcessor$IndexNotOfProcessor": Internal.ClassInfo, "de.dafuqs.spectrum.items.trinkets.NeatRingItem": Internal.ClassInfo, "com.google.gson.reflect.TypeToken": Internal.ClassInfo, "dev.gigaherz.graph3.Mergeable": Internal.ClassInfo, "com.gregtechceu.gtceu.api.item.tool.GTAxeItem": Internal.ClassInfo, "net.minecraft.client.model.EntityModel": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.entity.SpellProjectileEntity": Internal.ClassInfo, "cofh.core.common.item.XpContainerItem": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundBossEventPacket$Operation": Internal.ClassInfo, "net.minecraftforge.client.event.InputEvent$MouseButton$Post": Internal.ClassInfo, "mods.railcraft.api.charge.Charge$DamageOrigin": Internal.ClassInfo, "net.minecraft.world.level.chunk.PaletteResize": Internal.ClassInfo, "com.mojang.datafixers.TypedOptic$Element": Internal.ClassInfo, "com.mna.blocks.artifice.EldrinAltarBlock": Internal.ClassInfo, "net.minecraft.client.model.SkullModelBase": Internal.ClassInfo, "com.inventorypets.pets.petAprilFool": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decoration.ShinglesBlock": Internal.ClassInfo, "elucent.eidolon.registries.Registry$1": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.placement.StructurePlacementType": Internal.ClassInfo, "com.mojang.authlib.minecraft.TelemetrySession": Internal.ClassInfo, "net.minecraftforge.client.model.generators.ModelBuilder$TransformsBuilder$TransformVecBuilder": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerEvent": Internal.ClassInfo, "net.minecraft.world.level.storage.LevelSummary$BackupStatus": Internal.ClassInfo, "software.bernie.geckolib.core.animation.EasingType": Internal.ClassInfo, "de.dafuqs.spectrum.items.GuidebookItem": Internal.ClassInfo, "mcp.mobius.waila.mixin.ChiseledBookShelfBlockEntityAccess": Internal.ClassInfo, "net.minecraft.world.entity.monster.Drowned": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.material.Material$MaterialInfo": Internal.ClassInfo, "xfacthd.framedblocks.common.block.cube.FramedBookshelfBlock": Internal.ClassInfo, "com.heaser.pipeconnector.items.PipeConnectorItem": Internal.ClassInfo, "java.util.Set": Internal.ClassInfo, "net.minecraft.client.renderer.RenderStateShard$BooleanStateShard": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSelectAdvancementsTabPacket": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopepanel.FramedDoubleSlopePanelBlock": Internal.ClassInfo, "net.minecraft.nbt.LongTag": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.buffer.ExtendedVertexFormat": Internal.ClassInfo, "de.dafuqs.spectrum.items.conditional.CloakedBlockItem": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.RedstoneSide": Internal.ClassInfo, "com.aizistral.omniconfig.Configuration$SidedConfigType": Internal.ClassInfo, "com.enderio.api.capability.CoordinateSelection": Internal.ClassInfo, "net.minecraft.world.entity.vehicle.ChestBoat": Internal.ClassInfo, "net.minecraft.world.entity.PathfinderMob": Internal.ClassInfo, "net.minecraft.world.item.FireworkRocketItem$Shape": Internal.ClassInfo, "org.violetmoon.quark.api.IUsageTickerOverride": Internal.ClassInfo, "org.violetmoon.zeta.event.load.ZLoadComplete": Internal.ClassInfo, "net.fabricmc.fabric.api.gamerule.v1.CustomGameRuleCategory": Internal.ClassInfo, "net.minecraftforge.client.event.RenderPlayerEvent": Internal.ClassInfo, "net.minecraft.world.phys.shapes.CollisionContext": Internal.ClassInfo, "vazkii.patchouli.api.IVariable": Internal.ClassInfo, "com.gregtechceu.gtceu.integration.kjs.builders.block.RendererGlassBlockBuilder": Internal.ClassInfo, "net.minecraftforge.fluids.ForgeFlowingFluid$Properties": Internal.ClassInfo, "com.electronwill.nightconfig.core.file.GenericBuilder": Internal.ClassInfo, "net.minecraft.world.entity.HumanoidArm": Internal.ClassInfo, "com.kamth.zeldamod.item.items.BigKeyItem": Internal.ClassInfo, "net.blay09.mods.balm.api.event.client.screen.ScreenMouseEvent$Release": Internal.ClassInfo, "com.inventorypets.pets.petSponge": Internal.ClassInfo, "net.minecraft.world.level.block.HalfTransparentBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.common.block.StoneTypes": Internal.ClassInfo, "net.minecraft.world.effect.MobEffects$1": Internal.ClassInfo, "net.minecraft.client.ResourceLoadStateTracker$ReloadReason": Internal.ClassInfo, "xaero.map.region.texture.RegionTextureBiomes": Internal.ClassInfo, "net.fabricmc.fabric.impl.client.screen.MouseExtensions": Internal.ClassInfo, "net.minecraftforge.event.TickEvent$Phase": Internal.ClassInfo, "cofh.thermal.core.common.item.DetonatorItem": Internal.ClassInfo, "net.minecraft.util.random.SimpleWeightedRandomList": Internal.ClassInfo, "io.wispforest.owo.ui.event.KeyPress": Internal.ClassInfo, "dynamic_fps.impl.PowerState": Internal.ClassInfo, "com.mna.items.OffsetPlacerItem": Internal.ClassInfo, "org.violetmoon.quark.content.mobs.item.ForgottenHatItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.custom.CropBlockBuilder$ShapeBuilder": Internal.ClassInfo, "appeng.blockentity.crafting.IMolecularAssemblerSupportedPattern$CraftingGridAccessor": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.DoubleUnaryOperator": Internal.ClassInfo, "org.embeddedt.modernfix.forge.registry.DelegateHolder": Internal.ClassInfo, "net.minecraftforge.common.capabilities.ICapabilitySerializable": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.functions.FunctionUserBuilder": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.jade_vines.NephriteBlossomLeavesBlock": Internal.ClassInfo, "net.minecraft.world.ticks.LevelChunkTicks": Internal.ClassInfo, "net.minecraft.world.item.Vanishable": Internal.ClassInfo, "divinerpg.blocks.base.BlockModFence": Internal.ClassInfo, "java.lang.Comparable": Internal.ClassInfo, "net.minecraft.world.level.biome.Climate$Parameter": Internal.ClassInfo, "xfacthd.atlasviewer.client.api.IPackAwareSpriteSource": Internal.ClassInfo, "net.minecraft.client.OptionInstance$ValueSet": Internal.ClassInfo, "net.minecraft.client.renderer.DimensionSpecialEffects$SkyType": Internal.ClassInfo, "techreborn.items.armor.CloakingDeviceItem": Internal.ClassInfo, "net.fabricmc.fabric.api.client.screen.v1.ScreenEvents$AfterRender": Internal.ClassInfo, "com.tterrag.registrate.builders.BlockBuilder": Internal.ClassInfo, "com.gregtechceu.gtceu.api.item.TagPrefixItem": Internal.ClassInfo, "com.lothrazar.simpletomb.block.BlockEntityTomb": Internal.ClassInfo, "net.minecraft.world.entity.SpawnPlacements$Type": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.jade_vines.StemComponent": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.AbstractHugeMushroomFeature": Internal.ClassInfo, "elucent.eidolon.common.block.StrippableLog": Internal.ClassInfo, "elucent.eidolon.common.item.curio.RavenCloakItem": Internal.ClassInfo, "cofh.lib.common.item.HangingSignItemCoFH": Internal.ClassInfo, "net.minecraft.world.entity.ai.targeting.TargetingConditions": Internal.ClassInfo, "vazkii.patchouli.api.IComponentRenderContext": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.SimpleLevelEventJS": Internal.ClassInfo, "dev.latvian.mods.unit.Unit": Internal.ClassInfo, "org.violetmoon.zeta.config.ConfigManager": Internal.ClassInfo, "com.gregtechceu.gtceu.common.unification.material.MaterialRegistryManager": Internal.ClassInfo, "net.minecraft.core.SectionPos": Internal.ClassInfo, "xfacthd.framedblocks.common.item.VerticalAndWallBlockItem": Internal.ClassInfo, "com.aizistral.etherium.core.IEtheriumConfig": Internal.ClassInfo, "com.kamth.zeldamod.block.custom.TimedShockSwitchBlock": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.render.viewport.Viewport": Internal.ClassInfo, "com.gregtechceu.gtceu.api.block.RendererGlassBlock": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.ender.EnderHopperBlock": Internal.ClassInfo, "net.minecraft.client.renderer.GpuWarnlistManager$Preparations": Internal.ClassInfo, "mods.railcraft.world.level.block.detector.EmptyDetectorBlock": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerEvent$Clone": Internal.ClassInfo, "com.epherical.croptopia.items.Soup": Internal.ClassInfo, "net.minecraft.server.level.ChunkTaskPriorityQueueSorter": Internal.ClassInfo, "appeng.api.upgrades.IUpgradeableObject": Internal.ClassInfo, "net.minecraft.world.level.block.SeaPickleBlock": Internal.ClassInfo, "com.tterrag.registrate.util.nullness.NonNullUnaryOperator": Internal.ClassInfo, "divinerpg.blocks.arcana.BlockArcaniteVinesBody": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.AbstractLong2ObjectFunction": Internal.ClassInfo, "mezz.jei.api.gui.ITickTimer": Internal.ClassInfo, "com.inventorypets.blocks.spaceSpawn": Internal.ClassInfo, "io.netty.buffer.SizeClassesMetric": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slab.FramedCenteredSlabBlock": Internal.ClassInfo, "de.dafuqs.spectrum.items.energy.CreativeInkAssortmentItem": Internal.ClassInfo, "com.tterrag.registrate.providers.loot.RegistrateBlockLootTables": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopeslab.SlopeSlabShape": Internal.ClassInfo, "elucent.eidolon.client.particle.FlameParticleType": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decoration.ColoredSlabBlock": Internal.ClassInfo, "net.minecraft.core.RegistryAccess$RegistryEntry": Internal.ClassInfo, "org.apache.logging.log4j.core.Filter$Result": Internal.ClassInfo, "vectorwing.farmersdelight.common.item.PopsicleItem": Internal.ClassInfo, "net.minecraft.world.level.storage.LevelStorageSource": Internal.ClassInfo, "dev.latvian.mods.kubejs.loot.ConditionContainer": Internal.ClassInfo, "net.minecraft.world.entity.animal.horse.SkeletonHorse": Internal.ClassInfo, "com.inventorypets.pets.petLead": Internal.ClassInfo, "net.minecraft.world.level.block.state.BlockBehaviour$StateArgumentPredicate": Internal.ClassInfo, "top.theillusivec4.curios.api.type.inventory.IDynamicStackHandler": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.OreFeature": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$Render": Internal.ClassInfo, "com.gregtechceu.gtceu.api.machine.MetaMachine": Internal.ClassInfo, "xfacthd.framedblocks.common.block.prism.FramedPrismBlock": Internal.ClassInfo, "com.mojang.blaze3d.vertex.VertexSorting": Internal.ClassInfo, "com.kamth.zeldamod.item.items.TornadoRodItem": Internal.ClassInfo, "com.yogpc.qp.machines.PowerTile$Reason": Internal.ClassInfo, "techreborn.blocks.storage.energy.LowVoltageSUBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.api.item.PipeBlockItem": Internal.ClassInfo, "java.awt.event.FocusEvent": Internal.ClassInfo, "org.orecruncher.dsurround.config.biome.biometraits.BiomeTraits": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.furniture.FlexLanternBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.pieces.StructurePieceType": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.ShortConsumer": Internal.ClassInfo, "net.minecraftforge.network.NetworkEvent": Internal.ClassInfo, "net.minecraft.world.level.block.entity.EnderChestBlockEntity": Internal.ClassInfo, "divinerpg.blocks.base.BlockModLamp": Internal.ClassInfo, "com.almostreliable.lootjs.filters.Resolver": Internal.ClassInfo, "org.apache.logging.log4j.core.config.ConfigurationAware": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.ObjectSortedSet": Internal.ClassInfo, "divinerpg.items.vanilla.ItemHealingStone": Internal.ClassInfo, "de.dafuqs.spectrum.items.GravitableItem": Internal.ClassInfo, "com.yanny.ytech.configuration.block.FirePitBlock": Internal.ClassInfo, "com.enderio.api.conduit.IConduitMenuData": Internal.ClassInfo, "java.awt.image.SampleModel": Internal.ClassInfo, "dev.latvian.mods.unit.function.FunctionFactory$FuncSupplier": Internal.ClassInfo, "com.mna.items.artifact.AllfatherAxeControl": Internal.ClassInfo, "divinerpg.blocks.base.BlockModWall": Internal.ClassInfo, "net.minecraft.world.level.biome.MobSpawnSettings": Internal.ClassInfo, "com.kamth.zeldamod.block.custom.BombFlowerBlock": Internal.ClassInfo, "com.mna.api.capabilities.IPlayerCantrip": Internal.ClassInfo, "divinerpg.blocks.iceika.BlockBuddingOlivine": Internal.ClassInfo, "shcm.shsupercm.forge.citresewn.pack.cits.CITItem$CITOverrideList": Internal.ClassInfo, "net.fabricmc.fabric.api.client.screen.v1.ScreenMouseEvents$AllowMouseClick": Internal.ClassInfo, "dev.latvian.mods.kubejs.loot.LootEventJS": Internal.ClassInfo, "appeng.blockentity.misc.LightDetectorBlockEntity": Internal.ClassInfo, "net.minecraft.core.BlockSource": Internal.ClassInfo, "net.fabricmc.fabric.impl.client.model.loading.ModelLoaderHooks": Internal.ClassInfo, "com.gregtechceu.gtceu.common.pipelike.cable.LevelEnergyNet": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.MultipartBlockStateGenerator$Part": Internal.ClassInfo, "com.mna.items.ritual.ItemWizardChalk": Internal.ClassInfo, "net.minecraft.server.level.ThreadedLevelLightEngine": Internal.ClassInfo, "java.security.SecureRandomParameters": Internal.ClassInfo, "mods.railcraft.api.item.Filter": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.widget.SceneWidget": Internal.ClassInfo, "net.minecraft.world.entity.monster.Phantom": Internal.ClassInfo, "com.mojang.realmsclient.gui.task.DataFetcher$Task": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.util.client.PositionedIngredient": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.schema.DynamicRecipeComponent$Factory": Internal.ClassInfo, "net.minecraftforge.common.IExtensibleEnum": Internal.ClassInfo, "net.minecraft.world.entity.ai.memory.WalkTarget": Internal.ClassInfo, "java.util.concurrent.CompletionStage": Internal.ClassInfo, "net.minecraft.data.loot.packs.VanillaEntityLoot": Internal.ClassInfo, "net.minecraft.world.level.block.entity.ChiseledBookShelfBlockEntity": Internal.ClassInfo, "net.minecraft.network.ConnectionProtocol": Internal.ClassInfo, "java.awt.PaintContext": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.predicate.BlockIDPredicate$PropertyObject": Internal.ClassInfo, "com.yanny.ytech.configuration.item.LavaClayBucketItem": Internal.ClassInfo, "xfacthd.framedblocks.common.item.FramedToolItem": Internal.ClassInfo, "de.dafuqs.spectrum.items.ApplyFoodEffectsCallback": Internal.ClassInfo, "java.awt.geom.Dimension2D": Internal.ClassInfo, "net.fabricmc.fabric.api.client.screen.v1.ScreenKeyboardEvents$AllowKeyPress": Internal.ClassInfo, "java.awt.event.ActionListener": Internal.ClassInfo, "net.fabricmc.fabric.mixin.screenhandler.NamedScreenHandlerFactoryMixin": Internal.ClassInfo, "cofh.core.common.effect.LoveMobEffect": Internal.ClassInfo, "appeng.thirdparty.fabric.SpriteFinderImpl$SpriteFinderAccess": Internal.ClassInfo, "net.fabricmc.fabric.api.client.screen.v1.ScreenMouseEvents$BeforeMouseScroll": Internal.ClassInfo, "java.awt.dnd.DragSourceMotionListener": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.arcane.ArcaneHoeItem": Internal.ClassInfo, "net.minecraft.world.item.enchantment.ProtectionEnchantment$Type": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.OceanStone": Internal.ClassInfo, "dev.latvian.mods.kubejs.event.EventResult$Type": Internal.ClassInfo, "java.lang.reflect.Constructor": Internal.ClassInfo, "dev.onyxstudios.cca.api.v3.component.ComponentV3": Internal.ClassInfo, "xaero.map.gui.message.Message": Internal.ClassInfo, "java.util.OptionalLong": Internal.ClassInfo, "io.wispforest.accessories.api.slot.NestedSlotReferenceImpl": Internal.ClassInfo, "java.awt.Dialog$ModalityType": Internal.ClassInfo, "net.minecraftforge.common.ToolAction": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slab.FramedSlabCornerBlock": Internal.ClassInfo, "com.github.minecraftschurlimods.potionbundles.PotionBundle": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.hopper.LithiumStackList": Internal.ClassInfo, "org.violetmoon.zeta.network.IZetaNetworkEventContext": Internal.ClassInfo, "appeng.blockentity.networking.EnergyCellBlockEntity": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.GravityProcessor": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.api.items.IAdvancedPotionItem$PotionType": Internal.ClassInfo, "com.mna.blocks.tileentities.EldrinAltarTile$CollectedItem": Internal.ClassInfo, "mods.railcraft.world.level.levelgen.structure.GeodeStructure": Internal.ClassInfo, "appeng.api.networking.pathing.IPathingService": Internal.ClassInfo, "net.minecraft.client.gui.narration.NarrationElementOutput": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.util.Dim2i": Internal.ClassInfo, "net.minecraft.world.entity.ai.goal.Goal$Flag": Internal.ClassInfo, "dev.ftb.mods.ftbquests.block.QuestBarrierBlock": Internal.ClassInfo, "com.aizistral.etherium.items.generic.ItemEtheriumTool": Internal.ClassInfo, "com.gregtechceu.gtceu.api.item.ComponentItem": Internal.ClassInfo, "com.gregtechceu.gtceu.common.block.SurfaceRockBlock": Internal.ClassInfo, "org.orecruncher.dsurround.mixins.core.MixinButtonWidget": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.material.properties.FluidPipeProperties": Internal.ClassInfo, "cofh.lib.api.StorageGroup": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.api.light.LightRayHitResult": Internal.ClassInfo, "net.minecraft.world.BossEvent$BossBarOverlay": Internal.ClassInfo, "net.minecraftforge.event.entity.living.AnimalTameEvent": Internal.ClassInfo, "com.almostreliable.lootjs.core.LootContextType": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.model.quad.ModelQuadView": Internal.ClassInfo, "net.minecraft.client.tutorial.TutorialSteps": Internal.ClassInfo, "net.minecraft.world.level.gameevent.vibrations.VibrationSelector": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.ExplosionJS": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundGameEventPacket": Internal.ClassInfo, "reborncore.api.IToolHandler": Internal.ClassInfo, "net.minecraft.util.profiling.metrics.MetricSampler$SamplerResult": Internal.ClassInfo, "com.mna.items.armor.BoneArmorItem": Internal.ClassInfo, "com.mna.api.blocks.WizardLabBlock": Internal.ClassInfo, "com.mojang.brigadier.exceptions.CommandExceptionType": Internal.ClassInfo, "net.minecraft.server.packs.resources.PreparableReloadListener$PreparationBarrier": Internal.ClassInfo, "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable": Internal.ClassInfo, "com.mna.recipes.RecipeByproduct": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.structures.StrongholdStructure": Internal.ClassInfo, "net.minecraft.client.gui.screens.worldselection.WorldCreationUiState": Internal.ClassInfo, "dev.onyxstudios.cca.api.v3.component.sync.ComponentPacketWriter": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.core.mixins.accessor.DispenserBlockEntityAccessor": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.SoulCrystal": Internal.ClassInfo, "dev.ftb.mods.ftbquests.block.entity.LootCrateOpenerBlockEntity": Internal.ClassInfo, "net.minecraft.world.entity.vehicle.MinecartSpawner": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.custom.AxeItemBuilder": Internal.ClassInfo, "com.gregtechceu.gtceu.common.block.CoilBlock": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.config.ItemStackConfig": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.CursedRing": Internal.ClassInfo, "net.minecraft.world.flag.FeatureFlag": Internal.ClassInfo, "org.orecruncher.dsurround.config.BlockEffectType": Internal.ClassInfo, "com.lowdragmc.lowdraglib.utils.Position": Internal.ClassInfo, "net.minecraft.world.level.GameRules$GameRuleTypeVisitor": Internal.ClassInfo, "java.awt.Composite": Internal.ClassInfo, "mods.railcraft.world.level.block.signal.TokenSignalBlock": Internal.ClassInfo, "techreborn.blocks.misc.BlockMachineCasing": Internal.ClassInfo, "dev.latvian.mods.kubejs.server.CommandEventJS": Internal.ClassInfo, "de.dafuqs.spectrum.items.trinkets.TotemPendantItem": Internal.ClassInfo, "techreborn.items.armor.QuantumSuitItem": Internal.ClassInfo, "net.minecraft.world.entity.monster.hoglin.Hoglin": Internal.ClassInfo, "java.security.Provider": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.SaltWallTorchBlock": Internal.ClassInfo, "dev.latvian.mods.unit.MutableNumberUnit": Internal.ClassInfo, "net.minecraft.client.model.geom.PartPose": Internal.ClassInfo, "techreborn.blocks.storage.energy.HighVoltageSUBlock": Internal.ClassInfo, "com.github.minecraftschurlimods.potionbundles.LingeringPotionBundle": Internal.ClassInfo, "net.minecraft.world.level.block.BambooSaplingBlock": Internal.ClassInfo, "cofh.lib.common.entity.PrimedTntCoFH": Internal.ClassInfo, "com.sonicether.soundphysics.world.ClientLevelProxy": Internal.ClassInfo, "me.jellysquid.mods.lithium.mixin.util.entity_movement_tracking.ServerEntityManagerAccessor": Internal.ClassInfo, "com.mojang.brigadier.context.ParsedArgument": Internal.ClassInfo, "snownee.lychee.core.ActionRuntime$State": Internal.ClassInfo, "com.gregtechceu.gtceu.common.pipelike.laser.LevelLaserPipeNet": Internal.ClassInfo, "net.minecraft.CrashReportDetail": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.NoneFeatureConfiguration": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.client.arcanemicon.Chapter": Internal.ClassInfo, "net.minecraft.world.WorldlyContainer": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.dd_deco.AloeBlock": Internal.ClassInfo, "net.minecraft.world.entity.schedule.Timeline": Internal.ClassInfo, "de.keksuccino.fancymenu.util.rendering.ui.widget.CustomizableWidget": Internal.ClassInfo, "net.minecraft.world.item.FoodOnAStickItem": Internal.ClassInfo, "net.minecraft.world.level.saveddata.SavedData": Internal.ClassInfo, "net.minecraftforge.event.AddPackFindersEvent": Internal.ClassInfo, "net.minecraft.network.chat.RemoteChatSession": Internal.ClassInfo, "com.enderio.api.conduit.IConduitType$ConduitConnectionData": Internal.ClassInfo, "dev.ftb.mods.ftbquests.item.ScreenBlockItem": Internal.ClassInfo, "net.minecraftforge.common.util.NonNullConsumer": Internal.ClassInfo, "dev.latvian.mods.kubejs.misc.EnchantmentBuilder$DamageProtectionFunction": Internal.ClassInfo, "io.wispforest.owo.ui.core.Component": Internal.ClassInfo, "com.kamth.zeldamod.item.armors.ChampionLeathers": Internal.ClassInfo, "net.minecraft.world.level.levelgen.GenerationStep$Decoration": Internal.ClassInfo, "com.mojang.datafixers.kinds.Applicative": Internal.ClassInfo, "elucent.eidolon.common.block.BlockBase": Internal.ClassInfo, "mods.railcraft.world.level.block.steamboiler.FluidFueledFireboxBlock": Internal.ClassInfo, "com.aizistral.omniconfig.Configuration": Internal.ClassInfo, "cofh.thermal.core.init.registries.TCoreItems$1": Internal.ClassInfo, "org.violetmoon.zeta.config.Definition": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$CharacterTyped$Pre": Internal.ClassInfo, "mods.railcraft.world.item.RefinedFirestoneItem": Internal.ClassInfo, "appeng.helpers.patternprovider.PatternProviderLogicHost": Internal.ClassInfo, "net.minecraft.client.player.LocalPlayer": Internal.ClassInfo, "net.fabricmc.fabric.api.attachment.v1.AttachmentType": Internal.ClassInfo, "cofh.thermal.lib.common.block.StorageCellBlock": Internal.ClassInfo, "net.minecraft.core.Holder$Reference": Internal.ClassInfo, "net.minecraft.core.GlobalPos": Internal.ClassInfo, "net.minecraft.world.level.block.TurtleEggBlock": Internal.ClassInfo, "com.kamth.zeldamod.item.items.BombItem": Internal.ClassInfo, "mods.railcraft.api.charge.Charge$Access": Internal.ClassInfo, "net.fabricmc.fabric.api.renderer.v1.render.RenderContext$BakedModelConsumer": Internal.ClassInfo, "net.minecraft.client.gui.screens.worldselection.WorldCreationUiState$WorldTypeEntry": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slab.FramedCheckeredPanelBlock": Internal.ClassInfo, "java.util.IntSummaryStatistics": Internal.ClassInfo, "divinerpg.blocks.vanilla.BlockSpike": Internal.ClassInfo, "net.minecraftforge.registries.RegistryObject": Internal.ClassInfo, "net.fabricmc.fabric.impl.lookup.block.BlockApiLookupImpl": Internal.ClassInfo, "net.minecraft.client.gui.components.Button$CreateNarration": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$MouseButtonPressed$Post": Internal.ClassInfo, "com.mna.api.entities.construct.ai.IMutexManager": Internal.ClassInfo, "com.mojang.brigadier.CommandDispatcher": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemSmeltedEventJS": Internal.ClassInfo, "reborncore.common.blocks.BlockMachineBase": Internal.ClassInfo, "net.minecraft.world.entity.Entity$MoveFunction": Internal.ClassInfo, "org.violetmoon.quark.mixin.mixins.IForgeItemMixin": Internal.ClassInfo, "sun.awt.SunHints$LCDContrastKey": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.upgrade.Upgradeable$UpgradeHolder": Internal.ClassInfo, "org.violetmoon.zeta.event.load.ZRegister": Internal.ClassInfo, "java.util.ImmutableCollections$AbstractImmutableSet": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.items.SoapItem": Internal.ClassInfo, "vazkii.patchouli.mixin.client.AccessorMultiBufferSource": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.widget.WidgetGroup": Internal.ClassInfo, "divinerpg.blocks.vethea.BlockKarosDispenser": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.item.FuelBlockItem": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.fluid.SpectrumFluidBlock": Internal.ClassInfo, "mods.railcraft.world.level.block.entity.multiblock.MultiblockBlockEntity$Membership": Internal.ClassInfo, "net.minecraft.util.profiling.metrics.MetricSampler$ThresholdTest": Internal.ClassInfo, "com.gregtechceu.gtceu.api.block.IFusionCasingType": Internal.ClassInfo, "divinerpg.items.base.ItemModShotgun": Internal.ClassInfo, "net.minecraft.world.level.block.PoweredBlock": Internal.ClassInfo, "org.orecruncher.dsurround.mixins.core.MixinAbstractSoundInstance": Internal.ClassInfo, "com.inventorypets.pets.petBed": Internal.ClassInfo, "net.minecraft.world.level.block.CraftingTableBlock": Internal.ClassInfo, "net.minecraft.world.level.block.BeetrootBlock": Internal.ClassInfo, "com.mojang.blaze3d.vertex.PoseStack$Pose": Internal.ClassInfo, "biomesoplenty.common.block.SpanishMossBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.floats.Float2DoubleFunction": Internal.ClassInfo, "appeng.api.networking.IGridConnection": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.material.Material": Internal.ClassInfo, "org.orecruncher.dsurround.sound.BackgroundSoundLoop": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.energy.CrystalApothecaryBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.bytes.Byte2ByteFunction": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decoration.GemstonePlayerOnlyGlassBlock": Internal.ClassInfo, "com.mna.items.worldgen.ItemCloudBottle": Internal.ClassInfo, "cofh.lib.api.item.IPlacementItem": Internal.ClassInfo, "net.minecraft.world.item.CreativeModeTab": Internal.ClassInfo, "xfacthd.atlasviewer.client.mixin.AccessorSpriteContents": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.misc.explosion.BombExplosion": Internal.ClassInfo, "com.gregtechceu.gtceu.api.gui.fancy.VerticalTabsWidget": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.map.CustomMapData$SimpleDirtyCounter": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.EnderSlayer": Internal.ClassInfo, "dev.shadowsoffire.placebo.registry.RegistryEvent": Internal.ClassInfo, "java.text.NumberFormat": Internal.ClassInfo, "net.minecraft.util.ClassInstanceMultiMap": Internal.ClassInfo, "snownee.lychee.compat.kubejs.CustomConditionEventJS": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.Structure$GenerationContext": Internal.ClassInfo, "net.minecraft.world.entity.monster.Endermite": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundAddExperienceOrbPacket": Internal.ClassInfo, "appeng.api.orientation.IOrientationStrategy": Internal.ClassInfo, "mods.railcraft.world.level.block.steamboiler.SolidFueledFireboxBlock": Internal.ClassInfo, "net.minecraftforge.fml.event.lifecycle.FMLDedicatedServerSetupEvent": Internal.ClassInfo, "mods.railcraft.world.level.block.SteamOvenBlock": Internal.ClassInfo, "me.jellysquid.mods.sodium.mixin.features.textures.animations.upload.SpriteContentsAnimatorImplAccessor": Internal.ClassInfo, "com.yanny.ytech.configuration.block.PrimitiveAlloySmelterBlock": Internal.ClassInfo, "xaero.map.server.IMinecraftServer": Internal.ClassInfo, "io.wispforest.owo.ui.component.VanillaWidgetComponent": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.DripstoneThickness": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.SurfaceWaterDepthFilter": Internal.ClassInfo, "it.unimi.dsi.fastutil.chars.CharConsumer": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slab.FramedCenteredPanelBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.util.ScheduledEvents$ScheduledEvent": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.pastel_network.network.PastelTransmission": Internal.ClassInfo, "net.minecraft.world.item.SpyglassItem": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.InWorldInteractionBlockEntity": Internal.ClassInfo, "io.netty.channel.RecvByteBufAllocator$Handle": Internal.ClassInfo, "java.awt.FontMetrics": Internal.ClassInfo, "java.lang.String$CaseInsensitiveComparator": Internal.ClassInfo, "com.gregtechceu.gtceu.api.GTValues": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decoration.SpectrumFacingBlock": Internal.ClassInfo, "net.minecraft.world.level.block.BarrierBlock": Internal.ClassInfo, "techreborn.blocks.misc.BlockRubberPlank": Internal.ClassInfo, "cc.abbie.emi_ores.mixin.accessor.RandomBlockStateMatchTestAccessor": Internal.ClassInfo, "techreborn.items.tool.PaintingToolItem": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.api.alchemy.IPipeConnection": Internal.ClassInfo, "net.minecraft.world.entity.boss.enderdragon.phases.DragonSittingAttackingPhase": Internal.ClassInfo, "appeng.block.misc.QuartzFixtureBlock": Internal.ClassInfo, "mods.railcraft.world.level.block.signal.DualBlockSignalBlock": Internal.ClassInfo, "elucent.eidolon.common.item.NotetakingToolsItem": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2IntMap$Entry": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemDroppedEventJS": Internal.ClassInfo, "net.minecraft.world.level.block.SkullBlock": Internal.ClassInfo, "java.util.function.IntPredicate": Internal.ClassInfo, "appeng.api.networking.events.statistics.GridChunkEvent": Internal.ClassInfo, "cofh.core.common.block.EntityBlock4Way": Internal.ClassInfo, "mods.railcraft.world.level.block.track.actuator.SwitchTrackMotorBlock": Internal.ClassInfo, "net.minecraftforge.common.util.TriPredicate": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopepanelcorner.FramedStackedCornerSlopePanelWallBlock": Internal.ClassInfo, "net.minecraftforge.common.crafting.IShapedRecipe": Internal.ClassInfo, "com.mojang.serialization.DataResult$Instance": Internal.ClassInfo, "net.minecraft.util.DirectoryLock": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.melon.GlisteringMelonBlock": Internal.ClassInfo, "elucent.eidolon.common.potion.ChilledEffect": Internal.ClassInfo, "com.google.common.collect.ImmutableTable$Builder": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Reference2ReferenceMap$Entry": Internal.ClassInfo, "dev.latvian.mods.kubejs.gui.KubeJSGUI": Internal.ClassInfo, "net.minecraft.world.level.levelgen.NoiseChunk$NoiseChunkDensityFunction": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundUpdateAttributesPacket": Internal.ClassInfo, "java.awt.AttributeValue": Internal.ClassInfo, "divinerpg.blocks.iceika.BlockIcicle": Internal.ClassInfo, "net.fabricmc.fabric.api.transfer.v1.item.ItemVariant": Internal.ClassInfo, "net.minecraft.world.level.block.WeatheringCopper": Internal.ClassInfo, "net.minecraft.world.entity.boss.enderdragon.phases.DragonHoldingPatternPhase": Internal.ClassInfo, "com.mna.items.artifice.ItemFactionHorn": Internal.ClassInfo, "com.yogpc.qp.machines.PowerConfig$Provider": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetPlayerTeamPacket$Parameters": Internal.ClassInfo, "dev.latvian.mods.kubejs.entity.EntitySpawnedEventJS": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.InventorWizardArmorItem": Internal.ClassInfo, "org.apache.logging.log4j.core.lookup.StrSubstitutor": Internal.ClassInfo, "net.minecraftforge.client.event.RegisterEntitySpectatorShadersEvent": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundAwardStatsPacket": Internal.ClassInfo, "net.minecraft.world.entity.ai.control.Control": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.arcane.ArcaneArmorItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.mixin.forge.RecipeManagerAccessor": Internal.ClassInfo, "com.almostreliable.lootjs.kube.LootContextJS": Internal.ClassInfo, "org.slf4j.spi.LocationAwareLogger": Internal.ClassInfo, "net.minecraft.client.particle.ParticleRenderType": Internal.ClassInfo, "net.minecraftforge.event.level.LevelEvent$Unload": Internal.ClassInfo, "net.minecraft.world.level.block.FrogspawnBlock": Internal.ClassInfo, "com.kamth.zeldamod.item.items.ReforgedSword": Internal.ClassInfo, "shcm.shsupercm.forge.citresewn.pack.cits.CITEnchantment$Blend": Internal.ClassInfo, "com.gregtechceu.gtceu.common.block.GTWallSignBlock": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decay.BlackMateriaBlock": Internal.ClassInfo, "com.inventorypets.items.petAchieveItemGeneral": Internal.ClassInfo, "net.minecraft.world.entity.ai.Brain$Provider": Internal.ClassInfo, "net.minecraft.client.gui.components.Tooltip": Internal.ClassInfo, "de.dafuqs.reverb.sound.distortion.DistortionEffect": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundInitializeBorderPacket": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.config.ConfigFromString": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.texture.TextTexture$TextType": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.idols.FreezingIdolBlock": Internal.ClassInfo, "mods.railcraft.world.module.Module": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.LootDataManager": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.entity.BlockEntityEventCallback": Internal.ClassInfo, "net.minecraftforge.event.ItemAttributeModifierEvent": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.gemstone.SpectrumGemstoneBlock": Internal.ClassInfo, "com.yogpc.qp.machines.module.ReplacerDummyBlock": Internal.ClassInfo, "net.minecraft.world.item.BoatItem": Internal.ClassInfo, "mods.railcraft.world.level.block.FirestoneBlock": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.IntegerProperty": Internal.ClassInfo, "com.tterrag.registrate.util.nullness.NonNullBiConsumer": Internal.ClassInfo, "com.inventorypets.worldgen.SpaceDungeonStructure": Internal.ClassInfo, "com.mna.blocks.utility.CloudBlock": Internal.ClassInfo, "com.kamth.zeldamod.item.masks.DekuMask": Internal.ClassInfo, "java.io.Closeable": Internal.ClassInfo, "com.kamth.zeldamod.item.items.MittsItem": Internal.ClassInfo, "xfacthd.atlasviewer.client.api.SourceAwareness": Internal.ClassInfo, "net.minecraftforge.eventbus.api.Event$Result": Internal.ClassInfo, "org.orecruncher.dsurround.effects.IEntityEffect": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.HugeBrownMushroomFeature": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.worldgen.generator.veins.VeinedVeinGenerator$VeinBlockDefinition": Internal.ClassInfo, "dev.latvian.mods.kubejs.misc.MobEffectBuilder$EffectTickCallback": Internal.ClassInfo, "com.gregtechceu.gtceu.common.pipelike.laser.LaserPipeProperties": Internal.ClassInfo, "net.minecraft.world.entity.animal.horse.Mule": Internal.ClassInfo, "net.minecraft.client.telemetry.TelemetryProperty$ServerType": Internal.ClassInfo, "net.blay09.mods.balm.api.event.client.screen.ScreenDrawEvent": Internal.ClassInfo, "appeng.api.networking.pathing.ControllerState": Internal.ClassInfo, "net.minecraft.world.level.block.ScaffoldingBlock": Internal.ClassInfo, "snownee.lychee.core.contextual.ContextualHolder": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeTransformation": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.items.BubbleBlowerItem": Internal.ClassInfo, "de.dafuqs.spectrum.items.food.beverages.properties.BeverageProperties": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.map.CustomMapData$DirtyCounter": Internal.ClassInfo, "xfacthd.framedblocks.common.block.pane.FramedPaneBlock": Internal.ClassInfo, "dev.latvian.mods.rhino.ScriptableObject": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundUpdateRecipesPacket": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.VoidPearl": Internal.ClassInfo, "net.minecraft.world.level.block.JukeboxBlock": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.SaltLanternBlock": Internal.ClassInfo, "java.math.BigInteger": Internal.ClassInfo, "net.irisshaders.iris.mixin.DimensionTypeAccessor": Internal.ClassInfo, "com.mojang.datafixers.types.Type$TypeMatcher": Internal.ClassInfo, "org.violetmoon.quark.mixin.mixins.client.accessor.AccessorMultiPlayerGameMode": Internal.ClassInfo, "net.minecraftforge.client.model.data.ModelProperty": Internal.ClassInfo, "com.inventorypets.pets.petCreeper": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.memory.MemoryItem": Internal.ClassInfo, "com.electronwill.nightconfig.core.CommentedConfig$Entry": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeIntrinsicHolderTagAppender": Internal.ClassInfo, "net.minecraft.stats.ServerRecipeBook": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decay.DecayBlock$Conversion": Internal.ClassInfo, "techreborn.blocks.storage.fluid.TankUnitBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.bytes.BytePredicate": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.DoorHingeSide": Internal.ClassInfo, "net.minecraft.world.entity.animal.TropicalFish$Base": Internal.ClassInfo, "com.gregtechceu.gtceu.core.mixins.RecipeManagerAccessor": Internal.ClassInfo, "xaero.map.file.MapRegionInfo": Internal.ClassInfo, "net.minecraft.world.item.CreativeModeTab$ItemDisplayParameters": Internal.ClassInfo, "net.fabricmc.fabric.api.transfer.v1.fluid.FluidVariant": Internal.ClassInfo, "dev.latvian.mods.rhino.IdFunctionObject": Internal.ClassInfo, "net.minecraft.util.ExtraCodecs$LazyInitializedCodec": Internal.ClassInfo, "net.minecraft.world.food.FoodData": Internal.ClassInfo, "net.minecraftforge.event.level.ChunkDataEvent$Save": Internal.ClassInfo, "net.minecraftforge.fml.config.IConfigSpec": Internal.ClassInfo, "vazkii.patchouli.client.book.template.TemplateComponent": Internal.ClassInfo, "cofh.thermal.core.common.item.SatchelItem": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.block.BlockListeningSection": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.WissenCellBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.chars.Char2ReferenceFunction": Internal.ClassInfo, "appeng.block.storage.DriveBlock": Internal.ClassInfo, "com.tterrag.registrate.providers.DataGenContext": Internal.ClassInfo, "dev.ftb.mods.ftbquests.quest.loot.LootCrate": Internal.ClassInfo, "com.google.gson.stream.JsonWriter": Internal.ClassInfo, "dev.emi.trinkets.api.SlotType": Internal.ClassInfo, "net.minecraft.sounds.Music": Internal.ClassInfo, "com.lowdragmc.lowdraglib.networking.IPacket": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.dd_deco.DragonboneBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.placement.StructurePlacement$FrequencyReductionMethod": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.BonusChestFeature": Internal.ClassInfo, "techreborn.blocks.storage.energy.AdjustableSUBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.chars.Char2IntFunction": Internal.ClassInfo, "com.gregtechceu.gtceu.api.gui.fancy.ConfiguratorPanel$Tab": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.JewelerTableBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.CoralFeature": Internal.ClassInfo, "com.gregtechceu.gtceu.common.pipelike.laser.LaserPipeType": Internal.ClassInfo, "net.minecraft.world.level.block.NetherWartBlock": Internal.ClassInfo, "xfacthd.framedblocks.api.shapes.ShapeCache": Internal.ClassInfo, "net.minecraft.world.level.material.FlowingFluid": Internal.ClassInfo, "elucent.eidolon.common.item.TheurgySymbolItem": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.IntOpenHashSet": Internal.ClassInfo, "net.minecraft.client.multiplayer.ProfileKeyPairManager": Internal.ClassInfo, "net.minecraft.util.SignatureValidator": Internal.ClassInfo, "net.minecraft.world.entity.npc.Npc": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.BlockTintFunction$Fixed": Internal.ClassInfo, "net.minecraft.world.level.block.state.pattern.BlockPattern$BlockPatternMatch": Internal.ClassInfo, "com.mna.enchantments.Gilded": Internal.ClassInfo, "net.minecraft.world.entity.monster.hoglin.HoglinBase": Internal.ClassInfo, "appeng.api.implementations.blockentities.ICraftingMachine": Internal.ClassInfo, "xfacthd.framedblocks.common.block.sign.FramedCeilingHangingSignBlock": Internal.ClassInfo, "com.mna.items.manaweaving.ItemManaweaveBottle": Internal.ClassInfo, "com.gregtechceu.gtceu.common.block.explosive.PowderbarrelBlock": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundLevelParticlesPacket": Internal.ClassInfo, "com.aizistral.etherium.items.EtheriumNugget": Internal.ClassInfo, "java.nio.channels.FileLock": Internal.ClassInfo, "java.util.Locale$FilteringMode": Internal.ClassInfo, "com.jamieswhiteshirt.reachentityattributes.mixin.EntityAttributeInstanceAccessor": Internal.ClassInfo, "net.fabricmc.fabric.api.renderer.v1.mesh.MutableQuadView": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.ui.ModalPanel": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.IntConsumer": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slope.FramedCornerSlopeBlock": Internal.ClassInfo, "mods.railcraft.world.item.TrackRelayerCartItem": Internal.ClassInfo, "net.minecraft.world.item.ArmorItem$Type": Internal.ClassInfo, "org.apache.logging.log4j.core.async.AsyncLoggerConfigDelegate": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decoration.DecayingLightBlock": Internal.ClassInfo, "de.dafuqs.spectrum.entity.entity.SpectrumFishingBobberEntity": Internal.ClassInfo, "xaero.map.server.radar.tracker.SyncedTrackedPlayer": Internal.ClassInfo, "net.minecraft.util.random.SimpleWeightedRandomList$Builder": Internal.ClassInfo, "com.lowdragmc.lowdraglib.utils.Size": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.AbstractObject2IntFunction": Internal.ClassInfo, "de.keksuccino.fancymenu.util.resource.RenderableResource": Internal.ClassInfo, "mods.railcraft.world.level.block.track.ElectricTrackBlock": Internal.ClassInfo, "com.kamth.zeldamod.item.armors.HeavyBoots": Internal.ClassInfo, "java.awt.Menu": Internal.ClassInfo, "net.minecraft.world.level.LevelReader": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.InWorldInteractionBlock": Internal.ClassInfo, "net.minecraft.nbt.ShortTag": Internal.ClassInfo, "net.minecraft.world.level.block.DoublePlantBlock": Internal.ClassInfo, "net.minecraft.world.level.block.ComparatorBlock": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.CosmicCake": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.FluidCasingBlock": Internal.ClassInfo, "net.minecraft.world.item.crafting.MapExtendingRecipe": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.PlacementModifier": Internal.ClassInfo, "net.minecraft.world.inventory.EnchantmentMenu": Internal.ClassInfo, "com.gregtechceu.gtceu.api.pipenet.longdistance.LongDistancePipeType": Internal.ClassInfo, "net.minecraft.client.StringSplitter": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.PetalsOfInnocenceBlock": Internal.ClassInfo, "dev.latvian.mods.rhino.util.CustomJavaToJsWrapperProvider": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.ui.IScreenWrapper": Internal.ClassInfo, "com.mna.items.ritual.FlatLandsBook": Internal.ClassInfo, "net.irisshaders.iris.mixin.texture.TextureAtlasAccessor": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.WithPersistentData": Internal.ClassInfo, "net.minecraft.world.level.block.EndRodBlock": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.shooting_star.ShootingStarBlock": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundOpenBookPacket": Internal.ClassInfo, "dev.latvian.mods.rhino.mod.util.NBTUtils": Internal.ClassInfo, "dev.latvian.mods.kubejs.util.ClassWrapper": Internal.ClassInfo, "reborncore.common.blockentity.FluidConfiguration": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2IntFunction": Internal.ClassInfo, "com.yogpc.qp.machines.advpump.BlockAdvPump": Internal.ClassInfo, "net.minecraft.client.renderer.block.model.BlockModel$GuiLight": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.entity.pushable.EntityPushablePredicate": Internal.ClassInfo, "appeng.client.render.cablebus.CableBusRenderState": Internal.ClassInfo, "net.minecraft.world.level.chunk.storage.RegionFileVersion": Internal.ClassInfo, "net.minecraftforge.common.data.ExistingFileHelper": Internal.ClassInfo, "net.minecraft.client.gui.screens.inventory.MenuAccess": Internal.ClassInfo, "appeng.items.tools.powered.WirelessTerminalItem": Internal.ClassInfo, "java.util.PrimitiveIterator": Internal.ClassInfo, "net.minecraft.world.item.ProjectileWeaponItem": Internal.ClassInfo, "com.mna.items.constructs.parts.arms.ConstructPartFluidNozzleRight": Internal.ClassInfo, "com.mojang.datafixers.functions.PointFreeRule": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.idols.FallDamageNegatingIdolBlock": Internal.ClassInfo, "xfacthd.framedblocks.common.block.pillar.FramedFenceBlock": Internal.ClassInfo, "java.util.function.DoubleSupplier": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Reference2CharFunction": Internal.ClassInfo, "java.awt.datatransfer.FlavorListener": Internal.ClassInfo, "de.keksuccino.konkrete.events.ScreenCharTypedEvent": Internal.ClassInfo, "elucent.eidolon.common.item.TopHatItem": Internal.ClassInfo, "net.minecraft.client.particle.Particle": Internal.ClassInfo, "java.nio.channels.FileChannel": Internal.ClassInfo, "net.minecraft.world.inventory.FurnaceMenu": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.StrippableDrop": Internal.ClassInfo, "net.minecraft.world.level.levelgen.presets.WorldPreset": Internal.ClassInfo, "xfacthd.framedblocks.common.block.torch.FramedWallTorchBlock": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.boom.ParametricMiningDeviceItem": Internal.ClassInfo, "com.mna.api.spells.SpellCastingResultCode": Internal.ClassInfo, "divinerpg.items.arcana.ItemStaffEnrichment": Internal.ClassInfo, "com.gregtechceu.gtceu.api.block.ActiveBlock": Internal.ClassInfo, "de.dafuqs.spectrum.items.tools.BedrockFishingRodItem": Internal.ClassInfo, "net.minecraft.world.entity.decoration.ItemFrame": Internal.ClassInfo, "net.minecraft.world.entity.ItemSteerable": Internal.ClassInfo, "net.minecraftforge.fml.loading.progress.ProgressMeter": Internal.ClassInfo, "java.nio.file.DirectoryStream": Internal.ClassInfo, "net.minecraft.world.level.material.MapColor": Internal.ClassInfo, "reborncore.api.items.InventoryBase": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundPickItemPacket": Internal.ClassInfo, "net.irisshaders.batchedentityrendering.mixin.OutlineBufferSourceAccessor": Internal.ClassInfo, "net.mehvahdjukaar.amendments.common.block.WaterloggedLilyBlock": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.BlockSetType": Internal.ClassInfo, "net.minecraft.world.level.gameevent.EntityPositionSource$Type": Internal.ClassInfo, "snownee.lychee.core.post.PostAction": Internal.ClassInfo, "com.yanny.ytech.configuration.block.AqueductConsumerBlock": Internal.ClassInfo, "java.lang.Void": Internal.ClassInfo, "net.minecraft.core.Holder$Direct": Internal.ClassInfo, "java.io.Externalizable": Internal.ClassInfo, "divinerpg.blocks.arcana.BlockFirestock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.BlockPileConfiguration": Internal.ClassInfo, "de.dafuqs.spectrum.items.ActivatableItem": Internal.ClassInfo, "net.minecraft.core.HolderLookup$Provider": Internal.ClassInfo, "net.minecraft.commands.CommandSigningContext": Internal.ClassInfo, "net.minecraft.client.gui.screens.Screen$NarratableSearchResult": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.worldgen.generator.indicators.SurfaceIndicatorGenerator$IndicatorPlacement": Internal.ClassInfo, "reborncore.common.crafting.serde.RecipeSerde": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.ingredientaction.IngredientAction": Internal.ClassInfo, "com.tterrag.registrate.util.entry.MenuEntry": Internal.ClassInfo, "net.minecraft.world.level.gameevent.GameEventListenerRegistry$ListenerVisitor": Internal.ClassInfo, "com.electronwill.nightconfig.core.io.ParsingMode": Internal.ClassInfo, "net.minecraft.world.level.levelgen.NoiseRouter": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.redstone.BlockPlacerBlock": Internal.ClassInfo, "net.minecraft.world.damagesource.FallLocation": Internal.ClassInfo, "net.minecraft.client.renderer.blockentity.BlockEntityRendererProvider": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.api.crystal.CrystalType": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.widget.TreeListWidget": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.Int2ByteFunction": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.CursedStone": Internal.ClassInfo, "it.unimi.dsi.fastutil.chars.Char2LongFunction": Internal.ClassInfo, "net.minecraft.world.item.SpawnEggItem": Internal.ClassInfo, "dev.architectury.extensions.injected.InjectedFluidExtension": Internal.ClassInfo, "net.minecraft.world.level.block.SlimeBlock": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.chests.CompactingChestBlock": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.redstone.BlockDetectorBlock": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetBorderCenterPacket": Internal.ClassInfo, "net.minecraftforge.common.util.Lazy$Fast": Internal.ClassInfo, "biomesoplenty.common.block.JacarandaLeavesBlock": Internal.ClassInfo, "com.enderio.base.common.particle.RangeParticleType": Internal.ClassInfo, "com.mojang.authlib.yggdrasil.request.AbuseReportRequest$RealmInfo": Internal.ClassInfo, "net.minecraft.world.level.entity.ChunkEntities": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.widget.TextBoxWidget": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.LootContext": Internal.ClassInfo, "appeng.api.stacks.AEKeyType": Internal.ClassInfo, "net.minecraft.world.item.enchantment.ArrowPiercingEnchantment": Internal.ClassInfo, "snownee.kiwi.mixin.forge.BlockColorsAccess": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundPingPacket": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.SmokingPipeItem": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerEvent$PlayerLoggedOutEvent": Internal.ClassInfo, "net.minecraft.client.renderer.ShaderInstance": Internal.ClassInfo, "divinerpg.blocks.vanilla.BlockWhiteMushroomPlant": Internal.ClassInfo, "mods.railcraft.world.level.block.track.HighSpeedTrackBlock": Internal.ClassInfo, "java.util.function.IntToDoubleFunction": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.SimpleBlockFeature": Internal.ClassInfo, "net.minecraft.client.model.geom.builders.CubeListBuilder": Internal.ClassInfo, "org.violetmoon.quark.content.client.hax.PseudoAccessorItemStack": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSoundEntityPacket": Internal.ClassInfo, "net.minecraft.world.damagesource.DeathMessageType": Internal.ClassInfo, "java.io.BufferedWriter": Internal.ClassInfo, "com.mna.items.constructs.parts.head.ConstructPartBasicHead": Internal.ClassInfo, "net.minecraft.client.renderer.texture.SpriteLoader$Preparations": Internal.ClassInfo, "org.violetmoon.quark.content.tools.entity.rang.AbstractPickarang": Internal.ClassInfo, "snownee.lychee.item_inside.ItemInsideRecipeType": Internal.ClassInfo, "appeng.api.util.IConfigManager": Internal.ClassInfo, "com.yanny.ytech.configuration.block.AqueductValveBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.material.properties.IMaterialProperty": Internal.ClassInfo, "appeng.me.cluster.implementations.SpatialPylonCluster": Internal.ClassInfo, "com.mojang.serialization.Decoder$Simple": Internal.ClassInfo, "net.minecraft.client.resources.sounds.SoundEventRegistration": Internal.ClassInfo, "software.bernie.geckolib.core.keyframe.event.ParticleKeyframeEvent": Internal.ClassInfo, "cc.abbie.emi_ores.mixin.accessor.TrapezoidHeightAccessor": Internal.ClassInfo, "net.minecraft.client.renderer.debug.DebugRenderer": Internal.ClassInfo, "divinerpg.blocks.iceika.BlockPresentBox": Internal.ClassInfo, "net.fabricmc.fabric.api.event.registry.RegistryEntryAddedCallback": Internal.ClassInfo, "net.minecraftforge.common.world.StructureSettingsBuilder": Internal.ClassInfo, "mods.railcraft.world.module.BlockModuleProvider": Internal.ClassInfo, "net.minecraft.util.FrameTimer": Internal.ClassInfo, "net.minecraft.world.entity.Display$GenericInterpolator": Internal.ClassInfo, "org.apache.logging.log4j.core.util.CronExpression": Internal.ClassInfo, "appeng.util.prioritylist.IPartitionList$Builder": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundBundlePacket": Internal.ClassInfo, "net.minecraft.world.level.block.StructureBlock": Internal.ClassInfo, "appeng.block.crafting.PushDirection": Internal.ClassInfo, "net.minecraftforge.client.event.RenderNameTagEvent": Internal.ClassInfo, "com.mna.items.sorcery.ItemSpellGrimoire": Internal.ClassInfo, "de.dafuqs.spectrum.worldgen.UndergroundJigsawStructure": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.DoubleConsumer": Internal.ClassInfo, "net.minecraft.world.entity.item.PrimedTnt": Internal.ClassInfo, "vazkii.patchouli.client.book.BookPage": Internal.ClassInfo, "appeng.api.networking.IGridNode": Internal.ClassInfo, "net.minecraft.world.level.block.DropperBlock": Internal.ClassInfo, "org.violetmoon.zeta.config.IZetaConfigInternals": Internal.ClassInfo, "com.mna.items.artifice.ItemWardingAmulet": Internal.ClassInfo, "com.kamth.zeldamod.item.masks.KamaroMask": Internal.ClassInfo, "com.mojang.datafixers.Products$P1": Internal.ClassInfo, "com.google.common.collect.ImmutableMultisetGwtSerializationDependencies": Internal.ClassInfo, "net.minecraft.stats.StatType": Internal.ClassInfo, "com.mojang.datafixers.Products$P3": Internal.ClassInfo, "net.minecraft.client.player.Input": Internal.ClassInfo, "com.mojang.datafixers.Products$P2": Internal.ClassInfo, "biomesoplenty.common.block.WaterlilyBlockBOP": Internal.ClassInfo, "com.mna.api.entities.construct.materials.ConstructMaterialDiamond": Internal.ClassInfo, "com.mna.api.items.ManaBatteryItem": Internal.ClassInfo, "de.dafuqs.spectrum.mixin.accessors.BiomeAccessor": Internal.ClassInfo, "com.mojang.brigadier.suggestion.SuggestionsBuilder": Internal.ClassInfo, "com.mojang.datafixers.Products$P9": Internal.ClassInfo, "com.mojang.datafixers.Products$P8": Internal.ClassInfo, "java.util.IdentityHashMap": Internal.ClassInfo, "com.mojang.datafixers.Products$P5": Internal.ClassInfo, "com.mojang.datafixers.Products$P4": Internal.ClassInfo, "pokefenn.totemic.api.totem.TotemEffectContext": Internal.ClassInfo, "net.minecraft.client.renderer.RenderStateShard$ColorLogicStateShard": Internal.ClassInfo, "com.mojang.datafixers.Products$P7": Internal.ClassInfo, "com.mna.items.sorcery.ItemSightUnguent": Internal.ClassInfo, "com.mojang.datafixers.Products$P6": Internal.ClassInfo, "de.dafuqs.spectrum.items.FermentedItem": Internal.ClassInfo, "techreborn.items.tool.TreeTapItem": Internal.ClassInfo, "net.minecraftforge.registries.DataPackRegistryEvent$NewRegistry": Internal.ClassInfo, "com.tterrag.registrate.providers.RegistrateBlockstateProvider": Internal.ClassInfo, "net.minecraft.client.resources.sounds.AbstractTickableSoundInstance": Internal.ClassInfo, "net.minecraft.world.item.armortrim.TrimMaterial": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.shapes.VoxelShapeCaster": Internal.ClassInfo, "net.minecraft.client.resources.model.ModelBaker": Internal.ClassInfo, "xfacthd.atlasviewer.client.api.RegisterSpriteSourceDetailsEvent": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopeslab.FramedFlatInverseDoubleSlopeSlabCornerBlock": Internal.ClassInfo, "net.minecraft.sounds.SoundEvent": Internal.ClassInfo, "io.netty.channel.ChannelOutboundInvoker": Internal.ClassInfo, "com.kamth.zeldamod.item.items.DaggerSwordItem": Internal.ClassInfo, "com.google.gson.ReflectionAccessFilter": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.callbacks.BlockStateModifyPlacementCallbackJS": Internal.ClassInfo, "net.minecraft.client.multiplayer.PlayerInfo": Internal.ClassInfo, "net.minecraft.world.level.block.PointedDripstoneBlock": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.editor.configurator.IConfigurableWidgetGroup": Internal.ClassInfo, "io.wispforest.owo.mixin.shader.ShaderProgramAccessor": Internal.ClassInfo, "com.inventorypets.pets.petEnderChest": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.widget.DraggableScrollableWidgetGroup$IDraggable": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundPlayerAbilitiesPacket": Internal.ClassInfo, "com.google.common.collect.AbstractTable": Internal.ClassInfo, "net.minecraft.network.chat.LastSeenMessages": Internal.ClassInfo, "net.minecraft.world.level.block.SlabBlock": Internal.ClassInfo, "de.dafuqs.spectrum.energy.InkCost": Internal.ClassInfo, "net.minecraft.world.level.dimension.DimensionType": Internal.ClassInfo, "com.yanny.ytech.configuration.mob_effect.AbyssWalkerMobEffect": Internal.ClassInfo, "com.tterrag.registrate.Registrate": Internal.ClassInfo, "appeng.items.tools.powered.powersink.AEBasePoweredItem": Internal.ClassInfo, "net.minecraft.client.AttackIndicatorStatus": Internal.ClassInfo, "com.mna.items.ItemDebugStick": Internal.ClassInfo, "java.nio.charset.CoderResult": Internal.ClassInfo, "com.mna.items.base.IManaRepairable": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.foliageplacers.DarkOakFoliagePlacer": Internal.ClassInfo, "biomesoplenty.common.block.PusBubbleBlock": Internal.ClassInfo, "net.minecraftforge.client.model.generators.ModelBuilder$ElementBuilder$FaceBuilder": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.MorBlock": Internal.ClassInfo, "com.mojang.authlib.HttpAuthenticationService": Internal.ClassInfo, "net.minecraft.world.level.block.BaseCoralFanBlock": Internal.ClassInfo, "net.minecraftforge.client.event.RenderPlayerEvent$Pre": Internal.ClassInfo, "net.minecraft.world.level.biome.BiomeManager$NoiseBiomeSource": Internal.ClassInfo, "net.fabricmc.fabric.mixin.content.registry.VillagerEntityAccessor": Internal.ClassInfo, "com.mna.network.messages.to_server.SpellBookSlotChangeMessage": Internal.ClassInfo, "net.minecraft.world.scores.Scoreboard": Internal.ClassInfo, "java.lang.NamedPackage": Internal.ClassInfo, "elucent.eidolon.client.particle.FeatherParticleType": Internal.ClassInfo, "com.mna.entities.attributes.AttributeIntelligence": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.entity.movement_tracker.MovementTrackerCache": Internal.ClassInfo, "org.apache.logging.log4j.core.config.Property": Internal.ClassInfo, "net.irisshaders.batchedentityrendering.mixin.RenderTypeAccessor": Internal.ClassInfo, "net.minecraftforge.network.HandshakeMessages$S2CRegistry": Internal.ClassInfo, "divinerpg.items.base.block.ItemParasectaAltar": Internal.ClassInfo, "net.minecraft.tags.TagEntry$Lookup": Internal.ClassInfo, "net.minecraft.world.level.block.GrowingPlantBlock": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.CosmicScroll": Internal.ClassInfo, "net.minecraftforge.client.event.ViewportEvent$ComputeFov": Internal.ClassInfo, "reborncore.api.items.ArmorRemoveHandler": Internal.ClassInfo, "vazkii.patchouli.api.IVariableProvider": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.widget.TabButton": Internal.ClassInfo, "java.text.Format": Internal.ClassInfo, "net.minecraft.world.level.block.TrapDoorBlock": Internal.ClassInfo, "net.minecraft.world.entity.projectile.AbstractArrow$Pickup": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.api.items.ICreativeTabMember": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.particle_spawner.ParticleSpawnerBlock": Internal.ClassInfo, "com.mojang.blaze3d.vertex.VertexFormatElement": Internal.ClassInfo, "net.minecraft.world.level.block.SnifferEggBlock": Internal.ClassInfo, "mods.railcraft.world.item.GogglesItem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.carver.CanyonWorldCarver": Internal.ClassInfo, "com.inventorypets.pets.petBlaze": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.editor.ui.resource.ResourceContainer": Internal.ClassInfo, "xfacthd.framedblocks.common.block.pillar.FramedLatticeBlock": Internal.ClassInfo, "net.minecraft.world.level.block.RenderShape": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerXpEvent": Internal.ClassInfo, "java.net.Proxy": Internal.ClassInfo, "divinerpg.items.base.ItemModPickaxe": Internal.ClassInfo, "me.jellysquid.mods.sodium.mixin.features.render.gui.debug.DebugScreenOverlayAccessor": Internal.ClassInfo, "com.yogpc.qp.machines.marker.BlockExMarker$BlockFlexMarker": Internal.ClassInfo, "java.awt.dnd.DragSourceDropEvent": Internal.ClassInfo, "net.minecraft.world.inventory.ItemCombinerMenuSlotDefinition$Builder": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.idols.PiglinTradeIdolBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.api.registry.GTRegistry$RL": Internal.ClassInfo, "com.mojang.blaze3d.platform.Window": Internal.ClassInfo, "com.inventorypets.pets.petCow": Internal.ClassInfo, "elucent.eidolon.common.item.DeathbringerScytheItem": Internal.ClassInfo, "net.minecraft.client.renderer.RenderType$CompositeState$CompositeStateBuilder": Internal.ClassInfo, "de.dafuqs.spectrum.recipe.pedestal.PedestalRecipeTier": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slab.FramedCheckeredPanelSegmentBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.StructureProcessorType": Internal.ClassInfo, "com.mojang.authlib.yggdrasil.ServicesKeyInfo": Internal.ClassInfo, "com.mna.items.artifice.charms.ItemCancelDrownCharm": Internal.ClassInfo, "net.minecraft.world.inventory.ChestMenu": Internal.ClassInfo, "com.probejs.jdoc.document.DocumentClass": Internal.ClassInfo, "net.minecraft.world.level.levelgen.GeodeCrackSettings": Internal.ClassInfo, "com.mna.effects.beneficial.EffectEldrinFlight": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.BlockMatchTest": Internal.ClassInfo, "net.minecraft.world.level.levelgen.SurfaceSystem": Internal.ClassInfo, "net.minecraft.data.recipes.ShapedRecipeBuilder": Internal.ClassInfo, "appeng.menu.ISubMenu": Internal.ClassInfo, "biomesoplenty.common.block.HangingStrandBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.util.FluidAmounts": Internal.ClassInfo, "mods.railcraft.world.level.block.manipulator.AdvancedItemUnloaderBlock": Internal.ClassInfo, "com.teampotato.doespotatotick.api.Tickable$Level": Internal.ClassInfo, "net.irisshaders.iris.mixin.GameRendererAccessor": Internal.ClassInfo, "dev.ftb.mods.ftbquests.quest.loot.WeightedReward": Internal.ClassInfo, "com.mna.items.relic.MithionsMagnificentMbag": Internal.ClassInfo, "com.inventorypets.pets.petTorch": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.TwistedPotion": Internal.ClassInfo, "net.minecraft.advancements.critereon.MinMaxBounds$Ints": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.EnumProperty": Internal.ClassInfo, "de.dafuqs.spectrum.items.StructurePlacerItem": Internal.ClassInfo, "net.minecraft.world.item.ShovelItem": Internal.ClassInfo, "io.wispforest.owo.ui.core.OwoUIDrawContext$UtilityScreen": Internal.ClassInfo, "divinerpg.items.base.ItemModFood": Internal.ClassInfo, "com.yogpc.qp.machines.misc.BlockDummy": Internal.ClassInfo, "com.gregtechceu.gtceu.api.block.PipeBlock": Internal.ClassInfo, "com.mojang.datafixers.kinds.Kind1$Mu": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.TinyExtractorBaseBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.api.registry.registrate.CompassSection": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.IntUnaryOperator": Internal.ClassInfo, "shcm.shsupercm.forge.citresewn.pack.cits.CITItem$Cached": Internal.ClassInfo, "divinerpg.items.arcana.ItemWizardsBook": Internal.ClassInfo, "mods.railcraft.world.level.block.detector.RoutingDetectorBlock": Internal.ClassInfo, "net.minecraft.client.sounds.SoundManager": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.FireworksJS": Internal.ClassInfo, "net.mehvahdjukaar.amendments.common.ExtendedHangingSign": Internal.ClassInfo, "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer": Internal.ClassInfo, "java.util.function.IntToLongFunction": Internal.ClassInfo, "net.minecraft.world.item.DiscFragmentItem": Internal.ClassInfo, "com.gregtechceu.gtceu.api.machine.MachineDefinition": Internal.ClassInfo, "divinerpg.blocks.base.BlockModPowered": Internal.ClassInfo, "fzzyhmstrs.emi_loot.util.LootTablePools": Internal.ClassInfo, "divinerpg.blocks.vethea.BlockAcid": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decoration.CloverBlock": Internal.ClassInfo, "divinerpg.blocks.iceika.BlockBrittleMoss": Internal.ClassInfo, "net.minecraft.server.WorldStem": Internal.ClassInfo, "techreborn.items.tool.WrenchItem": Internal.ClassInfo, "com.mna.items.constructs.parts.torso.ConstructPartTankTorso": Internal.ClassInfo, "com.gregtechceu.gtceu.api.capability.IToolable": Internal.ClassInfo, "com.mojang.authlib.minecraft.TelemetryEvent": Internal.ClassInfo, "net.minecraftforge.client.event.RecipesUpdatedEvent": Internal.ClassInfo, "com.mna.items.filters.ItemFilter": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.Short2ReferenceFunction": Internal.ClassInfo, "it.unimi.dsi.fastutil.floats.FloatBinaryOperator": Internal.ClassInfo, "net.minecraft.world.entity.vehicle.Minecart": Internal.ClassInfo, "de.dafuqs.spectrum.items.item_frame.PhantomFrameItem": Internal.ClassInfo, "java.awt.geom.PathIterator": Internal.ClassInfo, "java.awt.PopupMenu": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2DoubleMap": Internal.ClassInfo, "org.violetmoon.zeta.event.load.ZRegister$Post": Internal.ClassInfo, "java.nio.IntBuffer": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.callbacks.CanBeReplacedCallbackJS": Internal.ClassInfo, "net.minecraft.world.level.chunk.ChunkStatus$ChunkType": Internal.ClassInfo, "net.minecraft.core.NonNullList": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.block.ISoftFluidTankProvider": Internal.ClassInfo, "org.joml.Matrix2f": Internal.ClassInfo, "divinerpg.blocks.iceika.BlockCandyCane": Internal.ClassInfo, "java.awt.image.renderable.RenderableImage": Internal.ClassInfo, "org.joml.Matrix2d": Internal.ClassInfo, "net.fabricmc.fabric.mixin.biome.SpawnSettingsBuilderAccessor": Internal.ClassInfo, "java.awt.event.WindowStateListener": Internal.ClassInfo, "com.mna.effects.neutral.EffectShrink": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopepanelcorner.FramedCornerSlopePanelBlock": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.config.LongConfig": Internal.ClassInfo, "javax.accessibility.AccessibleValue": Internal.ClassInfo, "me.jellysquid.mods.lithium.mixin.util.entity_movement_tracking.ServerWorldAccessor": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.world.ChunkView": Internal.ClassInfo, "net.minecraft.world.level.block.GameMasterBlock": Internal.ClassInfo, "divinerpg.blocks.twilight.BlockPurpleGlowbone": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.block.IBlockHolder": Internal.ClassInfo, "net.minecraft.util.thread.BlockableEventLoop": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.ItemComponents$2": Internal.ClassInfo, "com.kamth.zeldamod.item.masks.GiantMask": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.ItemComponents$1": Internal.ClassInfo, "divinerpg.blocks.base.BlockModUnbreakable": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.filter.RecipeFilter": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.ItemComponents$4": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.ItemComponents$3": Internal.ClassInfo, "net.minecraft.world.entity.monster.EnderMan": Internal.ClassInfo, "net.fabricmc.fabric.api.client.screen.v1.ScreenMouseEvents$AllowMouseScroll": Internal.ClassInfo, "fuzs.puzzleslib.mixin.accessor.BiomeSpecialEffectsBuilderForgeAccessor": Internal.ClassInfo, "com.inventorypets.pets.petChristmasTree": Internal.ClassInfo, "net.minecraftforge.registries.IForgeRegistry$CreateCallback": Internal.ClassInfo, "mezz.jei.api.recipe.RecipeIngredientRole": Internal.ClassInfo, "net.minecraft.world.item.DyeItem": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.ArcaneHopperBlock": Internal.ClassInfo, "org.joml.Matrix3f": Internal.ClassInfo, "cc.abbie.emi_ores.mixin.accessor.CountPlacementAccessor": Internal.ClassInfo, "org.joml.Matrix3d": Internal.ClassInfo, "net.minecraft.world.level.gameevent.BlockPositionSource$Type": Internal.ClassInfo, "xaero.map.file.worldsave.WorldDataReader": Internal.ClassInfo, "org.violetmoon.quark.mixin.mixins.accessor.AccessorAbstractChestedHorse": Internal.ClassInfo, "java.util.stream.IntStream": Internal.ClassInfo, "dev.architectury.hooks.level.biome.ClimateProperties": Internal.ClassInfo, "java.awt.Insets": Internal.ClassInfo, "net.minecraftforge.forgespi.language.IConfigurable": Internal.ClassInfo, "de.dafuqs.spectrum.items.StructureCompassItem": Internal.ClassInfo, "com.mojang.blaze3d.shaders.AbstractUniform": Internal.ClassInfo, "dev.latvian.mods.kubejs.platform.forge.ingredient.WildcardIngredient": Internal.ClassInfo, "de.keksuccino.fancymenu.mixin.mixins.common.client.IMixinPlayerModel": Internal.ClassInfo, "com.gregtechceu.gtceu.common.data.GTRecipeModifiers": Internal.ClassInfo, "net.minecraft.world.level.border.BorderChangeListener": Internal.ClassInfo, "snownee.lychee.core.Reference": Internal.ClassInfo, "org.joml.Matrix4f": Internal.ClassInfo, "snownee.lychee.dripstone_dripping.DripstoneRecipe": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.HurtBySensor": Internal.ClassInfo, "com.lothrazar.library.block.BlockFlib": Internal.ClassInfo, "org.joml.Matrix4d": Internal.ClassInfo, "appeng.me.cluster.IAEMultiBlock": Internal.ClassInfo, "xaero.map.pool.MapTilePool": Internal.ClassInfo, "net.minecraft.world.entity.Saddleable": Internal.ClassInfo, "java.util.function.LongFunction": Internal.ClassInfo, "net.fabricmc.fabric.mixin.object.builder.AbstractBlockSettingsAccessor": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.ProtectedBlockProcessor": Internal.ClassInfo, "cofh.core.common.item.SpawnEggItemCoFH": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.RecipeTypeFunction": Internal.ClassInfo, "net.minecraft.client.model.geom.builders.LayerDefinition": Internal.ClassInfo, "divinerpg.items.vanilla.ItemPoisonousSword": Internal.ClassInfo, "mods.railcraft.world.level.block.detector.TankDetectorBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.stateproviders.WeightedStateProvider": Internal.ClassInfo, "de.dafuqs.spectrum.items.tools.NightfallsBladeItem": Internal.ClassInfo, "net.minecraft.world.level.block.entity.StructureBlockEntity": Internal.ClassInfo, "net.minecraftforge.client.event.ViewportEvent$ComputeCameraAngles": Internal.ClassInfo, "snownee.lychee.util.GsonContextImpl": Internal.ClassInfo, "io.wispforest.owo.ui.core.Easing": Internal.ClassInfo, "de.dafuqs.spectrum.recipe.pedestal.color.GemstoneColor": Internal.ClassInfo, "it.unimi.dsi.fastutil.floats.Float2CharFunction": Internal.ClassInfo, "com.mojang.authlib.GameProfile": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.client.ICustomItemRendererProvider": Internal.ClassInfo, "net.minecraft.network.Connection": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.item.WoodBasedItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.FireworksJS$Explosion": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundResourcePackPacket": Internal.ClassInfo, "java.math.BigDecimal": Internal.ClassInfo, "org.apache.logging.log4j.spi.StandardLevel": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.structures.JigsawStructure": Internal.ClassInfo, "org.orecruncher.dsurround.mixinutils.ILivingEntityExtended": Internal.ClassInfo, "me.jellysquid.mods.lithium.common.ai.MemoryModificationCounter": Internal.ClassInfo, "io.wispforest.owo.util.pond.OwoEntityRenderDispatcherExtension": Internal.ClassInfo, "net.minecraft.client.gui.components.Button$OnPress": Internal.ClassInfo, "de.dafuqs.spectrum.enchantments.ResonanceEnchantment": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.LongSet": Internal.ClassInfo, "net.minecraft.world.level.block.piston.PistonHeadBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.treedecorators.TreeDecorator$Context": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundTabListPacket": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.idols.FeedingIdolBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blockpredicates.InsideWorldBoundsPredicate": Internal.ClassInfo, "java.lang.invoke.MethodHandles$Lookup": Internal.ClassInfo, "net.minecraft.nbt.ByteArrayTag": Internal.ClassInfo, "net.minecraft.server.network.ServerConnectionListener": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingConversionEvent": Internal.ClassInfo, "divinerpg.items.vethea.ItemVetheanCannon": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent": Internal.ClassInfo, "net.mehvahdjukaar.amendments.common.IBellConnections": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.pastel_network.nodes.PastelNodeType": Internal.ClassInfo, "net.minecraft.world.level.block.LavaCauldronBlock": Internal.ClassInfo, "java.util.function.ToDoubleBiFunction": Internal.ClassInfo, "de.dafuqs.spectrum.items.tools.BedrockShearsItem": Internal.ClassInfo, "mods.railcraft.world.level.block.detector.DetectorBlock": Internal.ClassInfo, "vectorwing.farmersdelight.common.item.RottenTomatoItem": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.CursedScroll": Internal.ClassInfo, "net.minecraft.world.level.block.state.BlockBehaviour$OffsetFunction": Internal.ClassInfo, "divinerpg.world.structure.LowestGroundType": Internal.ClassInfo, "net.minecraftforge.eventbus.api.IEventListener": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.TheAcknowledgment": Internal.ClassInfo, "com.yogpc.qp.machines.miningwell.MiningWellItem": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.material.properties.MaterialProperties": Internal.ClassInfo, "mods.railcraft.world.level.block.track.outfitted.SwitchTrackBlock": Internal.ClassInfo, "mods.railcraft.world.item.CoalCokeBlockItem": Internal.ClassInfo, "net.minecraft.world.level.block.state.BlockState": Internal.ClassInfo, "net.minecraft.world.entity.animal.Panda": Internal.ClassInfo, "com.mojang.serialization.RecordBuilder": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetPlayerTeamPacket": Internal.ClassInfo, "appeng.client.render.crafting.AssemblerAnimationStatus": Internal.ClassInfo, "net.minecraftforge.fluids.ForgeFlowingFluid": Internal.ClassInfo, "net.minecraft.client.gui.spectator.categories.SpectatorPage": Internal.ClassInfo, "net.minecraftforge.client.event.RenderBlockScreenEffectEvent$OverlayType": Internal.ClassInfo, "com.inventorypets.pets.petJukebox": Internal.ClassInfo, "net.mehvahdjukaar.amendments.common.tile.HangingSignTileExtension": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.UnwitnessedAmulet": Internal.ClassInfo, "cc.abbie.emi_ores.mixin.accessor.RandomBlockMatchTestAccessor": Internal.ClassInfo, "com.kamth.zeldamod.item.armors.GoronTunic": Internal.ClassInfo, "net.minecraftforge.registries.RegistryBuilder": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.RainBannerPatternItem$Types": Internal.ClassInfo, "net.minecraft.client.renderer.item.ClampedItemPropertyFunction": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate": Internal.ClassInfo, "net.minecraft.world.level.biome.BiomeSpecialEffects": Internal.ClassInfo, "de.dafuqs.spectrum.items.InventoryInsertionAcceptor": Internal.ClassInfo, "net.minecraft.server.network.FilteredText": Internal.ClassInfo, "net.minecraftforge.client.RenderTypeGroup": Internal.ClassInfo, "divinerpg.blocks.base.BlockModDungeonAir": Internal.ClassInfo, "elucent.eidolon.common.block.CandlestickBlock": Internal.ClassInfo, "net.minecraft.world.level.block.AzaleaBlock": Internal.ClassInfo, "appeng.items.tools.quartz.QuartzPickaxeItem": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.material.properties.FluidProperty": Internal.ClassInfo, "net.minecraft.world.level.block.BaseEntityBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.api.cover.CoverDefinition": Internal.ClassInfo, "net.minecraft.world.level.border.BorderStatus": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.TwistingVinesFeature": Internal.ClassInfo, "dev.emi.emi.mixin.accessor.SmithingTrimRecipeAccessor": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.dd_deco.TallDragonjagBlock": Internal.ClassInfo, "java.io.FileFilter": Internal.ClassInfo, "divinerpg.blocks.vanilla.BlockHellfireSponge": Internal.ClassInfo, "com.lowdragmc.lowdraglib.core.mixins.accessor.AbstractContainerScreenAccessor": Internal.ClassInfo, "com.mojang.brigadier.tree.CommandNode": Internal.ClassInfo, "com.google.common.collect.UnmodifiableIterator": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.Long2ObjectMap": Internal.ClassInfo, "net.minecraft.network.chat.ClickEvent": Internal.ClassInfo, "net.fabricmc.fabric.mixin.networking.accessor.EntityTrackerAccessor": Internal.ClassInfo, "com.mna.items.base.INoCreativeTab": Internal.ClassInfo, "mods.railcraft.world.level.block.track.outfitted.LocomotiveTrackBlock": Internal.ClassInfo, "com.mna.items.constructs.parts.base.ChargeableConstructPart": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2ObjectMap$Entry": Internal.ClassInfo, "net.minecraft.nbt.ByteTag": Internal.ClassInfo, "net.minecraft.world.level.block.GlowLichenBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemBuilder$FinishUsingCallback": Internal.ClassInfo, "net.minecraft.util.ModCheck": Internal.ClassInfo, "java.awt.JobAttributes": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.AngelBlessing": Internal.ClassInfo, "net.minecraft.world.level.storage.PlayerDataStorage": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.Int2IntFunction": Internal.ClassInfo, "net.minecraft.world.level.block.EndPortalBlock": Internal.ClassInfo, "appeng.api.networking.IGrid": Internal.ClassInfo, "org.lwjgl.system.MemoryStack": Internal.ClassInfo, "net.minecraft.client.sounds.ChannelAccess$ChannelHandle": Internal.ClassInfo, "java.time.LocalTime": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.ExtradimensionalEye": Internal.ClassInfo, "net.minecraft.world.level.chunk.storage.RegionFile": Internal.ClassInfo, "net.mehvahdjukaar.amendments.common.block.DoubleSkullBlock": Internal.ClassInfo, "net.minecraft.world.level.block.WallBlock": Internal.ClassInfo, "java.lang.module.ModuleDescriptor$Requires$Modifier": Internal.ClassInfo, "net.mehvahdjukaar.amendments.common.block.BoilingWaterCauldronBlock": Internal.ClassInfo, "java.awt.FocusTraversalPolicy": Internal.ClassInfo, "net.mehvahdjukaar.amendments.common.block.FloorCandleSkullBlock": Internal.ClassInfo, "appeng.api.implementations.items.IAEItemPowerStorage": Internal.ClassInfo, "appeng.blockentity.spatial.SpatialAnchorBlockEntity": Internal.ClassInfo, "cofh.core.common.block.EntityBlockActive": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.EarthHeart": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.SaltCampfireBlock": Internal.ClassInfo, "xfacthd.framedblocks.common.block.rail.FramedFancyDetectorRailSlopeBlock": Internal.ClassInfo, "dev.ftb.mods.ftbquests.quest.task.TaskType$GuiProvider": Internal.ClassInfo, "com.inventorypets.pets.petPixie": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.gui.options.TextProvider": Internal.ClassInfo, "dev.latvian.mods.kubejs.bindings.TextWrapper": Internal.ClassInfo, "net.minecraftforge.common.util.INBTSerializable": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decoration.ColoredPlankBlock": Internal.ClassInfo, "org.apache.maven.artifact.handler.ArtifactHandler": Internal.ClassInfo, "biomesoplenty.common.block.StandingSignBlockBOP": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.StructureProcessor": Internal.ClassInfo, "vectorwing.farmersdelight.common.item.enchantment.BackstabbingEnchantment": Internal.ClassInfo, "elucent.eidolon.common.item.curio.EidolonCurio": Internal.ClassInfo, "org.violetmoon.quark.api.IRuneColorProvider": Internal.ClassInfo, "dev.architectury.registry.registries.RegistrarBuilder": Internal.ClassInfo, "net.minecraft.world.level.block.BigDripleafStemBlock": Internal.ClassInfo, "java.lang.module.ModuleDescriptor$Requires": Internal.ClassInfo, "net.minecraft.commands.BrigadierExceptions": Internal.ClassInfo, "techreborn.items.tool.ChainsawItem": Internal.ClassInfo, "com.mna.api.entities.construct.ai.parameter.ConstructAITaskParameter": Internal.ClassInfo, "java.awt.dnd.DragGestureListener": Internal.ClassInfo, "com.gregtechceu.gtceu.core.mixins.RecipeManagerInvoker": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.treedecorators.LeaveVineDecorator": Internal.ClassInfo, "net.minecraftforge.event.TickEvent": Internal.ClassInfo, "net.minecraftforge.event.AttachCapabilitiesEvent": Internal.ClassInfo, "it.unimi.dsi.fastutil.chars.Char2BooleanFunction": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.widget.ButtonWidget": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.creativetab.CreativeTabBuilder": Internal.ClassInfo, "elucent.eidolon.common.block.GobletBlock": Internal.ClassInfo, "net.minecraft.client.multiplayer.ClientLevel$ClientLevelData": Internal.ClassInfo, "com.gregtechceu.gtceu.core.mixins.BlockBehaviourAccessor": Internal.ClassInfo, "java.util.stream.BaseStream": Internal.ClassInfo, "org.apache.logging.log4j.spi.ExtendedLogger": Internal.ClassInfo, "net.minecraft.world.Clearable": Internal.ClassInfo, "net.minecraft.world.level.block.EnchantmentTableBlock": Internal.ClassInfo, "net.minecraft.client.Camera": Internal.ClassInfo, "net.minecraft.world.entity.boss.enderdragon.phases.AbstractDragonPhaseInstance": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blending.Blender$BlendingOutput": Internal.ClassInfo, "net.minecraft.world.item.SmithingTemplateItem": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.enchantments.SharpshooterEnchantment": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.material.properties.AlloyBlastProperty": Internal.ClassInfo, "net.minecraft.client.main.GameConfig": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.entity.BlockEntityJS": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$KeyPressed$Post": Internal.ClassInfo, "de.dafuqs.spectrum.energy.color.InkColor": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.events.SimpleEvent": Internal.ClassInfo, "mods.railcraft.world.item.FluidBottleItem": Internal.ClassInfo, "net.minecraft.advancements.critereon.MinMaxBounds$Doubles": Internal.ClassInfo, "net.minecraft.world.level.levelgen.synth.PerlinSimplexNoise": Internal.ClassInfo, "net.minecraft.client.multiplayer.MultiPlayerGameMode": Internal.ClassInfo, "org.slf4j.event.Level": Internal.ClassInfo, "de.dafuqs.reverb.sound.reverb.ReverbEffect": Internal.ClassInfo, "de.keksuccino.fancymenu.util.rendering.ui.widget.UniqueWidget": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.Long2IntFunction": Internal.ClassInfo, "xfacthd.framedblocks.common.block.ISlopeBlock": Internal.ClassInfo, "divinerpg.items.arcana.ItemStormSword": Internal.ClassInfo, "net.minecraft.world.level.block.StemGrownBlock": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.DeceptionAmulet": Internal.ClassInfo, "com.gregtechceu.gtceu.api.recipe.ResearchRecipeBuilder": Internal.ClassInfo, "appeng.client.render.cablebus.FacadeRenderState": Internal.ClassInfo, "divinerpg.blocks.base.BlockModChest": Internal.ClassInfo, "xfacthd.framedblocks.api.predicate.contex.FullFaceConnectionPredicate": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.ArcanemiconItem": Internal.ClassInfo, "net.minecraft.world.level.biome.MobSpawnSettings$SpawnerData": Internal.ClassInfo, "net.minecraft.world.level.block.FarmBlock": Internal.ClassInfo, "software.bernie.geckolib.core.animation.AnimationState": Internal.ClassInfo, "cc.abbie.emi_ores.mixin.accessor.RarityFilterAccessor": Internal.ClassInfo, "net.minecraft.world.level.block.SandBlock": Internal.ClassInfo, "com.enderio.base.common.enchantment.RepellentEnchantment": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.PlayerSensor": Internal.ClassInfo, "io.wispforest.accessories.api.AccessoriesContainer": Internal.ClassInfo, "net.minecraft.world.level.block.entity.FurnaceBlockEntity": Internal.ClassInfo, "com.electronwill.nightconfig.core.UnmodifiableCommentedConfig": Internal.ClassInfo, "net.minecraftforge.event.level.BlockEvent$FarmlandTrampleEvent": Internal.ClassInfo, "net.minecraft.world.level.block.AirBlock": Internal.ClassInfo, "org.violetmoon.zetaimplforge.mixin.mixins.client.AccessorItemColors": Internal.ClassInfo, "divinerpg.items.vanilla.ItemHordeHorn": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.RuleProcessor": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.LongCollection": Internal.ClassInfo, "com.mna.blocks.artifice.RunicTorchBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.bindings.UtilsWrapper": Internal.ClassInfo, "mods.railcraft.world.level.block.track.TrackBlock": Internal.ClassInfo, "com.aizistral.etherium.items.EtheriumScythe": Internal.ClassInfo, "net.minecraftforge.event.entity.EntityMobGriefingEvent": Internal.ClassInfo, "net.minecraft.world.level.chunk.LightChunk": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundEditBookPacket": Internal.ClassInfo, "mods.railcraft.world.level.block.track.actuator.SwitchTrackLeverBlock": Internal.ClassInfo, "elucent.eidolon.common.item.IManaRelatedItem": Internal.ClassInfo, "com.gregtechceu.gtceu.integration.kjs.events.GTOreVeinEventJS": Internal.ClassInfo, "java.util.PrimitiveIterator$OfLong": Internal.ClassInfo, "com.inventorypets.pets.petMeta": Internal.ClassInfo, "java.time.temporal.TemporalAmount": Internal.ClassInfo, "net.minecraftforge.fml.IModStateTransition$EventGenerator": Internal.ClassInfo, "mods.railcraft.world.level.block.track.outfitted.WhistleTrackBlock": Internal.ClassInfo, "net.minecraft.client.renderer.debug.BrainDebugRenderer": Internal.ClassInfo, "io.netty.util.Attribute": Internal.ClassInfo, "net.minecraftforge.client.event.RenderGuiOverlayEvent$Post": Internal.ClassInfo, "org.joml.AxisAngle4f": Internal.ClassInfo, "net.minecraft.core.WritableRegistry": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeMobEffectInstance": Internal.ClassInfo, "net.minecraft.world.level.block.CaveVinesPlantBlock": Internal.ClassInfo, "com.mojang.serialization.Decoder": Internal.ClassInfo, "org.joml.AxisAngle4d": Internal.ClassInfo, "it.unimi.dsi.fastutil.floats.Float2ShortFunction": Internal.ClassInfo, "divinerpg.blocks.base.BlockModLadder": Internal.ClassInfo, "mods.railcraft.world.item.SignalBlockSurveyorItem": Internal.ClassInfo, "net.minecraft.world.item.Items$1": Internal.ClassInfo, "net.minecraft.world.entity.npc.VillagerData": Internal.ClassInfo, "cc.abbie.emi_ores.mixin.accessor.WeightedStateProviderAccessor": Internal.ClassInfo, "com.mna.items.sorcery.bound.ItemBoundSword": Internal.ClassInfo, "com.yanny.ytech.configuration.block.PottersWheelBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.ShortUnaryOperator": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.items.AntiqueInkItem": Internal.ClassInfo, "divinerpg.items.base.block.ItemDemonFurnace": Internal.ClassInfo, "com.epherical.croptopia.items.CookingUtensil": Internal.ClassInfo, "com.enderio.core.common.item.ITabVariants": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.CrystalBlock": Internal.ClassInfo, "net.minecraft.world.item.MobBucketItem": Internal.ClassInfo, "net.minecraft.world.phys.shapes.DiscreteVoxelShape": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopepanel.FramedCompoundSlopePanelBlock": Internal.ClassInfo, "org.orecruncher.dsurround.mixinutils.IBlockStateExtended": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.api.IQuiverEntity": Internal.ClassInfo, "net.minecraft.resources.FileToIdConverter": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.LongSpliterator": Internal.ClassInfo, "com.mna.api.capabilities.CodexBreadcrumb": Internal.ClassInfo, "software.bernie.geckolib.core.animatable.model.CoreBakedGeoModel": Internal.ClassInfo, "com.mojang.datafixers.util.Either": Internal.ClassInfo, "net.minecraft.world.level.levelgen.flat.FlatLevelGeneratorSettings": Internal.ClassInfo, "org.lwjgl.system.Struct$StructValidation": Internal.ClassInfo, "org.violetmoon.zeta.capability.ZetaCapabilityManager": Internal.ClassInfo, "com.gregtechceu.gtceu.common.block.RubberLogBlock": Internal.ClassInfo, "org.apache.logging.log4j.core.config.ConfigurationScheduler": Internal.ClassInfo, "org.violetmoon.quark.mixin.mixins.IZetaItemExtensionsMixin": Internal.ClassInfo, "org.violetmoon.quark.api.event.UsageTickerEvent$GetCount": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.BismuthClusterBlock": Internal.ClassInfo, "net.minecraft.world.item.AirItem": Internal.ClassInfo, "net.minecraft.world.level.block.state.StateHolder": Internal.ClassInfo, "com.mojang.brigadier.StringReader": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.IntComparator": Internal.ClassInfo, "divinerpg.items.arcana.ItemGhostbane": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.FarmlandTrampledEventJS": Internal.ClassInfo, "net.minecraft.world.level.storage.WorldData": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.ObjectSpliterator": Internal.ClassInfo, "net.minecraftforge.client.event.EntityRenderersEvent$AddLayers": Internal.ClassInfo, "mods.railcraft.api.charge.Charge$Network": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.LazyComponentKJS": Internal.ClassInfo, "java.util.function.BinaryOperator": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.RandomBooleanSelectorFeature": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Reference2ReferenceFunction": Internal.ClassInfo, "net.minecraft.world.level.block.RespawnAnchorBlock": Internal.ClassInfo, "java.time.temporal.Temporal": Internal.ClassInfo, "org.violetmoon.zeta.item.IZetaItem": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.block.IRotatable": Internal.ClassInfo, "java.lang.ThreadLocal$SuppliedThreadLocal": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.particle_spawner.CreativeParticleSpawnerBlock": Internal.ClassInfo, "net.minecraft.network.chat.SignedMessageBody$Packed": Internal.ClassInfo, "cofh.core.client.particle.options.CylindricalParticleOptions": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.worldgen.generator.veins.DikeVeinGenerator": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.AbstractObject2FloatFunction": Internal.ClassInfo, "io.netty.buffer.ByteBufConvertible": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.curio.BaseCurioItem": Internal.ClassInfo, "com.mojang.blaze3d.vertex.BufferBuilder$SortState": Internal.ClassInfo, "net.minecraft.client.resources.sounds.SimpleSoundInstance": Internal.ClassInfo, "mods.railcraft.world.level.block.tank.TankGaugeBlock": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.CreativeSpellSrollItem": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.PaintbrushTriggered": Internal.ClassInfo, "net.minecraft.world.level.block.EndPortalFrameBlock": Internal.ClassInfo, "cofh.thermal.core.common.block.EnderiumGlassBlock": Internal.ClassInfo, "net.minecraft.world.scores.Team$CollisionRule": Internal.ClassInfo, "net.fabricmc.fabric.api.client.screen.v1.ScreenEvents$AfterTick": Internal.ClassInfo, "mods.railcraft.world.level.block.AbstractStrengthenedGlassBlock": Internal.ClassInfo, "com.tterrag.registrate.util.nullness.NonNullFunction": Internal.ClassInfo, "java.util.LinkedList": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.weathering.Weathering": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.LevelEventJS": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.Long2ObjectMap$Entry": Internal.ClassInfo, "net.minecraftforge.common.PlantType": Internal.ClassInfo, "java.nio.channels.ReadableByteChannel": Internal.ClassInfo, "techreborn.items.tool.industrial.IndustrialDrillItem": Internal.ClassInfo, "elucent.eidolon.common.block.CrucibleBlock": Internal.ClassInfo, "com.yanny.ytech.configuration.ToolType": Internal.ClassInfo, "net.minecraft.world.entity.projectile.DragonFireball": Internal.ClassInfo, "org.apache.logging.log4j.core.config.AppenderRef": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.FlaskItem": Internal.ClassInfo, "mods.railcraft.world.item.TrackKitItem": Internal.ClassInfo, "divinerpg.blocks.iceika.BlockThermalVent": Internal.ClassInfo, "xfacthd.framedblocks.common.block.cube.FramedChestBlock": Internal.ClassInfo, "java.util.AbstractMap": Internal.ClassInfo, "java.awt.PageAttributes$ColorType": Internal.ClassInfo, "net.minecraftforge.client.event.ClientPlayerNetworkEvent": Internal.ClassInfo, "appeng.api.implementations.blockentities.IWirelessAccessPoint": Internal.ClassInfo, "de.dafuqs.spectrum.items.TickAwareItem": Internal.ClassInfo, "org.apache.logging.log4j.core.config.plugins.util.PluginType": Internal.ClassInfo, "pokefenn.totemic.item.TotemKnifeItem": Internal.ClassInfo, "org.apache.maven.artifact.versioning.VersionRange": Internal.ClassInfo, "net.minecraft.client.gui.MapRenderer": Internal.ClassInfo, "net.irisshaders.iris.mixin.LevelRendererAccessor": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.api.crystalritual.CrystalRitual": Internal.ClassInfo, "net.minecraft.world.level.block.PressurePlateBlock$Sensitivity": Internal.ClassInfo, "vazkii.patchouli.api.IVariablesAvailableCallback": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.arcane.ArcaneShovelItem": Internal.ClassInfo, "software.bernie.geckolib.core.animation.AnimationController$ParticleKeyframeHandler": Internal.ClassInfo, "io.wispforest.owo.ui.event.CharTyped": Internal.ClassInfo, "net.minecraft.core.particles.ParticleOptions": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.material.event.PostMaterialEvent": Internal.ClassInfo, "com.gregtechceu.gtceu.api.capability.IControllable": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.RandomOffsetPlacement": Internal.ClassInfo, "net.minecraft.world.item.enchantment.VanishingCurseEnchantment": Internal.ClassInfo, "com.gregtechceu.gtceu.integration.kjs.recipe.components.CapabilityMapComponent": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.Long2IntMap$Entry": Internal.ClassInfo, "com.enderio.base.common.item.PaintedBlockItem": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.enchantments.EternalBindingCurse": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.SaltTorchItem": Internal.ClassInfo, "io.wispforest.owo.ui.event.MouseScroll": Internal.ClassInfo, "xaero.map.file.OldFormatSupport": Internal.ClassInfo, "mods.railcraft.api.signal.SignalAspect": Internal.ClassInfo, "net.minecraft.world.level.levelgen.carver.WorldCarver$CarveSkipChecker": Internal.ClassInfo, "mezz.jei.api.gui.ingredient.IRecipeSlotsView": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundPlayerCommandPacket$Action": Internal.ClassInfo, "net.minecraft.world.entity.monster.warden.WardenSpawnTracker": Internal.ClassInfo, "org.apache.logging.log4j.core.util.NanoClock": Internal.ClassInfo, "net.minecraft.world.item.trading.MerchantOffer": Internal.ClassInfo, "net.minecraft.client.gui.components.toasts.TutorialToast": Internal.ClassInfo, "dev.latvian.mods.rhino.mod.wrapper.AABBWrapper": Internal.ClassInfo, "dev.latvian.mods.kubejs.misc.MobEffectBuilder": Internal.ClassInfo, "dev.latvian.mods.kubejs.typings.desc.ObjectDescJS": Internal.ClassInfo, "com.mna.items.ItemWandOfCloning": Internal.ClassInfo, "net.minecraft.world.entity.animal.Panda$PandaLookAtPlayerGoal": Internal.ClassInfo, "com.mojang.brigadier.builder.LiteralArgumentBuilder": Internal.ClassInfo, "java.awt.MenuBar": Internal.ClassInfo, "com.mojang.blaze3d.vertex.VertexFormat": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slab.FramedDividedSlabBlock": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.client.particle.SparkleParticleType": Internal.ClassInfo, "com.aizistral.etherium.core.IEtheriumTool": Internal.ClassInfo, "de.dafuqs.spectrum.items.food.RestorationTeaItem": Internal.ClassInfo, "com.chailotl.particular.mixin.AccessorBillboardParticle": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.CountOnEveryLayerPlacement": Internal.ClassInfo, "java.lang.Double": Internal.ClassInfo, "net.irisshaders.iris.compat.sodium.mixin.shadow_map.SodiumWorldRendererAccessor": Internal.ClassInfo, "com.gregtechceu.gtceu.common.pipelike.duct.DuctPipeProperties": Internal.ClassInfo, "com.inventorypets.items.windows7": Internal.ClassInfo, "com.inventorypets.items.windows8": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer": Internal.ClassInfo, "de.dafuqs.spectrum.items.food.beverages.SimpleBeverageItem": Internal.ClassInfo, "net.minecraftforge.event.entity.item.ItemTossEvent": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.Short2BooleanMap$Entry": Internal.ClassInfo, "net.minecraft.world.inventory.LecternMenu": Internal.ClassInfo, "it.unimi.dsi.fastutil.booleans.Boolean2CharFunction": Internal.ClassInfo, "com.mna.items.artifice.charms.ItemContingencyCharm": Internal.ClassInfo, "dev.gigaherz.graph3.ContextDataFactory": Internal.ClassInfo, "com.gregtechceu.gtceu.api.pattern.FactoryBlockPattern": Internal.ClassInfo, "net.fabricmc.fabric.api.transfer.v1.transaction.TransactionContext$OuterCloseCallback": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.ExtractorBaseBlock": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.editor.ui.menu.MenuTab": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundPlayerCombatEndPacket": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.conditional.GemstoneOreBlock": Internal.ClassInfo, "net.fabricmc.fabric.api.transfer.v1.storage.StorageView": Internal.ClassInfo, "com.gregtechceu.gtceu.api.capability.recipe.IRecipeCapabilityHolder": Internal.ClassInfo, "de.dafuqs.spectrum.blocks.decoration.DecoStoneBlock": Internal.ClassInfo, "com.inventorypets.pets.petSun": Internal.ClassInfo, "com.mna.items.constructs.BellOfBidding": Internal.ClassInfo, "elucent.eidolon.common.block.WorktableBlock": Internal.ClassInfo, "net.minecraftforge.common.util.ITeleporter": Internal.ClassInfo, "cofh.lib.common.enchantment.EnchantmentCoFH": Internal.ClassInfo, "org.apache.logging.log4j.core.script.AbstractScript": Internal.ClassInfo, "net.minecraft.world.item.MapItem": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.config.ColorConfig": Internal.ClassInfo, "net.minecraftforge.network.NetworkEvent$GatherLoginPayloadsEvent": Internal.ClassInfo, "dev.latvian.mods.kubejs.loot.FunctionContainer": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.block.LightEmitterBlock": Internal.ClassInfo, "net.minecraft.world.level.biome.MultiNoiseBiomeSourceParameterList$Preset$SourceProvider": Internal.ClassInfo, "net.minecraft.world.item.WrittenBookItem": Internal.ClassInfo, "net.minecraft.world.entity.projectile.Snowball": Internal.ClassInfo, "java.lang.constant.Constable": Internal.ClassInfo, "com.inventorypets.items.solsticeBoots": Internal.ClassInfo, "net.minecraft.world.entity.monster.Zoglin": Internal.ClassInfo, "com.gregtechceu.gtceu.api.machine.multiblock.MultiblockControllerMachine": Internal.ClassInfo, "dev.latvian.mods.rhino.SymbolScriptable": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.ModifyRecipeResultCallback": Internal.ClassInfo, "xfacthd.framedblocks.common.data.BlockType": Internal.ClassInfo, "org.violetmoon.zeta.module.IDisableable": Internal.ClassInfo, "fzzyhmstrs.emi_loot.mixins.LocationPredicateAccessor": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundChatPacket": Internal.ClassInfo, "mod.maxbogomol.wizards_reborn.common.item.equipment.VialItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.util.Lazy": Internal.ClassInfo, "dev.ftb.mods.ftblibrary.core.DisplayInfoFTBL": Internal.ClassInfo, "net.minecraftforge.client.extensions.IForgeFont": Internal.ClassInfo, "com.yogpc.qp.machines.module.PumpPlusBlock": Internal.ClassInfo, "com.gregtechceu.gtceu.core.mixins.BlockPropertiesAccessor": Internal.ClassInfo, "javax.swing.text.StyleConstants$ParagraphConstants": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$Init$Pre": Internal.ClassInfo, "software.bernie.geckolib.core.animation.AnimatableManager$ControllerRegistrar": Internal.ClassInfo, "com.yogpc.qp.machines.DefaultConfig": Internal.ClassInfo, "com.mna.items.constructs.parts.legs.ConstructPartBasicLegs": Internal.ClassInfo, "net.minecraftforge.client.event.MovementInputUpdateEvent": Internal.ClassInfo, "org.violetmoon.zeta.Zeta": Internal.ClassInfo, "io.wispforest.owo.network.OwoClientConnectionExtension": Internal.ClassInfo, "com.chunksending.IChunksendingPlayer": Internal.ClassInfo, "appeng.util.SettingsFrom": Internal.ClassInfo, "com.aizistral.enigmaticlegacy.items.MegaSponge": Internal.ClassInfo, "mods.railcraft.world.level.block.steamboiler.SteamBoilerTankBlock$ConnectionType": Internal.ClassInfo, "com.mojang.datafixers.Products$P13": Internal.ClassInfo, "com.mojang.datafixers.Products$P14": Internal.ClassInfo, "appeng.items.storage.SpatialStorageCellItem": Internal.ClassInfo, "com.mojang.datafixers.Products$P11": Internal.ClassInfo, "com.mojang.datafixers.Products$P12": Internal.ClassInfo, "net.minecraft.world.level.block.entity.LidBlockEntity": Internal.ClassInfo, "net.minecraftforge.client.event.ClientPlayerNetworkEvent$LoggingIn": Internal.ClassInfo, "com.mojang.datafixers.Products$P10": Internal.ClassInfo, "net.minecraft.server.packs.repository.Pack$Position": Internal.ClassInfo, "appeng.thirdparty.fabric.SpriteFinder": Internal.ClassInfo, "biomesoplenty.common.block.HangingStrandBottomBlock": Internal.ClassInfo, "divinerpg.blocks.vanilla.BlockColdHellfireSponge": Internal.ClassInfo, "net.fabricmc.fabric.api.item.v1.CustomDamageHandler": Internal.ClassInfo, "com.mojang.datafixers.Products$P15": Internal.ClassInfo, "net.minecraftforge.common.util.Lazy": Internal.ClassInfo, "appeng.items.storage.CreativeCellItem": Internal.ClassInfo, "com.mojang.datafixers.Products$P16": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.chemical.material.properties.BlastProperty": Internal.ClassInfo, "de.dafuqs.spectrum.items.trinkets.RadiancePinItem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.stateproviders.BlockStateProvider": Internal.ClassInfo, "java.awt.datatransfer.FlavorEvent": Internal.ClassInfo, "net.minecraft.world.entity.ai.control.MoveControl": Internal.ClassInfo, "com.gregtechceu.gtceu.utils.SupplierMemoizer$MemoizedSupplier": Internal.ClassInfo, "com.tterrag.registrate.builders.Builder": Internal.ClassInfo, "org.orecruncher.dsurround.config.data.BlockConfigRule": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.AbstractReferenceSet": Internal.ClassInfo, "javax.swing.Icon": Internal.ClassInfo, "techreborn.blocks.misc.BlockReinforcedGlass": Internal.ClassInfo, "net.minecraft.world.level.block.BushBlock": Internal.ClassInfo, "com.yanny.ytech.configuration.block.MillstoneBlock": Internal.ClassInfo, "net.minecraft.world.entity.animal.Chicken": Internal.ClassInfo, "net.minecraft.nbt.CompoundTag": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.BasaltPillarFeature": Internal.ClassInfo, "org.apache.logging.log4j.core.layout.Encoder": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeBlock": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slab.FramedCheckeredSlabBlock": Internal.ClassInfo, "biomesoplenty.common.block.DoubleWaterPlantBlock": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slopeslab.FramedFlatElevatedSlopeSlabCornerBlock": Internal.ClassInfo, "com.github.minecraftschurlimods.potionbundles.SplashPotionBundle": Internal.ClassInfo, "net.minecraft.client.renderer.blockentity.BlockEntityRenderDispatcher": Internal.ClassInfo, "net.minecraft.world.entity.npc.WanderingTrader": Internal.ClassInfo, "appeng.api.storage.cells.StorageCell": Internal.ClassInfo, "net.minecraft.world.level.block.BaseRailBlock": Internal.ClassInfo, "net.minecraft.client.quickplay.QuickPlayLog": Internal.ClassInfo, "net.minecraft.world.level.block.entity.BeaconBlockEntity$BeaconBeamSection": Internal.ClassInfo, "dev.ftb.mods.ftbquests.item.MissingItem": Internal.ClassInfo, "mods.railcraft.world.item.ChargeMeterItem": Internal.ClassInfo, "snownee.lychee.util.Pair": Internal.ClassInfo, "net.mehvahdjukaar.moonlight.api.client.model.forge.ExtraModelDataImpl": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.DiskFeature": Internal.ClassInfo, "com.mna.api.recipes.IManaweavePattern": Internal.ClassInfo, "net.minecraft.world.level.block.BrushableBlock": Internal.ClassInfo, "net.minecraft.world.level.chunk.LightChunkGetter": Internal.ClassInfo, "lol.bai.badpackets.api.PacketSender": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.special.SpecialRecipeSerializerManager": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundSetBeaconPacket": Internal.ClassInfo, "xfacthd.framedblocks.common.block.slope.FramedDoubleCornerBlock": Internal.ClassInfo, "de.dafuqs.spectrum.items.map.ArtisansAtlasItem": Internal.ClassInfo, "com.mna.items.base.ItemBagBase": Internal.ClassInfo, "net.minecraft.util.ExtraCodecs$TagOrElementLocation": Internal.ClassInfo, "com.mojang.serialization.DataResult$PartialResult": Internal.ClassInfo, "net.minecraft.world.level.block.WeatheringCopperStairBlock": Internal.ClassInfo, "net.minecraftforge.common.crafting.conditions.ICondition$IContext": Internal.ClassInfo, "com.gregtechceu.gtceu.api.data.medicalcondition.Symptom": Internal.ClassInfo, "de.dafuqs.spectrum.items.tools.GlassArrowVariant": Internal.ClassInfo, "net.minecraft.util.valueproviders.WeightedListInt": Internal.ClassInfo, "com.lowdragmc.lowdraglib.gui.widget.Widget": Internal.ClassInfo, "net.minecraft.world.item.ElytraItem": Internal.ClassInfo, "xfacthd.framedblocks.common.block.pillar.FramedDoubleThreewayCornerPillarBlock": Internal.ClassInfo, "com.lowdragmc.lowdraglib.client.renderer.IRenderer": Internal.ClassInfo, "net.minecraft.client.tutorial.Tutorial": Internal.ClassInfo, "org.violetmoon.zeta.item.ZetaHangingSignItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.player.InventoryEventJS": Internal.ClassInfo, "net.mehvahdjukaar.supplementaries.common.items.SliceMapItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.gui.chest.ChestMenuClickEvent$Callback": Internal.ClassInfo, "cofh.lib.api.block.IDismantleable": Internal.ClassInfo, "pokefenn.totemic.block.DummyTipiBlock": Internal.ClassInfo}) & (Internal.Map<string, Internal.ClassInfo>);
    }
    type ClassInfo_ = ClassInfo;
    abstract class ScreenEvent$MouseButtonPressed extends Internal.ScreenEvent$MouseInput {
        constructor()
        constructor(arg0: Internal.Screen_, arg1: number, arg2: number, arg3: number)
        getResult(): Internal.Event$Result;
        setCanceled(arg0: boolean): void;
        getClass(): typeof any;
        toString(): string;
        getButton(): number;
        setPhase(arg0: Internal.EventPriority_): void;
        getMouseX(): number;
        getScreen(): Internal.Screen;
        notifyAll(): void;
        getMouseY(): number;
        isCanceled(): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        hasResult(): boolean;
        setResult(arg0: Internal.Event$Result_): void;
        hashCode(): number;
        isCancelable(): boolean;
        wait(): void;
        getListenerList(): Internal.ListenerList;
        wait(arg0: number): void;
        getPhase(): Internal.EventPriority;
        equals(arg0: any): boolean;
        get result(): Internal.Event$Result
        set canceled(arg0: boolean)
        get class(): typeof any
        get button(): number
        set phase(arg0: Internal.EventPriority_)
        get mouseX(): number
        get screen(): Internal.Screen
        get mouseY(): number
        get canceled(): boolean
        set result(arg0: Internal.Event$Result_)
        get cancelable(): boolean
        get listenerList(): Internal.ListenerList
        get phase(): Internal.EventPriority
    }
    type ScreenEvent$MouseButtonPressed_ = ScreenEvent$MouseButtonPressed;
    class ServerOpList extends Internal.StoredUserList<Internal.GameProfile, Internal.ServerOpListEntry> {
        constructor(arg0: Internal.File_)
        getClass(): typeof any;
        getEntries(): Internal.Collection<Internal.ServerOpListEntry>;
        remove(arg0: Internal.GameProfile_): void;
        isEmpty(): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        contains(arg0: Internal.GameProfile_): boolean;
        "getKeyForUser(com.mojang.authlib.GameProfile)"(arg0: Internal.GameProfile_): string;
        "remove(net.minecraft.server.players.StoredUserEntry)"(arg0: Internal.StoredUserEntry_<Internal.GameProfile>): void;
        get(arg0: Internal.GameProfile_): Internal.ServerOpListEntry;
        "getKeyForUser(java.lang.Object)"(arg0: any): string;
        add(arg0: Internal.ServerOpListEntry_): void;
        load(): void;
        "remove(com.mojang.authlib.GameProfile)"(arg0: Internal.GameProfile_): void;
        toString(): string;
        notifyAll(): void;
        remove(arg0: Internal.StoredUserEntry_<Internal.GameProfile>): void;
        getKeyForUser(arg0: any): string;
        getKeyForUser(arg0: Internal.GameProfile_): string;
        createEntry(arg0: Internal.JsonObject_): Internal.StoredUserEntry<Internal.GameProfile>;
        canBypassPlayerLimit(arg0: Internal.GameProfile_): boolean;
        save(): void;
        getFile(): Internal.File;
        hashCode(): number;
        wait(): void;
        getUserList(): string[];
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        get class(): typeof any
        get entries(): Internal.Collection<Internal.ServerOpListEntry>
        get empty(): boolean
        get file(): Internal.File
        get userList(): string[]
    }
    type ServerOpList_ = ServerOpList;
    class RepeatTickModuleItem extends Internal.QPItem implements Internal.QuarryModuleProvider$Item {
        constructor()
        getDrinkingSound(): Internal.SoundEvent;
        getShareTag(arg0: Internal.ItemStack_): Internal.CompoundTag;
        isEnderMask(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.EnderMan_): boolean;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        allowContinuingBlockBreaking(player: Internal.Player_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        getDestroySpeed(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): number;
        moonlight$addAdditionalBehavior(placementOverride: Internal.AdditionalItemPlacement_): void;
        isFireResistant(): boolean;
        getEnchantmentValue(arg0: Internal.ItemStack_): number;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        getFoodProperties(): Internal.FoodProperties;
        moonlight$getClientAnimationExtension(): any;
        isBookEnchantable(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        asItem(): Internal.Item;
        onDroppedByPlayer(arg0: Internal.ItemStack_, arg1: Internal.Player_): boolean;
        getTypeData(): Internal.CompoundTag;
        getDefaultInstance(): Internal.ItemStack;
        fabric_setCustomDamageHandler(handler: Internal.CustomDamageHandler_): void;
        canContinueUsing(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        setMaxStackSize(arg0: number): void;
        getBarWidth(arg0: Internal.ItemStack_): number;
        setMaxDamage(arg0: number): void;
        getBarColor(arg0: Internal.ItemStack_): number;
        getOrCreateDescriptionId(): string;
        getItem(): Internal.Item;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        onLeftClickEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): boolean;
        removeAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_): void;
        asIngredient(): Internal.Ingredient;
        /**
         * @deprecated
        */
        hasCraftingRemainingItem(): boolean;
        getClass(): typeof any;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        static byId(arg0: number): Internal.Item;
        getRenderPropertiesInternal(): any;
        interactLivingEntity(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.LivingEntity_, arg3: Internal.InteractionHand_): InteractionResult;
        moonlight$getAdditionalBehavior(): Internal.AdditionalItemPlacement;
        moonlight$setClientAnimationExtension(obj: any): void;
        getCraftingRemainingItem(arg0: Internal.ItemStack_): Internal.ItemStack;
        onArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        damageItem<T extends Internal.LivingEntity>(arg0: Internal.ItemStack_, arg1: number, arg2: T, arg3: Internal.Consumer_<T>): number;
        setCraftingRemainingItemFTBL(arg0: Internal.Item_): void;
        getTooltipImage(arg0: Internal.ItemStack_): Internal.Optional<Internal.TooltipComponent>;
        handler$dfl000$revelationary$getCloakedName(stack: Internal.ItemStack_, callbackInfoReturnable: Internal.CallbackInfoReturnable_<any>): void;
        isEdible(): boolean;
        getAttributeModifiers(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getAttributes(attribute: Internal.Attribute_): Internal.List<Internal.AttributeModifier>;
        use(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.InteractionHand_): Internal.InteractionResultHolder<Internal.ItemStack>;
        getAllEnchantments(arg0: Internal.ItemStack_): Internal.Map<Internal.Enchantment, number>;
        wait(arg0: number): void;
        cardinal_createComponents(stack: Internal.ItemStack_): Internal.ComponentContainer;
        isFoil(arg0: Internal.ItemStack_): boolean;
        "getAttributeModifiers(net.minecraft.world.entity.EquipmentSlot,net.minecraft.world.item.ItemStack)"(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        isDamageable(arg0: Internal.ItemStack_): boolean;
        useOnRelease(arg0: Internal.ItemStack_): boolean;
        canAttackBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        fabric_getEquipmentSlotProvider(): Internal.EquipmentSlotProvider;
        canGrindstoneRepair(arg0: Internal.ItemStack_): boolean;
        setDigSpeed(speed: number): void;
        getDescriptionId(arg0: Internal.ItemStack_): string;
        releaseUsing(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_, arg3: number): void;
        setAttackSpeed(attackSpeed: number): void;
        getUseDuration(arg0: Internal.ItemStack_): number;
        onStopUsing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): void;
        isNotReplaceableByPickAction(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: number): boolean;
        owo$tab(): number;
        isDamaged(arg0: Internal.ItemStack_): boolean;
        canFitInsideContainerItems(): boolean;
        wait(): void;
        "setFoodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        setArmorKnockbackResistance(knockbackResistance: number): void;
        setFireResistant(arg0: boolean): void;
        creativeTabItem(): Internal.List<Internal.ItemStack>;
        hasCustomEntity(arg0: Internal.ItemStack_): boolean;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientItemExtensions>): void;
        mineBlock(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.BlockState_, arg3: BlockPos_, arg4: Internal.LivingEntity_): boolean;
        setNameKey(arg0: string): void;
        readShareTag(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): void;
        getEquipmentSlot(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getLightColor(player: Internal.Player_, stack: Internal.ItemStack_): Vector3f;
        getName(arg0: Internal.ItemStack_): net.minecraft.network.chat.Component;
        /**
         * @deprecated
        */
        getDefaultAttributeModifiers(arg0: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        arch$registryName(): ResourceLocation;
        getIdLocation(): ResourceLocation;
        getAttributeModifiers(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        canElytraFly(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        createEntity(arg0: Internal.Level_, arg1: Internal.Entity_, arg2: Internal.ItemStack_): Internal.Entity;
        "getAttributeModifiers(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.EquipmentSlot)"(stack: Internal.ItemStack_, slot: Internal.EquipmentSlot_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        getEntityLifespan(arg0: Internal.ItemStack_, arg1: Internal.Level_): number;
        inventoryTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Entity_, arg3: number, arg4: boolean): void;
        allowNbtUpdateAnimation(player: Internal.Player_, hand: Internal.InteractionHand_, oldStack: Internal.ItemStack_, newStack: Internal.ItemStack_): boolean;
        setDamage(arg0: Internal.ItemStack_, arg1: number): void;
        hasCraftingRemainingItem(arg0: Internal.ItemStack_): boolean;
        shouldOverrideMultiplayerNbt(): boolean;
        fabric_getCachedItemVariant(): Internal.ItemVariant;
        static getId(arg0: Internal.Item_): number;
        overrideOtherStackedOnMe(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_, arg5: Internal.SlotAccess_): boolean;
        fabric_getCustomDamageHandler(): Internal.CustomDamageHandler;
        getModule(arg0: Internal.ItemStack_): Internal.QuarryModule;
        setFoodProperties(arg0: Internal.FoodProperties_): void;
        setCraftingRemainder(arg0: Internal.Item_): void;
        static getPlayerPOVHitResult(arg0: Internal.Level_, arg1: Internal.Player_, arg2: Internal.ClipContext$Fluid_): Internal.BlockHitResult;
        addAttribute(attribute: Internal.Attribute_, uuid: Internal.UUID_, name: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        equals(arg0: any): boolean;
        setRarity(arg0: Internal.Rarity_): void;
        getRecipeRemainder(stack: Internal.ItemStack_): Internal.ItemStack;
        getBurnTime(arg0: Internal.ItemStack_, arg1: Internal.RecipeType_<any>): number;
        /**
         * @deprecated
        */
        onDestroyed(arg0: Internal.ItemEntity_): void;
        onItemUseFirst(arg0: Internal.ItemStack_, arg1: Internal.UseOnContext_): InteractionResult;
        onCraftedBy(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Player_): void;
        isComplex(): boolean;
        isPiglinCurrency(arg0: Internal.ItemStack_): boolean;
        isCorrectToolForDrops(arg0: Internal.ItemStack_, arg1: Internal.BlockState_): boolean;
        canDisableShield(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: Internal.LivingEntity_, arg3: Internal.LivingEntity_): boolean;
        onUseTick(arg0: Internal.Level_, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): void;
        canBeHurtBy(arg0: DamageSource_): boolean;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): boolean;
        fabric_setEquipmentSlotProvider(equipmentSlotProvider: Internal.EquipmentSlotProvider_): void;
        getDescriptionId(): string;
        getUseAnimation(arg0: Internal.ItemStack_): Internal.UseAnim;
        isValidRepairItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getXpRepairRatio(arg0: Internal.ItemStack_): number;
        zeta$setHumanoidArmorModel(arg0: Internal.HumanoidArmorModelGetter_): void;
        getCreativeTab(): string;
        initCapabilities(arg0: Internal.ItemStack_, arg1: Internal.CompoundTag_): Internal.ICapabilityProvider;
        getDefaultTooltipHideFlags(arg0: Internal.ItemStack_): number;
        getCreatorModId(arg0: Internal.ItemStack_): string;
        setBurnTime(i: number): void;
        getFoodProperties(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): Internal.FoodProperties;
        onDestroyed(arg0: Internal.ItemEntity_, arg1: DamageSource_): void;
        getItemBuilder(): Internal.ItemBuilder;
        makesPiglinsNeutral(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxDamage(): number;
        getDescription(): net.minecraft.network.chat.Component;
        owo$stackGenerator(): Internal.BiConsumer<any, any>;
        canPerformAction(arg0: Internal.ItemStack_, arg1: Internal.ToolAction_): boolean;
        onEntityItemUpdate(arg0: Internal.ItemStack_, arg1: Internal.ItemEntity_): boolean;
        useOn(arg0: Internal.UseOnContext_): InteractionResult;
        getRarity(arg0: Internal.ItemStack_): Internal.Rarity;
        setItemBuilder(b: Internal.ItemBuilder_): void;
        shouldCauseBlockBreakReset(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        handler$ebb000$connectormod$redirectIsPiglinCurrency(arg0: Internal.ItemStack_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        setAttackDamage(attackDamage: number): void;
        arch$holder(): Internal.Holder<Internal.Item>;
        getArmorTexture(arg0: Internal.ItemStack_, arg1: Internal.Entity_, arg2: Internal.EquipmentSlot_, arg3: string): string;
        toString(): string;
        /**
         * @deprecated
        */
        getEnchantmentValue(): number;
        setArmorToughness(armorToughness: number): void;
        notifyAll(): void;
        modifyReturnValue$ffm000$quark$overrideOtherStackedOnMe(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_, arg3: Internal.Slot_, arg4: Internal.ClickAction_, arg5: Internal.Player_, arg6: Internal.SlotAccess_): boolean;
        getId(): string;
        handler$fbm000$moonlight$initializeClient(consumer: Internal.Consumer_<any>, ci: Internal.CallbackInfo_): void;
        isEnchantable(arg0: Internal.ItemStack_): boolean;
        getSweepHitBox(arg0: Internal.ItemStack_, arg1: Internal.Player_, arg2: Internal.Entity_): Internal.AABB;
        getEnchantmentLevel(arg0: Internal.ItemStack_, arg1: Internal.Enchantment_): number;
        isSuitableFor(stack: Internal.ItemStack_, state: Internal.BlockState_): boolean;
        getDigSpeed(): number;
        setTier(c: Internal.Consumer_<Internal.MutableToolTier>): void;
        overrideStackedOnOther(arg0: Internal.ItemStack_, arg1: Internal.Slot_, arg2: Internal.ClickAction_, arg3: Internal.Player_): boolean;
        setFoodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>): void;
        onBlockStartBreak(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: Internal.Player_): boolean;
        getMaxDamage(arg0: Internal.ItemStack_): number;
        elytraFlightTick(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: number): boolean;
        "setFoodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_): void;
        isRepairable(arg0: Internal.ItemStack_): boolean;
        puzzleslib$setRenderProperties(arg0: any): void;
        notify(): void;
        isBarVisible(arg0: Internal.ItemStack_): boolean;
        canWalkOnPowderedSnow(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getMaxStackSize(): number;
        /**
         * @deprecated
        */
        static byBlock(arg0: Internal.Block_): Internal.Item;
        zeta$setBlockEntityWithoutLevelRenderer(arg0: Internal.BlockEntityWithoutLevelRenderer_): void;
        handler$cog000$croptopia$overrideConstructor(arg0: Internal.Item$Properties_, arg1: Internal.CallbackInfo_): void;
        getHighlightTip(arg0: Internal.ItemStack_, arg1: net.minecraft.network.chat.Component_): net.minecraft.network.chat.Component;
        isCorrectToolForDrops(arg0: Internal.BlockState_): boolean;
        verifyTagAfterLoad(arg0: Internal.CompoundTag_): void;
        canEquip(arg0: Internal.ItemStack_, arg1: Internal.EquipmentSlot_, arg2: Internal.Entity_): boolean;
        finishUsingItem(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.LivingEntity_): Internal.ItemStack;
        getEatingSound(): Internal.SoundEvent;
        owo$setGroup(group: Internal.CreativeModeTab_): void;
        puzzleslib$getRenderProperties(): any;
        canBeDepleted(): boolean;
        getDamage(arg0: Internal.ItemStack_): number;
        wait(arg0: number, arg1: number): void;
        getMod(): string;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Item>;
        setArmorProtection(armorProtection: number): void;
        getLightEmission(player: Internal.Player_, stack: Internal.ItemStack_): number;
        onEntitySwing(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): boolean;
        owo$group(): Internal.CreativeModeTab;
        hurtEnemy(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_, arg2: Internal.LivingEntity_): boolean;
        /**
         * @deprecated
        */
        getCraftingRemainingItem(): Internal.Item;
        getTypeItemStackKey(): Internal.ItemStackKey;
        getMaxStackSize(arg0: Internal.ItemStack_): number;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        doesSneakBypassUse(arg0: Internal.ItemStack_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        getRegistryName(): ResourceLocation;
        onHorseArmorTick(arg0: Internal.ItemStack_, arg1: Internal.Level_, arg2: Internal.Mob_): void;
        shouldCauseReequipAnimation(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_, arg2: boolean): boolean;
        modifyReturnValue$ffm000$quark$overrideStackedOnOther(arg0: boolean, arg1: Internal.ItemStack_, arg2: Internal.Slot_, arg3: Internal.ClickAction_, arg4: Internal.Player_): boolean;
        get drinkingSound(): Internal.SoundEvent
        get fireResistant(): boolean
        /**
         * @deprecated
        */
        get foodProperties(): Internal.FoodProperties
        get typeData(): Internal.CompoundTag
        get defaultInstance(): Internal.ItemStack
        set maxStackSize(arg0: number)
        set maxDamage(arg0: number)
        get orCreateDescriptionId(): string
        get item(): Internal.Item
        get class(): typeof any
        get renderPropertiesInternal(): any
        set craftingRemainingItemFTBL(arg0: Internal.Item_)
        get edible(): boolean
        set digSpeed(speed: number)
        set attackSpeed(attackSpeed: number)
        set "foodProperties(java.util.function.Consumer)"(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set armorKnockbackResistance(knockbackResistance: number)
        set fireResistant(arg0: boolean)
        set nameKey(arg0: string)
        get idLocation(): ResourceLocation
        set foodProperties(arg0: Internal.FoodProperties_)
        set craftingRemainder(arg0: Internal.Item_)
        set rarity(arg0: Internal.Rarity_)
        get complex(): boolean
        get descriptionId(): string
        get creativeTab(): string
        set burnTime(i: number)
        get itemBuilder(): Internal.ItemBuilder
        /**
         * @deprecated
        */
        get maxDamage(): number
        get description(): net.minecraft.network.chat.Component
        set itemBuilder(b: Internal.ItemBuilder_)
        set attackDamage(attackDamage: number)
        /**
         * @deprecated
        */
        get enchantmentValue(): number
        set armorToughness(armorToughness: number)
        get id(): string
        get digSpeed(): number
        set tier(c: Internal.Consumer_<Internal.MutableToolTier>)
        set foodProperties(consumer: Internal.Consumer_<Internal.FoodBuilder>)
        set "foodProperties(net.minecraft.world.food.FoodProperties)"(arg0: Internal.FoodProperties_)
        /**
         * @deprecated
        */
        get maxStackSize(): number
        get eatingSound(): Internal.SoundEvent
        get mod(): string
        set armorProtection(armorProtection: number)
        /**
         * @deprecated
        */
        get craftingRemainingItem(): Internal.Item
        get typeItemStackKey(): Internal.ItemStackKey
        get registryName(): ResourceLocation
        static readonly NAME: ("repeat_tick_module") & (string);
    }
    type RepeatTickModuleItem_ = RepeatTickModuleItem;
    class HorizontalWaterloggableBlock extends Internal.HorizontalBlockBase implements Internal.SimpleWaterloggedBlock {
        constructor(arg0: Internal.BlockBehaviour$Properties_)
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getSettings(): Internal.BlockBehaviour$Properties;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        getTypeData(): Internal.CompoundTag;
        setFriction(arg0: number): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getSpeedFactor(): number;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        playerDestroy(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Player_): void;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Internal.Player_): Internal.ItemStack;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        getRenderPropertiesInternal(): any;
        needsDynamicNodeTypeCheck(): boolean;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        setShape(arg0: Internal.VoxelShape_): Internal.BlockBase;
        setRequiresTool(v: boolean): void;
        asBlock(): Internal.Block;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        puzzleslib$setItem(arg0: Internal.Item_): void;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        breakBlock(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        wait(arg0: number): void;
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        /**
         * @deprecated
        */
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        lychee$isTickable(): boolean;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        placeLiquid(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.FluidState_): boolean;
        spawnDestroyParticles(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_): void;
        wait(): void;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Internal.Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(shape: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        getPickupSound(arg0: Internal.BlockState_): Internal.Optional<Internal.SoundEvent>;
        setIsRandomlyTicking(arg0: boolean): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        registerDefaultState(arg0: Internal.BlockState_): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        /**
         * @deprecated
        */
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        /**
         * @deprecated
        */
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        getPickupSound(): Internal.Optional<Internal.SoundEvent>;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        isAir(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        needsDynamicBurningCheck(): boolean;
        getDescriptionId(): string;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        handler$bob000$radium$postConstruct(p_i241196_1_: Internal.BlockBehaviour$Properties_, ci: Internal.CallbackInfo_): void;
        tryDropExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: Internal.ItemStack_, arg3: Internal.IntProvider_): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        handler$eok000$particular$spawnParticles(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, random: Internal.RandomSource_, ci: Internal.CallbackInfo_): void;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        setDrops(arg0: ResourceLocation_): void;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        pickupBlock(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        getBlockProperties(): Internal.BlockBehaviour$Properties;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getShapeForEachState(arg0: Internal.Function_<Internal.BlockState, Internal.VoxelShape>): Internal.ImmutableMap<Internal.BlockState, Internal.VoxelShape>;
        getId(): string;
        getLootTable(): ResourceLocation;
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        getFriction(): number;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        createBlockStateDefinition(arg0: Internal.StateDefinition$Builder_<Internal.Block, Internal.BlockState>): void;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        notify(): void;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        handler$dji000$spectrum$afterBreak(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        setDestroySpeed(v: number): void;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        handler$zbh000$additionalentityattributes$additionalEntityAttributes$saveBreakingPlayer(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        arch$holder(): Internal.Holder<Internal.Block>;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        canPlaceLiquid(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Fluid_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): void;
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        lychee$setTickable(arg0: boolean): void;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        get settings(): Internal.BlockBehaviour$Properties
        /**
         * @deprecated
        */
        get explosionResistance(): number
        get typeData(): Internal.CompoundTag
        set friction(arg0: number)
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set shape(arg0: Internal.VoxelShape_)
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get pickupSound(): Internal.Optional<Internal.SoundEvent>
        get descriptionId(): string
        get jumpFactor(): number
        set drops(arg0: ResourceLocation_)
        set speedFactor(arg0: number)
        get blockProperties(): Internal.BlockBehaviour$Properties
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get mod(): string
        set hasCollision(arg0: boolean)
    }
    type HorizontalWaterloggableBlock_ = HorizontalWaterloggableBlock;
    class EnderChestBlock extends Internal.AbstractChestBlock<Internal.EnderChestBlockEntity> implements Internal.SimpleWaterloggedBlock {
        constructor(arg0: Internal.BlockBehaviour$Properties_)
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getSettings(): Internal.BlockBehaviour$Properties;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        getTypeData(): Internal.CompoundTag;
        setFriction(arg0: number): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getSpeedFactor(): number;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        playerDestroy(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        mfix$setDelegate(registryKey: Internal.ResourceKey_<any>, holder: Internal.Holder$Reference_<any>): void;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Player_): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Internal.Player_): Internal.ItemStack;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        newBlockEntity(arg0: BlockPos_, arg1: Internal.BlockState_): Internal.BlockEntity;
        mfix$getDelegate(registryKey: Internal.ResourceKey_<any>): Internal.Holder$Reference<any>;
        getRenderPropertiesInternal(): any;
        needsDynamicNodeTypeCheck(): boolean;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        setRequiresTool(v: boolean): void;
        asBlock(): Internal.Block;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        puzzleslib$setItem(arg0: Internal.Item_): void;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static createTickerHelper<E extends Internal.BlockEntity, A extends Internal.BlockEntity>(arg0: Internal.BlockEntityType_<A>, arg1: Internal.BlockEntityType_<E>, arg2: Internal.BlockEntityTicker_<E>): Internal.BlockEntityTicker<A>;
        lychee$isTickable(): boolean;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        getTicker<T extends Internal.BlockEntity>(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockEntityType_<T>): Internal.BlockEntityTicker<T>;
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        placeLiquid(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.FluidState_): boolean;
        spawnDestroyParticles(arg0: Internal.Level_, arg1: Internal.Player_, arg2: BlockPos_, arg3: Internal.BlockState_): void;
        wait(): void;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Internal.Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(shape: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        getPickupSound(arg0: Internal.BlockState_): Internal.Optional<Internal.SoundEvent>;
        setIsRandomlyTicking(arg0: boolean): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        registerDefaultState(arg0: Internal.BlockState_): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        /**
         * @deprecated
        */
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        getPickupSound(): Internal.Optional<Internal.SoundEvent>;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        isAir(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        needsDynamicBurningCheck(): boolean;
        getDescriptionId(): string;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        handler$bob000$radium$postConstruct(p_i241196_1_: Internal.BlockBehaviour$Properties_, ci: Internal.CallbackInfo_): void;
        tryDropExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: Internal.ItemStack_, arg3: Internal.IntProvider_): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        handler$eok000$particular$spawnParticles(state: Internal.BlockState_, world: Internal.Level_, pos: BlockPos_, random: Internal.RandomSource_, ci: Internal.CallbackInfo_): void;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        combine(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: boolean): Internal.DoubleBlockCombiner$NeighborCombineResult<Internal.ChestBlockEntity>;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        setDrops(arg0: ResourceLocation_): void;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        pickupBlock(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        getBlockProperties(): Internal.BlockBehaviour$Properties;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getShapeForEachState(arg0: Internal.Function_<Internal.BlockState, Internal.VoxelShape>): Internal.ImmutableMap<Internal.BlockState, Internal.VoxelShape>;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        getFriction(): number;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        createBlockStateDefinition(arg0: Internal.StateDefinition$Builder_<Internal.Block, Internal.BlockState>): void;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        notify(): void;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        handler$dji000$spectrum$afterBreak(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        setDestroySpeed(v: number): void;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Player_): boolean;
        handler$zbh000$additionalentityattributes$additionalEntityAttributes$saveBreakingPlayer(world: Internal.Level_, player: Internal.Player_, pos: BlockPos_, state: Internal.BlockState_, blockEntity: Internal.BlockEntity_, stack: Internal.ItemStack_, callbackInfo: Internal.CallbackInfo_): void;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getListener<T extends Internal.BlockEntity>(arg0: Internal.ServerLevel_, arg1: T): Internal.GameEventListener;
        arch$holder(): Internal.Holder<Internal.Block>;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        canPlaceLiquid(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Fluid_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<net.minecraft.network.chat.Component>, arg3: Internal.TooltipFlag_): void;
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Player_): void;
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        lychee$setTickable(arg0: boolean): void;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        get settings(): Internal.BlockBehaviour$Properties
        /**
         * @deprecated
        */
        get explosionResistance(): number
        get typeData(): Internal.CompoundTag
        set friction(arg0: number)
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get pickupSound(): Internal.Optional<Internal.SoundEvent>
        get descriptionId(): string
        get jumpFactor(): number
        set drops(arg0: ResourceLocation_)
        set speedFactor(arg0: number)
        get blockProperties(): Internal.BlockBehaviour$Properties
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get mod(): string
        set hasCollision(arg0: boolean)
        static readonly SHAPE: (Internal.VoxelShapeSimpleCube) & (Internal.VoxelShape);
        static readonly WATERLOGGED: (Internal.BooleanProperty) & (Internal.BooleanProperty);
        static readonly FACING: (Internal.DirectionProperty) & (Internal.DirectionProperty);
    }
    type EnderChestBlock_ = EnderChestBlock;
    interface IRoutePath <T> {
        abstract getTargetFacing(): Internal.Direction;
        abstract getDistance(): number;
        getTargetCapability<I>(capability: Internal.Capability_<I>, level: Internal.Level_): I;
        abstract getTargetPipePos(): BlockPos;
        getTargetBlockEntity(level: Internal.Level_): Internal.BlockEntity;
        abstract getHandler(arg0: Internal.Level_): T;
        get targetFacing(): Internal.Direction
        get distance(): number
        get targetPipePos(): BlockPos
    }
    type IRoutePath_<T> = IRoutePath<T>;
    class LightningArcParticleData implements Internal.ParticleOptions {
        constructor(arg0: Vec3d_)
        getClass(): typeof any;
        hashCode(): number;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        writeToString(): string;
        getType(): Internal.ParticleType<any>;
        wait(arg0: number): void;
        writeToNetwork(arg0: Internal.FriendlyByteBuf_): void;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
        get type(): Internal.ParticleType<any>
        static readonly DESERIALIZER: Internal.ParticleOptions$Deserializer<Internal.LightningArcParticleData>;
        readonly target: Vec3d;
    }
    type LightningArcParticleData_ = LightningArcParticleData;
}
declare namespace io.netty.util.concurrent {
    interface Future <V> extends Internal.Future<V> {
        abstract isSuccess(): boolean;
        abstract isDone(): boolean;
        abstract cancel(arg0: boolean): boolean;
        abstract addListener(arg0: Internal.GenericFutureListener_<io.netty.util.concurrent.Future<V>>): this;
        abstract awaitUninterruptibly(arg0: number, arg1: Internal.TimeUnit_): boolean;
        abstract cause(): Internal.Throwable;
        abstract get(): V;
        abstract getNow(): V;
        abstract awaitUninterruptibly(): this;
        abstract await(arg0: number, arg1: Internal.TimeUnit_): boolean;
        abstract syncUninterruptibly(): this;
        abstract await(arg0: number): boolean;
        abstract removeListeners(...arg0: Internal.GenericFutureListener_<io.netty.util.concurrent.Future<V>>[]): this;
        abstract removeListener(arg0: Internal.GenericFutureListener_<io.netty.util.concurrent.Future<V>>): this;
        abstract await(): this;
        abstract isCancellable(): boolean;
        abstract addListeners(...arg0: Internal.GenericFutureListener_<io.netty.util.concurrent.Future<V>>[]): this;
        abstract get(arg0: number, arg1: Internal.TimeUnit_): V;
        abstract awaitUninterruptibly(arg0: number): boolean;
        abstract sync(): this;
        abstract isCancelled(): boolean;
        get success(): boolean
        get done(): boolean
        get now(): V
        get cancellable(): boolean
        get cancelled(): boolean
    }
    type Future_<V> = Future<V>;
}
declare namespace org.apache.logging.log4j {
    class Level implements Internal.Comparable<org.apache.logging.log4j.Level>, Internal.Serializable {
        clone(): any;
        getClass(): typeof any;
        static toLevel(level: string): org.apache.logging.log4j.Level;
        isMoreSpecificThan(level: org.apache.logging.log4j.Level_): boolean;
        isInRange(minLevel: org.apache.logging.log4j.Level_, maxLevel: org.apache.logging.log4j.Level_): boolean;
        static toLevel(name: string, defaultLevel: org.apache.logging.log4j.Level_): org.apache.logging.log4j.Level;
        "compareTo(org.apache.logging.log4j.Level)"(other: org.apache.logging.log4j.Level_): number;
        compareTo(other: org.apache.logging.log4j.Level_): number;
        static valueOf(name: string): org.apache.logging.log4j.Level;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        compareTo(other: any): number;
        intLevel(): number;
        static getLevel(name: string): org.apache.logging.log4j.Level;
        static values(): org.apache.logging.log4j.Level[];
        static valueOf<T extends Internal.Enum<T>>(enumType: T, name: string): T;
        static forName(name: string, intValue: number): org.apache.logging.log4j.Level;
        toString(): string;
        getDeclaringClass(): typeof org.apache.logging.log4j.Level;
        notifyAll(): void;
        name(): string;
        hashCode(): number;
        wait(): void;
        wait(arg0: number): void;
        isLessSpecificThan(level: org.apache.logging.log4j.Level_): boolean;
        "compareTo(java.lang.Object)"(other: any): number;
        equals(other: any): boolean;
        getStandardLevel(): Internal.StandardLevel;
        get class(): typeof any
        get declaringClass(): typeof org.apache.logging.log4j.Level
        get standardLevel(): Internal.StandardLevel
        static readonly FATAL: (org.apache.logging.log4j.Level) & (org.apache.logging.log4j.Level);
        static readonly INFO: (org.apache.logging.log4j.Level) & (org.apache.logging.log4j.Level);
        static readonly ERROR: (org.apache.logging.log4j.Level) & (org.apache.logging.log4j.Level);
        static readonly OFF: (org.apache.logging.log4j.Level) & (org.apache.logging.log4j.Level);
        static readonly ALL: (org.apache.logging.log4j.Level) & (org.apache.logging.log4j.Level);
        static readonly CATEGORY: ("Level") & (string);
        static readonly TRACE: (org.apache.logging.log4j.Level) & (org.apache.logging.log4j.Level);
        static readonly WARN: (org.apache.logging.log4j.Level) & (org.apache.logging.log4j.Level);
        static readonly DEBUG: (org.apache.logging.log4j.Level) & (org.apache.logging.log4j.Level);
    }
    type Level_ = Level;
}
